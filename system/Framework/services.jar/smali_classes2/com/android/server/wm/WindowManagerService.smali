.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/server/policy/WindowManagerPolicy$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$MousePositionTracker;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$AppFreezeListener;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;,
        Lcom/android/server/wm/WindowManagerService$UpdateAnimationScaleMode;
    }
.end annotation


# static fields
.field private static final ACCESS_KEY_CUSTOMIZE_INFO:Ljava/lang/String; = "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

.field private static final ALWAYS_KEEP_CURRENT:Z = true

.field private static final ANIMATION_COMPLETED_TIMEOUT_MS:I = 0x1388

.field private static final ANIMATION_DURATION_SCALE:I = 0x2

.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0x32

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x2540be400L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field private static final DISABLE_TRIPLE_BUFFERING_PROPERTY:Ljava/lang/String; = "ro.sf.disable_triple_buffer"

.field static final ENABLE_FIXED_ROTATION_TRANSFORM:Z

.field private static final HIERARCHICAL_ANIMATIONS_PROPERTY:Ljava/lang/String; = "persist.wm.hierarchical_animations"

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field private static final MAXIMUM_WINDOW_TOKEN_COUNT_WITHOUT_SURFACE:I = 0x5

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field private static final RO_BOOT_RECOVERY:Ljava/lang/String; = "ro.boot_recovery"

.field private static final RO_BOOT_RECOVERY_SAFEMODE:I = 0x3

.field static final SEAMLESS_ROTATION_TIMEOUT_DURATION:I = 0x7d0

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SUPPORT_FOLD_SDK_VERSION:I = 0x1010000

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field private static final SYSTEM_UI_MULTIPLIER:I = 0x2

.field private static final TAG:Ljava/lang/String; = "WindowManager"

.field private static final TRANSITION_ANIMATION_SCALE:I = 0x1

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_REMOVING_FOCUS:I = 0x4

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field private static final WINDOW_ANIMATION_SCALE:I = 0x0

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static final WINDOW_REPLACEMENT_TIMEOUT_DURATION:I = 0x7d0

.field private static final WM_USE_BLAST_ADAPTER_FLAG:Ljava/lang/String; = "wm_use_blast_adapter"

.field static sEnableTripleBuffering:Z

.field static sHierarchicalAnimations:Z

.field private static sInstance:Lcom/android/server/wm/WindowManagerService;

.field static sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;


# instance fields
.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mActivityManager:Landroid/app/IActivityManager;

.field final mActivityManagerAppTransitionNotifier:Lcom/android/server/wm/WindowManagerInternal$AppTransitionListener;

.field final mActivityTaskManager:Landroid/app/IActivityTaskManager;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field final mAmInternal:Landroid/app/ActivityManagerInternal;

.field final mAnimationHandler:Landroid/os/Handler;

.field final mAnimationTransferMap:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Lcom/android/server/wm/AnimationAdapter;",
            "Lcom/android/server/wm/SurfaceAnimator;",
            ">;"
        }
    .end annotation
.end field

.field private mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field private mAnimatorDurationScaleSetting:F

.field final mAppFreezeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowManagerService$AppFreezeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mAppOps:Landroid/app/AppOpsManager;

.field mAppsFreezingScreen:I

.field final mAssistantOnTopOfDream:Z

.field final mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

.field final mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

.field mBootAnimationStopped:Z

.field private final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field mClientFreezingScreen:Z

.field final mConstants:Lcom/android/server/wm/WindowManagerConstants;

.field final mContext:Landroid/content/Context;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field final mDestroyPreservedSurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDexWindowController:Lcom/android/server/wm/DexWindowController;

.field mDisableTransitionAnimation:Z

.field final mDisplayAreaPolicyProvider:Lcom/android/server/wm/DisplayAreaPolicy$Provider;

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

.field mDisplayReady:Z

.field mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

.field private final mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

.field final mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

.field mDockedStackCreateBounds:Landroid/graphics/Rect;

.field mDockedStackCreateMode:I

.field final mDragDropController:Lcom/android/server/wm/DragDropController;

.field final mDrawLockTimeoutMillis:J

.field final mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field private mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field private mExitAnimId:I

.field public mExt:Lcom/android/server/wm/WindowManagerServiceExt;

.field mFocusMayChange:Z

.field mForceDesktopModeOnExternalDisplays:Z

.field mForceDisplayEnabled:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mFreeformWindowController:Lcom/android/server/wm/FreeformWindowController;

.field private mFrozenDisplayId:I

.field final mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

.field private mHasHdrSupport:Z

.field final mHasPermanentDpad:Z

.field private mHasWideColorGamutSupport:Z

.field private mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mHighRefreshRateBlacklist:Lcom/android/server/wm/HighRefreshRateBlacklist;

.field private mHoldingDexScreenOn:Lcom/android/server/wm/Session;

.field private mHoldingDexScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mHoldingScreenOn:Lcom/android/server/wm/Session;

.field private mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mImeTargetWindow:Lcom/android/server/wm/WindowState;

.field private mImeWindowVisible:Z

.field private mInDisplayFreezing:I

.field private mInTouchMode:Z

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field final mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

.field final mInputToWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mIsPc:Z

.field mIsTouchDevice:Z

.field final mKeyInterceptionInfoForToken:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Landroid/os/IBinder;",
            "Lcom/android/internal/policy/KeyInterceptionInfo;",
            ">;"
        }
    .end annotation
.end field

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field mKeyguardGoingAway:Z

.field mKeyguardOrAodShowingOnDefaultDisplay:Z

.field mLastANRState:Ljava/lang/String;

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field private mLastWakeLockHoldingDexScreenWindow:Lcom/android/server/wm/WindowState;

.field mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

.field private mLastWakeLockObscuringDexScreenWindow:Lcom/android/server/wm/WindowState;

.field mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

.field private final mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

.field private mLatencyTrackingDisplayId:I

.field final mLimitedAlphaCompositing:Z

.field final mMaxUiWidth:I

.field mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

.field final mMtWindowController:Lcom/android/server/wm/MultiTaskingWindowController;

.field final mMultiSplitWindowController:Lcom/android/server/wm/MultiSplitWindowController;

.field final mOnlyCore:Z

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field mPerDisplayFocusEnabled:Z

.field mPerformEnabled:Z

.field final mPmInternal:Landroid/content/pm/PackageManagerInternal;

.field mPointerLocationEnabled:Z

.field mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field private final mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

.field final mProcessConfigurations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/content/res/Configuration;",
            ">;"
        }
    .end annotation
.end field

.field private mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

.field mRenderShadowsInCompositor:Z

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRoot:Lcom/android/server/wm/RootWindowContainer;

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field mShowAlertWindowNotifications:Z

.field mShowingBootMessages:Z

.field final mSplitWindowController:Lcom/android/server/wm/SplitWindowController;

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSurfaceAnimationRunner:Lcom/android/server/wm/SurfaceAnimationRunner;

.field mSurfaceControlFactory:Ljava/util/function/Function;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/function/Function<",
            "Landroid/view/SurfaceSession;",
            "Landroid/view/SurfaceControl$Builder;",
            ">;"
        }
    .end annotation
.end field

.field final mSurfaceFactory:Ljava/util/function/Supplier;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/function/Supplier<",
            "Landroid/view/Surface;",
            ">;"
        }
    .end annotation
.end field

.field mSwitchingUser:Z

.field mSystemBooted:Z

.field mSystemReady:Z

.field final mTaskPositioningController:Lcom/android/server/wm/TaskPositioningController;

.field final mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field final mTmpFloats:[F

.field final mTmpRect:Landroid/graphics/Rect;

.field final mTmpRect2:Landroid/graphics/Rect;

.field final mTmpRect3:Landroid/graphics/Rect;

.field final mTmpRectF:Landroid/graphics/RectF;

.field final mTmpTransform:Landroid/graphics/Matrix;

.field private final mTransaction:Landroid/view/SurfaceControl$Transaction;

.field mTransactionFactory:Ljava/util/function/Supplier;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/function/Supplier<",
            "Landroid/view/SurfaceControl$Transaction;",
            ">;"
        }
    .end annotation
.end field

.field mTransactionSequence:I

.field private mTransitionAnimationScaleSetting:F

.field final mUseBLAST:Z

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mVr2dDisplayId:I

.field mVrModeEnabled:Z

.field private final mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

.field final mWaitingForDrawnCallbacks:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/android/server/wm/WindowContainer;",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation
.end field

.field final mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

.field mWatermark:Lcom/android/server/wm/Watermark;

.field private mWindowAnimationScaleSetting:F

.field final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

.field final mWindowReplacementTimeouts:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/ActivityRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowTracing:Lcom/android/server/wm/WindowTracing;

.field mWindowsChanged:Z

.field mWindowsFreezingScreen:I


# direct methods
.method static constructor <clinit>()V
    .registers 3

    .line 474
    nop

    .line 475
    const-string/jumbo v0, "persist.wm.hierarchical_animations"

    const/4 v1, 0x1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/wm/WindowManagerService;->sHierarchicalAnimations:Z

    .line 477
    const-string/jumbo v0, "ro.sf.disable_triple_buffer"

    const/4 v2, 0x0

    invoke-static {v0, v2}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    xor-int/2addr v0, v1

    sput-boolean v0, Lcom/android/server/wm/WindowManagerService;->sEnableTripleBuffering:Z

    .line 484
    nop

    .line 485
    const-string/jumbo v0, "persist.wm.fixed_rotation_transform"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/wm/WindowManagerService;->ENABLE_FIXED_ROTATION_TRANSFORM:Z

    .line 1112
    new-instance v0, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    invoke-direct {v0}, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;-><init>()V

    sput-object v0, Lcom/android/server/wm/WindowManagerService;->sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V
    .registers 37
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z
    .param p5, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p6, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Context;",
            "Lcom/android/server/input/InputManagerService;",
            "ZZ",
            "Lcom/android/server/policy/WindowManagerPolicy;",
            "Lcom/android/server/wm/ActivityTaskManagerService;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/SurfaceControl$Transaction;",
            ">;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/Surface;",
            ">;",
            "Ljava/util/function/Function<",
            "Landroid/view/SurfaceSession;",
            "Landroid/view/SurfaceControl$Builder;",
            ">;)V"
        }
    .end annotation

    .line 1287
    .local p7, "transactionFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/SurfaceControl$Transaction;>;"
    .local p8, "surfaceFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/Surface;>;"
    .local p9, "surfaceControlFactory":Ljava/util/function/Function;, "Ljava/util/function/Function<Landroid/view/SurfaceSession;Landroid/view/SurfaceControl$Builder;>;"
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    move-object/from16 v8, p2

    invoke-direct/range {p0 .. p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    .line 515
    const/4 v1, -0x1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mVr2dDisplayId:I

    .line 516
    const/4 v9, 0x0

    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mVrModeEnabled:Z

    .line 521
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mRenderShadowsInCompositor:Z

    .line 524
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mPerformEnabled:Z

    .line 528
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTrackingDisplayId:I

    .line 535
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    .line 536
    invoke-static {v1}, Ljava/util/Collections;->synchronizedMap(Ljava/util/Map;)Ljava/util/Map;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mKeyInterceptionInfoForToken:Ljava/util/Map;

    .line 539
    new-instance v1, Lcom/android/server/wm/WindowManagerService$1;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

    .line 552
    new-instance v1, Lcom/android/server/wm/WindowManagerService$2;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    .line 564
    new-instance v1, Lcom/android/server/wm/WindowManagerService$3;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$3;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 594
    new-array v1, v9, [I

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 626
    const/4 v10, 0x1

    iput-boolean v10, v0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    .line 631
    new-instance v1, Landroid/util/ArraySet;

    invoke-direct {v1}, Landroid/util/ArraySet;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    .line 634
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    .line 637
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;

    .line 646
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowReplacementTimeouts:Ljava/util/ArrayList;

    .line 653
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    .line 658
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    .line 663
    const/16 v1, 0x14

    new-array v1, v1, [Lcom/android/server/wm/WindowState;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 667
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mProcessConfigurations:Landroid/util/SparseArray;

    .line 672
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    .line 679
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    .line 685
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    .line 691
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    .line 694
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    .line 703
    const/16 v1, 0x9

    new-array v1, v1, [F

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    .line 704
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    .line 705
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    .line 706
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    .line 707
    new-instance v1, Landroid/graphics/RectF;

    invoke-direct {v1}, Landroid/graphics/RectF;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRectF:Landroid/graphics/RectF;

    .line 709
    new-instance v1, Landroid/graphics/Matrix;

    invoke-direct {v1}, Landroid/graphics/Matrix;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTmpTransform:Landroid/graphics/Matrix;

    .line 713
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 714
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 715
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 716
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 717
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    .line 718
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mSystemReady:Z

    .line 721
    const/4 v11, 0x0

    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 722
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 734
    iput v9, v0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    .line 762
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    .line 763
    new-instance v1, Lcom/android/server/wm/WallpaperVisibilityListeners;

    invoke-direct {v1}, Lcom/android/server/wm/WallpaperVisibilityListeners;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

    .line 766
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    .line 767
    new-instance v1, Lcom/android/server/wm/-$$Lambda$WindowManagerService$-84S7IuSlM65nKgepHJEvVFHdC8;

    invoke-direct {v1, v0}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$-84S7IuSlM65nKgepHJEvVFHdC8;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

    .line 772
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 774
    iput v9, v0, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    .line 776
    const-wide/16 v1, 0x0

    iput-wide v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 777
    iput v9, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 778
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 779
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mSwitchingUser:Z

    .line 784
    iput v9, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 786
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 787
    iput v9, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 804
    new-instance v1, Lcom/android/server/wm/WindowManagerService$H;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 823
    new-instance v1, Landroid/os/Handler;

    invoke-static {}, Lcom/android/server/AnimationThread;->getHandler()Landroid/os/Handler;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationHandler:Landroid/os/Handler;

    .line 1031
    const/high16 v1, 0x3f400000    # 0.75f

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 1032
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 1033
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 1034
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    .line 1035
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mPointerLocationEnabled:Z

    .line 1055
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingDexScreenWindow:Lcom/android/server/wm/WindowState;

    .line 1056
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringDexScreenWindow:Lcom/android/server/wm/WindowState;

    .line 1082
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationTransferMap:Landroid/util/ArrayMap;

    .line 1095
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    .line 1096
    iput-boolean v9, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1103
    new-instance v1, Landroid/content/res/Configuration;

    invoke-direct {v1}, Landroid/content/res/Configuration;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    .line 1153
    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Lcom/android/server/wm/WindowManagerInternal$AppTransitionListener;

    .line 1230
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    .line 5099
    new-instance v1, Lcom/android/server/wm/InputManagerCallback;

    invoke-direct {v1, v0}, Lcom/android/server/wm/InputManagerCallback;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    .line 7830
    new-instance v1, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-direct {v1, v11}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;-><init>(Lcom/android/server/wm/WindowManagerService$1;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    .line 1288
    const/4 v1, 0x5

    invoke-static {v0, v1}, Lcom/android/server/LockGuard;->installLock(Ljava/lang/Object;I)Ljava/lang/Object;

    .line 1289
    invoke-virtual/range {p6 .. p6}, Lcom/android/server/wm/ActivityTaskManagerService;->getGlobalLock()Lcom/android/server/wm/WindowManagerGlobalLock;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    .line 1290
    move-object/from16 v12, p6

    iput-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1291
    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 1292
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.hardware.type.pc"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mIsPc:Z

    .line 1293
    move/from16 v13, p3

    iput-boolean v13, v0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    .line 1294
    move/from16 v14, p4

    iput-boolean v14, v0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    .line 1295
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x11100ca

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    .line 1297
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110097

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    .line 1299
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x111004e

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 1301
    invoke-virtual {v8, v1}, Lcom/android/server/input/InputManagerService;->setInTouchMode(Z)V

    .line 1303
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e006f

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    int-to-long v1, v1

    iput-wide v1, v0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    .line 1305
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110011

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAllowAnimationsInLowPowerMode:Z

    .line 1307
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e00a3

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mMaxUiWidth:I

    .line 1309
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110059

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisableTransitionAnimation:Z

    .line 1311
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110004

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mPerDisplayFocusEnabled:Z

    .line 1313
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110005

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAssistantOnTopOfDream:Z

    .line 1315
    iput-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    .line 1316
    const-class v1, Landroid/hardware/display/DisplayManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/display/DisplayManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 1318
    move-object/from16 v15, p9

    iput-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mSurfaceControlFactory:Ljava/util/function/Function;

    .line 1319
    move-object/from16 v6, p7

    iput-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    .line 1320
    move-object/from16 v5, p8

    iput-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mSurfaceFactory:Ljava/util/function/Supplier;

    .line 1321
    invoke-interface/range {p7 .. p7}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/view/SurfaceControl$Transaction;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    .line 1323
    new-instance v1, Lcom/android/server/wm/DisplayWindowSettings;

    invoke-direct {v1, v0}, Lcom/android/server/wm/DisplayWindowSettings;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    .line 1324
    move-object/from16 v4, p5

    iput-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    .line 1325
    new-instance v1, Lcom/android/server/wm/WindowAnimator;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    .line 1326
    new-instance v1, Lcom/android/server/wm/RootWindowContainer;

    invoke-direct {v1, v0}, Lcom/android/server/wm/RootWindowContainer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    .line 1329
    new-instance v1, Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-direct {v1, v7, v0}, Lcom/android/server/wm/WindowManagerServiceExt;-><init>(Landroid/content/Context;Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    .line 1333
    new-instance v1, Lcom/android/server/wm/MultiTaskingWindowController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/MultiTaskingWindowController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mMtWindowController:Lcom/android/server/wm/MultiTaskingWindowController;

    .line 1337
    new-instance v1, Lcom/android/server/wm/SplitWindowController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/SplitWindowController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSplitWindowController:Lcom/android/server/wm/SplitWindowController;

    .line 1338
    new-instance v1, Lcom/android/server/wm/FreeformWindowController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/FreeformWindowController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mFreeformWindowController:Lcom/android/server/wm/FreeformWindowController;

    .line 1339
    new-instance v1, Lcom/android/server/wm/MultiSplitWindowController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/MultiSplitWindowController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mMultiSplitWindowController:Lcom/android/server/wm/MultiSplitWindowController;

    .line 1342
    const-string/jumbo v1, "window_manager_native_boot"

    const-string/jumbo v2, "wm_use_blast_adapter"

    invoke-static {v1, v2, v9}, Landroid/provider/DeviceConfig;->getBoolean(Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mUseBLAST:Z

    .line 1346
    new-instance v1, Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowSurfacePlacer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    .line 1347
    new-instance v1, Lcom/android/server/wm/TaskSnapshotController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/TaskSnapshotController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    .line 1349
    nop

    .line 1350
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    move-result-object v1

    .line 1349
    invoke-static {v0, v1}, Lcom/android/server/wm/WindowTracing;->createDefaultAndStartLooper(Lcom/android/server/wm/WindowManagerService;Landroid/view/Choreographer;)Lcom/android/server/wm/WindowTracing;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    .line 1352
    const-class v1, Lcom/android/server/policy/WindowManagerPolicy;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-static {v1, v2}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1354
    const-string v1, "display"

    invoke-virtual {v7, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/display/DisplayManager;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 1356
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-static {v1, v2, v3}, Lcom/android/server/wm/KeyguardDisableHandler;->create(Landroid/content/Context;Lcom/android/server/policy/WindowManagerPolicy;Landroid/os/Handler;)Lcom/android/server/wm/KeyguardDisableHandler;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 1358
    const-string/jumbo v1, "power"

    invoke-virtual {v7, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManager;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    .line 1359
    const-class v1, Landroid/os/PowerManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    .line 1361
    if-eqz v1, :cond_2bb

    .line 1362
    new-instance v2, Lcom/android/server/wm/WindowManagerService$6;

    invoke-direct {v2, v0}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v1, v2}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    .line 1380
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    const/4 v2, 0x3

    .line 1381
    invoke-virtual {v1, v2}, Landroid/os/PowerManagerInternal;->getLowPowerState(I)Landroid/os/PowerSaveState;

    move-result-object v1

    iget-boolean v1, v1, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    .line 1383
    :cond_2bb
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    const-string v2, "SCREEN_FROZEN"

    invoke-virtual {v1, v10, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    .line 1385
    invoke-virtual {v1, v9}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1387
    new-instance v1, Lcom/android/server/wm/DisplayWindowListenerController;

    invoke-direct {v1, v0}, Lcom/android/server/wm/DisplayWindowListenerController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

    .line 1389
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    .line 1390
    invoke-static {}, Landroid/app/ActivityTaskManager;->getService()Landroid/app/IActivityTaskManager;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mActivityTaskManager:Landroid/app/IActivityTaskManager;

    .line 1391
    const-class v1, Landroid/app/ActivityManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/ActivityManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    .line 1392
    const-class v1, Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/ActivityTaskManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 1393
    const-string v1, "appops"

    invoke-virtual {v7, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/AppOpsManager;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    .line 1394
    new-instance v1, Lcom/android/server/wm/WindowManagerService$7;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object v3, v1

    .line 1400
    .local v3, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v2, 0x18

    invoke-virtual {v1, v2, v11, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1401
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v2, 0x2d

    invoke-virtual {v1, v2, v11, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1403
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->SUPPORT_OP_SYSTEM_INTERNAL_WINDOW:Z

    if-eqz v1, :cond_318

    .line 1404
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v2, 0x64

    invoke-virtual {v1, v2, v11, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1408
    :cond_318
    const-class v1, Landroid/content/pm/PackageManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/PackageManagerInternal;

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    .line 1409
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v2, v1

    .line 1410
    .local v2, "suspendPackagesFilter":Landroid/content/IntentFilter;
    const-string v1, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v2, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1411
    const-string v1, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v2, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1412
    new-instance v1, Lcom/android/server/wm/WindowManagerService$8;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    sget-object v16, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v19, v1

    move-object/from16 v1, p1

    move-object/from16 v20, v2

    .end local v2    # "suspendPackagesFilter":Landroid/content/IntentFilter;
    .local v20, "suspendPackagesFilter":Landroid/content/IntentFilter;
    move-object/from16 v2, v19

    move-object/from16 v19, v3

    .end local v3    # "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    .local v19, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    move-object/from16 v3, v16

    move-object/from16 v4, v20

    move-object/from16 v5, v17

    move-object/from16 v6, v18

    invoke-virtual/range {v1 .. v6}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1424
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    .line 1426
    .local v6, "resolver":Landroid/content/ContentResolver;
    iget v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    const-string/jumbo v2, "window_animation_scale"

    invoke-static {v6, v2, v1}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 1428
    nop

    .line 1430
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x105009a

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v1

    .line 1428
    const-string/jumbo v2, "transition_animation_scale"

    invoke-static {v6, v2, v1}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v1

    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 1433
    iget v1, v0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    const-string v2, "animator_duration_scale"

    invoke-static {v6, v2, v1}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v1

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    .line 1436
    const-string v1, "force_desktop_mode_on_external_displays"

    invoke-static {v6, v1, v9}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-eqz v1, :cond_38a

    goto :goto_38b

    :cond_38a
    move v10, v9

    :goto_38b
    iput-boolean v10, v0, Lcom/android/server/wm/WindowManagerService;->mForceDesktopModeOnExternalDisplays:Z

    .line 1439
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v10, v1

    .line 1441
    .local v10, "filter":Landroid/content/IntentFilter;
    const-string v1, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    invoke-virtual {v10, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1442
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    sget-object v23, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/16 v25, 0x0

    const/16 v26, 0x0

    move-object/from16 v21, v1

    move-object/from16 v22, v2

    move-object/from16 v24, v10

    invoke-virtual/range {v21 .. v26}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1446
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v5, v1

    .line 1447
    .local v5, "profileLockedFilter":Landroid/content/IntentFilter;
    const-string v1, "android.intent.action.DEVICE_LOCKED_CHANGED"

    invoke-virtual {v5, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1448
    new-instance v2, Lcom/android/server/wm/WindowManagerService$9;

    invoke-direct {v2, v0}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/16 v16, 0x0

    const/16 v17, 0x0

    move-object/from16 v1, p1

    move-object v4, v5

    move-object/from16 v18, v5

    .end local v5    # "profileLockedFilter":Landroid/content/IntentFilter;
    .local v18, "profileLockedFilter":Landroid/content/IntentFilter;
    move-object/from16 v5, v16

    move-object/from16 v16, v6

    .end local v6    # "resolver":Landroid/content/ContentResolver;
    .local v16, "resolver":Landroid/content/ContentResolver;
    move-object/from16 v6, v17

    invoke-virtual/range {v1 .. v6}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1462
    .end local v18    # "profileLockedFilter":Landroid/content/IntentFilter;
    invoke-static/range {p1 .. p1}, Lcom/android/internal/util/LatencyTracker;->getInstance(Landroid/content/Context;)Lcom/android/internal/util/LatencyTracker;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

    .line 1464
    new-instance v1, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    .line 1466
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    const v2, 0x2000000a

    const-string v3, "WindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 1468
    invoke-virtual {v1, v9}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1479
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->setContext(Landroid/content/Context;)V

    .line 1483
    new-instance v1, Lcom/android/server/wm/SurfaceAnimationRunner;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    invoke-direct {v1, v2, v3}, Lcom/android/server/wm/SurfaceAnimationRunner;-><init>(Ljava/util/function/Supplier;Landroid/os/PowerManagerInternal;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mSurfaceAnimationRunner:Lcom/android/server/wm/SurfaceAnimationRunner;

    .line 1486
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110021

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    .line 1489
    new-instance v1, Lcom/android/server/wm/TaskPositioningController;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mActivityTaskManager:Landroid/app/IActivityTaskManager;

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 1490
    invoke-virtual {v4}, Lcom/android/server/wm/WindowManagerService$H;->getLooper()Landroid/os/Looper;

    move-result-object v4

    invoke-direct {v1, v0, v2, v3, v4}, Lcom/android/server/wm/TaskPositioningController;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/input/InputManagerService;Landroid/app/IActivityTaskManager;Landroid/os/Looper;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioningController:Lcom/android/server/wm/TaskPositioningController;

    .line 1491
    new-instance v1, Lcom/android/server/wm/DragDropController;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService$H;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v0, v2}, Lcom/android/server/wm/DragDropController;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDragDropController:Lcom/android/server/wm/DragDropController;

    .line 1493
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-static {v1}, Lcom/android/server/wm/HighRefreshRateBlacklist;->create(Landroid/content/res/Resources;)Lcom/android/server/wm/HighRefreshRateBlacklist;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mHighRefreshRateBlacklist:Lcom/android/server/wm/HighRefreshRateBlacklist;

    .line 1495
    new-instance v1, Lcom/android/server/wm/WindowManagerConstants;

    sget-object v2, Lcom/android/server/wm/utils/DeviceConfigInterface;->REAL:Lcom/android/server/wm/utils/DeviceConfigInterface;

    invoke-direct {v1, v0, v2}, Lcom/android/server/wm/WindowManagerConstants;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/utils/DeviceConfigInterface;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mConstants:Lcom/android/server/wm/WindowManagerConstants;

    .line 1496
    new-instance v2, Landroid/os/HandlerExecutor;

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-direct {v2, v3}, Landroid/os/HandlerExecutor;-><init>(Landroid/os/Handler;)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerConstants;->start(Ljava/util/concurrent/Executor;)V

    .line 1498
    const-class v1, Lcom/android/server/wm/WindowManagerInternal;

    new-instance v2, Lcom/android/server/wm/WindowManagerService$LocalService;

    invoke-direct {v2, v0, v11}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$1;)V

    invoke-static {v1, v2}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1499
    new-instance v1, Lcom/android/server/wm/EmbeddedWindowController;

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-direct {v1, v2}, Lcom/android/server/wm/EmbeddedWindowController;-><init>(Lcom/android/server/wm/ActivityTaskManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    .line 1501
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 1502
    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    .line 1501
    invoke-static {v1}, Lcom/android/server/wm/DisplayAreaPolicy$Provider;->fromResources(Landroid/content/res/Resources;)Lcom/android/server/wm/DisplayAreaPolicy$Provider;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayAreaPolicyProvider:Lcom/android/server/wm/DisplayAreaPolicy$Provider;

    .line 1504
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->setGlobalShadowSettings()V

    .line 1505
    return-void
.end method

.method static synthetic access$000(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    return-object v0
.end method

.method static synthetic access$100(Lcom/android/server/wm/WindowManagerService;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 5
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Ljava/io/FileDescriptor;
    .param p2, "x2"    # Ljava/io/PrintWriter;
    .param p3, "x3"    # [Ljava/lang/String;
    .param p4, "x4"    # Z

    .line 373
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowManagerService;->doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/wm/WindowManagerService;)F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return v0
.end method

.method static synthetic access$1002(Lcom/android/server/wm/WindowManagerService;F)F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F

    .line 373
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return p1
.end method

.method static synthetic access$1100(Lcom/android/server/wm/WindowManagerService;)F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return v0
.end method

.method static synthetic access$1102(Lcom/android/server/wm/WindowManagerService;F)F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F

    .line 373
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return p1
.end method

.method static synthetic access$1200(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    return-void
.end method

.method static synthetic access$1300(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/wm/WindowManagerService;II)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .line 373
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    return-void
.end method

.method static synthetic access$1500(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    move-result v0

    return v0
.end method

.method static synthetic access$1600(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/RecentsAnimationController;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    return-object v0
.end method

.method static synthetic access$1700(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;III)V
    .registers 5
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Landroid/os/IBinder;
    .param p2, "x2"    # I
    .param p3, "x3"    # I
    .param p4, "x4"    # I

    .line 373
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowManagerService;->onPointerDownOutsideFocusLocked(Landroid/os/IBinder;III)V

    return-void
.end method

.method static synthetic access$200(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->setShadowRenderer()V

    return-void
.end method

.method static synthetic access$2200(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$2302(Lcom/android/server/wm/WindowManagerService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .line 373
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mImeWindowVisible:Z

    return p1
.end method

.method static synthetic access$2400(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateTspImePolicy()V

    return-void
.end method

.method static synthetic access$2502(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowState;)Lcom/android/server/wm/WindowState;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/WindowState;

    .line 373
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mImeTargetWindow:Lcom/android/server/wm/WindowState;

    return-object p1
.end method

.method static synthetic access$2600(Lcom/android/server/wm/WindowManagerService;)Landroid/view/SurfaceControl$Transaction;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    return-object v0
.end method

.method static synthetic access$300(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    return v0
.end method

.method static synthetic access$302(Lcom/android/server/wm/WindowManagerService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .line 373
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    return p1
.end method

.method static synthetic access$400(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateAppOpsState()V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/wm/WindowManagerService;Landroid/util/ArraySet;Z)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Landroid/util/ArraySet;
    .param p2, "x2"    # Z

    .line 373
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateHiddenWhileSuspendedState(Landroid/util/ArraySet;Z)V

    return-void
.end method

.method static synthetic access$600(Lcom/android/server/wm/WindowManagerService;IZ)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Z

    .line 373
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateHiddenWhileProfileLockedState(IZ)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    return-void
.end method

.method static synthetic access$900(Lcom/android/server/wm/WindowManagerService;)F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .line 373
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return v0
.end method

.method static synthetic access$902(Lcom/android/server/wm/WindowManagerService;F)F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F

    .line 373
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return p1
.end method

.method private addWindowTokenWithOptions(Landroid/os/IBinder;IILandroid/os/Bundle;Ljava/lang/String;Z)I
    .registers 29
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "displayId"    # I
    .param p4, "options"    # Landroid/os/Bundle;
    .param p5, "packageName"    # Ljava/lang/String;
    .param p6, "fromClientToken"    # Z

    .line 3060
    move-object/from16 v11, p0

    move/from16 v12, p2

    move/from16 v13, p3

    move-object/from16 v14, p5

    .line 3061
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "addWindowToken()"

    invoke-virtual {v11, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v15

    .line 3064
    .local v15, "callerCanManageAppTokens":Z
    const/4 v0, 0x1

    const/4 v10, 0x0

    if-nez v15, :cond_1f

    .line 3065
    iget-object v1, v11, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    new-array v2, v0, [I

    invoke-interface {v1, v12, v10, v14, v2}, Lcom/android/server/policy/WindowManagerPolicy;->checkAddPermission(IZLjava/lang/String;[I)I

    move-result v1

    .line 3067
    .local v1, "res":I
    if-eqz v1, :cond_1f

    .line 3068
    return v1

    .line 3072
    .end local v1    # "res":I
    :cond_1f
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v16

    .line 3073
    .local v16, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v17

    .line 3075
    .local v17, "origId":J
    :try_start_27
    iget-object v9, v11, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v9
    :try_end_2a
    .catchall {:try_start_27 .. :try_end_2a} :catchall_fc

    :try_start_2a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3076
    if-nez v15, :cond_4d

    .line 3077
    if-eqz v14, :cond_45

    const/4 v2, 0x0

    move-object/from16 v1, p0

    move/from16 v3, v16

    move/from16 v4, p2

    move/from16 v5, p2

    move-object/from16 v6, p1

    move-object/from16 v7, p5

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->unprivilegedAppCanCreateTokenWith(Lcom/android/server/wm/WindowState;IIILandroid/os/IBinder;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_45

    goto :goto_4d

    .line 3080
    :cond_45
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v15    # "callerCanManageAppTokens":Z
    .end local v16    # "callingUid":I
    .end local v17    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "binder":Landroid/os/IBinder;
    .end local p2    # "type":I
    .end local p3    # "displayId":I
    .end local p4    # "options":Landroid/os/Bundle;
    .end local p5    # "packageName":Ljava/lang/String;
    .end local p6    # "fromClientToken":Z
    throw v0

    .line 3084
    .restart local v15    # "callerCanManageAppTokens":Z
    .restart local v16    # "callingUid":I
    .restart local v17    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "binder":Landroid/os/IBinder;
    .restart local p2    # "type":I
    .restart local p3    # "displayId":I
    .restart local p4    # "options":Landroid/os/Bundle;
    .restart local p5    # "packageName":Ljava/lang/String;
    .restart local p6    # "fromClientToken":Z
    :cond_4d
    :goto_4d
    const/4 v1, 0x0

    invoke-direct {v11, v13, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    move-object v8, v1

    .line 3085
    .local v8, "dc":Lcom/android/server/wm/DisplayContent;
    const/4 v1, 0x2

    if-nez v8, :cond_7e

    .line 3086
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_74

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    int-to-long v3, v13

    .local v3, "protoLogParam1":J
    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const/4 v7, 0x4

    const-string v6, "addWindowToken: Attempted to add token: %s for non-exiting displayId=%d"

    new-array v1, v1, [Ljava/lang/Object;

    aput-object v2, v1, v10

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v1, v0

    const v0, 0x4805664f

    invoke-static {v5, v0, v7, v6, v1}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3088
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .end local v3    # "protoLogParam1":J
    :cond_74
    const/16 v0, -0x9

    monitor-exit v9
    :try_end_77
    .catchall {:try_start_2a .. :try_end_77} :catchall_f2

    .line 3107
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static/range {v17 .. v18}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3088
    return v0

    .line 3091
    :cond_7e
    move-object/from16 v7, p1

    :try_start_80
    invoke-virtual {v8, v7}, Lcom/android/server/wm/DisplayContent;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v2

    move-object/from16 v19, v2

    .line 3092
    .local v19, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v19, :cond_bc

    .line 3093
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_b3

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    invoke-static/range {v19 .. v19}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam1":Ljava/lang/String;
    int-to-long v4, v13

    .local v4, "protoLogParam2":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v1, "addWindowToken: Attempted to add binder token: %s for already created window token: %s displayId=%d"

    const/4 v0, 0x3

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v10

    const/4 v10, 0x1

    aput-object v3, v0, v10

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    const/16 v20, 0x2

    aput-object v10, v0, v20

    move-object/from16 v20, v2

    const/16 v2, 0x10

    const v10, 0xf31378c

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .local v20, "protoLogParam0":Ljava/lang/String;
    invoke-static {v6, v10, v2, v1, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3096
    .end local v3    # "protoLogParam1":Ljava/lang/String;
    .end local v4    # "protoLogParam2":J
    .end local v20    # "protoLogParam0":Ljava/lang/String;
    :cond_b3
    const/4 v0, -0x5

    monitor-exit v9
    :try_end_b5
    .catchall {:try_start_80 .. :try_end_b5} :catchall_f2

    .line 3107
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static/range {v17 .. v18}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3096
    return v0

    .line 3099
    :cond_bc
    const/16 v0, 0x7dd

    if-ne v12, v0, :cond_d0

    .line 3100
    :try_start_c0
    new-instance v1, Lcom/android/server/wm/WallpaperWindowToken;

    const/4 v4, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object v5, v8

    move v6, v15

    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WallpaperWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;ZLcom/android/server/wm/DisplayContent;Z)V

    move-object/from16 v21, v9

    move v0, v10

    goto :goto_e9

    .line 3102
    :cond_d0
    new-instance v1, Lcom/android/server/wm/WindowToken;
    :try_end_d2
    .catchall {:try_start_c0 .. :try_end_d2} :catchall_f2

    const/4 v5, 0x1

    const/4 v0, 0x0

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move/from16 v4, p2

    move-object v6, v8

    move v7, v15

    move-object/from16 v20, v8

    .end local v8    # "dc":Lcom/android/server/wm/DisplayContent;
    .local v20, "dc":Lcom/android/server/wm/DisplayContent;
    move/from16 v8, v16

    move-object/from16 v21, v9

    move v9, v0

    move v0, v10

    move/from16 v10, p6

    :try_start_e6
    invoke-direct/range {v1 .. v10}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZLcom/android/server/wm/DisplayContent;ZIZZ)V

    .line 3105
    .end local v19    # "token":Lcom/android/server/wm/WindowToken;
    .end local v20    # "dc":Lcom/android/server/wm/DisplayContent;
    :goto_e9
    monitor-exit v21
    :try_end_ea
    .catchall {:try_start_e6 .. :try_end_ea} :catchall_fa

    :try_start_ea
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_ed
    .catchall {:try_start_ea .. :try_end_ed} :catchall_fc

    .line 3107
    invoke-static/range {v17 .. v18}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3108
    nop

    .line 3109
    return v0

    .line 3105
    :catchall_f2
    move-exception v0

    move-object/from16 v21, v9

    :goto_f5
    :try_start_f5
    monitor-exit v21
    :try_end_f6
    .catchall {:try_start_f5 .. :try_end_f6} :catchall_fa

    :try_start_f6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v15    # "callerCanManageAppTokens":Z
    .end local v16    # "callingUid":I
    .end local v17    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "binder":Landroid/os/IBinder;
    .end local p2    # "type":I
    .end local p3    # "displayId":I
    .end local p4    # "options":Landroid/os/Bundle;
    .end local p5    # "packageName":Ljava/lang/String;
    .end local p6    # "fromClientToken":Z
    throw v0
    :try_end_fa
    .catchall {:try_start_f6 .. :try_end_fa} :catchall_fc

    .restart local v15    # "callerCanManageAppTokens":Z
    .restart local v16    # "callingUid":I
    .restart local v17    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "binder":Landroid/os/IBinder;
    .restart local p2    # "type":I
    .restart local p3    # "displayId":I
    .restart local p4    # "options":Landroid/os/Bundle;
    .restart local p5    # "packageName":Ljava/lang/String;
    .restart local p6    # "fromClientToken":Z
    :catchall_fa
    move-exception v0

    goto :goto_f5

    .line 3107
    :catchall_fc
    move-exception v0

    invoke-static/range {v17 .. v18}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3108
    throw v0
.end method

.method private applyForcedPropertiesForDefaultDisplay()Z
    .registers 18

    .line 5936
    move-object/from16 v1, p0

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    const/4 v2, 0x0

    if-eqz v0, :cond_8

    .line 5939
    return v2

    .line 5941
    :cond_8
    const/4 v3, 0x0

    .line 5942
    .local v3, "changed":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 5944
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v5, "display_size_forced"

    invoke-static {v0, v5}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 5946
    .local v0, "sizeStr":Ljava/lang/String;
    const/4 v5, 0x0

    if-eqz v0, :cond_25

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v6

    if-nez v6, :cond_23

    goto :goto_25

    :cond_23
    move-object v6, v0

    goto :goto_2d

    .line 5947
    :cond_25
    :goto_25
    const-string/jumbo v6, "ro.config.size_override"

    invoke-static {v6, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v6, v0

    .line 5949
    .end local v0    # "sizeStr":Ljava/lang/String;
    .local v6, "sizeStr":Ljava/lang/String;
    :goto_2d
    const/4 v7, 0x1

    if-eqz v6, :cond_91

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v0

    if-lez v0, :cond_91

    .line 5950
    const/16 v0, 0x2c

    invoke-virtual {v6, v0}, Ljava/lang/String;->indexOf(I)I

    move-result v8

    .line 5951
    .local v8, "pos":I
    if-lez v8, :cond_91

    invoke-virtual {v6, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    if-ne v0, v8, :cond_91

    .line 5954
    :try_start_44
    invoke-virtual {v6, v2, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 5955
    .local v0, "width":I
    add-int/lit8 v9, v8, 0x1

    invoke-virtual {v6, v9}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v9

    invoke-static {v9}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v9

    .line 5956
    .local v9, "height":I
    iget v10, v4, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    if-ne v10, v0, :cond_5e

    iget v10, v4, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    if-eq v10, v9, :cond_8f

    .line 5958
    :cond_5e
    sget-boolean v10, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v10, :cond_7e

    int-to-long v10, v0

    .local v10, "protoLogParam0":J
    int-to-long v12, v9

    .local v12, "protoLogParam1":J
    sget-object v14, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v5, "FORCED DISPLAY SIZE: %dx%d"

    const/4 v15, 0x2

    new-array v15, v15, [Ljava/lang/Object;

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v15, v2

    invoke-static {v12, v13}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v15, v7

    const/4 v2, 0x5

    const v7, 0x427bed76

    invoke-static {v14, v7, v2, v5, v15}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5960
    .end local v10    # "protoLogParam0":J
    .end local v12    # "protoLogParam1":J
    :cond_7e
    iget-object v2, v4, Lcom/android/server/wm/DisplayContent;->mInitialDisplayCutout:Landroid/view/DisplayCutout;

    if-eqz v2, :cond_89

    .line 5961
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v2, v4, v0, v9}, Lcom/android/server/wm/WindowManagerServiceExt;->adjustHeightForHideNotchIfNeeded(Lcom/android/server/wm/DisplayContent;II)I

    move-result v2

    move v9, v2

    .line 5964
    :cond_89
    iget v2, v4, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    invoke-virtual {v4, v0, v9, v2}, Lcom/android/server/wm/DisplayContent;->updateBaseDisplayMetrics(III)V
    :try_end_8e
    .catch Ljava/lang/NumberFormatException; {:try_start_44 .. :try_end_8e} :catch_90

    .line 5966
    const/4 v3, 0x1

    .line 5969
    :cond_8f
    goto :goto_91

    .line 5968
    .end local v0    # "width":I
    .end local v9    # "height":I
    :catch_90
    move-exception v0

    .line 5974
    .end local v8    # "pos":I
    :cond_91
    :goto_91
    iget v0, v1, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    invoke-direct {v1, v0}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    move-result v0

    .line 5975
    .local v0, "density":I
    if-eqz v0, :cond_a0

    iget v2, v4, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    if-eq v0, v2, :cond_a0

    .line 5976
    iput v0, v4, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 5977
    const/4 v3, 0x1

    .line 5981
    :cond_a0
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v5, "display_scaling_force"

    const/4 v7, 0x0

    invoke-static {v2, v5, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    .line 5983
    .local v2, "mode":I
    iget-boolean v5, v4, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    if-eqz v2, :cond_b3

    const/4 v7, 0x1

    goto :goto_b4

    :cond_b3
    const/4 v7, 0x0

    :goto_b4
    if-eq v5, v7, :cond_cc

    .line 5984
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_c8

    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x38e40f0a

    const/4 v8, 0x0

    check-cast v8, [Ljava/lang/Object;

    const-string v9, "FORCED DISPLAY SCALING DISABLED"

    const/4 v10, 0x0

    invoke-static {v5, v7, v10, v9, v8}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5985
    :cond_c8
    const/4 v5, 0x1

    iput-boolean v5, v4, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    .line 5986
    const/4 v3, 0x1

    .line 5990
    :cond_cc
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->FW_DYNAMIC_RESOLUTION_CONTROL:Z

    if-eqz v5, :cond_d9

    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    .line 5991
    invoke-virtual {v5, v4, v6, v0}, Lcom/android/server/wm/WindowManagerServiceExt;->applyScreenRatioToSizeDensity(Lcom/android/server/wm/DisplayContent;Ljava/lang/String;I)Z

    move-result v5

    if-eqz v5, :cond_d9

    .line 5992
    const/4 v3, 0x1

    .line 5995
    :cond_d9
    return v3
.end method

.method static boostPriorityForLockedSection()V
    .registers 1

    .line 1122
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;->boost()V

    .line 1123
    return-void
.end method

.method private checkBootAnimationCompleteLocked()Z
    .registers 7

    .line 4017
    const-string v0, "bootanim"

    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    if-eqz v0, :cond_28

    .line 4018
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x25

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 4019
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x32

    invoke-virtual {v0, v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 4021
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_27

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x23c56b81

    move-object v4, v2

    check-cast v4, [Ljava/lang/Object;

    invoke-static {v0, v3, v1, v2, v4}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4022
    :cond_27
    return v1

    .line 4024
    :cond_28
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_37

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x48f97193

    move-object v4, v2

    check-cast v4, [Ljava/lang/Object;

    invoke-static {v0, v3, v1, v2, v4}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4025
    :cond_37
    const/4 v0, 0x1

    return v0
.end method

.method private checkCallerOwnsDisplay(I)V
    .registers 7
    .param p1, "displayId"    # I

    .line 7923
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v0, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 7924
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_1b

    .line 7929
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 7930
    .local v1, "callingUid":I
    invoke-virtual {v0}, Landroid/view/Display;->getOwnerUid()I

    move-result v2

    .line 7931
    .local v2, "displayOwnerUid":I
    if-ne v1, v2, :cond_13

    .line 7934
    return-void

    .line 7932
    :cond_13
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "The caller doesn\'t own the display."

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 7925
    .end local v1    # "callingUid":I
    .end local v2    # "displayOwnerUid":I
    :cond_1b
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Cannot find display for non-existent displayId: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private computeNewConfigurationLocked(I)Landroid/content/res/Configuration;
    .registers 4
    .param p1, "displayId"    # I

    .line 5074
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v0, :cond_6

    .line 5075
    const/4 v0, 0x0

    return-object v0

    .line 5077
    :cond_6
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    .line 5078
    .local v0, "config":Landroid/content/res/Configuration;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5079
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/DisplayContent;->computeScreenConfiguration(Landroid/content/res/Configuration;)V

    .line 5080
    return-object v0
.end method

.method private createSurfaceControl(Landroid/view/SurfaceControl;Landroid/view/SurfaceControl;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    .registers 13
    .param p1, "outSurfaceControl"    # Landroid/view/SurfaceControl;
    .param p2, "outBLASTSurfaceControl"    # Landroid/view/SurfaceControl;
    .param p3, "result"    # I
    .param p4, "win"    # Lcom/android/server/wm/WindowState;
    .param p5, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    .line 2945
    iget-boolean v0, p4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-nez v0, :cond_6

    .line 2946
    or-int/lit8 p3, p3, 0x4

    .line 2951
    :cond_6
    const-wide/16 v0, 0x20

    :try_start_8
    const-string v2, "createSurfaceControl"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2952
    iget-object v2, p4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    iget v3, p4, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    invoke-virtual {p5, v2, v3}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked(II)Lcom/android/server/wm/WindowSurfaceController;

    move-result-object v2
    :try_end_17
    .catchall {:try_start_8 .. :try_end_17} :catchall_55

    .line 2954
    .local v2, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 2955
    nop

    .line 2956
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-eqz v2, :cond_3b

    .line 2957
    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowSurfaceController;->getSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2958
    invoke-virtual {v2, p2}, Lcom/android/server/wm/WindowSurfaceController;->getBLASTSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2959
    sget-boolean v3, Lcom/android/server/protolog/ProtoLog$Cache;->WM_SHOW_TRANSACTIONS_enabled:Z

    if-eqz v3, :cond_54

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_SHOW_TRANSACTIONS:Lcom/android/server/wm/ProtoLogGroup;

    const v5, -0x4af8d3ea

    const/4 v6, 0x0

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v3, v0, v1

    invoke-static {v4, v5, v1, v6, v0}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .end local v3    # "protoLogParam0":Ljava/lang/String;
    goto :goto_54

    .line 2964
    :cond_3b
    sget-boolean v3, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_51

    invoke-static {p4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .restart local v3    # "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, 0x2a056ae5

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v3, v0, v1

    const-string v6, "Failed to create surface control for %s"

    invoke-static {v4, v5, v1, v6, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2965
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_51
    invoke-virtual {p1}, Landroid/view/SurfaceControl;->release()V

    .line 2968
    :cond_54
    :goto_54
    return p3

    .line 2954
    .end local v2    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    :catchall_55
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 2955
    throw v2
.end method

.method static dipToPixel(ILandroid/util/DisplayMetrics;)I
    .registers 4
    .param p0, "dip"    # I
    .param p1, "displayMetrics"    # Landroid/util/DisplayMetrics;

    .line 7761
    int-to-float v0, p0

    const/4 v1, 0x1

    invoke-static {v1, v0, p1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v0

    float-to-int v0, v0

    return v0
.end method

.method private doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 15
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "useProto"    # Z

    .line 7378
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "WindowManager"

    invoke-static {v0, v1, p2}, Lcom/android/internal/util/DumpUtils;->checkDumpPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v0

    if-nez v0, :cond_b

    return-void

    .line 7379
    :cond_b
    const/4 v0, 0x0

    .line 7381
    .local v0, "dumpAll":Z
    const/4 v1, 0x0

    .line 7382
    .local v1, "opti":I
    :goto_d
    array-length v2, p3

    const/4 v3, 0x0

    if-ge v1, v2, :cond_c3

    .line 7383
    aget-object v2, p3, v1

    .line 7384
    .local v2, "opt":Ljava/lang/String;
    if-eqz v2, :cond_c3

    invoke-virtual {v2}, Ljava/lang/String;->length()I

    move-result v4

    if-lez v4, :cond_c3

    invoke-virtual {v2, v3}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0x2d

    if-eq v4, v5, :cond_25

    .line 7385
    goto/16 :goto_c3

    .line 7387
    :cond_25
    add-int/lit8 v1, v1, 0x1

    .line 7388
    const-string v3, "-a"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_32

    .line 7389
    const/4 v0, 0x1

    goto/16 :goto_c1

    .line 7390
    :cond_32
    const-string v3, "-h"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_9f

    .line 7391
    const-string v3, "Window manager dump options:"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7392
    const-string v3, "  [-a] [-h] [cmd] ..."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7393
    const-string v3, "  cmd may be one of:"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7394
    const-string v3, "    l[astanr]: last ANR information"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7395
    const-string v3, "    p[policy]: policy state"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7396
    const-string v3, "    a[animator]: animator state"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7397
    const-string v3, "    s[essions]: active sessions"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7398
    const-string v3, "    surfaces: active surfaces (debugging enabled only)"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7399
    const-string v3, "    d[isplays]: active display contents"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7400
    const-string v3, "    t[okens]: token list"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7401
    const-string v3, "    w[indows]: window list"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7402
    const-string v3, "    trace: print trace status and write Winscope trace to file"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7403
    const-string v3, "  cmd may also be a NAME to dump windows.  NAME may"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7404
    const-string v3, "    be a partial substring in a window name, a"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7405
    const-string v3, "    Window hex object identifier, or"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7406
    const-string v3, "    \"all\" for all windows, or"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7407
    const-string v3, "    \"visible\" for the visible windows."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7408
    const-string v3, "    \"visible-apps\" for the visible app windows."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7409
    const-string v3, "  -a: include all available server state."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7410
    const-string v3, "  --proto: output dump in protocol buffer format."

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7411
    return-void

    .line 7414
    :cond_9f
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v3, p2, p3, v1, v2}, Lcom/android/server/wm/WindowManagerServiceExt;->executeShellCommand(Ljava/io/PrintWriter;[Ljava/lang/String;ILjava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_a8

    .line 7415
    return-void

    .line 7419
    :cond_a8
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown argument: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "; use -h for help"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7421
    .end local v2    # "opt":Ljava/lang/String;
    :goto_c1
    goto/16 :goto_d

    .line 7423
    :cond_c3
    :goto_c3
    if-eqz p4, :cond_e1

    .line 7424
    new-instance v2, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v2, p1}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 7425
    .local v2, "proto":Landroid/util/proto/ProtoOutputStream;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4

    :try_start_cd
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7426
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->dumpDebugLocked(Landroid/util/proto/ProtoOutputStream;I)V

    .line 7427
    monitor-exit v4
    :try_end_d4
    .catchall {:try_start_cd .. :try_end_d4} :catchall_db

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7428
    invoke-virtual {v2}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 7429
    return-void

    .line 7427
    :catchall_db
    move-exception v3

    :try_start_dc
    monitor-exit v4
    :try_end_dd
    .catchall {:try_start_dc .. :try_end_dd} :catchall_db

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3

    .line 7432
    .end local v2    # "proto":Landroid/util/proto/ProtoOutputStream;
    :cond_e1
    array-length v2, p3

    const/4 v4, 0x0

    if-ge v1, v2, :cond_2d7

    .line 7433
    aget-object v8, p3, v1

    .line 7434
    .local v8, "cmd":Ljava/lang/String;
    const/4 v2, 0x1

    add-int/lit8 v9, v1, 0x1

    .line 7435
    .end local v1    # "opti":I
    .local v9, "opti":I
    const-string/jumbo v1, "lastanr"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2c3

    const-string/jumbo v1, "l"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_fe

    goto/16 :goto_2c3

    .line 7440
    :cond_fe
    const-string/jumbo v1, "policy"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2af

    const-string/jumbo v1, "p"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_112

    goto/16 :goto_2af

    .line 7445
    :cond_112
    const-string v1, "animator"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_29b

    const-string v1, "a"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_124

    goto/16 :goto_29b

    .line 7450
    :cond_124
    const-string/jumbo v1, "sessions"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_287

    const-string/jumbo v1, "s"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_138

    goto/16 :goto_287

    .line 7455
    :cond_138
    const-string v1, "displays"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_271

    const-string v1, "d"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_14a

    goto/16 :goto_271

    .line 7460
    :cond_14a
    const-string/jumbo v1, "tokens"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_25d

    const-string/jumbo v1, "t"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_15e

    goto/16 :goto_25d

    .line 7465
    :cond_15e
    const-string/jumbo v1, "windows"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_249

    const-string/jumbo v1, "w"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_172

    goto/16 :goto_249

    .line 7470
    :cond_172
    const-string v1, "all"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_18e

    .line 7471
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_17d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7472
    invoke-direct {p0, p2, v2, v4}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7473
    monitor-exit v1
    :try_end_184
    .catchall {:try_start_17d .. :try_end_184} :catchall_188

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7474
    return-void

    .line 7473
    :catchall_188
    move-exception v2

    :try_start_189
    monitor-exit v1
    :try_end_18a
    .catchall {:try_start_189 .. :try_end_18a} :catchall_188

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7475
    :cond_18e
    const-string v1, "containers"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1bd

    .line 7476
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_199
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7477
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const-string v4, " "

    invoke-virtual {v3, p2, v4}, Lcom/android/server/wm/RootWindowContainer;->dumpChildrenNames(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7478
    const-string v3, " "

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7479
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v4, Lcom/android/server/wm/-$$Lambda$WindowManagerService$B9vMqgxSp5yhphiXnxC3w6brekU;

    invoke-direct {v4, p2}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$B9vMqgxSp5yhphiXnxC3w6brekU;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v3, v4, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 7480
    monitor-exit v1
    :try_end_1b3
    .catchall {:try_start_199 .. :try_end_1b3} :catchall_1b7

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7481
    return-void

    .line 7480
    :catchall_1b7
    move-exception v2

    :try_start_1b8
    monitor-exit v1
    :try_end_1b9
    .catchall {:try_start_1b8 .. :try_end_1b9} :catchall_1b7

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7483
    :cond_1bd
    const-string v1, "air"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1ee

    .line 7484
    new-array v1, v2, [Ljava/lang/String;

    .line 7485
    .local v1, "param":[Ljava/lang/String;
    const-string/jumbo v2, "w"

    aput-object v2, v1, v3

    .line 7486
    invoke-static {}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->getInstance()Lcom/android/server/wm/CoreLiveLog$StatisticPool;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->dump()V

    .line 7487
    new-instance v2, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;

    invoke-direct {v2}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;-><init>()V

    invoke-virtual {v2, p0, v1}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;->addWmLog(Lcom/android/server/wm/WindowManagerService;[Ljava/lang/String;)Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;

    move-result-object v2

    .line 7488
    const-string v3, "air"

    invoke-virtual {v2, v3}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;->addStaticMessage(Ljava/lang/String;)Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;

    move-result-object v2

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2, v3}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;->build(Landroid/content/Context;)Lcom/android/server/wm/CoreLiveLog;

    move-result-object v2

    .line 7489
    .local v2, "command":Lcom/android/server/wm/CoreLiveLog;
    if-eqz v2, :cond_1ed

    .line 7490
    invoke-virtual {v2, v4}, Lcom/android/server/wm/CoreLiveLog;->sendLog(Ljava/lang/String;)V

    .line 7492
    :cond_1ed
    return-void

    .line 7494
    .end local v1    # "param":[Ljava/lang/String;
    .end local v2    # "command":Lcom/android/server/wm/CoreLiveLog;
    :cond_1ee
    const-string/jumbo v1, "trace"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1fb

    .line 7495
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpTraceStatus(Ljava/io/PrintWriter;)V

    .line 7496
    return-void

    .line 7497
    :cond_1fb
    const-string/jumbo v1, "logging"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_208

    .line 7498
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLogStatus(Ljava/io/PrintWriter;)V

    .line 7499
    return-void

    .line 7500
    :cond_208
    const-string/jumbo v1, "refresh"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_215

    .line 7501
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpHighRefreshRateBlacklist(Ljava/io/PrintWriter;)V

    .line 7502
    return-void

    .line 7503
    :cond_215
    const-string v1, "constants"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_223

    .line 7504
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mConstants:Lcom/android/server/wm/WindowManagerConstants;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 7505
    return-void

    .line 7508
    :cond_223
    move-object v2, p0

    move-object v3, p2

    move-object v4, v8

    move-object v5, p3

    move v6, v9

    move v7, v0

    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_248

    .line 7509
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad window command, or no windows match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7510
    const-string v1, "Use -h for help."

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7512
    :cond_248
    return-void

    .line 7466
    :cond_249
    :goto_249
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_24c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7467
    invoke-direct {p0, p2, v2, v4}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7468
    monitor-exit v1
    :try_end_253
    .catchall {:try_start_24c .. :try_end_253} :catchall_257

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7469
    return-void

    .line 7468
    :catchall_257
    move-exception v2

    :try_start_258
    monitor-exit v1
    :try_end_259
    .catchall {:try_start_258 .. :try_end_259} :catchall_257

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7461
    :cond_25d
    :goto_25d
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_260
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7462
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 7463
    monitor-exit v1
    :try_end_267
    .catchall {:try_start_260 .. :try_end_267} :catchall_26b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7464
    return-void

    .line 7463
    :catchall_26b
    move-exception v2

    :try_start_26c
    monitor-exit v1
    :try_end_26d
    .catchall {:try_start_26c .. :try_end_26d} :catchall_26b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7456
    :cond_271
    :goto_271
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_274
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7457
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 7458
    monitor-exit v1
    :try_end_27d
    .catchall {:try_start_274 .. :try_end_27d} :catchall_281

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7459
    return-void

    .line 7458
    :catchall_281
    move-exception v2

    :try_start_282
    monitor-exit v1
    :try_end_283
    .catchall {:try_start_282 .. :try_end_283} :catchall_281

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7451
    :cond_287
    :goto_287
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_28a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7452
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 7453
    monitor-exit v1
    :try_end_291
    .catchall {:try_start_28a .. :try_end_291} :catchall_295

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7454
    return-void

    .line 7453
    :catchall_295
    move-exception v2

    :try_start_296
    monitor-exit v1
    :try_end_297
    .catchall {:try_start_296 .. :try_end_297} :catchall_295

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7446
    :cond_29b
    :goto_29b
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_29e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7447
    invoke-direct {p0, p2, p3, v2}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 7448
    monitor-exit v1
    :try_end_2a5
    .catchall {:try_start_29e .. :try_end_2a5} :catchall_2a9

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7449
    return-void

    .line 7448
    :catchall_2a9
    move-exception v2

    :try_start_2aa
    monitor-exit v1
    :try_end_2ab
    .catchall {:try_start_2aa .. :try_end_2ab} :catchall_2a9

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7441
    :cond_2af
    :goto_2af
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_2b2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7442
    invoke-direct {p0, p2, p3, v2}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 7443
    monitor-exit v1
    :try_end_2b9
    .catchall {:try_start_2b2 .. :try_end_2b9} :catchall_2bd

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7444
    return-void

    .line 7443
    :catchall_2bd
    move-exception v2

    :try_start_2be
    monitor-exit v1
    :try_end_2bf
    .catchall {:try_start_2be .. :try_end_2bf} :catchall_2bd

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7436
    :cond_2c3
    :goto_2c3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_2c6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7437
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 7438
    monitor-exit v2
    :try_end_2cd
    .catchall {:try_start_2c6 .. :try_end_2cd} :catchall_2d1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7439
    return-void

    .line 7438
    :catchall_2d1
    move-exception v1

    :try_start_2d2
    monitor-exit v2
    :try_end_2d3
    .catchall {:try_start_2d2 .. :try_end_2d3} :catchall_2d1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7516
    .end local v8    # "cmd":Ljava/lang/String;
    .end local v9    # "opti":I
    .local v1, "opti":I
    :cond_2d7
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_2da
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7517
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7518
    const-string v3, "-------------------------------------------------------------------------------"

    .line 7520
    .local v3, "separator":Ljava/lang/String;
    if-eqz v0, :cond_2e9

    .line 7521
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7523
    :cond_2e9
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 7524
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7525
    if-eqz v0, :cond_2f6

    .line 7526
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7528
    :cond_2f6
    invoke-direct {p0, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 7529
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7530
    if-eqz v0, :cond_303

    .line 7531
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7533
    :cond_303
    invoke-direct {p0, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 7534
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7535
    if-eqz v0, :cond_310

    .line 7536
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7538
    :cond_310
    invoke-direct {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 7539
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7540
    if-eqz v0, :cond_31d

    .line 7541
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7543
    :cond_31d
    if-eqz v0, :cond_324

    .line 7544
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7546
    :cond_324
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v5, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 7547
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7548
    if-eqz v0, :cond_333

    .line 7549
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7551
    :cond_333
    invoke-direct {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 7552
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 7553
    if-eqz v0, :cond_340

    .line 7554
    const-string v5, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7556
    :cond_340
    invoke-direct {p0, p2, v0, v4}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7557
    if-eqz v0, :cond_34a

    .line 7558
    const-string v4, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7560
    :cond_34a
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpTraceStatus(Ljava/io/PrintWriter;)V

    .line 7561
    if-eqz v0, :cond_354

    .line 7562
    const-string v4, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7564
    :cond_354
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLogStatus(Ljava/io/PrintWriter;)V

    .line 7565
    if-eqz v0, :cond_35e

    .line 7566
    const-string v4, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7568
    :cond_35e
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpHighRefreshRateBlacklist(Ljava/io/PrintWriter;)V

    .line 7569
    if-eqz v0, :cond_368

    .line 7570
    const-string v4, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7572
    :cond_368
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mConstants:Lcom/android/server/wm/WindowManagerConstants;

    invoke-virtual {v4, p2}, Lcom/android/server/wm/WindowManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 7573
    .end local v3    # "separator":Ljava/lang/String;
    monitor-exit v2
    :try_end_36e
    .catchall {:try_start_2da .. :try_end_36e} :catchall_372

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7574
    return-void

    .line 7573
    :catchall_372
    move-exception v3

    :try_start_373
    monitor-exit v2
    :try_end_374
    .catchall {:try_start_373 .. :try_end_374} :catchall_372

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3
.end method

.method private doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z
    .registers 9
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingUid"    # I
    .param p3, "attachedWindow"    # Lcom/android/server/wm/WindowState;

    .line 2102
    const/4 v0, 0x1

    const/16 v1, 0x1a

    const/4 v2, 0x0

    if-eqz p3, :cond_13

    .line 2103
    iget-object v3, p3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v3, :cond_11

    iget-object v3, p3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget v3, v3, Lcom/android/server/wm/ActivityRecord;->mTargetSdk:I

    if-lt v3, v1, :cond_11

    goto :goto_12

    :cond_11
    move v0, v2

    :goto_12
    return v0

    .line 2108
    :cond_13
    :try_start_13
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 2110
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 2109
    invoke-virtual {v3, p1, v2, v4}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v3

    .line 2111
    .local v3, "appInfo":Landroid/content/pm/ApplicationInfo;
    iget v4, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v4, p2, :cond_2b

    .line 2115
    iget v4, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    if-lt v4, v1, :cond_2a

    .line 2116
    return v0

    .line 2120
    .end local v3    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_2a
    goto :goto_4b

    .line 2112
    .restart local v3    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_2b
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Package "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " not in UID "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "packageName":Ljava/lang/String;
    .end local p2    # "callingUid":I
    .end local p3    # "attachedWindow":Lcom/android/server/wm/WindowState;
    throw v0
    :try_end_4a
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_13 .. :try_end_4a} :catch_4a

    .line 2118
    .end local v3    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "packageName":Ljava/lang/String;
    .restart local p2    # "callingUid":I
    .restart local p3    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :catch_4a
    move-exception v0

    .line 2122
    :goto_4b
    return v2
.end method

.method private dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .line 7009
    const-string v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7010
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const-string v1, "    "

    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 7011
    return-void
.end method

.method private dumpHighRefreshRateBlacklist(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 7020
    const-string v0, "WINDOW MANAGER HIGH REFRESH RATE BLACKLIST (dumpsys window refresh)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7021
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHighRefreshRateBlacklist:Lcom/android/server/wm/HighRefreshRateBlacklist;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/HighRefreshRateBlacklist;->dump(Ljava/io/PrintWriter;)V

    .line 7022
    return-void
.end method

.method private dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 7318
    const-string v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7319
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    if-nez v0, :cond_f

    .line 7320
    const-string v0, "  <no ANR has occurred since boot>"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_12

    .line 7322
    :cond_f
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7324
    :goto_12
    return-void
.end method

.method private dumpLogStatus(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 7030
    const-string v0, "WINDOW MANAGER LOGGING (dumpsys window logging)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7031
    invoke-static {}, Lcom/android/server/protolog/ProtoLogImpl;->getSingleInstance()Lcom/android/server/protolog/ProtoLogImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/protolog/ProtoLogImpl;->getStatus()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7032
    return-void
.end method

.method private dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .line 7004
    const-string v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7005
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    const-string v1, "    "

    invoke-interface {v0, v1, p1, p2}, Lcom/android/server/policy/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 7006
    return-void
.end method

.method private dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .line 7035
    const-string v0, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7036
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_6
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    move-result v1

    if-ge v0, v1, :cond_2b

    .line 7037
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v1, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 7038
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string v2, "  Session "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const/16 v2, 0x3a

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    .line 7039
    const-string v2, "    "

    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7036
    .end local v1    # "s":Lcom/android/server/wm/Session;
    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    .line 7041
    .end local v0    # "i":I
    :cond_2b
    return-void
.end method

.method private dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .registers 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .line 7014
    const-string v0, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7015
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpTokens(Ljava/io/PrintWriter;Z)V

    .line 7016
    return-void
.end method

.method private dumpTraceStatus(Ljava/io/PrintWriter;)V
    .registers 4
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 7025
    const-string v0, "WINDOW MANAGER TRACE (dumpsys window trace)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7026
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowTracing;->getStatus()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 7027
    return-void
.end method

.method private dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .registers 13
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .line 7285
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 7286
    .local v0, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string v1, "apps"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v2, 0x1

    if-nez v1, :cond_37

    const-string/jumbo v1, "visible"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_37

    const-string/jumbo v1, "visible-apps"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_21

    goto :goto_37

    .line 7302
    :cond_21
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_24
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7303
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, v0, p2}, Lcom/android/server/wm/RootWindowContainer;->getWindowsByName(Ljava/util/ArrayList;Ljava/lang/String;)V

    .line 7304
    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_24 .. :try_end_2d} :catchall_31

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_60

    :catchall_31
    move-exception v2

    :try_start_32
    monitor-exit v1
    :try_end_33
    .catchall {:try_start_32 .. :try_end_33} :catchall_31

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 7287
    :cond_37
    :goto_37
    const-string v1, "apps"

    invoke-virtual {p2, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    .line 7288
    .local v1, "appsOnly":Z
    const-string/jumbo v3, "visible"

    invoke-virtual {p2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v3

    .line 7289
    .local v3, "visibleOnly":Z
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4

    :try_start_47
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7290
    if-eqz v1, :cond_51

    .line 7291
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v5, p1}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 7294
    :cond_51
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v6, Lcom/android/server/wm/-$$Lambda$WindowManagerService$4CUigApE5SeZZ-ksIh0JxylSogM;

    invoke-direct {v6, v3, v1, v0}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$4CUigApE5SeZZ-ksIh0JxylSogM;-><init>(ZZLjava/util/ArrayList;)V

    invoke-virtual {v5, v6, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 7300
    monitor-exit v4
    :try_end_5c
    .catchall {:try_start_47 .. :try_end_5c} :catchall_7c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7301
    .end local v1    # "appsOnly":Z
    .end local v3    # "visibleOnly":Z
    nop

    .line 7307
    :goto_60
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_68

    .line 7308
    const/4 v1, 0x0

    return v1

    .line 7311
    :cond_68
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v5

    :try_start_6b
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7312
    invoke-direct {p0, p1, p5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7313
    monitor-exit v5
    :try_end_72
    .catchall {:try_start_6b .. :try_end_72} :catchall_76

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7314
    return v2

    .line 7313
    :catchall_76
    move-exception v1

    :try_start_77
    monitor-exit v5
    :try_end_78
    .catchall {:try_start_77 .. :try_end_78} :catchall_76

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 7300
    .restart local v1    # "appsOnly":Z
    .restart local v3    # "visibleOnly":Z
    :catchall_7c
    move-exception v2

    :try_start_7d
    monitor-exit v4
    :try_end_7e
    .catchall {:try_start_7d .. :try_end_7e} :catchall_7c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method private dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 5
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .line 7079
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7080
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7081
    return-void
.end method

.method private dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 11
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .line 7085
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/RootWindowContainer;->dumpWindowsNoHeader(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7087
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v0

    const-string v1, ":"

    const/16 v2, 0x20

    const-string v3, "    "

    const/4 v4, 0x1

    if-nez v0, :cond_4a

    .line 7088
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7089
    const-string v0, "  Hiding System Alert Windows:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7090
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .local v0, "i":I
    :goto_23
    if-ltz v0, :cond_4a

    .line 7091
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 7092
    .local v5, "w":Lcom/android/server/wm/WindowState;
    const-string v6, "  #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 7093
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7094
    if-eqz p2, :cond_44

    .line 7095
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7096
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_47

    .line 7098
    :cond_44
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7090
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :goto_47
    add-int/lit8 v0, v0, -0x1

    goto :goto_23

    .line 7102
    .end local v0    # "i":I
    :cond_4a
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_90

    .line 7103
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7104
    const-string v0, "  Remove pending for:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7105
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_61
    if-ltz v0, :cond_90

    .line 7106
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 7107
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_73

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8d

    .line 7108
    :cond_73
    const-string v6, "  Remove #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 7109
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7110
    if-eqz p2, :cond_8a

    .line 7111
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7112
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_8d

    .line 7114
    :cond_8a
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7105
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_8d
    :goto_8d
    add-int/lit8 v0, v0, -0x1

    goto :goto_61

    .line 7119
    .end local v0    # "i":I
    :cond_90
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    if-eqz v0, :cond_d0

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_d0

    .line 7120
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7121
    const-string v0, "  Windows force removing:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7122
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_a9
    if-ltz v0, :cond_d0

    .line 7123
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 7124
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    const-string v6, "  Removing #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 7125
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7126
    if-eqz p2, :cond_ca

    .line 7127
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7128
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_cd

    .line 7130
    :cond_ca
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7122
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :goto_cd
    add-int/lit8 v0, v0, -0x1

    goto :goto_a9

    .line 7134
    .end local v0    # "i":I
    :cond_d0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_116

    .line 7135
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7136
    const-string v0, "  Windows waiting to destroy their surface:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7137
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_e7
    if-ltz v0, :cond_116

    .line 7138
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 7139
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_f9

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_113

    .line 7140
    :cond_f9
    const-string v6, "  Destroy #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 7141
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7142
    if-eqz p2, :cond_110

    .line 7143
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7144
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_113

    .line 7146
    :cond_110
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7137
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_113
    :goto_113
    add-int/lit8 v0, v0, -0x1

    goto :goto_e7

    .line 7151
    .end local v0    # "i":I
    :cond_116
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_15c

    .line 7152
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7153
    const-string v0, "  Windows waiting to resize:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7154
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v4

    .restart local v0    # "i":I
    :goto_12d
    if-ltz v0, :cond_15c

    .line 7155
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 7156
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_13f

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_159

    .line 7157
    :cond_13f
    const-string v6, "  Resizing #"

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(C)V

    .line 7158
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7159
    if-eqz p2, :cond_156

    .line 7160
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7161
    invoke-virtual {v5, p1, v3, v4}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    goto :goto_159

    .line 7163
    :cond_156
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7154
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_159
    :goto_159
    add-int/lit8 v0, v0, -0x1

    goto :goto_12d

    .line 7168
    .end local v0    # "i":I
    :cond_15c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_176

    .line 7169
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7170
    const-string v0, "  Clients waiting for these windows to be drawn:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7171
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    new-instance v1, Lcom/android/server/wm/-$$Lambda$WindowManagerService$Fy0_Ct0fyfe_pl34co9wS_q5yqk;

    invoke-direct {v1, p1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$Fy0_Ct0fyfe_pl34co9wS_q5yqk;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->forEach(Ljava/util/function/BiConsumer;)V

    .line 7181
    :cond_176
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7182
    const-string v0, "  mGlobalConfiguration="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 7183
    const-string v0, "  mHasPermanentDpad="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 7184
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->dumpTopFocusedDisplayId(Ljava/io/PrintWriter;)V

    .line 7185
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v1, Lcom/android/server/wm/-$$Lambda$WindowManagerService$tQ5_biBgtWq5UwUbG8Uydi8jovw;

    invoke-direct {v1, p1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$tQ5_biBgtWq5UwUbG8Uydi8jovw;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 7203
    const-string v0, "  mInTouchMode="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 7204
    const-string v0, "  mLastDisplayFreezeDuration="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 7205
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v0, v0

    invoke-static {v0, v1, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 7206
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v0, :cond_1c3

    .line 7207
    const-string v0, " due to "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 7208
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7210
    :cond_1c3
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7211
    const-string v0, "  mLastWakeLockHoldingWindow="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7212
    const-string v0, " mLastWakeLockObscuringWindow="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7213
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7215
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    const-string v1, "  "

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/InputManagerCallback;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7216
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/TaskSnapshotController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7217
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v0, :cond_1f0

    .line 7218
    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/AccessibilityController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7221
    :cond_1f0
    if-eqz p2, :cond_2c3

    .line 7222
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 7223
    .local v0, "imeWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_202

    .line 7224
    const-string v2, "  mInputMethodWindow="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 7226
    :cond_202
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v2, p1, v1}, Lcom/android/server/wm/WindowSurfacePlacer;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7227
    const-string v2, "  mSystemBooted="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Z)V

    .line 7228
    const-string v2, " mDisplayEnabled="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Z)V

    .line 7230
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/RootWindowContainer;->dumpLayoutNeededDisplayIds(Ljava/io/PrintWriter;)V

    .line 7232
    const-string v2, "  mTransactionSequence="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 7233
    const-string v2, "  mDisplayFrozen="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Z)V

    .line 7234
    const-string v2, " windows="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    .line 7235
    const-string v2, " client="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Z)V

    .line 7236
    const-string v2, " apps="

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    .line 7237
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 7238
    .local v2, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    const-string v4, "  mRotation="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v4

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 7239
    const-string v4, "  mLastOrientation="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 7240
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getLastOrientation()I

    move-result v4

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(I)V

    .line 7241
    const-string v4, " waitingForConfig="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 7242
    iget-boolean v4, v2, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Z)V

    .line 7244
    const-string v4, "  Animation settings: disabled="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Z)V

    .line 7245
    const-string v4, " window="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(F)V

    .line 7246
    const-string v4, " transition="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(F)V

    .line 7247
    const-string v4, " animator="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(F)V

    .line 7248
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v4, :cond_2b3

    .line 7249
    const-string v4, "  mRecentsAnimationController="

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 7250
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    invoke-virtual {v4, p1, v3}, Lcom/android/server/wm/RecentsAnimationController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 7268
    :cond_2b3
    invoke-static {v1, p1}, Lcom/android/server/wm/PolicyControl;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 7271
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 7272
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowManagerServiceExt;->dumpLocked(Ljava/io/PrintWriter;)V

    .line 7277
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->dump(Ljava/io/PrintWriter;)V

    .line 7281
    .end local v0    # "imeWindow":Lcom/android/server/wm/WindowState;
    .end local v2    # "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2c3
    return-void
.end method

.method static excludeWindowTypeFromTapOutTask(I)Z
    .registers 2
    .param p0, "windowType"    # I

    .line 1554
    const/16 v0, 0x7d0

    if-eq p0, v0, :cond_16

    const/16 v0, 0x7dc

    if-eq p0, v0, :cond_16

    const/16 v0, 0x7f8

    if-eq p0, v0, :cond_16

    const/16 v0, 0x7e3

    if-eq p0, v0, :cond_16

    const/16 v0, 0x7e4

    if-eq p0, v0, :cond_16

    .line 1562
    const/4 v0, 0x0

    return v0

    .line 1560
    :cond_16
    const/4 v0, 0x1

    return v0
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "hashCode"    # I

    .line 5057
    const/4 v0, -0x1

    if-ne p1, v0, :cond_8

    .line 5059
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0

    .line 5062
    :cond_8
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_b
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5063
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v2, Lcom/android/server/wm/-$$Lambda$WindowManagerService$-a2dLBOzIKX2MkvxUpQBEFZFW3w;

    invoke-direct {v2, p1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$-a2dLBOzIKX2MkvxUpQBEFZFW3w;-><init>(I)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->getWindow(Ljava/util/function/Predicate;)Lcom/android/server/wm/WindowState;

    move-result-object v1

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_b .. :try_end_1a} :catchall_1e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 5064
    :catchall_1e
    move-exception v1

    :try_start_1f
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_1e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method static fixScale(F)F
    .registers 2
    .param p0, "scale"    # F

    .line 3561
    const/4 v0, 0x0

    cmpg-float v0, p0, v0

    if-gez v0, :cond_7

    const/4 p0, 0x0

    goto :goto_f

    .line 3562
    :cond_7
    const/high16 v0, 0x41a00000    # 20.0f

    cmpl-float v0, p0, v0

    if-lez v0, :cond_f

    const/high16 p0, 0x41a00000    # 20.0f

    .line 3563
    :cond_f
    :goto_f
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    move-result v0

    return v0
.end method

.method private getAmbientBrightnessThreshold()Ljava/lang/String;
    .registers 7

    .line 10089
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_REFRESH_RATE_POLICY:Z

    const-string v1, ""

    if-eqz v0, :cond_25

    .line 10090
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 10092
    .local v2, "ident":J
    :try_start_a
    const-string v0, "display_manager"

    const-string/jumbo v4, "peak_refresh_rate_ambient_thresholds"

    const/4 v5, 0x0

    invoke-static {v0, v4, v5}, Landroid/provider/DeviceConfig;->getString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 10096
    .local v0, "ambientThreshold":Ljava/lang/String;
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4
    :try_end_18
    .catchall {:try_start_a .. :try_end_18} :catchall_20

    if-eqz v4, :cond_1b

    goto :goto_1c

    :cond_1b
    move-object v1, v0

    .line 10098
    :goto_1c
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10096
    return-object v1

    .line 10098
    .end local v0    # "ambientThreshold":Ljava/lang/String;
    :catchall_20
    move-exception v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10099
    throw v0

    .line 10102
    .end local v2    # "ident":J
    :cond_25
    return-object v1
.end method

.method private getDisplayBrightnessThreshold()Ljava/lang/String;
    .registers 7

    .line 10059
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_REFRESH_RATE_POLICY:Z

    const-string v1, ""

    if-eqz v0, :cond_25

    .line 10060
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 10062
    .local v2, "ident":J
    :try_start_a
    const-string v0, "display_manager"

    const-string/jumbo v4, "peak_refresh_rate_brightness_thresholds"

    const/4 v5, 0x0

    invoke-static {v0, v4, v5}, Landroid/provider/DeviceConfig;->getString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 10066
    .local v0, "brightnessThreshold":Ljava/lang/String;
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4
    :try_end_18
    .catchall {:try_start_a .. :try_end_18} :catchall_20

    if-eqz v4, :cond_1b

    goto :goto_1c

    :cond_1b
    move-object v1, v0

    .line 10068
    :goto_1c
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10066
    return-object v1

    .line 10068
    .end local v0    # "brightnessThreshold":Ljava/lang/String;
    :catchall_20
    move-exception v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10069
    throw v0

    .line 10072
    .end local v2    # "ident":J
    :cond_25
    return-object v1
.end method

.method private getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;
    .registers 5
    .param p1, "displayId"    # I
    .param p2, "token"    # Landroid/os/IBinder;

    .line 2089
    if-eqz p2, :cond_f

    .line 2090
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p2}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v0

    .line 2091
    .local v0, "wToken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_f

    .line 2092
    invoke-virtual {v0}, Lcom/android/server/wm/WindowToken;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    return-object v1

    .line 2096
    .end local v0    # "wToken":Lcom/android/server/wm/WindowToken;
    :cond_f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 2

    .line 5125
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    return-object v0
.end method

.method private getForcedDisplayDensityForUserLocked(I)I
    .registers 5
    .param p1, "userId"    # I

    .line 6122
    const/4 p1, 0x0

    .line 6125
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "display_density_forced"

    invoke-static {v0, v1, p1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v0

    .line 6127
    .local v0, "densityStr":Ljava/lang/String;
    if-eqz v0, :cond_15

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_1d

    .line 6128
    :cond_15
    const/4 v1, 0x0

    const-string/jumbo v2, "ro.config.density_override"

    invoke-static {v2, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 6130
    :cond_1d
    if-eqz v0, :cond_2b

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-lez v1, :cond_2b

    .line 6132
    :try_start_25
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1
    :try_end_29
    .catch Ljava/lang/NumberFormatException; {:try_start_25 .. :try_end_29} :catch_2a

    return v1

    .line 6133
    :catch_2a
    move-exception v1

    .line 6136
    :cond_2b
    const/4 v1, 0x0

    return v1
.end method

.method private getInsetsSourceControls(Lcom/android/server/wm/WindowState;[Landroid/view/InsetsSourceControl;)V
    .registers 8
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "outControls"    # [Landroid/view/InsetsSourceControl;

    .line 2865
    nop

    .line 2866
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getInsetsStateController()Lcom/android/server/wm/InsetsStateController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/InsetsStateController;->getControlsForDispatch(Lcom/android/server/wm/InsetsControlTarget;)[Landroid/view/InsetsSourceControl;

    move-result-object v0

    .line 2867
    .local v0, "controls":[Landroid/view/InsetsSourceControl;
    if-eqz v0, :cond_2a

    .line 2868
    array-length v1, v0

    array-length v2, p2

    invoke-static {v1, v2}, Ljava/lang/Math;->min(II)I

    move-result v1

    .line 2869
    .local v1, "length":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_16
    if-ge v2, v1, :cond_2a

    .line 2877
    aget-object v3, v0, v2

    if-eqz v3, :cond_24

    .line 2878
    new-instance v3, Landroid/view/InsetsSourceControl;

    aget-object v4, v0, v2

    invoke-direct {v3, v4}, Landroid/view/InsetsSourceControl;-><init>(Landroid/view/InsetsSourceControl;)V

    goto :goto_25

    :cond_24
    const/4 v3, 0x0

    :goto_25
    aput-object v3, p2, v2

    .line 2869
    add-int/lit8 v2, v2, 0x1

    goto :goto_16

    .line 2881
    .end local v1    # "length":I
    .end local v2    # "i":I
    :cond_2a
    return-void
.end method

.method static getInstance()Lcom/android/server/wm/WindowManagerService;
    .registers 1

    .line 1238
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sInstance:Lcom/android/server/wm/WindowManagerService;

    return-object v0
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .registers 7
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    .line 6706
    array-length v0, p0

    if-ge p1, v0, :cond_13

    .line 6707
    aget-object v0, p0, p1

    .line 6708
    .local v0, "str":Ljava/lang/String;
    if-eqz v0, :cond_13

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-lez v1, :cond_13

    .line 6710
    :try_start_d
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1
    :try_end_11
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_11} :catch_12

    .line 6711
    .local v1, "val":I
    return v1

    .line 6712
    .end local v1    # "val":I
    :catch_12
    move-exception v1

    .line 6716
    .end local v0    # "str":Ljava/lang/String;
    :cond_13
    if-nez p2, :cond_16

    .line 6717
    return p3

    .line 6719
    :cond_16
    int-to-float v0, p3

    invoke-static {p2, v0, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v0

    float-to-int v0, v0

    .line 6720
    .local v0, "val":I
    return v0
.end method

.method private hasStatusBarPermission(II)Z
    .registers 5
    .param p1, "pid"    # I
    .param p2, "uid"    # I

    .line 2417
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1, p1, p2}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    :goto_d
    return v0
.end method

.method private initPolicy()V
    .registers 5

    .line 1265
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$5;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 1275
    return-void
.end method

.method private isFloatingWindowOpsLocked(Lcom/android/server/wm/WindowState;)Z
    .registers 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .line 10407
    iget v0, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/16 v1, 0x18

    if-eq v0, v1, :cond_15

    iget v0, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/16 v1, 0x2d

    if-eq v0, v1, :cond_15

    iget v0, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/16 v1, 0x64

    if-ne v0, v1, :cond_13

    goto :goto_15

    .line 10412
    :cond_13
    const/4 v0, 0x0

    return v0

    .line 10410
    :cond_15
    :goto_15
    const/4 v0, 0x1

    return v0
.end method

.method private isSystemSecure()Z
    .registers 3

    .line 4768
    const-string/jumbo v0, "ro.secure"

    const-string v1, "1"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_20

    .line 4769
    const-string/jumbo v0, "ro.debuggable"

    const-string v1, "0"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_20

    const/4 v0, 0x1

    goto :goto_21

    :cond_20
    const/4 v0, 0x0

    .line 4768
    :goto_21
    return v0
.end method

.method static synthetic lambda$addFixedRefreshRatePackage$18(Ljava/lang/String;ILcom/android/server/wm/DisplayContent;)V
    .registers 4
    .param p0, "packageName"    # Ljava/lang/String;
    .param p1, "displayModeId"    # I
    .param p2, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 10108
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayPolicy;->getRefreshRatePolicy()Lcom/android/server/wm/RefreshRatePolicy;

    move-result-object v0

    .line 10109
    invoke-virtual {v0, p0, p1}, Lcom/android/server/wm/RefreshRatePolicy;->addFixedRefreshRatePackage(Ljava/lang/String;I)V

    .line 10108
    return-void
.end method

.method static synthetic lambda$displayReady$8(Lcom/android/server/wm/DisplayContent;)V
    .registers 2
    .param p0, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 5264
    iget-object v0, p0, Lcom/android/server/wm/DisplayContent;->mMultiWindowPointerEventListener:Lcom/android/server/wm/MultiWindowPointerEventListener;

    if-eqz v0, :cond_9

    .line 5265
    iget-object v0, p0, Lcom/android/server/wm/DisplayContent;->mMultiWindowPointerEventListener:Lcom/android/server/wm/MultiWindowPointerEventListener;

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowPointerEventListener;->onDisplayReady()V

    .line 5267
    :cond_9
    return-void
.end method

.method static synthetic lambda$doDump$14(Ljava/io/PrintWriter;Lcom/android/server/wm/WindowState;)V
    .registers 2
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 7479
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    return-void
.end method

.method static synthetic lambda$dumpWindows$13(ZZLjava/util/ArrayList;Lcom/android/server/wm/WindowState;)V
    .registers 5
    .param p0, "visibleOnly"    # Z
    .param p1, "appsOnly"    # Z
    .param p2, "windows"    # Ljava/util/ArrayList;
    .param p3, "w"    # Lcom/android/server/wm/WindowState;

    .line 7295
    if-eqz p0, :cond_8

    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isVisible()Z

    move-result v0

    if-eqz v0, :cond_11

    :cond_8
    if-eqz p1, :cond_e

    iget-object v0, p3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v0, :cond_11

    .line 7297
    :cond_e
    invoke-virtual {p2, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7299
    :cond_11
    return-void
.end method

.method static synthetic lambda$dumpWindowsNoHeaderLocked$11(Ljava/io/PrintWriter;Lcom/android/server/wm/WindowContainer;Ljava/lang/Runnable;)V
    .registers 6
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "wc"    # Lcom/android/server/wm/WindowContainer;
    .param p2, "callback"    # Ljava/lang/Runnable;

    .line 7172
    const-string v0, "  WindowContainer "

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 7173
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7174
    iget-object v0, p1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_14
    if-ltz v0, :cond_31

    .line 7175
    iget-object v1, p1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 7176
    .local v1, "win":Lcom/android/server/wm/WindowState;
    const-string v2, "  Waiting #"

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    const/16 v2, 0x20

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 7174
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    add-int/lit8 v0, v0, -0x1

    goto :goto_14

    .line 7178
    .end local v0    # "i":I
    :cond_31
    return-void
.end method

.method static synthetic lambda$dumpWindowsNoHeaderLocked$12(Ljava/io/PrintWriter;Lcom/android/server/wm/DisplayContent;)V
    .registers 8
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 7186
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v0

    .line 7187
    .local v0, "displayId":I
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 7188
    .local v1, "inputMethodTarget":Lcom/android/server/wm/WindowState;
    iget-object v2, p1, Lcom/android/server/wm/DisplayContent;->mInputMethodInputTarget:Lcom/android/server/wm/WindowState;

    .line 7189
    .local v2, "inputMethodInputTarget":Lcom/android/server/wm/WindowState;
    iget-object v3, p1, Lcom/android/server/wm/DisplayContent;->mInputMethodControlTarget:Lcom/android/server/wm/InsetsControlTarget;

    .line 7190
    .local v3, "inputMethodControlTarget":Lcom/android/server/wm/InsetsControlTarget;
    const/16 v4, 0x20

    if-eqz v1, :cond_1c

    .line 7191
    const-string v5, "  mInputMethodTarget in display# "

    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 7192
    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 7194
    :cond_1c
    if-eqz v2, :cond_2c

    .line 7195
    const-string v5, "  mInputMethodInputTarget in display# "

    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 7196
    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 7198
    :cond_2c
    if-eqz v3, :cond_40

    .line 7199
    const-string v5, "  inputMethodControlTarget in display# "

    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 7200
    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->print(C)V

    invoke-interface {v3}, Lcom/android/server/wm/InsetsControlTarget;->getWindow()Lcom/android/server/wm/WindowState;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 7202
    :cond_40
    return-void
.end method

.method static synthetic lambda$findWindow$6(ILcom/android/server/wm/WindowState;)Z
    .registers 3
    .param p0, "hashCode"    # I
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 5063
    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v0

    if-ne v0, p0, :cond_8

    const/4 v0, 0x1

    goto :goto_9

    :cond_8
    const/4 v0, 0x0

    :goto_9
    return v0
.end method

.method static synthetic lambda$hasFloatingOrOnScreenWindow$20(Ljava/util/ArrayList;Lcom/android/server/wm/WindowState;)V
    .registers 2
    .param p0, "windows"    # Ljava/util/ArrayList;
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 10393
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10394
    return-void
.end method

.method static synthetic lambda$isOnScreenWindow$21(Ljava/util/ArrayList;Lcom/android/server/wm/WindowState;)V
    .registers 2
    .param p0, "windows"    # Ljava/util/ArrayList;
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 10445
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10446
    return-void
.end method

.method static synthetic lambda$main$1(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V
    .registers 20
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "showBootMsgs"    # Z
    .param p3, "onlyCore"    # Z
    .param p4, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p5, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;
    .param p6, "transactionFactory"    # Ljava/util/function/Supplier;
    .param p7, "surfaceFactory"    # Ljava/util/function/Supplier;
    .param p8, "surfaceControlFactory"    # Ljava/util/function/Function;

    .line 1259
    new-instance v10, Lcom/android/server/wm/WindowManagerService;

    move-object v0, v10

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    invoke-direct/range {v0 .. v9}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V

    sput-object v10, Lcom/android/server/wm/WindowManagerService;->sInstance:Lcom/android/server/wm/WindowManagerService;

    return-void
.end method

.method static synthetic lambda$removeFixedRefreshRatePackage$19(Ljava/lang/String;Lcom/android/server/wm/DisplayContent;)V
    .registers 3
    .param p0, "packageName"    # Ljava/lang/String;
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 10117
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayPolicy;->getRefreshRatePolicy()Lcom/android/server/wm/RefreshRatePolicy;

    move-result-object v0

    .line 10118
    invoke-virtual {v0, p0}, Lcom/android/server/wm/RefreshRatePolicy;->removeFixedRefreshRatePackage(Ljava/lang/String;)V

    .line 10117
    return-void
.end method

.method static synthetic lambda$requestAssistScreenshot$4(Landroid/app/IAssistDataReceiver;Landroid/graphics/Bitmap;)V
    .registers 3
    .param p0, "receiver"    # Landroid/app/IAssistDataReceiver;
    .param p1, "bm"    # Landroid/graphics/Bitmap;

    .line 4199
    :try_start_0
    invoke-interface {p0, p1}, Landroid/app/IAssistDataReceiver;->onHandleAssistScreenshot(Landroid/graphics/Bitmap;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_3} :catch_4

    .line 4201
    goto :goto_5

    .line 4200
    :catch_4
    move-exception v0

    .line 4202
    :goto_5
    return-void
.end method

.method static synthetic lambda$setCurrentUser$3(ILcom/android/server/wm/DisplayContent;)V
    .registers 3
    .param p0, "newUserId"    # I
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 3831
    iget-object v0, p1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p0}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    return-void
.end method

.method static synthetic lambda$syncInputTransactions$17(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/DisplayContent;)V
    .registers 3
    .param p0, "t"    # Landroid/view/SurfaceControl$Transaction;
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 9292
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsImmediately(Landroid/view/SurfaceControl$Transaction;)V

    return-void
.end method

.method static synthetic lambda$tokenCountExceed$2([IILcom/android/server/wm/DisplayContent;)V
    .registers 6
    .param p0, "count"    # [I
    .param p1, "callingUid"    # I
    .param p2, "d"    # Lcom/android/server/wm/DisplayContent;

    .line 3053
    const/4 v0, 0x0

    aget v1, p0, v0

    invoke-virtual {p2, p1}, Lcom/android/server/wm/DisplayContent;->getWindowTokensWithoutSurfaceCount(I)I

    move-result v2

    add-int/2addr v1, v2

    aput v1, p0, v0

    return-void
.end method

.method static synthetic lambda$updateNonSystemOverlayWindowsVisibilityIfNeeded$16(ZLcom/android/server/wm/WindowState;)V
    .registers 2
    .param p0, "hideSystemAlertWindows"    # Z
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 9197
    invoke-virtual {p1, p0}, Lcom/android/server/wm/WindowState;->setForceHideNonSystemOverlayWindowIfNeeded(Z)V

    .line 9198
    return-void
.end method

.method static synthetic lambda$viewServerListWindows$5(Ljava/util/ArrayList;Lcom/android/server/wm/WindowState;)V
    .registers 2
    .param p0, "windows"    # Ljava/util/ArrayList;
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 4834
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4835
    return-void
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Z)V
    .registers 5
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "withStackTrace"    # Z

    .line 2293
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  SURFACE "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ": "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2294
    .local v0, "str":Ljava/lang/String;
    const-string v1, "WindowManager"

    if-eqz p2, :cond_21

    .line 2295
    invoke-static {v1, v0}, Lcom/android/server/wm/WindowManagerService;->logWithStack(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_24

    .line 2297
    :cond_21
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2299
    :goto_24
    return-void
.end method

.method static logWithStack(Ljava/lang/String;Ljava/lang/String;)V
    .registers 4
    .param p0, "tag"    # Ljava/lang/String;
    .param p1, "s"    # Ljava/lang/String;

    .line 2302
    const/4 v0, 0x0

    .line 2303
    .local v0, "e":Ljava/lang/RuntimeException;
    sget-boolean v1, Lcom/android/server/wm/WindowManagerDebugConfig;->SHOW_STACK_CRAWLS:Z

    if-eqz v1, :cond_e

    .line 2304
    new-instance v1, Ljava/lang/RuntimeException;

    invoke-direct {v1}, Ljava/lang/RuntimeException;-><init>()V

    move-object v0, v1

    .line 2305
    invoke-virtual {v0}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    .line 2307
    :cond_e
    invoke-static {p0, p1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2308
    return-void
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;)Lcom/android/server/wm/WindowManagerService;
    .registers 15
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "showBootMsgs"    # Z
    .param p3, "onlyCore"    # Z
    .param p4, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p5, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1244
    sget-object v6, Lcom/android/server/wm/-$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc;->INSTANCE:Lcom/android/server/wm/-$$Lambda$9vBfnQOmNnsc9WU80IIatZHQGKc;

    sget-object v7, Lcom/android/server/wm/-$$Lambda$6P_D-ul93Vzg9xx2hvWUdYrHVXg;->INSTANCE:Lcom/android/server/wm/-$$Lambda$6P_D-ul93Vzg9xx2hvWUdYrHVXg;

    sget-object v8, Lcom/android/server/wm/-$$Lambda$1Hjf_Nn5x4aIy9rIBTwVrtrzWFA;->INSTANCE:Lcom/android/server/wm/-$$Lambda$1Hjf_Nn5x4aIy9rIBTwVrtrzWFA;

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-static/range {v0 .. v8}, Lcom/android/server/wm/WindowManagerService;->main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/android/server/wm/WindowManagerService;

    move-result-object v0

    return-object v0
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/android/server/wm/WindowManagerService;
    .registers 21
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "showBootMsgs"    # Z
    .param p3, "onlyCore"    # Z
    .param p4, "policy"    # Lcom/android/server/policy/WindowManagerPolicy;
    .param p5, "atm"    # Lcom/android/server/wm/ActivityTaskManagerService;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Context;",
            "Lcom/android/server/input/InputManagerService;",
            "ZZ",
            "Lcom/android/server/policy/WindowManagerPolicy;",
            "Lcom/android/server/wm/ActivityTaskManagerService;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/SurfaceControl$Transaction;",
            ">;",
            "Ljava/util/function/Supplier<",
            "Landroid/view/Surface;",
            ">;",
            "Ljava/util/function/Function<",
            "Landroid/view/SurfaceSession;",
            "Landroid/view/SurfaceControl$Builder;",
            ">;)",
            "Lcom/android/server/wm/WindowManagerService;"
        }
    .end annotation

    .line 1258
    .local p6, "transactionFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/SurfaceControl$Transaction;>;"
    .local p7, "surfaceFactory":Ljava/util/function/Supplier;, "Ljava/util/function/Supplier<Landroid/view/Surface;>;"
    .local p8, "surfaceControlFactory":Ljava/util/function/Function;, "Ljava/util/function/Function<Landroid/view/SurfaceSession;Landroid/view/SurfaceControl$Builder;>;"
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v11, Lcom/android/server/wm/-$$Lambda$WindowManagerService$qCWPyJrU0wwX4tP-_QpfmersCVc;

    move-object v1, v11

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    invoke-direct/range {v1 .. v10}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$qCWPyJrU0wwX4tP-_QpfmersCVc;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZLcom/android/server/policy/WindowManagerPolicy;Lcom/android/server/wm/ActivityTaskManagerService;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Function;)V

    const-wide/16 v1, 0x0

    invoke-virtual {v0, v11, v1, v2}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 1261
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sInstance:Lcom/android/server/wm/WindowManagerService;

    return-object v0
.end method

.method private notifyFocusChanged()V
    .registers 5

    .line 5043
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5044
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_13

    .line 5045
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5047
    :cond_13
    :try_start_13
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    new-array v1, v1, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 5048
    .local v1, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    move-object v1, v2

    .line 5049
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_13 .. :try_end_25} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5050
    array-length v0, v1

    .line 5051
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2a
    if-ge v2, v0, :cond_34

    .line 5052
    aget-object v3, v1, v2

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    .line 5051
    add-int/lit8 v2, v2, 0x1

    goto :goto_2a

    .line 5054
    .end local v2    # "i":I
    :cond_34
    return-void

    .line 5049
    .end local v0    # "N":I
    .end local v1    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_35
    move-exception v1

    :try_start_36
    monitor-exit v0
    :try_end_37
    .catchall {:try_start_36 .. :try_end_37} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private notifyWindowsChanged()V
    .registers 5

    .line 5028
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5029
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_13

    .line 5030
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5032
    :cond_13
    :try_start_13
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    new-array v1, v1, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 5033
    .local v1, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    move-object v1, v2

    .line 5034
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_13 .. :try_end_25} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5035
    array-length v0, v1

    .line 5036
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_2a
    if-ge v2, v0, :cond_34

    .line 5037
    aget-object v3, v1, v2

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    .line 5036
    add-int/lit8 v2, v2, 0x1

    goto :goto_2a

    .line 5039
    .end local v2    # "i":I
    :cond_34
    return-void

    .line 5034
    .end local v0    # "N":I
    .end local v1    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_35
    move-exception v1

    :try_start_36
    monitor-exit v0
    :try_end_37
    .catchall {:try_start_36 .. :try_end_37} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private onPointerDownOutsideFocusLocked(Landroid/os/IBinder;)V
    .registers 4
    .param p1, "touchedToken"    # Landroid/os/IBinder;

    .line 9340
    const/4 v0, 0x0

    const/4 v1, -0x1

    invoke-direct {p0, p1, v0, v1, v1}, Lcom/android/server/wm/WindowManagerService;->onPointerDownOutsideFocusLocked(Landroid/os/IBinder;III)V

    .line 9341
    return-void
.end method

.method private onPointerDownOutsideFocusLocked(Landroid/os/IBinder;III)V
    .registers 9
    .param p1, "touchedToken"    # Landroid/os/IBinder;
    .param p2, "maskedAction"    # I
    .param p3, "x"    # I
    .param p4, "y"    # I

    .line 9346
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 9349
    .local v0, "touchedWindow":Lcom/android/server/wm/WindowState;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMtWindowController:Lcom/android/server/wm/MultiTaskingWindowController;

    invoke-virtual {v1}, Lcom/android/server/wm/MultiTaskingWindowController;->isFullscreenNavigationBarGestureEnabled()Z

    move-result v1

    if-eqz v1, :cond_19

    .line 9350
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMtWindowController:Lcom/android/server/wm/MultiTaskingWindowController;

    invoke-virtual {v1, v0, p2, p3, p4}, Lcom/android/server/wm/MultiTaskingWindowController;->isDeferNavigationBarGestureFocusChanges(Lcom/android/server/wm/WindowState;III)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 9352
    return-void

    .line 9354
    :cond_19
    if-eqz p2, :cond_1c

    .line 9355
    return-void

    .line 9370
    :cond_1c
    if-eqz v0, :cond_2f

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isMultiWindowHandler()Z

    move-result v1

    if-eqz v1, :cond_2f

    .line 9373
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_2f

    .line 9374
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 9380
    :cond_2f
    if-nez v0, :cond_37

    .line 9383
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/EmbeddedWindowController;->getHostWindow(Landroid/os/IBinder;)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 9386
    :cond_37
    if-eqz v0, :cond_59

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->canReceiveKeys(Z)Z

    move-result v2

    if-nez v2, :cond_41

    goto :goto_59

    .line 9392
    :cond_41
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 9393
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->isOnTop()Z

    move-result v3

    if-nez v3, :cond_51

    .line 9401
    const v3, 0x7fffffff

    invoke-virtual {v2, v3, v1}, Lcom/android/server/wm/DisplayContent;->positionDisplayAt(IZ)V

    .line 9405
    :cond_51
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->handleTaskFocusChange(Lcom/android/server/wm/Task;)V

    .line 9406
    return-void

    .line 9389
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_59
    :goto_59
    return-void
.end method

.method private performEnableScreen()V
    .registers 18

    .line 3916
    move-object/from16 v1, p0

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3917
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v3, 0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    if-eqz v0, :cond_5a

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v0, "protoLogParam0":Z
    iget-boolean v6, v1, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v6, "protoLogParam1":Z
    iget-boolean v7, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v7, "protoLogParam2":Z
    iget-boolean v8, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v8, "protoLogParam3":Z
    iget-boolean v9, v1, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    .local v9, "protoLogParam4":Z
    new-instance v10, Ljava/lang/RuntimeException;

    const-string/jumbo v11, "here"

    invoke-direct {v10, v11}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v10}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v10

    invoke-static {v10}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    .local v10, "protoLogParam5":Ljava/lang/String;
    sget-object v11, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v12, -0x24d62c64

    const/16 v13, 0x3ff

    const/4 v14, 0x6

    new-array v14, v14, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v15

    aput-object v15, v14, v5

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v15

    aput-object v15, v14, v3

    const/4 v15, 0x2

    invoke-static {v7}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v14, v15

    const/4 v15, 0x3

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v14, v15

    const/4 v15, 0x4

    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v14, v15

    const/4 v15, 0x5

    aput-object v10, v14, v15

    invoke-static {v11, v12, v13, v4, v14}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3922
    .end local v0    # "protoLogParam0":Z
    .end local v6    # "protoLogParam1":Z
    .end local v7    # "protoLogParam2":Z
    .end local v8    # "protoLogParam3":Z
    .end local v9    # "protoLogParam4":Z
    .end local v10    # "protoLogParam5":Ljava/lang/String;
    :cond_5a
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_63

    .line 3923
    monitor-exit v2
    :try_end_5f
    .catchall {:try_start_5 .. :try_end_5f} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3925
    :cond_63
    :try_start_63
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v0, :cond_70

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_70

    .line 3926
    monitor-exit v2
    :try_end_6c
    .catchall {:try_start_63 .. :try_end_6c} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3929
    :cond_70
    :try_start_70
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_81

    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->canDismissBootAnimation()Z

    move-result v0

    if-nez v0, :cond_81

    .line 3930
    monitor-exit v2
    :try_end_7d
    .catchall {:try_start_70 .. :try_end_7d} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3934
    :cond_81
    :try_start_81
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v0, :cond_b1

    .line 3935
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getChildCount()I

    move-result v0

    sub-int/2addr v0, v3

    .local v0, "i":I
    :goto_8c
    if-ltz v0, :cond_a4

    .line 3936
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v6, v0}, Lcom/android/server/wm/RootWindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->shouldWaitForSystemDecorWindowsOnBoot()Z

    move-result v6

    if-eqz v6, :cond_a1

    .line 3937
    monitor-exit v2
    :try_end_9d
    .catchall {:try_start_81 .. :try_end_9d} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3935
    :cond_a1
    add-int/lit8 v0, v0, -0x1

    goto :goto_8c

    .line 3940
    .end local v0    # "i":I
    :cond_a4
    :try_start_a4
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mPerformEnabled:Z

    if-nez v0, :cond_b1

    .line 3941
    const-string v0, "WindowManager"

    const-string v6, "!@Boot: performEnableScreen"

    invoke-static {v0, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3942
    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mPerformEnabled:Z

    .line 3957
    :cond_b1
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    const-wide/16 v6, 0x20

    if-nez v0, :cond_c6

    .line 3958
    const-string v0, "Stop bootanim"

    invoke-static {v6, v7, v0, v5}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 3962
    const-string/jumbo v0, "service.bootanim.exit"

    const-string v8, "1"

    invoke-static {v0, v8}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 3963
    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    .line 3966
    :cond_c6
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v0, :cond_e4

    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    move-result v0

    if-nez v0, :cond_e4

    .line 3967
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_df

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x1659a014

    move-object v6, v4

    check-cast v6, [Ljava/lang/Object;

    invoke-static {v0, v3, v5, v4, v6}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3968
    :cond_df
    monitor-exit v2
    :try_end_e0
    .catchall {:try_start_a4 .. :try_end_e0} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3972
    :cond_e4
    :try_start_e4
    const-string v0, "SurfaceFlinger"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 3973
    .local v0, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v0, :cond_10c

    .line 3974
    sget-boolean v8, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v8, :cond_fd

    sget-object v8, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v9, 0x24fa122b

    const-string v10, "******* TELLING SURFACE FLINGER WE ARE BOOTED!"

    move-object v11, v4

    check-cast v11, [Ljava/lang/Object;

    invoke-static {v8, v9, v5, v10, v11}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3975
    :cond_fd
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v8

    .line 3976
    .local v8, "data":Landroid/os/Parcel;
    const-string v9, "android.ui.ISurfaceComposer"

    invoke-virtual {v8, v9}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 3977
    invoke-interface {v0, v3, v8, v4, v5}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 3979
    invoke-virtual {v8}, Landroid/os/Parcel;->recycle()V
    :try_end_10c
    .catch Landroid/os/RemoteException; {:try_start_e4 .. :try_end_10c} :catch_10d
    .catchall {:try_start_e4 .. :try_end_10c} :catchall_165

    .line 3983
    .end local v0    # "surfaceFlinger":Landroid/os/IBinder;
    .end local v8    # "data":Landroid/os/Parcel;
    :cond_10c
    goto :goto_11f

    .line 3981
    :catch_10d
    move-exception v0

    .line 3982
    .local v0, "ex":Landroid/os/RemoteException;
    :try_start_10e
    sget-boolean v8, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v8, :cond_11f

    sget-object v8, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v9, -0x53a3e04

    const-string v10, "Boot completed: SurfaceFlinger is dead!"

    move-object v11, v4

    check-cast v11, [Ljava/lang/Object;

    invoke-static {v8, v9, v5, v10, v11}, Lcom/android/server/protolog/ProtoLogImpl;->e(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3992
    .end local v0    # "ex":Landroid/os/RemoteException;
    :cond_11f
    :goto_11f
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    invoke-static {v8, v9}, Lcom/android/server/wm/EventLogTags;->writeWmBootAnimationDone(J)V

    .line 3993
    const-string v0, "WindowManager"

    const-string v8, "!@Boot_EBS_F: wm_boot_animation_done"

    invoke-static {v0, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3994
    const-string v0, "Stop bootanim"

    invoke-static {v6, v7, v0, v5}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 3995
    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 3996
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v0, :cond_143

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v3, -0x6eb565d

    move-object v6, v4

    check-cast v6, [Ljava/lang/Object;

    invoke-static {v0, v3, v5, v4, v6}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3999
    :cond_143
    const-string v0, "WindowManager"

    const-string v3, "!@Boot: Enabling Screen!"

    invoke-static {v0, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4002
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    iget-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    invoke-virtual {v0, v3}, Lcom/android/server/wm/InputManagerCallback;->setEventDispatchingLw(Z)V

    .line 4003
    monitor-exit v2
    :try_end_152
    .catchall {:try_start_10e .. :try_end_152} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4006
    :try_start_155
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v0}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_15a
    .catch Landroid/os/RemoteException; {:try_start_155 .. :try_end_15a} :catch_15b

    .line 4008
    goto :goto_15c

    .line 4007
    :catch_15b
    move-exception v0

    .line 4010
    :goto_15c
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->enableScreenAfterBoot()V

    .line 4013
    invoke-direct {v1, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 4014
    return-void

    .line 4003
    :catchall_165
    move-exception v0

    :try_start_166
    monitor-exit v2
    :try_end_167
    .catchall {:try_start_166 .. :try_end_167} :catchall_165

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private prepareNoneTransitionForRelaunching(Lcom/android/server/wm/ActivityRecord;)V
    .registers 4
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;

    .line 2156
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2157
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v1, :cond_22

    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_22

    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->isRelaunching()Z

    move-result v1

    if-eqz v1, :cond_22

    .line 2158
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 2159
    const/4 v1, 0x0

    invoke-virtual {v0, v1, v1, v1, v1}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(IZIZ)V

    .line 2161
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 2163
    :cond_22
    return-void
.end method

.method private prepareWindowReplacementTransition(Lcom/android/server/wm/ActivityRecord;)Z
    .registers 11
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;

    .line 2129
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->clearAllDrawn()V

    .line 2130
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->getReplacingWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 2131
    .local v0, "replacedWindow":Lcom/android/server/wm/WindowState;
    const/4 v1, 0x0

    if-nez v0, :cond_b

    .line 2134
    return v1

    .line 2138
    :cond_b
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getVisibleFrameLw()Landroid/graphics/Rect;

    move-result-object v2

    .line 2141
    .local v2, "frame":Landroid/graphics/Rect;
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityRecord;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 2142
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v4, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 2143
    const/16 v4, 0x12

    const/4 v5, 0x1

    invoke-virtual {v3, v4, v5, v1, v1}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(IZIZ)V

    .line 2145
    iget-object v1, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    iget v4, v2, Landroid/graphics/Rect;->left:I

    iget v6, v2, Landroid/graphics/Rect;->top:I

    .line 2146
    invoke-virtual {v2}, Landroid/graphics/Rect;->width()I

    move-result v7

    invoke-virtual {v2}, Landroid/graphics/Rect;->height()I

    move-result v8

    .line 2145
    invoke-virtual {v1, v4, v6, v7, v8}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V

    .line 2147
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 2148
    return v5
.end method

.method private static queryHdrSupport()Z
    .registers 5

    .line 5328
    const/4 v0, 0x0

    .line 5329
    .local v0, "defaultValue":Z
    invoke-static {}, Landroid/sysprop/SurfaceFlingerProperties;->has_HDR_display()Ljava/util/Optional;

    move-result-object v1

    .line 5330
    .local v1, "hasHdrProp":Ljava/util/Optional;, "Ljava/util/Optional<Ljava/lang/Boolean;>;"
    invoke-virtual {v1}, Ljava/util/Optional;->isPresent()Z

    move-result v2

    if-eqz v2, :cond_16

    .line 5331
    invoke-virtual {v1}, Ljava/util/Optional;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    return v2

    .line 5334
    :cond_16
    :try_start_16
    invoke-static {}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->getService()Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;

    move-result-object v2

    .line 5335
    .local v2, "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    invoke-interface {v2}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->hasHDRDisplay()Landroid/hardware/configstore/V1_0/OptionalBool;

    move-result-object v3

    .line 5336
    .local v3, "hasHdr":Landroid/hardware/configstore/V1_0/OptionalBool;
    if-eqz v3, :cond_23

    .line 5337
    iget-boolean v4, v3, Landroid/hardware/configstore/V1_0/OptionalBool;->value:Z
    :try_end_22
    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_22} :catch_26
    .catch Ljava/util/NoSuchElementException; {:try_start_16 .. :try_end_22} :catch_24

    return v4

    .line 5336
    .end local v2    # "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    .end local v3    # "hasHdr":Landroid/hardware/configstore/V1_0/OptionalBool;
    :cond_23
    goto :goto_27

    .line 5341
    :catch_24
    move-exception v2

    .line 5342
    .local v2, "e":Ljava/util/NoSuchElementException;
    return v0

    .line 5339
    .end local v2    # "e":Ljava/util/NoSuchElementException;
    :catch_26
    move-exception v2

    .line 5343
    :goto_27
    nop

    .line 5344
    const/4 v2, 0x0

    return v2
.end method

.method private static queryWideColorGamutSupport()Z
    .registers 5

    .line 5308
    const/4 v0, 0x0

    .line 5309
    .local v0, "defaultValue":Z
    invoke-static {}, Landroid/sysprop/SurfaceFlingerProperties;->has_wide_color_display()Ljava/util/Optional;

    move-result-object v1

    .line 5310
    .local v1, "hasWideColorProp":Ljava/util/Optional;, "Ljava/util/Optional<Ljava/lang/Boolean;>;"
    invoke-virtual {v1}, Ljava/util/Optional;->isPresent()Z

    move-result v2

    if-eqz v2, :cond_16

    .line 5311
    invoke-virtual {v1}, Ljava/util/Optional;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    return v2

    .line 5314
    :cond_16
    :try_start_16
    invoke-static {}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->getService()Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;

    move-result-object v2

    .line 5315
    .local v2, "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    invoke-interface {v2}, Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;->hasWideColorDisplay()Landroid/hardware/configstore/V1_0/OptionalBool;

    move-result-object v3

    .line 5316
    .local v3, "hasWideColor":Landroid/hardware/configstore/V1_0/OptionalBool;
    if-eqz v3, :cond_23

    .line 5317
    iget-boolean v4, v3, Landroid/hardware/configstore/V1_0/OptionalBool;->value:Z
    :try_end_22
    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_22} :catch_26
    .catch Ljava/util/NoSuchElementException; {:try_start_16 .. :try_end_22} :catch_24

    return v4

    .line 5316
    .end local v2    # "surfaceFlinger":Landroid/hardware/configstore/V1_0/ISurfaceFlingerConfigs;
    .end local v3    # "hasWideColor":Landroid/hardware/configstore/V1_0/OptionalBool;
    :cond_23
    goto :goto_27

    .line 5321
    :catch_24
    move-exception v2

    .line 5322
    .local v2, "e":Ljava/util/NoSuchElementException;
    return v0

    .line 5319
    .end local v2    # "e":Ljava/util/NoSuchElementException;
    :catch_26
    move-exception v2

    .line 5323
    :goto_27
    nop

    .line 5324
    const/4 v2, 0x0

    return v2
.end method

.method static resetPriorityAfterLockedSection()V
    .registers 1

    .line 1126
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->sThreadPriorityBooster:Lcom/android/server/wm/WindowManagerThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerThreadPriorityBooster;->reset()V

    .line 1127
    return-void
.end method

.method private setAmbientBrightnessThreshold(Ljava/lang/String;)V
    .registers 7
    .param p1, "ambientThreshold"    # Ljava/lang/String;

    .line 10076
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_REFRESH_RATE_POLICY:Z

    if-eqz v0, :cond_1a

    .line 10077
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10079
    .local v0, "ident":J
    :try_start_8
    const-string v2, "display_manager"

    const-string/jumbo v3, "peak_refresh_rate_ambient_thresholds"

    const/4 v4, 0x0

    invoke-static {v2, v3, p1, v4}, Landroid/provider/DeviceConfig;->setProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
    :try_end_11
    .catchall {:try_start_8 .. :try_end_11} :catchall_15

    .line 10083
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10084
    goto :goto_1a

    .line 10083
    :catchall_15
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10084
    throw v2

    .line 10086
    .end local v0    # "ident":J
    :cond_1a
    :goto_1a
    return-void
.end method

.method private setAnimatorDurationScale(F)V
    .registers 2
    .param p1, "scale"    # F

    .line 3682
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 3683
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    .line 3684
    return-void
.end method

.method private setDisplayBrightnessThreshold(Ljava/lang/String;)V
    .registers 7
    .param p1, "brightnessThreshold"    # Ljava/lang/String;

    .line 10046
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_REFRESH_RATE_POLICY:Z

    if-eqz v0, :cond_1a

    .line 10047
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10049
    .local v0, "ident":J
    :try_start_8
    const-string v2, "display_manager"

    const-string/jumbo v3, "peak_refresh_rate_brightness_thresholds"

    const/4 v4, 0x0

    invoke-static {v2, v3, p1, v4}, Landroid/provider/DeviceConfig;->setProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
    :try_end_11
    .catchall {:try_start_8 .. :try_end_11} :catchall_15

    .line 10053
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10054
    goto :goto_1a

    .line 10053
    :catchall_15
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10054
    throw v2

    .line 10056
    .end local v0    # "ident":J
    :cond_1a
    :goto_1a
    return-void
.end method

.method private setGlobalShadowSettings()V
    .registers 14

    .line 1508
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    sget-object v1, Lcom/android/internal/R$styleable;->Lighting:[I

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v0, v2, v1, v3, v3}, Landroid/content/Context;->obtainStyledAttributes(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;

    move-result-object v0

    .line 1509
    .local v0, "a":Landroid/content/res/TypedArray;
    const/4 v1, 0x3

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/res/TypedArray;->getDimension(IF)F

    move-result v4

    .line 1510
    .local v4, "lightY":F
    const/4 v5, 0x4

    invoke-virtual {v0, v5, v2}, Landroid/content/res/TypedArray;->getDimension(IF)F

    move-result v6

    .line 1511
    .local v6, "lightZ":F
    const/4 v7, 0x2

    invoke-virtual {v0, v7, v2}, Landroid/content/res/TypedArray;->getDimension(IF)F

    move-result v8

    .line 1512
    .local v8, "lightRadius":F
    invoke-virtual {v0, v3, v2}, Landroid/content/res/TypedArray;->getFloat(IF)F

    move-result v9

    .line 1513
    .local v9, "ambientShadowAlpha":F
    const/4 v10, 0x1

    invoke-virtual {v0, v10, v2}, Landroid/content/res/TypedArray;->getFloat(IF)F

    move-result v11

    .line 1514
    .local v11, "spotShadowAlpha":F
    new-array v12, v5, [F

    aput v2, v12, v3

    aput v2, v12, v10

    aput v2, v12, v7

    aput v9, v12, v1

    .line 1515
    .local v12, "ambientColor":[F
    new-array v5, v5, [F

    aput v2, v5, v3

    aput v2, v5, v10

    aput v2, v5, v7

    aput v11, v5, v1

    move-object v1, v5

    .line 1516
    .local v1, "spotColor":[F
    invoke-static {v12, v1, v4, v6, v8}, Landroid/view/SurfaceControl;->setGlobalShadowSettings([F[FFFF)V

    .line 1518
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->setShadowRenderer()V

    .line 1519
    return-void
.end method

.method private setShadowRenderer()V
    .registers 4

    .line 1024
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v1, "render_shadows_in_compositor"

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_11

    goto :goto_12

    :cond_11
    const/4 v2, 0x0

    :goto_12
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mRenderShadowsInCompositor:Z

    .line 1026
    return-void
.end method

.method private showStrictModeViolation(II)V
    .registers 9
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    .line 4123
    if-eqz p1, :cond_4

    const/4 v0, 0x1

    goto :goto_5

    :cond_4
    const/4 v0, 0x0

    .line 4124
    .local v0, "on":Z
    :goto_5
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_8
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4127
    if-eqz v0, :cond_1a

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/RootWindowContainer;->canShowStrictModeViolation(I)Z

    move-result v2

    if-nez v2, :cond_1a

    .line 4128
    monitor-exit v1
    :try_end_16
    .catchall {:try_start_8 .. :try_end_16} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4131
    :cond_1a
    :try_start_1a
    sget-boolean v2, Lcom/android/server/wm/WindowManagerDebugConfig;->SHOW_VERBOSE_TRANSACTIONS:Z

    if-eqz v2, :cond_25

    const-string v2, "WindowManager"

    const-string v3, ">>> showStrictModeViolation"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4135
    :cond_25
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-nez v2, :cond_38

    .line 4136
    new-instance v2, Lcom/android/server/wm/StrictModeFlash;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSurfaceFactory:Ljava/util/function/Supplier;

    .line 4137
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-direct {v2, v3, v4, v5}, Lcom/android/server/wm/StrictModeFlash;-><init>(Ljava/util/function/Supplier;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceControl$Transaction;)V

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    .line 4139
    :cond_38
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v2, v0, v3}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(ZLandroid/view/SurfaceControl$Transaction;)V

    .line 4140
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 4141
    monitor-exit v1
    :try_end_45
    .catchall {:try_start_1a .. :try_end_45} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4142
    return-void

    .line 4141
    :catchall_49
    move-exception v2

    :try_start_4a
    monitor-exit v1
    :try_end_4b
    .catchall {:try_start_4a .. :try_end_4b} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method private tokenCountExceed()Z
    .registers 9

    .line 3042
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3044
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    const/4 v2, 0x0

    if-ne v0, v1, :cond_c

    .line 3045
    return v2

    .line 3048
    :cond_c
    const-string v1, "android.permission.STATUS_BAR_SERVICE"

    const-string v3, "addWindowTokenWithOptions"

    invoke-virtual {p0, v1, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_19

    .line 3049
    const/16 v1, 0xa

    goto :goto_1a

    .line 3050
    :cond_19
    const/4 v1, 0x5

    :goto_1a
    nop

    .line 3051
    .local v1, "limit":I
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_1e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3052
    const/4 v4, 0x1

    new-array v5, v4, [I

    .line 3053
    .local v5, "count":[I
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v7, Lcom/android/server/wm/-$$Lambda$WindowManagerService$jFK8-mkmUtg1B3WwF2ZTf1LdZvQ;

    invoke-direct {v7, v5, v0}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$jFK8-mkmUtg1B3WwF2ZTf1LdZvQ;-><init>([II)V

    invoke-virtual {v6, v7}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 3054
    aget v6, v5, v2

    if-lt v6, v1, :cond_33

    move v2, v4

    :cond_33
    monitor-exit v3
    :try_end_34
    .catchall {:try_start_1e .. :try_end_34} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3055
    .end local v5    # "count":[I
    :catchall_38
    move-exception v2

    :try_start_39
    monitor-exit v3
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method private tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;Z)Z
    .registers 11
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p3, "focusMayChange"    # Z

    .line 2887
    const/4 v0, 0x2

    .line 2888
    .local v0, "transit":I
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_9

    .line 2889
    const/4 v0, 0x5

    .line 2891
    :cond_9
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v1

    const-string v3, ": mAnimatingExit=true"

    const-string v4, "WindowManager"

    const/4 v5, 0x0

    const/4 v6, 0x1

    if-eqz v1, :cond_3d

    invoke-virtual {p2, v0, v5}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v1

    if-eqz v1, :cond_3d

    .line 2892
    const/4 p3, 0x1

    .line 2894
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    if-eq v1, v2, :cond_3a

    .line 2895
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "tryStartExitingAnimation 1, "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v4, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2898
    :cond_3a
    iput-boolean v6, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    goto :goto_73

    .line 2899
    :cond_3d
    invoke-virtual {p1, v2}, Lcom/android/server/wm/WindowState;->isAnimating(I)Z

    move-result v1

    if-eqz v1, :cond_64

    .line 2903
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    if-eq v1, v2, :cond_61

    .line 2904
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "tryStartExitingAnimation 2, "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v4, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2907
    :cond_61
    iput-boolean v6, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    goto :goto_73

    .line 2915
    :cond_64
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_6d

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget-boolean v1, v1, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    goto :goto_6e

    :cond_6d
    move v1, v6

    .line 2919
    .local v1, "stopped":Z
    :goto_6e
    iput-boolean v6, p1, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 2920
    invoke-virtual {p1, v5, v1}, Lcom/android/server/wm/WindowState;->destroySurface(ZZ)Z

    .line 2922
    .end local v1    # "stopped":Z
    :goto_73
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_7a

    .line 2923
    invoke-virtual {v1, p1, v0}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 2932
    :cond_7a
    iget-boolean v1, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-eqz v1, :cond_87

    .line 2934
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 2935
    invoke-virtual {p2}, Lcom/android/server/wm/WindowStateAnimator;->detachChildren()V

    .line 2936
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 2939
    :cond_87
    return p3
.end method

.method private unprivilegedAppCanCreateTokenWith(Lcom/android/server/wm/WindowState;IIILandroid/os/IBinder;Ljava/lang/String;)Z
    .registers 13
    .param p1, "parentWindow"    # Lcom/android/server/wm/WindowState;
    .param p2, "callingUid"    # I
    .param p3, "type"    # I
    .param p4, "rootType"    # I
    .param p5, "tokenForLog"    # Landroid/os/IBinder;
    .param p6, "packageName"    # Ljava/lang/String;

    .line 2031
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-lt p4, v0, :cond_1f

    const/16 v2, 0x63

    if-gt p4, v2, :cond_1f

    .line 2032
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_1e

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x42591795

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add application window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2034
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_1e
    return v1

    .line 2036
    :cond_1f
    const/16 v2, 0x7db

    if-ne p4, v2, :cond_3a

    .line 2037
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_39

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x799186e2

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add input method window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2039
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_39
    return v1

    .line 2041
    :cond_3a
    const/16 v2, 0x7ef

    if-ne p4, v2, :cond_55

    .line 2042
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_54

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x367e6829

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add voice interaction window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2045
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_54
    return v1

    .line 2047
    :cond_55
    const/16 v2, 0x7dd

    if-ne p4, v2, :cond_70

    .line 2048
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_6f

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, 0x194dbbb9

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add wallpaper window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2050
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_6f
    return v1

    .line 2052
    :cond_70
    const/16 v2, 0x7f3

    if-ne p4, v2, :cond_8b

    .line 2053
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_8a

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, 0x35939335

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add QS dialog window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2055
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_8a
    return v1

    .line 2057
    :cond_8b
    const/16 v2, 0x7f0

    if-ne p4, v2, :cond_a6

    .line 2058
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_a5

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x3e246ca3

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add Accessibility overlay window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2061
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_a5
    return v1

    .line 2063
    :cond_a6
    const/16 v2, 0x7d5

    if-ne p3, v2, :cond_c7

    .line 2065
    invoke-direct {p0, p6, p2, p1}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    move-result v2

    if-eqz v2, :cond_c7

    .line 2066
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_c6

    invoke-static {p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, 0x4f582893

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v2, v0, v1

    const-string v5, "Attempted to add a toast window with unknown token %s.  Aborting."

    invoke-static {v3, v4, v1, v5, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2068
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_c6
    return v1

    .line 2071
    :cond_c7
    return v0
.end method

.method private updateAppOpsState()V
    .registers 3

    .line 2287
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2288
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1}, Lcom/android/server/wm/RootWindowContainer;->updateAppOpsState()V

    .line 2289
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2290
    return-void

    .line 2289
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private updateHiddenWhileProfileLockedState(IZ)V
    .registers 5
    .param p1, "userId"    # I
    .param p2, "shouldConfirmCredentials"    # Z

    .line 2280
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2281
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->updateHiddenWhileProfileLockedStateLocked(IZ)V

    .line 2282
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2283
    return-void

    .line 2282
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private updateHiddenWhileSuspendedState(Landroid/util/ArraySet;Z)V
    .registers 5
    .param p2, "suspended"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArraySet<",
            "Ljava/lang/String;",
            ">;Z)V"
        }
    .end annotation

    .line 2273
    .local p1, "packages":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2274
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->updateHiddenWhileSuspendedState(Landroid/util/ArraySet;Z)V

    .line 2275
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2276
    return-void

    .line 2275
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method private updateInputChannel(Landroid/os/IBinder;IIILandroid/view/SurfaceControl;Ljava/lang/String;Landroid/view/InputApplicationHandle;IILandroid/graphics/Region;)V
    .registers 15
    .param p1, "channelToken"    # Landroid/os/IBinder;
    .param p2, "callingUid"    # I
    .param p3, "callingPid"    # I
    .param p4, "displayId"    # I
    .param p5, "surface"    # Landroid/view/SurfaceControl;
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "applicationHandle"    # Landroid/view/InputApplicationHandle;
    .param p8, "flags"    # I
    .param p9, "type"    # I
    .param p10, "region"    # Landroid/graphics/Region;

    .line 9486
    new-instance v0, Landroid/view/InputWindowHandle;

    invoke-direct {v0, p7, p4}, Landroid/view/InputWindowHandle;-><init>(Landroid/view/InputApplicationHandle;I)V

    .line 9487
    .local v0, "h":Landroid/view/InputWindowHandle;
    iput-object p1, v0, Landroid/view/InputWindowHandle;->token:Landroid/os/IBinder;

    .line 9488
    iput-object p6, v0, Landroid/view/InputWindowHandle;->name:Ljava/lang/String;

    .line 9490
    const v1, 0x20000010

    and-int/2addr v1, p8

    .line 9492
    .local v1, "sanitizedFlags":I
    or-int/lit8 v2, v1, 0x20

    iput v2, v0, Landroid/view/InputWindowHandle;->layoutParamsFlags:I

    .line 9493
    iput p9, v0, Landroid/view/InputWindowHandle;->layoutParamsType:I

    .line 9494
    const-wide v2, 0x2540be400L

    iput-wide v2, v0, Landroid/view/InputWindowHandle;->dispatchingTimeoutNanos:J

    .line 9495
    const/4 v2, 0x0

    iput-boolean v2, v0, Landroid/view/InputWindowHandle;->canReceiveKeys:Z

    .line 9496
    iput-boolean v2, v0, Landroid/view/InputWindowHandle;->hasFocus:Z

    .line 9497
    iput-boolean v2, v0, Landroid/view/InputWindowHandle;->hasWallpaper:Z

    .line 9498
    iput-boolean v2, v0, Landroid/view/InputWindowHandle;->paused:Z

    .line 9500
    iput p2, v0, Landroid/view/InputWindowHandle;->ownerUid:I

    .line 9501
    iput p3, v0, Landroid/view/InputWindowHandle;->ownerPid:I

    .line 9503
    iput v2, v0, Landroid/view/InputWindowHandle;->inputFeatures:I

    .line 9505
    if-nez p10, :cond_30

    .line 9506
    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Landroid/view/InputWindowHandle;->replaceTouchableRegionWithCrop(Landroid/view/SurfaceControl;)V

    goto :goto_3a

    .line 9508
    :cond_30
    iget-object v3, v0, Landroid/view/InputWindowHandle;->touchableRegion:Landroid/graphics/Region;

    invoke-virtual {v3, p10}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 9509
    iput-boolean v2, v0, Landroid/view/InputWindowHandle;->replaceTouchableRegionWithCrop:Z

    .line 9510
    invoke-virtual {v0, p5}, Landroid/view/InputWindowHandle;->setTouchableRegionCrop(Landroid/view/SurfaceControl;)V

    .line 9513
    :goto_3a
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    invoke-interface {v2}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/SurfaceControl$Transaction;

    .line 9514
    .local v2, "t":Landroid/view/SurfaceControl$Transaction;
    invoke-virtual {v2, p5, v0}, Landroid/view/SurfaceControl$Transaction;->setInputWindowInfo(Landroid/view/SurfaceControl;Landroid/view/InputWindowHandle;)Landroid/view/SurfaceControl$Transaction;

    .line 9515
    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 9516
    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->close()V

    .line 9517
    invoke-virtual {p5}, Landroid/view/SurfaceControl;->release()V

    .line 9518
    return-void
.end method

.method private updateRotationUnchecked(ZZ)V
    .registers 15
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .line 4364
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v0, :cond_22

    move v0, p1

    .local v0, "protoLogParam0":Z
    move v1, p2

    .local v1, "protoLogParam1":Z
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const v3, -0xbd451ea

    const/16 v4, 0xf

    const/4 v5, 0x0

    const/4 v6, 0x2

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v8

    aput-object v8, v6, v7

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v7

    const/4 v8, 0x1

    aput-object v7, v6, v8

    invoke-static {v2, v3, v4, v5, v6}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4368
    .end local v0    # "protoLogParam0":Z
    .end local v1    # "protoLogParam1":Z
    :cond_22
    const-wide/16 v0, 0x20

    const-string/jumbo v2, "updateRotation"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4370
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 4373
    .local v2, "origId":J
    :try_start_2e
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4
    :try_end_31
    .catchall {:try_start_2e .. :try_end_31} :catchall_98

    :try_start_31
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4374
    const/4 v5, 0x0

    .line 4375
    .local v5, "layoutNeeded":Z
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v6, v6, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    .line 4376
    .local v6, "displayCount":I
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_3e
    if-ge v7, v6, :cond_76

    .line 4377
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v8, v8, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    .line 4378
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v9, "updateRotation: display"

    invoke-static {v0, v1, v9}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4379
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->updateRotationUnchecked()Z

    move-result v9

    .line 4380
    .local v9, "rotationChanged":Z
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 4382
    if-eqz v9, :cond_64

    .line 4383
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v10}, Lcom/android/server/wm/ActivityTaskManagerService;->getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController;

    move-result-object v10

    iget v11, v8, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 4384
    invoke-virtual {v10, v11}, Lcom/android/server/wm/TaskChangeNotificationController;->notifyOnActivityRotation(I)V

    .line 4387
    :cond_64
    if-eqz v9, :cond_68

    if-eqz p2, :cond_6c

    .line 4388
    :cond_68
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->setLayoutNeeded()V

    .line 4389
    const/4 v5, 0x1

    .line 4391
    :cond_6c
    if-nez v9, :cond_70

    if-eqz p1, :cond_73

    .line 4392
    :cond_70
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 4376
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "rotationChanged":Z
    :cond_73
    add-int/lit8 v7, v7, 0x1

    goto :goto_3e

    .line 4396
    .end local v7    # "i":I
    :cond_76
    if-eqz v5, :cond_86

    .line 4397
    const-string/jumbo v7, "updateRotation: performSurfacePlacement"

    invoke-static {v0, v1, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4399
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 4400
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 4402
    .end local v5    # "layoutNeeded":Z
    .end local v6    # "displayCount":I
    :cond_86
    monitor-exit v4
    :try_end_87
    .catchall {:try_start_31 .. :try_end_87} :catchall_92

    :try_start_87
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_8a
    .catchall {:try_start_87 .. :try_end_8a} :catchall_98

    .line 4404
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4405
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 4406
    nop

    .line 4407
    return-void

    .line 4402
    :catchall_92
    move-exception v5

    :try_start_93
    monitor-exit v4
    :try_end_94
    .catchall {:try_start_93 .. :try_end_94} :catchall_92

    :try_start_94
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v2    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "alwaysSendConfiguration":Z
    .end local p2    # "forceRelayout":Z
    throw v5
    :try_end_98
    .catchall {:try_start_94 .. :try_end_98} :catchall_98

    .line 4404
    .restart local v2    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "alwaysSendConfiguration":Z
    .restart local p2    # "forceRelayout":Z
    :catchall_98
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4405
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 4406
    throw v4
.end method

.method private updateTspImePolicy()V
    .registers 5

    .line 10273
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 10274
    .local v0, "imeWindow":Lcom/android/server/wm/WindowState;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v1, v1, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mImeTargetWindow:Lcom/android/server/wm/WindowState;

    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mImeWindowVisible:Z

    invoke-interface {v1, v0, v2, v3}, Lcom/android/server/policy/WindowManagerPolicyExt;->updateTspImePolicy(Lcom/android/server/policy/WindowManagerPolicy$WindowState;Lcom/android/server/policy/WindowManagerPolicy$WindowState;Z)V

    .line 10275
    return-void
.end method


# virtual methods
.method public addFixedRefreshRatePackage(Ljava/lang/String;I)V
    .registers 6
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "displayModeId"    # I

    .line 10106
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_REFRESH_RATE_POLICY:Z

    if-eqz v0, :cond_1f

    .line 10107
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10108
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v2, Lcom/android/server/wm/-$$Lambda$WindowManagerService$zgT5grc5D7RZSjAPZ1HsZ_rKVlI;

    invoke-direct {v2, p1, p2}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$zgT5grc5D7RZSjAPZ1HsZ_rKVlI;-><init>(Ljava/lang/String;I)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 10110
    monitor-exit v0
    :try_end_15
    .catchall {:try_start_7 .. :try_end_15} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_1f

    :catchall_19
    move-exception v1

    :try_start_1a
    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_1a .. :try_end_1b} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 10112
    :cond_1f
    :goto_1f
    return-void
.end method

.method public addShellRoot(ILandroid/view/IWindow;I)Landroid/view/SurfaceControl;
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "windowType"    # I

    .line 4439
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3c

    .line 4443
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4445
    .local v0, "origId":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_37

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4446
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4447
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_25

    .line 4448
    const/4 v4, 0x0

    monitor-exit v2
    :try_end_1e
    .catchall {:try_start_11 .. :try_end_1e} :catchall_31

    .line 4453
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4448
    return-object v4

    .line 4450
    :cond_25
    :try_start_25
    invoke-virtual {v3, p2, p3}, Lcom/android/server/wm/DisplayContent;->addShellRoot(Landroid/view/IWindow;I)Landroid/view/SurfaceControl;

    move-result-object v4

    monitor-exit v2
    :try_end_2a
    .catchall {:try_start_25 .. :try_end_2a} :catchall_31

    .line 4453
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4450
    return-object v4

    .line 4451
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_31
    move-exception v3

    :try_start_32
    monitor-exit v2
    :try_end_33
    .catchall {:try_start_32 .. :try_end_33} :catchall_31

    :try_start_33
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "windowType":I
    throw v3
    :try_end_37
    .catchall {:try_start_33 .. :try_end_37} :catchall_37

    .line 4453
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "windowType":I
    :catchall_37
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4454
    throw v2

    .line 4441
    .end local v0    # "origId":J
    :cond_3c
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/DisplayCutout$ParcelableWrapper;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;I)I
    .registers 64
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outFrame"    # Landroid/graphics/Rect;
    .param p8, "outContentInsets"    # Landroid/graphics/Rect;
    .param p9, "outStableInsets"    # Landroid/graphics/Rect;
    .param p10, "outDisplayCutout"    # Landroid/view/DisplayCutout$ParcelableWrapper;
    .param p11, "outInputChannel"    # Landroid/view/InputChannel;
    .param p12, "outInsetsState"    # Landroid/view/InsetsState;
    .param p13, "outActiveControls"    # [Landroid/view/InsetsSourceControl;
    .param p14, "requestUserId"    # I

    .line 1571
    move-object/from16 v14, p0

    move-object/from16 v15, p1

    move-object/from16 v13, p4

    move/from16 v12, p6

    move-object/from16 v11, p11

    move-object/from16 v10, p13

    move/from16 v9, p14

    const/4 v0, 0x0

    invoke-static {v10, v0}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    .line 1572
    const/4 v8, 0x1

    new-array v7, v8, [I

    .line 1573
    .local v7, "appOp":[I
    iget v1, v13, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v16, 0x100000

    and-int v1, v1, v16

    if-eqz v1, :cond_1f

    move v1, v8

    goto :goto_20

    :cond_1f
    const/4 v1, 0x0

    :goto_20
    move v5, v1

    .line 1575
    .local v5, "isRoundedCornerOverlay":Z
    iget-object v1, v14, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    iget v2, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    iget-object v3, v13, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    invoke-interface {v1, v2, v5, v3, v7}, Lcom/android/server/policy/WindowManagerPolicy;->checkAddPermission(IZLjava/lang/String;[I)I

    move-result v17

    .line 1577
    .local v17, "res":I
    if-eqz v17, :cond_2e

    .line 1578
    return v17

    .line 1581
    :cond_2e
    const/4 v1, 0x0

    .line 1582
    .local v1, "parentWindow":Lcom/android/server/wm/WindowState;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 1583
    .local v4, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 1584
    .local v3, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 1585
    .local v18, "origId":J
    iget v2, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 1587
    .local v2, "type":I
    move-object/from16 v20, v7

    .end local v7    # "appOp":[I
    .local v20, "appOp":[I
    iget-object v7, v14, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v7

    :try_start_42
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 1588
    iget-boolean v0, v14, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v0, :cond_99f

    .line 1592
    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-direct {v14, v12, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v0
    :try_end_4f
    .catchall {:try_start_42 .. :try_end_4f} :catchall_9bb

    move-object/from16 v22, v0

    .line 1594
    .local v22, "displayContent":Lcom/android/server/wm/DisplayContent;
    move/from16 v23, v5

    move-object/from16 v5, v22

    .end local v22    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v5, "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v23, "isRoundedCornerOverlay":Z
    if-nez v5, :cond_a3

    .line 1595
    :try_start_57
    sget-boolean v16, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z
    :try_end_59
    .catchall {:try_start_57 .. :try_end_59} :catchall_91

    if-eqz v16, :cond_76

    move-object/from16 v22, v1

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v22, "parentWindow":Lcom/android/server/wm/WindowState;
    int-to-long v0, v12

    .local v0, "protoLogParam0":J
    :try_start_5e
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v8, "Attempted to add window to a display that does not exist: %d. Aborting."

    const/4 v10, 0x1

    new-array v11, v10, [Ljava/lang/Object;

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v21

    const/16 v25, 0x0

    aput-object v21, v11, v25

    move-wide/from16 v25, v0

    const v0, -0x335ef04d    # -8.444252E7f

    .end local v0    # "protoLogParam0":J
    .local v25, "protoLogParam0":J
    invoke-static {v6, v0, v10, v8, v11}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_78

    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v25    # "protoLogParam0":J
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    :cond_76
    move-object/from16 v22, v1

    .line 1597
    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    :goto_78
    monitor-exit v7
    :try_end_79
    .catchall {:try_start_5e .. :try_end_79} :catchall_7f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 2022
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_7f
    move-exception v0

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object/from16 v33, v7

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v1, v22

    move-object/from16 v2, p13

    goto/16 :goto_9cc

    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    :catchall_91
    move-exception v0

    move-object/from16 v22, v1

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object/from16 v33, v7

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v2, p13

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_9cc

    .line 1599
    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_a3
    move-object/from16 v22, v1

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    :try_start_a5
    iget v0, v15, Lcom/android/server/wm/Session;->mUid:I

    invoke-virtual {v5, v0}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v0
    :try_end_ab
    .catchall {:try_start_a5 .. :try_end_ab} :catchall_98e

    if-nez v0, :cond_d0

    .line 1600
    :try_start_ad
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_c9

    int-to-long v0, v12

    .restart local v0    # "protoLogParam0":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v10, "Attempted to add window to a display for which the application does not have access: %d.  Aborting."

    const/4 v11, 0x1

    new-array v8, v11, [Ljava/lang/Object;

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v21

    const/16 v25, 0x0

    aput-object v21, v8, v25

    move-wide/from16 v25, v0

    const v0, 0x19f51c9e

    .end local v0    # "protoLogParam0":J
    .restart local v25    # "protoLogParam0":J
    invoke-static {v6, v0, v11, v10, v8}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1615
    .end local v25    # "protoLogParam0":J
    :cond_c9
    monitor-exit v7
    :try_end_ca
    .catchall {:try_start_ad .. :try_end_ca} :catchall_7f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 1619
    :cond_d0
    :try_start_d0
    iget-object v0, v14, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0
    :try_end_da
    .catchall {:try_start_d0 .. :try_end_da} :catchall_98e

    const/16 v27, -0x5

    if-eqz v0, :cond_fb

    .line 1620
    :try_start_de
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_f6

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0x1e423e5a

    const-string v8, "Window %s is already added"

    const/4 v10, 0x1

    new-array v10, v10, [Ljava/lang/Object;

    const/4 v11, 0x0

    aput-object v0, v10, v11

    invoke-static {v1, v6, v11, v8, v10}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1621
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_f6
    monitor-exit v7
    :try_end_f7
    .catchall {:try_start_de .. :try_end_f7} :catchall_7f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v27

    .line 1624
    :cond_fb
    const/16 v0, 0x3e8

    if-lt v2, v0, :cond_171

    const/16 v1, 0x7cf

    if-gt v2, v1, :cond_171

    .line 1625
    :try_start_103
    iget-object v6, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v8, 0x0

    const/4 v10, 0x0

    invoke-virtual {v14, v8, v6, v10}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v6
    :try_end_10b
    .catchall {:try_start_103 .. :try_end_10b} :catchall_7f

    .line 1626
    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v6, "parentWindow":Lcom/android/server/wm/WindowState;
    if-nez v6, :cond_12f

    .line 1627
    :try_start_10d
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_129

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v11, "Attempted to add window with token that is not a window: %s.  Aborting."

    const/4 v8, 0x1

    new-array v8, v8, [Ljava/lang/Object;

    const/4 v10, 0x0

    aput-object v0, v8, v10

    move-object/from16 v21, v0

    const v0, 0x25a86324

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .local v21, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1, v0, v10, v11, v8}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1629
    .end local v21    # "protoLogParam0":Ljava/lang/String;
    :cond_129
    monitor-exit v7
    :try_end_12a
    .catchall {:try_start_10d .. :try_end_12a} :catchall_160

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, -0x2

    return v0

    .line 1631
    :cond_12f
    :try_start_12f
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    if-lt v8, v0, :cond_15d

    iget-object v0, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    if-gt v0, v1, :cond_15d

    .line 1633
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_157

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v10, "Attempted to add window with token that is a sub-window: %s.  Aborting."

    const/4 v11, 0x1

    new-array v11, v11, [Ljava/lang/Object;

    const/4 v8, 0x0

    aput-object v0, v11, v8

    move-object/from16 v21, v0

    const v0, -0x7b8192dc

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .restart local v21    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v1, v0, v8, v10, v11}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1635
    .end local v21    # "protoLogParam0":Ljava/lang/String;
    :cond_157
    monitor-exit v7
    :try_end_158
    .catchall {:try_start_12f .. :try_end_158} :catchall_160

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, -0x2

    return v0

    .line 1631
    :cond_15d
    const/4 v11, 0x1

    .line 1639
    move-object v10, v6

    goto :goto_174

    .line 2022
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_160
    move-exception v0

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object v1, v6

    move-object/from16 v33, v7

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v2, p13

    goto/16 :goto_9cc

    .line 1624
    .end local v6    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    :cond_171
    const/4 v11, 0x1

    .line 1639
    move-object/from16 v10, v22

    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v10, "parentWindow":Lcom/android/server/wm/WindowState;
    :goto_174
    const/16 v0, 0x7ee

    if-ne v2, v0, :cond_1a7

    :try_start_178
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    move-result v0

    if-nez v0, :cond_1a7

    .line 1640
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_190

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v1, -0x2ec986b2

    const-string v6, "Attempted to add private presentation window to a non-private display.  Aborting."

    const/4 v8, 0x0

    check-cast v8, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v0, v1, v11, v6, v8}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1643
    :cond_190
    const/4 v0, -0x8

    monitor-exit v7
    :try_end_192
    .catchall {:try_start_178 .. :try_end_192} :catchall_196

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 2022
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_196
    move-exception v0

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object/from16 v33, v7

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v2, p13

    goto/16 :goto_9cc

    .line 1646
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1a7
    const/16 v0, 0x7f5

    if-ne v2, v0, :cond_1ce

    :try_start_1ab
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v0

    invoke-virtual {v0}, Landroid/view/Display;->isPublicPresentation()Z

    move-result v0

    if-nez v0, :cond_1ce

    .line 1647
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_1c7

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v1, -0x6394c91d

    const-string v6, "Attempted to add presentation window to a non-suitable display.  Aborting."

    const/4 v8, 0x0

    check-cast v8, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v0, v1, v11, v6, v8}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1650
    :cond_1c7
    monitor-exit v7
    :try_end_1c8
    .catchall {:try_start_1ab .. :try_end_1c8} :catchall_196

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v0, -0x9

    return v0

    .line 1646
    :cond_1ce
    const/4 v6, 0x0

    .line 1653
    :try_start_1cf
    iget v0, v15, Lcom/android/server/wm/Session;->mUid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0
    :try_end_1d5
    .catchall {:try_start_1cf .. :try_end_1d5} :catchall_97b

    move v8, v0

    .line 1654
    .local v8, "userId":I
    if-eq v9, v8, :cond_24f

    .line 1656
    :try_start_1d8
    iget-object v1, v14, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;
    :try_end_1da
    .catch Ljava/lang/Exception; {:try_start_1d8 .. :try_end_1da} :catch_223
    .catchall {:try_start_1d8 .. :try_end_1da} :catchall_212

    const/4 v0, 0x0

    const/16 v22, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    move/from16 v28, v2

    .end local v2    # "type":I
    .local v28, "type":I
    move v2, v3

    move/from16 v29, v3

    .end local v3    # "callingPid":I
    .local v29, "callingPid":I
    move v3, v4

    move/from16 v30, v4

    .end local v4    # "callingUid":I
    .local v30, "callingUid":I
    move/from16 v4, p14

    move-object/from16 v31, v5

    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v31, "displayContent":Lcom/android/server/wm/DisplayContent;
    move v5, v0

    move/from16 v6, v22

    move-object/from16 v33, v7

    move-object/from16 v7, v25

    move v12, v11

    move v11, v8

    .end local v8    # "userId":I
    .local v11, "userId":I
    move-object/from16 v8, v26

    :try_start_1f8
    invoke-virtual/range {v1 .. v8}, Landroid/app/ActivityManagerInternal;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    :try_end_1fb
    .catch Ljava/lang/Exception; {:try_start_1f8 .. :try_end_1fb} :catch_210
    .catchall {:try_start_1f8 .. :try_end_1fb} :catchall_202

    .line 1662
    nop

    .line 1664
    move/from16 v8, p14

    move v0, v8

    const/4 v8, 0x0

    .end local v11    # "userId":I
    .restart local v8    # "userId":I
    goto/16 :goto_25d

    .line 2022
    .end local v8    # "userId":I
    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_202
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    move/from16 v11, v28

    move/from16 v36, v30

    goto/16 :goto_9cc

    .line 1658
    .restart local v11    # "userId":I
    .restart local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_210
    move-exception v0

    goto :goto_230

    .line 2022
    .end local v11    # "userId":I
    .end local v28    # "type":I
    .end local v29    # "callingPid":I
    .end local v30    # "callingUid":I
    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    :catchall_212
    move-exception v0

    move-object/from16 v33, v7

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v2, p13

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .restart local v28    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v30    # "callingUid":I
    goto/16 :goto_9cc

    .line 1658
    .end local v28    # "type":I
    .end local v29    # "callingPid":I
    .end local v30    # "callingUid":I
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "userId":I
    :catch_223
    move-exception v0

    move/from16 v28, v2

    move/from16 v29, v3

    move/from16 v30, v4

    move-object/from16 v31, v5

    move-object/from16 v33, v7

    move v12, v11

    move v11, v8

    .line 1659
    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "userId":I
    .local v0, "exp":Ljava/lang/Exception;
    .restart local v11    # "userId":I
    .restart local v28    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v30    # "callingUid":I
    .restart local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_230
    :try_start_230
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_248

    int-to-long v1, v9

    .local v1, "protoLogParam0":J
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, 0x12cc8efb

    const-string v5, "Trying to add window with invalid user=%d"

    new-array v6, v12, [Ljava/lang/Object;

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    const/4 v8, 0x0

    aput-object v7, v6, v8

    invoke-static {v3, v4, v12, v5, v6}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1661
    .end local v1    # "protoLogParam0":J
    :cond_248
    const/16 v1, -0xb

    monitor-exit v33
    :try_end_24b
    .catchall {:try_start_230 .. :try_end_24b} :catchall_202

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 1654
    .end local v0    # "exp":Ljava/lang/Exception;
    .end local v11    # "userId":I
    .end local v28    # "type":I
    .end local v29    # "callingPid":I
    .end local v30    # "callingUid":I
    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "userId":I
    :cond_24f
    move/from16 v28, v2

    move/from16 v29, v3

    move/from16 v30, v4

    move-object/from16 v31, v5

    move-object/from16 v33, v7

    move v12, v11

    move v11, v8

    move v8, v6

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "userId":I
    .restart local v11    # "userId":I
    .restart local v28    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v30    # "callingUid":I
    .restart local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move v0, v11

    .line 1667
    .end local v11    # "userId":I
    .local v0, "userId":I
    :goto_25d
    const/4 v11, 0x0

    .line 1668
    .local v11, "activity":Lcom/android/server/wm/ActivityRecord;
    if-eqz v10, :cond_262

    move v1, v12

    goto :goto_263

    :cond_262
    move v1, v8

    :goto_263
    move/from16 v22, v1

    .line 1671
    .local v22, "hasParent":Z
    nop

    .line 1672
    if-eqz v22, :cond_26d

    :try_start_268
    iget-object v1, v10, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v1, v1, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;
    :try_end_26c
    .catchall {:try_start_268 .. :try_end_26c} :catchall_202

    goto :goto_26f

    :cond_26d
    :try_start_26d
    iget-object v1, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1671
    :goto_26f
    move-object/from16 v7, v31

    .end local v31    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v7, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v7, v1}, Lcom/android/server/wm/DisplayContent;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v1
    :try_end_275
    .catchall {:try_start_26d .. :try_end_275} :catchall_96a

    move-object v6, v1

    .line 1675
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v22, :cond_27d

    :try_start_278
    iget-object v1, v10, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    goto :goto_27f

    :cond_27d
    move/from16 v2, v28

    :goto_27f
    move v5, v2

    .line 1677
    .local v5, "rootType":I
    const/16 v25, 0x0

    .line 1679
    .local v25, "addToastWindowRequiresToken":Z
    const/16 v26, -0x4

    const/4 v4, 0x3

    const/16 v3, 0x7d5

    const/16 v2, 0x7dd

    const/16 v1, 0x7db

    const/16 v31, -0x1

    if-nez v6, :cond_2f4

    .line 1680
    iget-object v8, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    iget-object v12, v13, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    move/from16 v35, v0

    move v0, v1

    .end local v0    # "userId":I
    .local v35, "userId":I
    move-object/from16 v1, p0

    move-object v2, v10

    move/from16 v3, v30

    move v0, v4

    move/from16 v4, v28

    move/from16 v39, v5

    .end local v5    # "rootType":I
    .local v39, "rootType":I
    move-object/from16 v40, v6

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .local v40, "token":Lcom/android/server/wm/WindowToken;
    move-object v6, v8

    move-object v8, v7

    .end local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object v7, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->unprivilegedAppCanCreateTokenWith(Lcom/android/server/wm/WindowState;IIILandroid/os/IBinder;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_2b0

    .line 1682
    monitor-exit v33
    :try_end_2ac
    .catchall {:try_start_278 .. :try_end_2ac} :catchall_202

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1684
    :cond_2b0
    if-eqz v22, :cond_2c4

    .line 1686
    :try_start_2b2
    iget-object v1, v10, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object v6, v1

    move-object/from16 v34, v6

    move-object/from16 v41, v8

    move-object v0, v11

    move/from16 v8, v28

    move/from16 v14, v30

    move/from16 v12, v39

    const/16 v28, 0x1

    .end local v40    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    goto/16 :goto_537

    .line 1688
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v40    # "token":Lcom/android/server/wm/WindowToken;
    :cond_2c4
    iget-object v1, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    if-eqz v1, :cond_2cb

    iget-object v1, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    goto :goto_2cf

    :cond_2cb
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    :goto_2cf
    move-object v3, v1

    .line 1689
    .local v3, "binder":Landroid/os/IBinder;
    new-instance v12, Lcom/android/server/wm/WindowToken;

    const/4 v5, 0x0

    iget-boolean v7, v15, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z

    move-object v1, v12

    move-object/from16 v2, p0

    move/from16 v4, v28

    move-object v6, v8

    move-object/from16 v41, v8

    move-object/from16 v32, v11

    const/4 v11, 0x0

    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v11    # "activity":Lcom/android/server/wm/ActivityRecord;
    .local v32, "activity":Lcom/android/server/wm/ActivityRecord;
    .local v41, "displayContent":Lcom/android/server/wm/DisplayContent;
    move/from16 v8, v23

    invoke-direct/range {v1 .. v8}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZLcom/android/server/wm/DisplayContent;ZZ)V
    :try_end_2e5
    .catchall {:try_start_2b2 .. :try_end_2e5} :catchall_202

    move-object v6, v12

    .line 1691
    .end local v3    # "binder":Landroid/os/IBinder;
    .end local v40    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v34, v6

    move/from16 v8, v28

    move/from16 v14, v30

    move-object/from16 v0, v32

    move/from16 v12, v39

    const/16 v28, 0x1

    goto/16 :goto_537

    .line 1692
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v35    # "userId":I
    .end local v39    # "rootType":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "userId":I
    .restart local v5    # "rootType":I
    .restart local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v11    # "activity":Lcom/android/server/wm/ActivityRecord;
    :cond_2f4
    move/from16 v35, v0

    move v0, v4

    move/from16 v39, v5

    move-object/from16 v40, v6

    move-object/from16 v41, v7

    move-object/from16 v32, v11

    move v11, v8

    .end local v0    # "userId":I
    .end local v5    # "rootType":I
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v11    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v35    # "userId":I
    .restart local v39    # "rootType":I
    .restart local v40    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move/from16 v12, v39

    const/4 v1, 0x1

    .end local v39    # "rootType":I
    .local v12, "rootType":I
    if-lt v12, v1, :cond_383

    const/16 v1, 0x63

    if-gt v12, v1, :cond_383

    .line 1694
    :try_start_309
    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v1
    :try_end_30d
    .catchall {:try_start_309 .. :try_end_30d} :catchall_375

    .line 1695
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .local v1, "activity":Lcom/android/server/wm/ActivityRecord;
    if-nez v1, :cond_32c

    .line 1696
    :try_start_30f
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_326

    invoke-static/range {v40 .. v40}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0xeb3fde9

    const-string v4, "Attempted to add window with non-application token .%s Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v0, v5, v11

    invoke-static {v2, v3, v11, v4, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1698
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_326
    const/4 v0, -0x3

    monitor-exit v33
    :try_end_328
    .catchall {:try_start_30f .. :try_end_328} :catchall_202

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 1699
    :cond_32c
    :try_start_32c
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v2
    :try_end_330
    .catchall {:try_start_32c .. :try_end_330} :catchall_375

    if-nez v2, :cond_34e

    .line 1700
    :try_start_332
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_349

    invoke-static/range {v40 .. v40}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v3, -0x32db34b3

    const-string v4, "Attempted to add window with exiting application token .%s Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v0, v5, v11

    invoke-static {v2, v3, v11, v4, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1702
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_349
    monitor-exit v33
    :try_end_34a
    .catchall {:try_start_332 .. :try_end_34a} :catchall_202

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v26

    .line 1703
    :cond_34e
    move/from16 v8, v28

    .end local v28    # "type":I
    .local v8, "type":I
    if-ne v8, v0, :cond_36c

    :try_start_352
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->startingWindow:Lcom/android/server/wm/WindowState;

    if-eqz v2, :cond_36c

    .line 1704
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_367

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, -0xa00c667

    const-string v3, "Attempted to add starting window to token with already existing starting window"

    const/4 v4, 0x0

    check-cast v4, [Ljava/lang/Object;

    invoke-static {v0, v2, v11, v3, v4}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1707
    :cond_367
    monitor-exit v33
    :try_end_368
    .catchall {:try_start_352 .. :try_end_368} :catchall_3b5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v27

    .line 1759
    :cond_36c
    move-object v0, v1

    move/from16 v14, v30

    move-object/from16 v34, v40

    const/16 v28, 0x1

    goto/16 :goto_537

    .line 2022
    .end local v1    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v8    # "type":I
    .end local v12    # "rootType":I
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v35    # "userId":I
    .end local v40    # "token":Lcom/android/server/wm/WindowToken;
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v28    # "type":I
    :catchall_375
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    move/from16 v11, v28

    move/from16 v36, v30

    .end local v28    # "type":I
    .restart local v8    # "type":I
    goto/16 :goto_9cc

    .line 1692
    .end local v8    # "type":I
    .restart local v12    # "rootType":I
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v28    # "type":I
    .restart local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v35    # "userId":I
    .restart local v40    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_383
    move/from16 v8, v28

    .line 1709
    .end local v28    # "type":I
    .restart local v8    # "type":I
    const/16 v1, 0x7db

    if-ne v12, v1, :cond_3c2

    .line 1710
    move-object/from16 v7, v40

    .end local v40    # "token":Lcom/android/server/wm/WindowToken;
    .local v7, "token":Lcom/android/server/wm/WindowToken;
    :try_start_38b
    iget v2, v7, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v2, v1, :cond_3ad

    .line 1711
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_3a8

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, -0x742fa33d

    const-string v3, "Attempted to add input method window with bad token %s.  Aborting."

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v0, v4, v11

    invoke-static {v1, v2, v11, v3, v4}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1713
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_3a8
    monitor-exit v33
    :try_end_3a9
    .catchall {:try_start_38b .. :try_end_3a9} :catchall_3b5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1710
    :cond_3ad
    move-object/from16 v34, v7

    move/from16 v14, v30

    const/16 v28, 0x1

    goto/16 :goto_535

    .line 2022
    .end local v7    # "token":Lcom/android/server/wm/WindowToken;
    .end local v12    # "rootType":I
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v35    # "userId":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_3b5
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move v11, v8

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    move/from16 v36, v30

    goto/16 :goto_9cc

    .line 1715
    .restart local v12    # "rootType":I
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v35    # "userId":I
    .restart local v40    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_3c2
    move-object/from16 v7, v40

    .end local v40    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v7    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v1, 0x7ef

    if-ne v12, v1, :cond_3f2

    .line 1716
    :try_start_3c8
    iget v2, v7, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v2, v1, :cond_3ea

    .line 1717
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_3e5

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, -0x52d64004

    const-string v3, "Attempted to add voice interaction window with bad token %s.  Aborting."

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v0, v4, v11

    invoke-static {v1, v2, v11, v3, v4}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1719
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_3e5
    monitor-exit v33
    :try_end_3e6
    .catchall {:try_start_3c8 .. :try_end_3e6} :catchall_3b5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1716
    :cond_3ea
    move-object/from16 v34, v7

    move/from16 v14, v30

    const/16 v28, 0x1

    goto/16 :goto_535

    .line 1721
    :cond_3f2
    const/16 v6, 0x7dd

    if-ne v12, v6, :cond_420

    .line 1722
    :try_start_3f6
    iget v1, v7, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v1, v6, :cond_418

    .line 1723
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_413

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, -0x7228db22

    const-string v3, "Attempted to add wallpaper window with bad token %s.  Aborting."

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v0, v4, v11

    invoke-static {v1, v2, v11, v3, v4}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1725
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_413
    monitor-exit v33
    :try_end_414
    .catchall {:try_start_3f6 .. :try_end_414} :catchall_3b5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1722
    :cond_418
    move-object/from16 v34, v7

    move/from16 v14, v30

    const/16 v28, 0x1

    goto/16 :goto_535

    .line 1727
    :cond_420
    const/16 v1, 0x7f0

    if-ne v12, v1, :cond_44e

    .line 1728
    :try_start_424
    iget v2, v7, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v2, v1, :cond_446

    .line 1729
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_441

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, -0x75d5917e

    const-string v3, "Attempted to add Accessibility overlay window with bad token %s.  Aborting."

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v0, v4, v11

    invoke-static {v1, v2, v11, v3, v4}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1732
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_441
    monitor-exit v33
    :try_end_442
    .catchall {:try_start_424 .. :try_end_442} :catchall_3b5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1728
    :cond_446
    move-object/from16 v34, v7

    move/from16 v14, v30

    const/16 v28, 0x1

    goto/16 :goto_535

    .line 1734
    :cond_44e
    const/16 v5, 0x7d5

    if-ne v8, v5, :cond_496

    .line 1736
    :try_start_452
    iget-object v1, v13, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;
    :try_end_454
    .catchall {:try_start_452 .. :try_end_454} :catchall_489

    move/from16 v4, v30

    .end local v30    # "callingUid":I
    .restart local v4    # "callingUid":I
    :try_start_456
    invoke-direct {v14, v1, v4, v10}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    move-result v1

    move/from16 v25, v1

    .line 1738
    if-eqz v25, :cond_480

    iget v1, v7, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v1, v5, :cond_480

    .line 1739
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_47b

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, 0x277e0eb8

    const-string v3, "Attempted to add a toast window with bad token %s.  Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v0, v5, v11

    invoke-static {v1, v2, v11, v3, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1741
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_47b
    monitor-exit v33
    :try_end_47c
    .catchall {:try_start_456 .. :try_end_47c} :catchall_4c5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1759
    :cond_480
    move v14, v4

    move-object/from16 v34, v7

    move-object/from16 v0, v32

    const/16 v28, 0x1

    goto/16 :goto_537

    .line 2022
    .end local v4    # "callingUid":I
    .end local v7    # "token":Lcom/android/server/wm/WindowToken;
    .end local v12    # "rootType":I
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v35    # "userId":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "callingUid":I
    :catchall_489
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move v11, v8

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    move/from16 v36, v30

    .end local v30    # "callingUid":I
    .restart local v4    # "callingUid":I
    goto/16 :goto_9cc

    .line 1743
    .end local v4    # "callingUid":I
    .restart local v7    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v12    # "rootType":I
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v30    # "callingUid":I
    .restart local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v35    # "userId":I
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_496
    move/from16 v4, v30

    .end local v30    # "callingUid":I
    .restart local v4    # "callingUid":I
    const/16 v1, 0x7f3

    if-ne v8, v1, :cond_4d2

    .line 1744
    :try_start_49c
    iget v2, v7, Lcom/android/server/wm/WindowToken;->windowType:I

    if-eq v2, v1, :cond_4be

    .line 1745
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_4b9

    iget-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .restart local v0    # "protoLogParam0":Ljava/lang/String;
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, -0x3f33e5a6

    const-string v3, "Attempted to add QS dialog window with bad token %s.  Aborting."

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v0, v5, v11

    invoke-static {v1, v2, v11, v3, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1747
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_4b9
    monitor-exit v33
    :try_end_4ba
    .catchall {:try_start_49c .. :try_end_4ba} :catchall_4c5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v31

    .line 1744
    :cond_4be
    move v14, v4

    move-object/from16 v34, v7

    const/16 v28, 0x1

    goto/16 :goto_535

    .line 2022
    .end local v7    # "token":Lcom/android/server/wm/WindowToken;
    .end local v12    # "rootType":I
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v35    # "userId":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_4c5
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v36, v4

    move v11, v8

    move-object v1, v10

    move-object v7, v13

    move-object v3, v14

    goto/16 :goto_9cc

    .line 1749
    .restart local v7    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v12    # "rootType":I
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v35    # "userId":I
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_4d2
    :try_start_4d2
    invoke-virtual {v7}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v1
    :try_end_4d6
    .catchall {:try_start_4d2 .. :try_end_4d6} :catchall_95a

    if-eqz v1, :cond_530

    .line 1750
    :try_start_4d8
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z
    :try_end_4da
    .catchall {:try_start_4d8 .. :try_end_4da} :catchall_522

    if-eqz v1, :cond_4f1

    int-to-long v1, v12

    .local v1, "protoLogParam0":J
    :try_start_4dd
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v6, "Non-null activity for system window of rootType=%d"

    const/4 v5, 0x1

    new-array v0, v5, [Ljava/lang/Object;

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v31

    aput-object v31, v0, v11

    const v11, 0x16385b87

    invoke-static {v3, v11, v5, v6, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_4f0
    .catchall {:try_start_4dd .. :try_end_4f0} :catchall_4c5

    goto :goto_4f2

    .end local v1    # "protoLogParam0":J
    :cond_4f1
    const/4 v5, 0x1

    .line 1754
    :goto_4f2
    const/4 v0, 0x0

    :try_start_4f3
    iput-object v0, v13, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1755
    new-instance v0, Lcom/android/server/wm/WindowToken;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    const/4 v6, 0x0

    iget-boolean v11, v15, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z
    :try_end_4fe
    .catchall {:try_start_4f3 .. :try_end_4fe} :catchall_522

    move-object v1, v0

    move-object/from16 v2, p0

    move v14, v4

    .end local v4    # "callingUid":I
    .local v14, "callingUid":I
    move v4, v8

    move/from16 v28, v5

    move v5, v6

    move-object/from16 v6, v41

    move-object/from16 v34, v7

    .end local v7    # "token":Lcom/android/server/wm/WindowToken;
    .local v34, "token":Lcom/android/server/wm/WindowToken;
    move v7, v11

    :try_start_50b
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZLcom/android/server/wm/DisplayContent;Z)V
    :try_end_50e
    .catchall {:try_start_50b .. :try_end_50e} :catchall_514

    move-object v6, v0

    move-object/from16 v34, v6

    move-object/from16 v0, v32

    .end local v34    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    goto :goto_537

    .line 2022
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v12    # "rootType":I
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v35    # "userId":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_514
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move v11, v8

    move-object v1, v10

    move-object v7, v13

    move/from16 v36, v14

    goto/16 :goto_9cc

    .end local v14    # "callingUid":I
    .restart local v4    # "callingUid":I
    :catchall_522
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v36, v4

    move v11, v8

    move-object v1, v10

    move-object v7, v13

    .end local v4    # "callingUid":I
    .restart local v14    # "callingUid":I
    goto/16 :goto_9cc

    .line 1749
    .end local v14    # "callingUid":I
    .restart local v4    # "callingUid":I
    .restart local v7    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v12    # "rootType":I
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v35    # "userId":I
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_530
    move v14, v4

    move-object/from16 v34, v7

    const/16 v28, 0x1

    .line 1759
    .end local v4    # "callingUid":I
    .restart local v30    # "callingUid":I
    :goto_535
    move-object/from16 v0, v32

    .end local v7    # "token":Lcom/android/server/wm/WindowToken;
    .end local v30    # "callingUid":I
    .end local v32    # "activity":Lcom/android/server/wm/ActivityRecord;
    .local v0, "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v14    # "callingUid":I
    .restart local v34    # "token":Lcom/android/server/wm/WindowToken;
    :goto_537
    :try_start_537
    new-instance v32, Lcom/android/server/wm/WindowState;

    const/4 v11, 0x0

    aget v7, v20, v11

    iget v6, v15, Lcom/android/server/wm/Session;->mUid:I

    iget-boolean v5, v15, Lcom/android/server/wm/Session;->mCanAddInternalSystemWindow:Z
    :try_end_540
    .catchall {:try_start_537 .. :try_end_540} :catchall_949

    move-object/from16 v1, v32

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v31, v5

    move-object/from16 v5, v34

    move/from16 v36, v6

    move-object v6, v10

    move v15, v8

    .end local v8    # "type":I
    .local v15, "type":I
    move/from16 v8, p3

    move-object/from16 v9, p4

    move-object/from16 v37, v10

    .end local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v37, "parentWindow":Lcom/android/server/wm/WindowState;
    move/from16 v10, p5

    move/from16 v39, v15

    move v15, v11

    .end local v15    # "type":I
    .local v39, "type":I
    move/from16 v11, v36

    move/from16 v15, v28

    move/from16 v28, v12

    .end local v12    # "rootType":I
    .local v28, "rootType":I
    move/from16 v12, v35

    move/from16 v13, v31

    :try_start_565
    invoke-direct/range {v1 .. v13}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;IIIZ)V

    move-object/from16 v1, v32

    .line 1762
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;
    :try_end_56c
    .catchall {:try_start_565 .. :try_end_56c} :catchall_938

    if-nez v2, :cond_59f

    .line 1765
    :try_start_56e
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_589

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x6981363f

    const-string v5, "Adding window client %s that is dead, aborting."

    new-array v6, v15, [Ljava/lang/Object;

    const/4 v7, 0x0

    aput-object v2, v6, v7

    invoke-static {v3, v4, v7, v5, v6}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1767
    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_589
    monitor-exit v33
    :try_end_58a
    .catchall {:try_start_56e .. :try_end_58a} :catchall_58e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v26

    .line 2022
    .end local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v28    # "rootType":I
    .end local v34    # "token":Lcom/android/server/wm/WindowToken;
    .end local v35    # "userId":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_58e
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v7, p4

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v36, v14

    move-object/from16 v1, v37

    move/from16 v11, v39

    goto/16 :goto_9cc

    .line 1770
    .restart local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v28    # "rootType":I
    .restart local v34    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v35    # "userId":I
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_59f
    :try_start_59f
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2
    :try_end_5a3
    .catchall {:try_start_59f .. :try_end_5a3} :catchall_938

    if-nez v2, :cond_5be

    .line 1771
    :try_start_5a5
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_5b7

    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x668fbcfd

    const-string v4, "Adding window to Display that has been removed."

    const/4 v5, 0x0

    check-cast v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    invoke-static {v2, v3, v6, v4, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1772
    :cond_5b7
    monitor-exit v33
    :try_end_5b8
    .catchall {:try_start_5a5 .. :try_end_5b8} :catchall_58e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/16 v2, -0x9

    return v2

    .line 1775
    :cond_5be
    :try_start_5be
    invoke-virtual/range {v41 .. v41}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    .line 1776
    .local v2, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;
    :try_end_5c4
    .catchall {:try_start_5be .. :try_end_5c4} :catchall_938

    move/from16 v4, v29

    .end local v29    # "callingPid":I
    .local v4, "callingPid":I
    :try_start_5c6
    invoke-virtual {v2, v1, v3, v4, v14}, Lcom/android/server/wm/DisplayPolicy;->adjustWindowParamsLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;II)V

    .line 1779
    iget-object v3, v2, Lcom/android/server/wm/DisplayPolicy;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iget-boolean v3, v3, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z
    :try_end_5cd
    .catchall {:try_start_5c6 .. :try_end_5cd} :catchall_925

    if-eqz v3, :cond_5fa

    .line 1780
    move-object/from16 v3, p0

    move v5, v14

    .end local v14    # "callingUid":I
    .local v5, "callingUid":I
    :try_start_5d2
    iget-object v6, v3, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;
    :try_end_5d4
    .catchall {:try_start_5d2 .. :try_end_5d4} :catchall_5e9

    move-object/from16 v7, p4

    :try_start_5d6
    invoke-virtual {v6, v1, v7}, Lcom/android/server/wm/WindowManagerServiceExt;->setOneHandOpWindowLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V
    :try_end_5d9
    .catchall {:try_start_5d6 .. :try_end_5d9} :catchall_5da

    goto :goto_5ff

    .line 2022
    .end local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v22    # "hasParent":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v28    # "rootType":I
    .end local v34    # "token":Lcom/android/server/wm/WindowToken;
    .end local v35    # "userId":I
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_5da
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v29, v4

    move/from16 v36, v5

    move-object/from16 v1, v37

    move/from16 v11, v39

    goto/16 :goto_9cc

    :catchall_5e9
    move-exception v0

    move-object/from16 v7, p4

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v29, v4

    move/from16 v36, v5

    move-object/from16 v1, v37

    move/from16 v11, v39

    goto/16 :goto_9cc

    .line 1779
    .end local v5    # "callingUid":I
    .restart local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v14    # "callingUid":I
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v28    # "rootType":I
    .restart local v34    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v35    # "userId":I
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_5fa
    move-object/from16 v3, p0

    move-object/from16 v7, p4

    move v5, v14

    .line 1784
    .end local v14    # "callingUid":I
    .restart local v5    # "callingUid":I
    :goto_5ff
    :try_start_5ff
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getCoverMode()I

    move-result v6
    :try_end_603
    .catchall {:try_start_5ff .. :try_end_603} :catchall_916

    const/4 v8, 0x2

    if-ne v6, v8, :cond_62d

    .line 1785
    :try_start_606
    iget-object v6, v3, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    .line 1786
    invoke-virtual {v6}, Lcom/android/server/wm/WindowManagerServiceExt;->getCoverPolicyControllerLocked()Lcom/android/server/wm/CoverPolicyController;

    move-result-object v6

    .line 1787
    .local v6, "coverController":Lcom/android/server/wm/CoverPolicyController;
    if-eqz v6, :cond_623

    invoke-virtual {v6}, Lcom/android/server/wm/CoverPolicyController;->isCoverSupportedAndClosed()Z

    move-result v9

    if-eqz v9, :cond_623

    .line 1788
    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-object v10, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-boolean v10, v10, Lcom/android/server/wm/WindowToken;->mDisableHideSViewOnce:Z

    if-nez v10, :cond_61e

    move v10, v15

    goto :goto_61f

    :cond_61e
    const/4 v10, 0x0

    :goto_61f
    iput-boolean v10, v9, Lcom/android/server/wm/WindowToken;->mShouldHideSViewOnce:Z

    const/4 v10, 0x0

    goto :goto_62e

    .line 1790
    :cond_623
    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v10, 0x0

    iput-boolean v10, v9, Lcom/android/server/wm/WindowToken;->mShouldHideSViewOnce:Z

    .line 1791
    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iput-boolean v15, v9, Lcom/android/server/wm/WindowToken;->mDisableHideSViewOnce:Z
    :try_end_62c
    .catchall {:try_start_606 .. :try_end_62c} :catchall_5da

    goto :goto_62e

    .line 1784
    .end local v6    # "coverController":Lcom/android/server/wm/CoverPolicyController;
    :cond_62d
    const/4 v10, 0x0

    .line 1797
    :goto_62e
    :try_start_62e
    invoke-virtual {v2, v7, v4, v5}, Lcom/android/server/wm/DisplayPolicy;->validateAddingWindowLw(Landroid/view/WindowManager$LayoutParams;II)I

    move-result v6
    :try_end_632
    .catchall {:try_start_62e .. :try_end_632} :catchall_916

    move/from16 v17, v6

    .line 1798
    if-eqz v17, :cond_63b

    .line 1799
    :try_start_636
    monitor-exit v33
    :try_end_637
    .catchall {:try_start_636 .. :try_end_637} :catchall_5da

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v17

    .line 1802
    :cond_63b
    move-object/from16 v6, p11

    move v9, v10

    if-eqz v6, :cond_647

    :try_start_640
    iget v10, v7, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    and-int/2addr v10, v8

    if-nez v10, :cond_647

    move v10, v15

    goto :goto_648

    :cond_647
    move v10, v9

    .line 1804
    .local v10, "openInputChannels":Z
    :goto_648
    if-eqz v10, :cond_64d

    .line 1805
    invoke-virtual {v1, v6}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V
    :try_end_64d
    .catchall {:try_start_640 .. :try_end_64d} :catchall_5da

    .line 1818
    :cond_64d
    move/from16 v11, v39

    const/16 v12, 0x7d5

    .end local v39    # "type":I
    .local v11, "type":I
    if-ne v11, v12, :cond_6a8

    .line 1819
    move-object/from16 v12, v41

    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_655
    invoke-virtual {v12, v5}, Lcom/android/server/wm/DisplayContent;->canAddToastWindowForUid(I)Z

    move-result v13

    if-nez v13, :cond_671

    .line 1820
    sget-boolean v8, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v8, :cond_66c

    sget-object v8, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v13, -0x34acc678    # -1.3842824E7f

    const-string v14, "Adding more than one toast window for UID at a time."

    const/4 v15, 0x0

    check-cast v15, [Ljava/lang/Object;

    invoke-static {v8, v13, v9, v14, v15}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1821
    :cond_66c
    monitor-exit v33
    :try_end_66d
    .catchall {:try_start_655 .. :try_end_66d} :catchall_69b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v27

    .line 1828
    :cond_671
    if-nez v25, :cond_687

    :try_start_673
    iget v13, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v13, v13, 0x8

    if-eqz v13, :cond_687

    iget-object v13, v12, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v13, :cond_687

    iget-object v13, v12, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget v13, v13, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    if-eq v13, v5, :cond_684

    goto :goto_687

    :cond_684
    move/from16 v24, v10

    goto :goto_6ac

    .line 1832
    :cond_687
    :goto_687
    iget-object v13, v3, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v14, v3, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v15, 0x34

    .line 1833
    invoke-virtual {v14, v15, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v14

    iget-object v15, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move/from16 v24, v10

    .end local v10    # "openInputChannels":Z
    .local v24, "openInputChannels":Z
    iget-wide v9, v15, Landroid/view/WindowManager$LayoutParams;->hideTimeoutMilliseconds:J

    .line 1832
    invoke-virtual {v13, v14, v9, v10}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_69a
    .catchall {:try_start_673 .. :try_end_69a} :catchall_69b

    goto :goto_6ac

    .line 2022
    .end local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "hasParent":Z
    .end local v24    # "openInputChannels":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v28    # "rootType":I
    .end local v34    # "token":Lcom/android/server/wm/WindowToken;
    .end local v35    # "userId":I
    :catchall_69b
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v29, v4

    move/from16 v36, v5

    move-object/from16 v1, v37

    goto/16 :goto_9cc

    .line 1818
    .restart local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v10    # "openInputChannels":Z
    .restart local v22    # "hasParent":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v28    # "rootType":I
    .restart local v34    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v35    # "userId":I
    .restart local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_6a8
    move/from16 v24, v10

    move-object/from16 v12, v41

    .line 1840
    .end local v10    # "openInputChannels":Z
    .end local v41    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v24    # "openInputChannels":Z
    :goto_6ac
    const/16 v17, 0x0

    .line 1842
    :try_start_6ae
    iget-boolean v9, v3, Lcom/android/server/wm/WindowManagerService;->mUseBLAST:Z

    if-eqz v9, :cond_6b6

    .line 1843
    or-int/lit8 v9, v17, 0x8

    move/from16 v17, v9

    .line 1845
    :cond_6b6
    sget-boolean v9, Lcom/android/server/wm/WindowManagerService;->sEnableTripleBuffering:Z

    if-eqz v9, :cond_6be

    .line 1846
    or-int/lit8 v9, v17, 0x4

    move/from16 v17, v9

    .line 1849
    :cond_6be
    iget-object v9, v12, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;
    :try_end_6c0
    .catchall {:try_start_6ae .. :try_end_6c0} :catchall_909

    if-nez v9, :cond_6c7

    .line 1850
    :try_start_6c2
    iget-object v9, v12, Lcom/android/server/wm/DisplayContent;->mWinAddedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_6c7
    .catchall {:try_start_6c2 .. :try_end_6c7} :catchall_69b

    .line 1853
    :cond_6c7
    :try_start_6c7
    invoke-static {v11}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    move-result v9
    :try_end_6cb
    .catchall {:try_start_6c7 .. :try_end_6cb} :catchall_909

    if-eqz v9, :cond_6d2

    .line 1854
    :try_start_6cd
    iget-object v9, v12, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_6d2
    .catchall {:try_start_6cd .. :try_end_6d2} :catchall_69b

    .line 1857
    :cond_6d2
    :try_start_6d2
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->attach()V

    .line 1858
    iget-object v9, v3, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    invoke-virtual {v9, v10, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1859
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->initAppOpsState()V

    .line 1861
    iget-object v9, v3, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v10

    .line 1862
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v13

    invoke-static {v13}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v13

    .line 1861
    invoke-virtual {v9, v10, v13}, Landroid/content/pm/PackageManagerInternal;->isPackageSuspended(Ljava/lang/String;I)Z

    move-result v9

    .line 1863
    .local v9, "suspended":Z
    invoke-virtual {v1, v9}, Lcom/android/server/wm/WindowState;->setHiddenWhileSuspended(Z)V

    .line 1866
    nop

    .line 1867
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v10

    invoke-static {v10}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    invoke-static {v10}, Lcom/samsung/android/knox/SemPersonaManager;->isSecureFolderId(I)Z

    move-result v10
    :try_end_703
    .catchall {:try_start_6d2 .. :try_end_703} :catchall_909

    if-eqz v10, :cond_716

    .line 1868
    :try_start_705
    iget-object v10, v3, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    .line 1869
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v13

    invoke-static {v13}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v13

    invoke-virtual {v10, v13}, Landroid/app/ActivityManagerInternal;->shouldConfirmCredentials(I)Z

    move-result v10

    .line 1868
    invoke-virtual {v1, v10}, Lcom/android/server/wm/WindowState;->setHiddenWhileProfileLockedStateLocked(Z)V
    :try_end_716
    .catchall {:try_start_705 .. :try_end_716} :catchall_69b

    .line 1873
    :cond_716
    :try_start_716
    iget-object v10, v3, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v10

    if-nez v10, :cond_720

    const/4 v10, 0x1

    goto :goto_721

    :cond_720
    const/4 v10, 0x0

    .line 1874
    .local v10, "hideSystemAlertWindows":Z
    :goto_721
    invoke-virtual {v1, v10}, Lcom/android/server/wm/WindowState;->setForceHideNonSystemOverlayWindowIfNeeded(Z)V

    .line 1876
    invoke-virtual/range {v34 .. v34}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v13
    :try_end_728
    .catchall {:try_start_716 .. :try_end_728} :catchall_909

    .line 1877
    .local v13, "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    const/4 v14, 0x3

    if-ne v11, v14, :cond_767

    if-eqz v13, :cond_767

    .line 1878
    :try_start_72d
    iput-object v1, v13, Lcom/android/server/wm/ActivityRecord;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 1879
    sget-boolean v14, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:Z

    if-eqz v14, :cond_755

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v14

    .local v14, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v15

    .local v15, "protoLogParam1":Ljava/lang/String;
    sget-object v8, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/server/wm/ProtoLogGroup;
    :try_end_73d
    .catchall {:try_start_72d .. :try_end_73d} :catchall_75c

    move/from16 v29, v4

    .end local v4    # "callingPid":I
    .restart local v29    # "callingPid":I
    move/from16 v36, v5

    const/4 v4, 0x2

    .end local v5    # "callingUid":I
    .local v36, "callingUid":I
    :try_start_742
    new-array v5, v4, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v14, v5, v4

    const/16 v26, 0x1

    aput-object v15, v5, v26

    move/from16 v31, v9

    const v6, 0x8f63079

    const/4 v9, 0x0

    .end local v9    # "suspended":Z
    .local v31, "suspended":Z
    invoke-static {v8, v6, v4, v9, v5}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_76d

    .end local v14    # "protoLogParam0":Ljava/lang/String;
    .end local v15    # "protoLogParam1":Ljava/lang/String;
    .end local v29    # "callingPid":I
    .end local v31    # "suspended":Z
    .end local v36    # "callingUid":I
    .restart local v4    # "callingPid":I
    .restart local v5    # "callingUid":I
    .restart local v9    # "suspended":Z
    :cond_755
    move/from16 v29, v4

    move/from16 v36, v5

    move/from16 v31, v9

    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .end local v9    # "suspended":Z
    .restart local v29    # "callingPid":I
    .restart local v31    # "suspended":Z
    .restart local v36    # "callingUid":I
    goto :goto_76d

    .line 2022
    .end local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v10    # "hideSystemAlertWindows":Z
    .end local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .end local v22    # "hasParent":Z
    .end local v24    # "openInputChannels":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v28    # "rootType":I
    .end local v29    # "callingPid":I
    .end local v31    # "suspended":Z
    .end local v34    # "token":Lcom/android/server/wm/WindowToken;
    .end local v35    # "userId":I
    .end local v36    # "callingUid":I
    .restart local v4    # "callingPid":I
    .restart local v5    # "callingUid":I
    :catchall_75c
    move-exception v0

    move/from16 v29, v4

    move/from16 v36, v5

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    goto/16 :goto_912

    .line 1877
    .restart local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v9    # "suspended":Z
    .restart local v10    # "hideSystemAlertWindows":Z
    .restart local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v13    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .restart local v22    # "hasParent":Z
    .restart local v24    # "openInputChannels":Z
    .restart local v25    # "addToastWindowRequiresToken":Z
    .restart local v28    # "rootType":I
    .restart local v34    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v35    # "userId":I
    :cond_767
    move/from16 v29, v4

    move/from16 v36, v5

    move/from16 v31, v9

    .line 1883
    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .end local v9    # "suspended":Z
    .restart local v29    # "callingPid":I
    .restart local v31    # "suspended":Z
    .restart local v36    # "callingUid":I
    :goto_76d
    const/4 v4, 0x1

    .line 1885
    .local v4, "imMayMove":Z
    iget-object v5, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    invoke-virtual {v5, v1}, Lcom/android/server/wm/WindowToken;->addWindow(Lcom/android/server/wm/WindowState;)V

    .line 1886
    invoke-virtual {v2, v1, v7}, Lcom/android/server/wm/DisplayPolicy;->addWindowLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 1895
    nop

    .line 1896
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getFixedRotationAnimationController()Lcom/android/server/wm/FixedRotationAnimationController;

    move-result-object v5

    .line 1897
    .local v5, "controller":Lcom/android/server/wm/FixedRotationAnimationController;
    if-eqz v5, :cond_782

    .line 1898
    const-string v6, "addWindow"

    invoke-virtual {v5, v1, v6}, Lcom/android/server/wm/FixedRotationAnimationController;->hideSystemWindow(Lcom/android/server/wm/WindowState;Ljava/lang/String;)V

    .line 1903
    .end local v5    # "controller":Lcom/android/server/wm/FixedRotationAnimationController;
    :cond_782
    const/16 v5, 0x7db

    if-ne v11, v5, :cond_78b

    .line 1904
    invoke-virtual {v12, v1}, Lcom/android/server/wm/DisplayContent;->setInputMethodWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 1905
    const/4 v4, 0x0

    goto :goto_7c9

    .line 1908
    :cond_78b
    const/16 v5, 0x960

    if-ne v11, v5, :cond_794

    .line 1909
    invoke-virtual {v12, v1}, Lcom/android/server/wm/DisplayContent;->setClipBoardWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 1910
    const/4 v4, 0x0

    goto :goto_7c9

    .line 1913
    :cond_794
    const/16 v5, 0x7dc

    if-ne v11, v5, :cond_79e

    .line 1914
    const/4 v5, 0x1

    invoke-virtual {v12, v5}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 1915
    const/4 v4, 0x0

    goto :goto_7c9

    .line 1917
    :cond_79e
    const/16 v5, 0x7dd

    if-ne v11, v5, :cond_7ae

    .line 1918
    iget-object v5, v12, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v5}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    .line 1919
    iget v5, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_7c9

    .line 1920
    :cond_7ae
    iget v5, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int v5, v5, v16

    if-eqz v5, :cond_7bb

    .line 1921
    iget v5, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_7c9

    .line 1922
    :cond_7bb
    iget-object v5, v12, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v5, v1}, Lcom/android/server/wm/WallpaperController;->isBelowWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v5

    if-eqz v5, :cond_7c9

    .line 1928
    iget v5, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 1932
    :cond_7c9
    :goto_7c9
    iget-object v5, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 1933
    .local v5, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v6, 0x1

    iput-boolean v6, v5, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 1934
    iput-boolean v6, v5, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 1936
    if-eqz v0, :cond_7e1

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->isVisible()Z

    move-result v6

    if-eqz v6, :cond_7e1

    .line 1937
    invoke-direct {v3, v0}, Lcom/android/server/wm/WindowManagerService;->prepareWindowReplacementTransition(Lcom/android/server/wm/ActivityRecord;)Z

    move-result v6

    if-nez v6, :cond_7e1

    .line 1941
    invoke-direct {v3, v0}, Lcom/android/server/wm/WindowManagerService;->prepareNoneTransitionForRelaunching(Lcom/android/server/wm/ActivityRecord;)V

    .line 1944
    :cond_7e1
    iget-object v6, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v42, v2

    move-object/from16 v43, v6

    move-object/from16 v44, v34

    move-object/from16 v45, p7

    move-object/from16 v46, p8

    move-object/from16 v47, p9

    move-object/from16 v48, p10

    invoke-virtual/range {v42 .. v48}, Lcom/android/server/wm/DisplayPolicy;->getLayoutHint(Landroid/view/WindowManager$LayoutParams;Lcom/android/server/wm/WindowToken;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/DisplayCutout$ParcelableWrapper;)Z

    move-result v6

    if-eqz v6, :cond_7fb

    .line 1946
    or-int/lit8 v6, v17, 0x4

    move/from16 v17, v6

    .line 1948
    :cond_7fb
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getInsetsState()Landroid/view/InsetsState;

    move-result-object v6

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isClientLocal()Z

    move-result v8
    :try_end_803
    .catchall {:try_start_742 .. :try_end_803} :catchall_900

    move-object/from16 v9, p12

    :try_start_805
    invoke-virtual {v9, v6, v8}, Landroid/view/InsetsState;->set(Landroid/view/InsetsState;Z)V

    .line 1950
    iget-boolean v6, v3, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    if-eqz v6, :cond_810

    .line 1951
    or-int/lit8 v6, v17, 0x1

    move/from16 v17, v6

    .line 1953
    :cond_810
    iget-object v6, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v6, :cond_81c

    iget-object v6, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->isClientVisible()Z

    move-result v6

    if-eqz v6, :cond_820

    .line 1954
    :cond_81c
    or-int/lit8 v6, v17, 0x2

    .end local v17    # "res":I
    .local v6, "res":I
    move/from16 v17, v6

    .line 1957
    .end local v6    # "res":I
    .restart local v17    # "res":I
    :cond_820
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 1959
    const/4 v6, 0x0

    .line 1960
    .local v6, "focusChanged":Z
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v8

    if-eqz v8, :cond_838

    .line 1961
    const/4 v8, 0x1

    const/4 v14, 0x0

    invoke-virtual {v3, v8, v14}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v15

    move v6, v15

    .line 1963
    if-eqz v6, :cond_838

    .line 1964
    const/4 v4, 0x0

    .line 1968
    :cond_838
    if-eqz v4, :cond_83e

    .line 1969
    const/4 v8, 0x1

    invoke-virtual {v12, v8}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 1974
    :cond_83e
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/WindowContainer;->assignChildLayers()V

    .line 1976
    if-eqz v6, :cond_851

    .line 1977
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v8

    iget-object v14, v12, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    const/4 v15, 0x0

    invoke-virtual {v8, v14, v15}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    .line 1980
    :cond_851
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v8

    const/4 v14, 0x0

    invoke-virtual {v8, v14}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 1982
    sget-boolean v8, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    if-eqz v8, :cond_894

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-static {v8}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v14

    .local v14, "protoLogParam1":Ljava/lang/String;
    const/4 v15, 0x5

    invoke-static {v15}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v15

    invoke-static {v15}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v15

    move-object/from16 v38, v0

    .end local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .local v15, "protoLogParam2":Ljava/lang/String;
    .local v38, "activity":Lcom/android/server/wm/ActivityRecord;
    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/server/wm/ProtoLogGroup;

    move-object/from16 v39, v2

    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .local v39, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    move/from16 v30, v4

    const/4 v4, 0x0

    .end local v4    # "imMayMove":Z
    .local v30, "imMayMove":Z
    aput-object v8, v2, v4

    const/16 v26, 0x1

    aput-object v14, v2, v26

    const/16 v26, 0x2

    aput-object v15, v2, v26

    move-object/from16 v26, v5

    move/from16 v21, v6

    const v5, -0x551119d4

    const/4 v6, 0x0

    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v6    # "focusChanged":Z
    .local v21, "focusChanged":Z
    .local v26, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-static {v0, v5, v4, v6, v2}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_89e

    .end local v8    # "protoLogParam0":Ljava/lang/String;
    .end local v14    # "protoLogParam1":Ljava/lang/String;
    .end local v15    # "protoLogParam2":Ljava/lang/String;
    .end local v21    # "focusChanged":Z
    .end local v26    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v30    # "imMayMove":Z
    .end local v38    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v39    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v4    # "imMayMove":Z
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v6    # "focusChanged":Z
    :cond_894
    move-object/from16 v38, v0

    move-object/from16 v39, v2

    move/from16 v30, v4

    move-object/from16 v26, v5

    move/from16 v21, v6

    .line 1998
    .end local v0    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v2    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v4    # "imMayMove":Z
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v6    # "focusChanged":Z
    .restart local v21    # "focusChanged":Z
    .restart local v26    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v30    # "imMayMove":Z
    .restart local v38    # "activity":Lcom/android/server/wm/ActivityRecord;
    .restart local v39    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :goto_89e
    iget-object v0, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v0, :cond_8b0

    iget-object v0, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/wm/ActivityRecord;->mBoundsCompatController:Lcom/android/server/wm/BoundsCompatController;

    .line 2000
    invoke-virtual {v0}, Lcom/android/server/wm/BoundsCompatController;->isBoundsCompatEnabled()Z

    move-result v0

    if-eqz v0, :cond_8b0

    .line 2001
    or-int v0, v17, v16

    move/from16 v17, v0

    .line 2003
    :cond_8b0
    iget-object v0, v3, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiStarController:Lcom/android/server/wm/MultiStarController;

    .line 2004
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/wm/MultiStarController;->isOverlapNotchLocked(Lcom/android/server/wm/Task;)Z

    move-result v0

    if-eqz v0, :cond_8c4

    .line 2005
    const/high16 v0, 0x200000

    or-int v0, v17, v0

    move/from16 v17, v0

    .line 2009
    :cond_8c4
    iget-object v0, v3, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    .line 2010
    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerServiceExt;->getCoverPolicyControllerLocked()Lcom/android/server/wm/CoverPolicyController;

    move-result-object v0

    .line 2011
    .local v0, "coverController":Lcom/android/server/wm/CoverPolicyController;
    if-eqz v0, :cond_8d8

    invoke-virtual {v0}, Lcom/android/server/wm/CoverPolicyController;->isCoverClosed()Z

    move-result v2

    if-nez v2, :cond_8d8

    .line 2012
    const/high16 v2, 0x40000

    or-int v2, v17, v2

    move/from16 v17, v2

    .line 2017
    .end local v0    # "coverController":Lcom/android/server/wm/CoverPolicyController;
    :cond_8d8
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v0

    if-eqz v0, :cond_8e7

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->updateOrientation()Z

    move-result v0

    if-eqz v0, :cond_8e7

    .line 2018
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V
    :try_end_8e7
    .catchall {:try_start_805 .. :try_end_8e7} :catchall_8f9

    .line 2021
    :cond_8e7
    move-object/from16 v2, p13

    :try_start_8e9
    invoke-direct {v3, v1, v2}, Lcom/android/server/wm/WindowManagerService;->getInsetsSourceControls(Lcom/android/server/wm/WindowState;[Landroid/view/InsetsSourceControl;)V

    .line 2022
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v10    # "hideSystemAlertWindows":Z
    .end local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "tokenActivity":Lcom/android/server/wm/ActivityRecord;
    .end local v21    # "focusChanged":Z
    .end local v22    # "hasParent":Z
    .end local v24    # "openInputChannels":Z
    .end local v25    # "addToastWindowRequiresToken":Z
    .end local v26    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v28    # "rootType":I
    .end local v30    # "imMayMove":Z
    .end local v31    # "suspended":Z
    .end local v34    # "token":Lcom/android/server/wm/WindowToken;
    .end local v35    # "userId":I
    .end local v38    # "activity":Lcom/android/server/wm/ActivityRecord;
    .end local v39    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    monitor-exit v33
    :try_end_8ed
    .catchall {:try_start_8e9 .. :try_end_8ed} :catchall_8f4

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2024
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2026
    return v17

    .line 2022
    :catchall_8f4
    move-exception v0

    move-object/from16 v1, v37

    goto/16 :goto_9cc

    :catchall_8f9
    move-exception v0

    move-object/from16 v2, p13

    move-object/from16 v1, v37

    goto/16 :goto_9cc

    :catchall_900
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move-object/from16 v1, v37

    goto/16 :goto_9cc

    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .local v4, "callingPid":I
    .local v5, "callingUid":I
    :catchall_909
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v29, v4

    move/from16 v36, v5

    :goto_912
    move-object/from16 v1, v37

    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .restart local v4    # "callingPid":I
    .restart local v5    # "callingUid":I
    .local v39, "type":I
    :catchall_916
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v29, v4

    move/from16 v36, v5

    move/from16 v11, v39

    move-object/from16 v1, v37

    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .end local v39    # "type":I
    .restart local v11    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .restart local v4    # "callingPid":I
    .local v14, "callingUid":I
    .restart local v39    # "type":I
    :catchall_925
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v7, p4

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v29, v4

    move/from16 v36, v14

    move/from16 v11, v39

    move-object/from16 v1, v37

    .end local v4    # "callingPid":I
    .end local v14    # "callingUid":I
    .end local v39    # "type":I
    .restart local v11    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v36    # "callingUid":I
    .restart local v14    # "callingUid":I
    .restart local v39    # "type":I
    :catchall_938
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v7, p4

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v36, v14

    move/from16 v11, v39

    move-object/from16 v1, v37

    .end local v14    # "callingUid":I
    .end local v39    # "type":I
    .restart local v11    # "type":I
    .restart local v36    # "callingUid":I
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v36    # "callingUid":I
    .end local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v8, "type":I
    .local v10, "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v14    # "callingUid":I
    :catchall_949
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move v11, v8

    move-object/from16 v37, v10

    move-object v7, v13

    move/from16 v36, v14

    move-object/from16 v1, v37

    .end local v8    # "type":I
    .end local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v14    # "callingUid":I
    .restart local v11    # "type":I
    .restart local v36    # "callingUid":I
    .restart local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v36    # "callingUid":I
    .end local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v4, "callingUid":I
    .restart local v8    # "type":I
    .restart local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    :catchall_95a
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move/from16 v36, v4

    move v11, v8

    move-object/from16 v37, v10

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v1, v37

    .end local v4    # "callingUid":I
    .end local v8    # "type":I
    .end local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v11    # "type":I
    .restart local v36    # "callingUid":I
    .restart local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v36    # "callingUid":I
    .end local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v28, "type":I
    .local v30, "callingUid":I
    :catchall_96a
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v2, p13

    move-object/from16 v37, v10

    move-object v7, v13

    move-object v3, v14

    move/from16 v11, v28

    move/from16 v36, v30

    move-object/from16 v1, v37

    .end local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v28    # "type":I
    .end local v30    # "callingUid":I
    .restart local v11    # "type":I
    .restart local v36    # "callingUid":I
    .restart local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto/16 :goto_9cc

    .end local v11    # "type":I
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .end local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    .local v2, "type":I
    .local v3, "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    :catchall_97b
    move-exception v0

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object/from16 v33, v7

    move-object/from16 v37, v10

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v2, p13

    move-object/from16 v1, v37

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v10    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v11    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    .restart local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    goto :goto_9cc

    .end local v11    # "type":I
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .end local v37    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .local v22, "parentWindow":Lcom/android/server/wm/WindowState;
    :catchall_98e
    move-exception v0

    move-object/from16 v9, p12

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move-object/from16 v33, v7

    move-object v7, v13

    move-object v3, v14

    move-object/from16 v2, p13

    move-object/from16 v1, v22

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .restart local v11    # "type":I
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    goto :goto_9cc

    .line 1589
    .end local v11    # "type":I
    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v23    # "isRoundedCornerOverlay":Z
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .local v1, "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .local v5, "isRoundedCornerOverlay":Z
    :cond_99f
    move-object/from16 v9, p12

    move-object/from16 v22, v1

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move/from16 v23, v5

    move-object/from16 v33, v7

    move-object v2, v10

    move-object v7, v13

    move-object v3, v14

    .end local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "isRoundedCornerOverlay":Z
    .restart local v11    # "type":I
    .restart local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v23    # "isRoundedCornerOverlay":Z
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    :try_start_9af
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Display has not been initialialized"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v11    # "type":I
    .end local v17    # "res":I
    .end local v18    # "origId":J
    .end local v20    # "appOp":[I
    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v23    # "isRoundedCornerOverlay":Z
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "seq":I
    .end local p4    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p5    # "viewVisibility":I
    .end local p6    # "displayId":I
    .end local p7    # "outFrame":Landroid/graphics/Rect;
    .end local p8    # "outContentInsets":Landroid/graphics/Rect;
    .end local p9    # "outStableInsets":Landroid/graphics/Rect;
    .end local p10    # "outDisplayCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .end local p11    # "outInputChannel":Landroid/view/InputChannel;
    .end local p12    # "outInsetsState":Landroid/view/InsetsState;
    .end local p13    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .end local p14    # "requestUserId":I
    throw v0
    :try_end_9b7
    .catchall {:try_start_9af .. :try_end_9b7} :catchall_9b7

    .line 2022
    .restart local v11    # "type":I
    .restart local v17    # "res":I
    .restart local v18    # "origId":J
    .restart local v20    # "appOp":[I
    .restart local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v23    # "isRoundedCornerOverlay":Z
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "seq":I
    .restart local p4    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p5    # "viewVisibility":I
    .restart local p6    # "displayId":I
    .restart local p7    # "outFrame":Landroid/graphics/Rect;
    .restart local p8    # "outContentInsets":Landroid/graphics/Rect;
    .restart local p9    # "outStableInsets":Landroid/graphics/Rect;
    .restart local p10    # "outDisplayCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .restart local p11    # "outInputChannel":Landroid/view/InputChannel;
    .restart local p12    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p13    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .restart local p14    # "requestUserId":I
    :catchall_9b7
    move-exception v0

    move-object/from16 v1, v22

    goto :goto_9cc

    .end local v11    # "type":I
    .end local v22    # "parentWindow":Lcom/android/server/wm/WindowState;
    .end local v23    # "isRoundedCornerOverlay":Z
    .end local v29    # "callingPid":I
    .end local v36    # "callingUid":I
    .restart local v1    # "parentWindow":Lcom/android/server/wm/WindowState;
    .restart local v2    # "type":I
    .restart local v3    # "callingPid":I
    .restart local v4    # "callingUid":I
    .restart local v5    # "isRoundedCornerOverlay":Z
    :catchall_9bb
    move-exception v0

    move-object/from16 v9, p12

    move-object/from16 v22, v1

    move v11, v2

    move/from16 v29, v3

    move/from16 v36, v4

    move/from16 v23, v5

    move-object/from16 v33, v7

    move-object v2, v10

    move-object v7, v13

    move-object v3, v14

    .end local v2    # "type":I
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v5    # "isRoundedCornerOverlay":Z
    .restart local v11    # "type":I
    .restart local v23    # "isRoundedCornerOverlay":Z
    .restart local v29    # "callingPid":I
    .restart local v36    # "callingUid":I
    :goto_9cc
    :try_start_9cc
    monitor-exit v33
    :try_end_9cd
    .catchall {:try_start_9cc .. :try_end_9cd} :catchall_9d1

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_9d1
    move-exception v0

    goto :goto_9cc
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 5015
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5016
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5017
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5018
    return-void

    .line 5017
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public addWindowToken(Landroid/os/IBinder;II)V
    .registers 11
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "displayId"    # I

    .line 3027
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->addWindowTokenWithOptions(Landroid/os/IBinder;IILandroid/os/Bundle;Ljava/lang/String;Z)I

    .line 3029
    return-void
.end method

.method public addWindowTokenWithOptions(Landroid/os/IBinder;IILandroid/os/Bundle;Ljava/lang/String;)I
    .registers 14
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "displayId"    # I
    .param p4, "options"    # Landroid/os/Bundle;
    .param p5, "packageName"    # Ljava/lang/String;

    .line 3034
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->tokenCountExceed()Z

    move-result v0

    if-eqz v0, :cond_9

    .line 3035
    const/16 v0, -0xc

    return v0

    .line 3037
    :cond_9
    const/4 v7, 0x1

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->addWindowTokenWithOptions(Landroid/os/IBinder;IILandroid/os/Bundle;Ljava/lang/String;Z)I

    move-result v0

    return v0
.end method

.method public applyMagnificationSpecLocked(ILandroid/view/MagnificationSpec;)V
    .registers 4
    .param p1, "displayId"    # I
    .param p2, "spec"    # Landroid/view/MagnificationSpec;

    .line 9203
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9204
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_b

    .line 9205
    invoke-virtual {v0, p2}, Lcom/android/server/wm/DisplayContent;->applyMagnificationSpec(Landroid/view/MagnificationSpec;)V

    .line 9207
    :cond_b
    return-void
.end method

.method cancelRecentsAnimation(ILjava/lang/String;)V
    .registers 4
    .param p1, "reorderMode"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .line 3258
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v0, :cond_7

    .line 3261
    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RecentsAnimationController;->cancelAnimation(ILjava/lang/String;)V

    .line 3263
    :cond_7
    return-void
.end method

.method public changeDisplayScale(FFFZLandroid/view/IInputFilter;)V
    .registers 13
    .param p1, "scale"    # F
    .param p2, "offsetX"    # F
    .param p3, "offsetY"    # F
    .param p4, "registerInput"    # Z
    .param p5, "filter"    # Landroid/view/IInputFilter;

    .line 10127
    const-string v0, "android.permission.WRITE_SECURE_SETTINGS"

    const-string v1, "changeDisplayScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 10132
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    move v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move-object v6, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerServiceExt;->changeDisplayScale(FFFZLandroid/view/IInputFilter;)V

    .line 10134
    return-void

    .line 10129
    :cond_15
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires WRITE SECURE SYSTEM SETTING permission."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 16
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .line 3012
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    const/4 v2, 0x1

    if-ne v0, v1, :cond_c

    .line 3013
    return v2

    .line 3016
    :cond_c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_15

    .line 3018
    return v2

    .line 3020
    :cond_15
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_4d

    invoke-static {p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    int-to-long v3, v3

    .local v3, "protoLogParam1":J
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    int-to-long v5, v5

    .local v5, "protoLogParam2":J
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam3":Ljava/lang/String;
    sget-object v8, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v9, 0x5d35029b

    const/16 v10, 0x14

    const/4 v11, 0x4

    new-array v11, v11, [Ljava/lang/Object;

    aput-object v0, v11, v1

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v11, v2

    const/4 v2, 0x2

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v11, v2

    const/4 v2, 0x3

    aput-object v7, v11, v2

    const-string v2, "Permission Denial: %s from pid=%d, uid=%d requires %s"

    invoke-static {v8, v9, v10, v2, v11}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3022
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .end local v3    # "protoLogParam1":J
    .end local v5    # "protoLogParam2":J
    .end local v7    # "protoLogParam3":Ljava/lang/String;
    :cond_4d
    return v1
.end method

.method checkDrawnWindowsLocked()V
    .registers 3

    .line 6207
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_9

    .line 6208
    return-void

    .line 6210
    :cond_9
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallbacks:Ljava/util/HashMap;

    new-instance v1, Lcom/android/server/wm/-$$Lambda$WindowManagerService$mtQmfigNXJ1YjHL9uPPFrPO_hzQ;

    invoke-direct {v1, p0}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$mtQmfigNXJ1YjHL9uPPFrPO_hzQ;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->forEach(Ljava/util/function/BiConsumer;)V

    .line 6236
    return-void
.end method

.method cleanupRecentsAnimation(I)V
    .registers 4
    .param p1, "reorderMode"    # I

    .line 3266
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    if-eqz v0, :cond_15

    .line 3267
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 3268
    .local v0, "controller":Lcom/android/server/wm/RecentsAnimationController;
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 3269
    invoke-virtual {v0, p1}, Lcom/android/server/wm/RecentsAnimationController;->cleanupAnimation(I)V

    .line 3271
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->updateBooster()V

    .line 3273
    .end local v0    # "controller":Lcom/android/server/wm/RecentsAnimationController;
    :cond_15
    return-void
.end method

.method public clearForcedDisplayDensityForUser(II)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "userId"    # I

    .line 6083
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_5f

    .line 6088
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 6089
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v7, 0x0

    .line 6088
    const-string v6, "clearForcedDisplayDensityForUser"

    move v3, p2

    invoke-static/range {v1 .. v7}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 6091
    .local v0, "callingUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 6093
    .local v1, "ident":J
    :try_start_20
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_4e

    :try_start_23
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6094
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 6095
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_33

    .line 6096
    iget v5, v4, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    invoke-virtual {v4, v5, v0}, Lcom/android/server/wm/DisplayContent;->setForcedDensity(II)V

    .line 6099
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_33
    monitor-exit v3
    :try_end_34
    .catchall {:try_start_23 .. :try_end_34} :catchall_48

    :try_start_34
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_37
    .catchall {:try_start_34 .. :try_end_37} :catchall_4e

    .line 6101
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6104
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v8, -0x1

    const/4 v9, -0x1

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, -0x1

    move v6, p1

    move v7, p2

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 6108
    nop

    .line 6109
    return-void

    .line 6099
    :catchall_48
    move-exception v4

    :try_start_49
    monitor-exit v3
    :try_end_4a
    .catchall {:try_start_49 .. :try_end_4a} :catchall_48

    :try_start_4a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "callingUserId":I
    .end local v1    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "userId":I
    throw v4
    :try_end_4e
    .catchall {:try_start_4a .. :try_end_4e} :catchall_4e

    .line 6101
    .restart local v0    # "callingUserId":I
    .restart local v1    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "userId":I
    :catchall_4e
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6104
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v7, -0x1

    const/4 v8, -0x1

    const/4 v9, -0x1

    const/4 v10, 0x0

    const/4 v11, -0x1

    move v5, p1

    move v6, p2

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 6108
    throw v3

    .line 6085
    .end local v0    # "callingUserId":I
    .end local v1    # "ident":J
    :cond_5f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clearForcedDisplaySize(I)V
    .registers 14
    .param p1, "displayId"    # I

    .line 6000
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4f

    .line 6005
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6007
    .local v0, "ident":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_3e

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6008
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 6009
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_23

    .line 6015
    iget v4, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v5, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/DisplayContent;->setForcedSize(II)V

    .line 6018
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_23
    monitor-exit v2
    :try_end_24
    .catchall {:try_start_11 .. :try_end_24} :catchall_38

    :try_start_24
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_27
    .catchall {:try_start_24 .. :try_end_27} :catchall_3e

    .line 6020
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6023
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v6, -0x1

    const/4 v7, -0x1

    const/4 v8, -0x1

    const/4 v9, -0x1

    const/4 v10, 0x0

    const/4 v11, -0x1

    move v5, p1

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 6027
    nop

    .line 6028
    return-void

    .line 6018
    :catchall_38
    move-exception v3

    :try_start_39
    monitor-exit v2
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    :try_start_3a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3
    :try_end_3e
    .catchall {:try_start_3a .. :try_end_3e} :catchall_3e

    .line 6020
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_3e
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6023
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v5, -0x1

    const/4 v6, -0x1

    const/4 v7, -0x1

    const/4 v8, -0x1

    const/4 v9, 0x0

    const/4 v10, -0x1

    move v4, p1

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 6027
    throw v2

    .line 6002
    .end local v0    # "ident":J
    :cond_4f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clearForcedDisplaySizeDensity(I)V
    .registers 3
    .param p1, "displayId"    # I

    .line 9769
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowManagerServiceExt;->clearForcedDisplaySizeDensity(I)V

    .line 9771
    return-void
.end method

.method public clearKeyCustomizeEvent(IIZZ)V
    .registers 7
    .param p1, "priority"    # I
    .param p2, "press"    # I
    .param p3, "isClearAll"    # Z
    .param p4, "restore"    # Z

    .line 10363
    const-string v0, "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

    const-string v1, "clearKeyCustomizeEvent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_12

    .line 10367
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2, p3, p4}, Lcom/android/server/policy/WindowManagerPolicyExt;->clearKeyCustomizeEvent(IIZZ)V

    .line 10368
    return-void

    .line 10365
    :cond_12
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires ACCESS_KEY_CUSTOMIZE_INFO permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clearKeyCustomizeEventByKeyCode(IIZ)V
    .registers 6
    .param p1, "priority"    # I
    .param p2, "keyCode"    # I
    .param p3, "restore"    # Z

    .line 10372
    const-string v0, "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

    const-string v1, "clearKeyCustomizeEvent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_12

    .line 10376
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2, p3}, Lcom/android/server/policy/WindowManagerPolicyExt;->clearKeyCustomizeEventByKeyCode(IIZ)V

    .line 10377
    return-void

    .line 10374
    :cond_12
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires ACCESS_KEY_CUSTOMIZE_INFO permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;

    .line 6960
    const-string v0, "android.permission.FRAME_STATS"

    const-string v1, "clearWindowContentFrameStats()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3a

    .line 6964
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6965
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 6966
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    if-nez v1, :cond_20

    .line 6967
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_d .. :try_end_1c} :catchall_34

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6969
    :cond_20
    :try_start_20
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    .line 6970
    .local v3, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v3, :cond_2b

    .line 6971
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_20 .. :try_end_27} :catchall_34

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6973
    :cond_2b
    :try_start_2b
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfaceController;->clearWindowContentFrameStats()Z

    move-result v2

    monitor-exit v0
    :try_end_30
    .catchall {:try_start_2b .. :try_end_30} :catchall_34

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6974
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    .end local v3    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    :catchall_34
    move-exception v1

    :try_start_35
    monitor-exit v0
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_34

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6962
    :cond_3a
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FRAME_STATS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method closeSurfaceTransaction(Ljava/lang/String;)V
    .registers 5
    .param p1, "where"    # Ljava/lang/String;

    .line 1144
    const-wide/16 v0, 0x20

    :try_start_2
    const-string v2, "closeSurfaceTransaction"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 1145
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 1146
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowTracing;->logState(Ljava/lang/String;)V
    :try_end_f
    .catchall {:try_start_2 .. :try_end_f} :catchall_14

    .line 1148
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1149
    nop

    .line 1150
    return-void

    .line 1148
    :catchall_14
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1149
    throw v2
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .registers 4
    .param p1, "reason"    # Ljava/lang/String;

    .line 3546
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3547
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->closeSystemDialogs(Ljava/lang/String;)V

    .line 3548
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3549
    return-void

    .line 3548
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public closeSystemDialogsInDisplay(Ljava/lang/String;I)V
    .registers 5
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "displayId"    # I

    .line 3554
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3555
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->closeSystemDialogs(Ljava/lang/String;I)V

    .line 3556
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3557
    return-void

    .line 3556
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public computeNewConfiguration(I)Landroid/content/res/Configuration;
    .registers 4
    .param p1, "displayId"    # I

    .line 5068
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5069
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked(I)Landroid/content/res/Configuration;

    move-result-object v1

    monitor-exit v0
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 5070
    :catchall_f
    move-exception v1

    :try_start_10
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_10 .. :try_end_11} :catchall_f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public createInputConsumer(Landroid/os/IBinder;Ljava/lang/String;ILandroid/view/InputChannel;)V
    .registers 13
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "displayId"    # I
    .param p4, "inputChannel"    # Landroid/view/InputChannel;

    .line 6882
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isCallerRecents(I)Z

    move-result v0

    if-nez v0, :cond_1f

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 6883
    const-string v1, "android.permission.INPUT_CONSUMER"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_17

    goto :goto_1f

    .line 6884
    :cond_17
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "createInputConsumer requires INPUT_CONSUMER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6887
    :cond_1f
    :goto_1f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_22
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6888
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p3}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6889
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_3f

    .line 6890
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v2

    .line 6891
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v7

    .line 6890
    move-object v3, p1

    move-object v4, p2

    move-object v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/InputMonitor;->createInputConsumer(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/InputChannel;ILandroid/os/UserHandle;)V

    .line 6893
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :cond_3f
    monitor-exit v0
    :try_end_40
    .catchall {:try_start_22 .. :try_end_40} :catchall_44

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6894
    return-void

    .line 6893
    :catchall_44
    move-exception v1

    :try_start_45
    monitor-exit v0
    :try_end_46
    .catchall {:try_start_45 .. :try_end_46} :catchall_44

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method createWatermark()V
    .registers 14

    .line 6724
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v0, :cond_5

    .line 6725
    return-void

    .line 6728
    :cond_5
    new-instance v0, Ljava/io/File;

    const-string v1, "/system/etc/setup.conf"

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 6729
    .local v0, "file":Ljava/io/File;
    const/4 v1, 0x0

    .line 6730
    .local v1, "in":Ljava/io/FileInputStream;
    const/4 v2, 0x0

    .line 6732
    .local v2, "ind":Ljava/io/DataInputStream;
    :try_start_e
    new-instance v3, Ljava/io/FileInputStream;

    invoke-direct {v3, v0}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    move-object v1, v3

    .line 6733
    new-instance v3, Ljava/io/DataInputStream;

    invoke-direct {v3, v1}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    move-object v2, v3

    .line 6734
    invoke-virtual {v2}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    move-result-object v3

    .line 6735
    .local v3, "line":Ljava/lang/String;
    if-eqz v3, :cond_45

    .line 6736
    const-string v4, "%"

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    .line 6737
    .local v4, "toks":[Ljava/lang/String;
    if-eqz v4, :cond_45

    array-length v5, v4

    if-lez v5, :cond_45

    .line 6739
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    move-object v11, v5

    .line 6740
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    new-instance v12, Lcom/android/server/wm/Watermark;

    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mSurfaceFactory:Ljava/util/function/Supplier;

    iget-object v8, v11, Lcom/android/server/wm/DisplayContent;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    move-object v5, v12

    move-object v7, v11

    move-object v9, v4

    invoke-direct/range {v5 .. v10}, Lcom/android/server/wm/Watermark;-><init>(Ljava/util/function/Supplier;Lcom/android/server/wm/DisplayContent;Landroid/util/DisplayMetrics;[Ljava/lang/String;Landroid/view/SurfaceControl$Transaction;)V

    iput-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    .line 6742
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v5}, Landroid/view/SurfaceControl$Transaction;->apply()V
    :try_end_45
    .catch Ljava/io/FileNotFoundException; {:try_start_e .. :try_end_45} :catch_6d
    .catch Ljava/io/IOException; {:try_start_e .. :try_end_45} :catch_5e
    .catchall {:try_start_e .. :try_end_45} :catchall_4c

    .line 6748
    .end local v3    # "line":Ljava/lang/String;
    .end local v4    # "toks":[Ljava/lang/String;
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_45
    nop

    .line 6750
    :try_start_46
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_49
    .catch Ljava/io/IOException; {:try_start_46 .. :try_end_49} :catch_4a

    .line 6752
    :goto_49
    goto :goto_7a

    .line 6751
    :catch_4a
    move-exception v3

    goto :goto_49

    .line 6748
    :catchall_4c
    move-exception v3

    if-nez v2, :cond_57

    .line 6753
    if-eqz v1, :cond_5d

    .line 6755
    :try_start_51
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_54
    .catch Ljava/io/IOException; {:try_start_51 .. :try_end_54} :catch_55

    .line 6757
    goto :goto_5d

    .line 6756
    :catch_55
    move-exception v4

    goto :goto_5d

    .line 6750
    :cond_57
    :try_start_57
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_5a
    .catch Ljava/io/IOException; {:try_start_57 .. :try_end_5a} :catch_5b

    .line 6752
    :goto_5a
    goto :goto_5d

    .line 6751
    :catch_5b
    move-exception v4

    goto :goto_5a

    .line 6759
    :cond_5d
    :goto_5d
    throw v3

    .line 6746
    :catch_5e
    move-exception v3

    .line 6748
    if-eqz v2, :cond_65

    .line 6750
    :try_start_61
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_64
    .catch Ljava/io/IOException; {:try_start_61 .. :try_end_64} :catch_4a

    goto :goto_49

    .line 6753
    :cond_65
    if-eqz v1, :cond_7a

    .line 6755
    :try_start_67
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_6a
    .catch Ljava/io/IOException; {:try_start_67 .. :try_end_6a} :catch_6b

    .line 6757
    :goto_6a
    goto :goto_7a

    .line 6756
    :catch_6b
    move-exception v3

    goto :goto_6a

    .line 6745
    :catch_6d
    move-exception v3

    .line 6748
    if-eqz v2, :cond_74

    .line 6750
    :try_start_70
    invoke-virtual {v2}, Ljava/io/DataInputStream;->close()V
    :try_end_73
    .catch Ljava/io/IOException; {:try_start_70 .. :try_end_73} :catch_4a

    goto :goto_49

    .line 6753
    :cond_74
    if-eqz v1, :cond_7a

    .line 6755
    :try_start_76
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_79
    .catch Ljava/io/IOException; {:try_start_76 .. :try_end_79} :catch_6b

    goto :goto_6a

    .line 6760
    :cond_7a
    :goto_7a
    return-void
.end method

.method public destroyInputConsumer(Ljava/lang/String;I)Z
    .registers 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "displayId"    # I

    .line 6898
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isCallerRecents(I)Z

    move-result v0

    if-nez v0, :cond_1f

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 6899
    const-string v1, "android.permission.INPUT_CONSUMER"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_17

    goto :goto_1f

    .line 6900
    :cond_17
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "destroyInputConsumer requires INPUT_CONSUMER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6903
    :cond_1f
    :goto_1f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_22
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6904
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6905
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_3a

    .line 6906
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/wm/InputMonitor;->destroyInputConsumer(Ljava/lang/String;)Z

    move-result v2

    monitor-exit v0
    :try_end_36
    .catchall {:try_start_22 .. :try_end_36} :catchall_40

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6908
    :cond_3a
    const/4 v2, 0x0

    :try_start_3b
    monitor-exit v0
    :try_end_3c
    .catchall {:try_start_3b .. :try_end_3c} :catchall_40

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6909
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_40
    move-exception v1

    :try_start_41
    monitor-exit v0
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method destroyPreservedSurfaceLocked()V
    .registers 4

    .line 5840
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_8
    if-ltz v0, :cond_1a

    .line 5841
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 5842
    .local v1, "w":Lcom/android/server/wm/WindowState;
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->destroyPreservedSurfaceLocked()V

    .line 5840
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    add-int/lit8 v0, v0, -0x1

    goto :goto_8

    .line 5844
    .end local v0    # "i":I
    :cond_1a
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 5845
    return-void
.end method

.method public detectSafeMode()Z
    .registers 26

    .line 5145
    move-object/from16 v1, p0

    const-string/jumbo v0, "ro.boot_recovery"

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    const-wide/16 v3, 0x3e8

    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/InputManagerCallback;->waitForInputDevicesReady(J)Z

    move-result v2

    const/4 v3, 0x1

    const/4 v4, 0x0

    if-nez v2, :cond_29

    .line 5147
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_29

    const-wide/16 v5, 0x3e8

    .local v5, "protoLogParam0":J
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x69c73085

    new-array v8, v3, [Ljava/lang/Object;

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v9

    aput-object v9, v8, v4

    const-string v9, "Devices still not ready after waiting %d milliseconds before attempting to detect safe mode."

    invoke-static {v2, v7, v3, v9, v8}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5152
    .end local v5    # "protoLogParam0":J
    :cond_29
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 5153
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    .line 5152
    const-string/jumbo v5, "safe_boot_disallowed"

    invoke-static {v2, v5, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_39

    .line 5154
    return v4

    .line 5157
    :cond_39
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v5, 0x52

    const/4 v6, -0x1

    const/16 v7, -0x100

    invoke-virtual {v2, v6, v7, v5}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v2

    .line 5159
    .local v2, "menuState":I
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v8, 0x2f

    invoke-virtual {v5, v6, v7, v8}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v5

    .line 5160
    .local v5, "sState":I
    iget-object v8, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x201

    const/16 v10, 0x17

    invoke-virtual {v8, v6, v9, v10}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v15

    .line 5162
    .local v15, "dpadState":I
    iget-object v8, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const v9, 0x10004

    const/16 v10, 0x110

    invoke-virtual {v8, v6, v9, v10}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    move-result v14

    .line 5164
    .local v14, "trackballState":I
    iget-object v8, v1, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x19

    invoke-virtual {v8, v6, v7, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v6

    .line 5166
    .local v6, "volumeDownState":I
    if-gtz v2, :cond_76

    if-gtz v5, :cond_76

    if-gtz v15, :cond_76

    if-gtz v14, :cond_76

    if-lez v6, :cond_74

    goto :goto_76

    :cond_74
    move v7, v4

    goto :goto_77

    :cond_76
    :goto_76
    move v7, v3

    :goto_77
    iput-boolean v7, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 5170
    new-instance v7, Ljava/lang/StringBuilder;

    const/16 v8, 0x80

    invoke-direct {v7, v8}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 5171
    .local v7, "safeModeProperty":Ljava/lang/StringBuilder;
    nop

    .line 5172
    const-string/jumbo v8, "persist.sys.safemode"

    invoke-static {v8, v4}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v13

    .line 5173
    .local v13, "rebootSafeProperty":I
    nop

    .line 5174
    const-string/jumbo v9, "ro.sys.safemode"

    invoke-static {v9, v4}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v12

    .line 5183
    .local v12, "roSafeProperty":I
    if-eqz v13, :cond_94

    move v10, v3

    goto :goto_95

    :cond_94
    move v10, v4

    .line 5184
    .local v10, "isRebootSafePropertySet":Z
    :goto_95
    if-eqz v12, :cond_99

    move v11, v3

    goto :goto_9a

    :cond_99
    move v11, v4

    .line 5185
    .local v11, "isRoSafePropertySet":Z
    :goto_9a
    const-string v3, ""

    if-nez v10, :cond_c9

    if-eqz v11, :cond_a1

    goto :goto_c9

    .line 5204
    :cond_a1
    nop

    .line 5205
    const/4 v8, 0x0

    :try_start_a3
    invoke-static {v0, v8}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v4

    const/4 v8, 0x3

    if-ne v4, v8, :cond_b6

    .line 5206
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5207
    const-string v0, "[3]"

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5208
    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    goto :goto_10c

    .line 5209
    :cond_b6
    const-string v0, "emergency"

    const-string/jumbo v4, "persist.sys.emergency_reset"

    .line 5210
    invoke-static {v4, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_10c

    .line 5211
    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z
    :try_end_c8
    .catch Ljava/lang/IllegalArgumentException; {:try_start_a3 .. :try_end_c8} :catch_10d

    goto :goto_10c

    .line 5187
    :cond_c9
    :goto_c9
    const-string v0, "]"

    const-string v4, "["

    if-eqz v10, :cond_ea

    .line 5188
    :try_start_cf
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5189
    move/from16 v18, v10

    .end local v10    # "isRebootSafePropertySet":Z
    .local v18, "isRebootSafePropertySet":Z
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_ec

    .line 5187
    .end local v18    # "isRebootSafePropertySet":Z
    .restart local v10    # "isRebootSafePropertySet":Z
    :cond_ea
    move/from16 v18, v10

    .line 5192
    .end local v10    # "isRebootSafePropertySet":Z
    .restart local v18    # "isRebootSafePropertySet":Z
    :goto_ec
    if-eqz v11, :cond_106

    .line 5193
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5194
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5198
    :cond_106
    const/4 v4, 0x1

    iput-boolean v4, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 5199
    invoke-static {v8, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_10c
    .catch Ljava/lang/IllegalArgumentException; {:try_start_cf .. :try_end_10c} :catch_10d

    .line 5215
    .end local v11    # "isRoSafePropertySet":Z
    .end local v18    # "isRebootSafePropertySet":Z
    :cond_10c
    :goto_10c
    goto :goto_10e

    .line 5214
    :catch_10d
    move-exception v0

    .line 5216
    :goto_10e
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    if-eqz v0, :cond_175

    .line 5218
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_156

    int-to-long v3, v2

    .local v3, "protoLogParam0":J
    int-to-long v10, v5

    move-object/from16 v18, v7

    .end local v7    # "safeModeProperty":Ljava/lang/StringBuilder;
    .local v10, "protoLogParam1":J
    .local v18, "safeModeProperty":Ljava/lang/StringBuilder;
    int-to-long v7, v15

    move/from16 v19, v5

    move/from16 v20, v6

    .end local v5    # "sState":I
    .end local v6    # "volumeDownState":I
    .local v7, "protoLogParam2":J
    .local v19, "sState":I
    .local v20, "volumeDownState":I
    int-to-long v5, v14

    .local v5, "protoLogParam3":J
    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    move/from16 v21, v13

    .end local v13    # "rebootSafeProperty":I
    .local v21, "rebootSafeProperty":I
    const/4 v13, 0x4

    new-array v13, v13, [Ljava/lang/Object;

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v24

    const/16 v17, 0x0

    aput-object v24, v13, v17

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v17

    const/16 v16, 0x1

    aput-object v17, v13, v16

    const/16 v16, 0x2

    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v17

    aput-object v17, v13, v16

    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    const/16 v17, 0x3

    aput-object v16, v13, v17

    move-wide/from16 v16, v3

    .end local v3    # "protoLogParam0":J
    .local v16, "protoLogParam0":J
    const-string v3, "SAFE MODE ENABLED (menu=%d s=%d dpad=%d trackball=%d)"

    move-wide/from16 v22, v5

    const v4, -0x5602e201

    const/16 v5, 0x55

    .end local v5    # "protoLogParam3":J
    .local v22, "protoLogParam3":J
    invoke-static {v0, v4, v5, v3, v13}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_15e

    .end local v10    # "protoLogParam1":J
    .end local v16    # "protoLogParam0":J
    .end local v18    # "safeModeProperty":Ljava/lang/StringBuilder;
    .end local v19    # "sState":I
    .end local v20    # "volumeDownState":I
    .end local v21    # "rebootSafeProperty":I
    .end local v22    # "protoLogParam3":J
    .local v5, "sState":I
    .restart local v6    # "volumeDownState":I
    .local v7, "safeModeProperty":Ljava/lang/StringBuilder;
    .restart local v13    # "rebootSafeProperty":I
    :cond_156
    move/from16 v19, v5

    move/from16 v20, v6

    move-object/from16 v18, v7

    move/from16 v21, v13

    .line 5224
    .end local v5    # "sState":I
    .end local v6    # "volumeDownState":I
    .end local v7    # "safeModeProperty":Ljava/lang/StringBuilder;
    .end local v13    # "rebootSafeProperty":I
    .restart local v18    # "safeModeProperty":Ljava/lang/StringBuilder;
    .restart local v19    # "sState":I
    .restart local v20    # "volumeDownState":I
    .restart local v21    # "rebootSafeProperty":I
    :goto_15e
    if-nez v12, :cond_165

    .line 5226
    const-string v0, "1"

    invoke-static {v9, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 5231
    :cond_165
    iget-object v8, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    move v9, v2

    move/from16 v10, v19

    move v11, v15

    move v3, v12

    .end local v12    # "roSafeProperty":I
    .local v3, "roSafeProperty":I
    move v12, v14

    move/from16 v4, v21

    .end local v21    # "rebootSafeProperty":I
    .local v4, "rebootSafeProperty":I
    move/from16 v13, v20

    invoke-virtual/range {v8 .. v13}, Lcom/android/server/wm/WindowManagerServiceExt;->updateSafeModeReason(IIIII)V

    goto :goto_18f

    .line 5236
    .end local v3    # "roSafeProperty":I
    .end local v4    # "rebootSafeProperty":I
    .end local v18    # "safeModeProperty":Ljava/lang/StringBuilder;
    .end local v19    # "sState":I
    .end local v20    # "volumeDownState":I
    .restart local v5    # "sState":I
    .restart local v6    # "volumeDownState":I
    .restart local v7    # "safeModeProperty":Ljava/lang/StringBuilder;
    .restart local v12    # "roSafeProperty":I
    .restart local v13    # "rebootSafeProperty":I
    :cond_175
    move/from16 v19, v5

    move/from16 v20, v6

    move-object/from16 v18, v7

    move v3, v12

    move v4, v13

    .end local v5    # "sState":I
    .end local v6    # "volumeDownState":I
    .end local v7    # "safeModeProperty":Ljava/lang/StringBuilder;
    .end local v12    # "roSafeProperty":I
    .end local v13    # "rebootSafeProperty":I
    .restart local v3    # "roSafeProperty":I
    .restart local v4    # "rebootSafeProperty":I
    .restart local v18    # "safeModeProperty":Ljava/lang/StringBuilder;
    .restart local v19    # "sState":I
    .restart local v20    # "volumeDownState":I
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_18f

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, 0x6f44b0ba

    const/4 v6, 0x0

    check-cast v6, [Ljava/lang/Object;

    const-string v7, "SAFE MODE not enabled"

    const/4 v8, 0x0

    invoke-static {v0, v5, v8, v7, v6}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 5238
    :cond_18f
    :goto_18f
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    iget-boolean v5, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    invoke-interface {v0, v5}, Lcom/android/server/policy/WindowManagerPolicy;->setSafeMode(Z)V

    .line 5241
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    .line 5242
    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 5241
    move v9, v2

    move/from16 v10, v19

    move v11, v15

    move v12, v14

    move/from16 v13, v20

    move v5, v14

    .end local v14    # "trackballState":I
    .local v5, "trackballState":I
    move-object v14, v0

    invoke-interface/range {v8 .. v14}, Lcom/android/server/policy/WindowManagerPolicyExt;->setSafeModeReason(IIIIILjava/lang/String;)V

    .line 5245
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v0
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;I)V
    .registers 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .line 3428
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "disableKeyguard"

    const/4 v7, 0x0

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Landroid/app/ActivityManagerInternal;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 3430
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_35

    .line 3434
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3435
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 3437
    .local v1, "origIdentity":J
    :try_start_26
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v3, p1, p2, v0, p3}, Lcom/android/server/wm/KeyguardDisableHandler;->disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;II)V
    :try_end_2b
    .catchall {:try_start_26 .. :try_end_2b} :catchall_30

    .line 3439
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3440
    nop

    .line 3441
    return-void

    .line 3439
    :catchall_30
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3440
    throw v3

    .line 3432
    .end local v0    # "callingUid":I
    .end local v1    # "origIdentity":J
    :cond_35
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public disableNonVrUi(Z)V
    .registers 7
    .param p1, "disable"    # Z

    .line 9152
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9154
    const/4 v1, 0x1

    if-nez p1, :cond_b

    move v2, v1

    goto :goto_c

    :cond_b
    const/4 v2, 0x0

    .line 9155
    .local v2, "showAlertWindowNotifications":Z
    :goto_c
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    if-ne v2, v3, :cond_15

    .line 9156
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 9158
    :cond_15
    :try_start_15
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    .line 9160
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    sub-int/2addr v3, v1

    .local v3, "i":I
    :goto_1e
    if-ltz v3, :cond_30

    .line 9161
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v1, v3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 9162
    .local v1, "s":Lcom/android/server/wm/Session;
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowAlertWindowNotifications:Z

    invoke-virtual {v1, v4}, Lcom/android/server/wm/Session;->setShowingAlertWindowNotificationAllowed(Z)V

    .line 9160
    .end local v1    # "s":Lcom/android/server/wm/Session;
    add-int/lit8 v3, v3, -0x1

    goto :goto_1e

    .line 9164
    .end local v2    # "showAlertWindowNotifications":Z
    .end local v3    # "i":I
    :cond_30
    monitor-exit v0
    :try_end_31
    .catchall {:try_start_15 .. :try_end_31} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9165
    return-void

    .line 9164
    :catchall_35
    move-exception v1

    :try_start_36
    monitor-exit v0
    :try_end_37
    .catchall {:try_start_36 .. :try_end_37} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method disableTransientBars(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .line 9964
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9965
    const/4 v1, 0x1

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 9966
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_10

    .line 9967
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->disableTransientBars()V

    .line 9969
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_10
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_15

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9970
    return-void

    .line 9969
    :catchall_15
    move-exception v1

    :try_start_16
    monitor-exit v0
    :try_end_17
    .catchall {:try_start_16 .. :try_end_17} :catchall_15

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public dismissKeyguard(Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V
    .registers 5
    .param p1, "callback"    # Lcom/android/internal/policy/IKeyguardDismissCallback;
    .param p2, "message"    # Ljava/lang/CharSequence;

    .line 3514
    const-string v0, "android.permission.CONTROL_KEYGUARD"

    const-string v1, "dismissKeyguard"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_20

    .line 3517
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3518
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1, p2}, Lcom/android/server/policy/WindowManagerPolicy;->dismissKeyguardLw(Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V

    .line 3519
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_d .. :try_end_16} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3520
    return-void

    .line 3519
    :catchall_1a
    move-exception v1

    :try_start_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_1b .. :try_end_1c} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3515
    :cond_20
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires CONTROL_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .registers 4
    .param p1, "session"    # Lcom/android/server/wm/Session;

    .line 3718
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x22

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 3719
    return-void
.end method

.method public dispatchSPenGestureEvent(II[Landroid/view/InputEvent;Landroid/os/IBinder;)V
    .registers 6
    .param p1, "targetX"    # I
    .param p2, "targetY"    # I
    .param p3, "inputEvents"    # [Landroid/view/InputEvent;
    .param p4, "topToken"    # Landroid/os/IBinder;

    .line 9827
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_SPEN:Z

    if-eqz v0, :cond_9

    .line 9828
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowManagerServiceExt;->dispatchSPenGestureEvent(II[Landroid/view/InputEvent;Landroid/os/IBinder;)V

    .line 9830
    :cond_9
    return-void
.end method

.method public dispatchSmartClipRemoteRequest(IILcom/samsung/android/content/smartclip/SmartClipRemoteRequestInfo;Landroid/os/IBinder;)V
    .registers 7
    .param p1, "targetX"    # I
    .param p2, "targetY"    # I
    .param p3, "request"    # Lcom/samsung/android/content/smartclip/SmartClipRemoteRequestInfo;
    .param p4, "topToken"    # Landroid/os/IBinder;

    .line 9986
    const-string v0, "WindowManager"

    const-string v1, "dispatchSmartClipRemoteRequest, flag : true"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9988
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowManagerServiceExt;->dispatchSmartClipRemoteRequest(IILcom/samsung/android/content/smartclip/SmartClipRemoteRequestInfo;Landroid/os/IBinder;)V

    .line 9990
    return-void
.end method

.method public displayReady()V
    .registers 4

    .line 5249
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5250
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mMaxUiWidth:I

    if-lez v1, :cond_14

    .line 5251
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v2, Lcom/android/server/wm/-$$Lambda$WindowManagerService$FxYFJrJ2ADBvPh_rzG_XPZ8-EQ0;

    invoke-direct {v2, p0}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$FxYFJrJ2ADBvPh_rzG_XPZ8-EQ0;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 5253
    :cond_14
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->applyForcedPropertiesForDefaultDisplay()Z

    .line 5254
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowAnimator;->ready()V

    .line 5255
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    .line 5258
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v2, Lcom/android/server/wm/-$$Lambda$-hxY8aP13MItXHILC9K9vyNQgr4;->INSTANCE:Lcom/android/server/wm/-$$Lambda$-hxY8aP13MItXHILC9K9vyNQgr4;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 5259
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.hardware.touchscreen"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    .line 5263
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v2, Lcom/android/server/wm/-$$Lambda$WindowManagerService$jxwWXbNzUd-qRPTxPD_4xrV9_us;->INSTANCE:Lcom/android/server/wm/-$$Lambda$WindowManagerService$jxwWXbNzUd-qRPTxPD_4xrV9_us;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 5270
    monitor-exit v0
    :try_end_3c
    .catchall {:try_start_3 .. :try_end_3c} :catchall_48

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5273
    :try_start_3f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mActivityTaskManager:Landroid/app/IActivityTaskManager;

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Landroid/app/IActivityTaskManager;->updateConfiguration(Landroid/content/res/Configuration;)Z
    :try_end_45
    .catch Landroid/os/RemoteException; {:try_start_3f .. :try_end_45} :catch_46

    .line 5275
    goto :goto_47

    .line 5274
    :catch_46
    move-exception v0

    .line 5276
    :goto_47
    return-void

    .line 5270
    :catchall_48
    move-exception v1

    :try_start_49
    monitor-exit v0
    :try_end_4a
    .catchall {:try_start_49 .. :try_end_4a} :catchall_48

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public dontOverrideDisplayInfo(I)V
    .registers 8
    .param p1, "displayId"    # I

    .line 8058
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8060
    .local v0, "token":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_30

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8061
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 8062
    .local v4, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_22

    .line 8070
    const/4 v5, 0x0

    iput-boolean v5, v4, Lcom/android/server/wm/DisplayContent;->mShouldOverrideDisplayConfiguration:Z

    .line 8071
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v5, p1, v3}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 8073
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_7 .. :try_end_1a} :catchall_2a

    :try_start_1a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_30

    .line 8075
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8076
    nop

    .line 8077
    return-void

    .line 8063
    .restart local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_22
    :try_start_22
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v5, "Trying to configure a non existent display."

    invoke-direct {v3, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3

    .line 8073
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_2a
    move-exception v3

    monitor-exit v2
    :try_end_2c
    .catchall {:try_start_22 .. :try_end_2c} :catchall_2a

    :try_start_2c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3
    :try_end_30
    .catchall {:try_start_2c .. :try_end_30} :catchall_30

    .line 8075
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_30
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8076
    throw v2
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 5
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 7374
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    invoke-static {v0, p1, p2, p3}, Lcom/android/server/utils/PriorityDump;->dump(Lcom/android/server/utils/PriorityDump$PriorityDumper;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 7375
    return-void
.end method

.method dumpDebugLocked(Landroid/util/proto/ProtoOutputStream;I)V
    .registers 9
    .param p1, "proto"    # Landroid/util/proto/ProtoOutputStream;
    .param p2, "logLevel"    # I

    .line 7051
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    const-wide v1, 0x10b00000001L

    invoke-interface {v0, p1, v1, v2}, Lcom/android/server/policy/WindowManagerPolicy;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 7052
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const-wide v1, 0x10b00000002L

    invoke-virtual {v0, p1, v1, v2, p2}, Lcom/android/server/wm/RootWindowContainer;->dumpDebug(Landroid/util/proto/ProtoOutputStream;JI)V

    .line 7053
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 7054
    .local v0, "topFocusedDisplayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_28

    .line 7055
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    const-wide v2, 0x10b00000003L

    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/WindowState;->writeIdentifierToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 7057
    :cond_28
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_36

    .line 7058
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    const-wide v2, 0x10900000004L

    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/ActivityRecord;->writeNameToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 7060
    :cond_36
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1}, Lcom/android/server/wm/RootWindowContainer;->getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 7061
    .local v1, "imeWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_46

    .line 7062
    const-wide v2, 0x10b00000005L

    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/WindowState;->writeIdentifierToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 7064
    :cond_46
    const-wide v2, 0x10800000006L

    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 7065
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 7066
    .local v2, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    const-wide v3, 0x10500000007L

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v5

    invoke-virtual {p1, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 7067
    const-wide v3, 0x10500000008L

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getLastOrientation()I

    move-result v5

    invoke-virtual {p1, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 7068
    const-wide v3, 0x10500000009L

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    invoke-virtual {p1, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 7075
    return-void
.end method

.method public enableScreenAfterBoot()V
    .registers 15

    .line 3854
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3855
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v2, 0x1

    if-eqz v1, :cond_4f

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v1, "protoLogParam0":Z
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v3, "protoLogParam1":Z
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v4, "protoLogParam2":Z
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v5, "protoLogParam3":Z
    new-instance v6, Ljava/lang/RuntimeException;

    const-string/jumbo v7, "here"

    invoke-direct {v6, v7}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v6}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v6

    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam4":Ljava/lang/String;
    sget-object v7, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v8, -0x7059ccfd

    const/16 v9, 0xff

    const/4 v10, 0x0

    const/4 v11, 0x5

    new-array v11, v11, [Ljava/lang/Object;

    const/4 v12, 0x0

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v13

    aput-object v13, v11, v12

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v11, v2

    const/4 v12, 0x2

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v13

    aput-object v13, v11, v12

    const/4 v12, 0x3

    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v13

    aput-object v13, v11, v12

    const/4 v12, 0x4

    aput-object v6, v11, v12

    invoke-static {v7, v8, v9, v10, v11}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3860
    .end local v1    # "protoLogParam0":Z
    .end local v3    # "protoLogParam1":Z
    .end local v4    # "protoLogParam2":Z
    .end local v5    # "protoLogParam3":Z
    .end local v6    # "protoLogParam4":Ljava/lang/String;
    :cond_4f
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v1, :cond_58

    .line 3861
    monitor-exit v0
    :try_end_54
    .catchall {:try_start_3 .. :try_end_54} :catchall_73

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3863
    :cond_58
    :try_start_58
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 3864
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    .line 3867
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x17

    const-wide/16 v3, 0x7530

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 3868
    monitor-exit v0
    :try_end_67
    .catchall {:try_start_58 .. :try_end_67} :catchall_73

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3870
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->systemBooted()V

    .line 3872
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 3873
    return-void

    .line 3868
    :catchall_73
    move-exception v1

    :try_start_74
    monitor-exit v0
    :try_end_75
    .catchall {:try_start_74 .. :try_end_75} :catchall_73

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public enableScreenIfNeeded()V
    .registers 3

    .line 3877
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3878
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V

    .line 3879
    monitor-exit v0
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3880
    return-void

    .line 3879
    :catchall_e
    move-exception v1

    :try_start_f
    monitor-exit v0
    :try_end_10
    .catchall {:try_start_f .. :try_end_10} :catchall_e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method enableScreenIfNeededLocked()V
    .registers 13

    .line 3883
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    if-eqz v0, :cond_49

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v0, "protoLogParam0":Z
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v1, "protoLogParam1":Z
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v2, "protoLogParam2":Z
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v3, "protoLogParam3":Z
    new-instance v4, Ljava/lang/RuntimeException;

    const-string/jumbo v5, "here"

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam4":Ljava/lang/String;
    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0x20b98437

    const/16 v7, 0xff

    const/4 v8, 0x0

    const/4 v9, 0x5

    new-array v9, v9, [Ljava/lang/Object;

    const/4 v10, 0x0

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x2

    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x3

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x4

    aput-object v4, v9, v10

    invoke-static {v5, v6, v7, v8, v9}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3888
    .end local v0    # "protoLogParam0":Z
    .end local v1    # "protoLogParam1":Z
    .end local v2    # "protoLogParam2":Z
    .end local v3    # "protoLogParam3":Z
    .end local v4    # "protoLogParam4":Ljava/lang/String;
    :cond_49
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_4e

    .line 3889
    return-void

    .line 3891
    :cond_4e
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v0, :cond_57

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_57

    .line 3892
    return-void

    .line 3894
    :cond_57
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x10

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3895
    return-void
.end method

.method enableTransientBars(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .line 9973
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9974
    const/4 v1, 0x1

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 9975
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_10

    .line 9976
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->enableTransientBars()V

    .line 9978
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_10
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_15

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9979
    return-void

    .line 9978
    :catchall_15
    move-exception v1

    :try_start_16
    monitor-exit v0
    :try_end_17
    .catchall {:try_start_16 .. :try_end_17} :catchall_15

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public endProlongedAnimations()V
    .registers 1

    .line 3225
    return-void
.end method

.method public executeAppTransition()V
    .registers 3

    .line 3231
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "executeAppTransition()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_12

    .line 3234
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 3235
    return-void

    .line 3232
    :cond_12
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .registers 4
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    .line 3466
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1f

    .line 3471
    if-eqz p1, :cond_17

    .line 3475
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$10;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$10;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    invoke-interface {v0, v1}, Lcom/android/server/policy/WindowManagerPolicy;->exitKeyguardSecurely(Lcom/android/server/policy/WindowManagerPolicy$OnKeyguardExitResult;)V

    .line 3485
    return-void

    .line 3472
    :cond_17
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callback == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3468
    :cond_1f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/view/SurfaceControl$Transaction;)V
    .registers 16
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "postDrawTransaction"    # Landroid/view/SurfaceControl$Transaction;

    .line 2989
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2991
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_6b

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2992
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 2993
    .local v4, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_FORCE_DEBUG_ADD_REMOVE_enabled:Z

    if-eqz v5, :cond_39

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    if-eqz v4, :cond_20

    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowStateAnimator;->drawStateToString()Ljava/lang/String;

    move-result-object v6

    goto :goto_23

    :cond_20
    const-string/jumbo v6, "null"

    :goto_23
    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam1":Ljava/lang/String;
    sget-object v7, Lcom/android/server/wm/ProtoLogGroup;->WM_FORCE_DEBUG_ADD_REMOVE:Lcom/android/server/wm/ProtoLogGroup;

    const v8, -0x7466fcab

    const-string v9, "finishDrawingWindow: %s mDrawState=%s"

    const/4 v10, 0x2

    new-array v10, v10, [Ljava/lang/Object;

    aput-object v5, v10, v3

    const/4 v11, 0x1

    aput-object v6, v10, v11

    invoke-static {v7, v8, v3, v9, v10}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2996
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Ljava/lang/String;
    :cond_39
    if-eqz v4, :cond_5c

    invoke-virtual {v4, p3}, Lcom/android/server/wm/WindowState;->finishDrawing(Landroid/view/SurfaceControl$Transaction;)Z

    move-result v3

    if-eqz v3, :cond_5c

    .line 2997
    iget-object v3, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v5, 0x100000

    and-int/2addr v3, v5

    if-eqz v3, :cond_54

    .line 2998
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3001
    :cond_54
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 3002
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    .line 3004
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_5c
    monitor-exit v2
    :try_end_5d
    .catchall {:try_start_7 .. :try_end_5d} :catchall_65

    :try_start_5d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_60
    .catchall {:try_start_5d .. :try_end_60} :catchall_6b

    .line 3006
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3007
    nop

    .line 3008
    return-void

    .line 3004
    :catchall_65
    move-exception v3

    :try_start_66
    monitor-exit v2
    :try_end_67
    .catchall {:try_start_66 .. :try_end_67} :catchall_65

    :try_start_67
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "postDrawTransaction":Landroid/view/SurfaceControl$Transaction;
    throw v3
    :try_end_6b
    .catchall {:try_start_67 .. :try_end_6b} :catchall_6b

    .line 3006
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "postDrawTransaction":Landroid/view/SurfaceControl$Transaction;
    :catchall_6b
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3007
    throw v2
.end method

.method public finishRemoteConfigChanges(I)V
    .registers 9
    .param p1, "displayId"    # I

    .line 10462
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_53

    .line 10466
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10468
    .local v0, "origId":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_4e

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10469
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 10470
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_3a

    .line 10471
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "finishRemoteConfigChanges: failed, no display #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10472
    monitor-exit v2
    :try_end_33
    .catchall {:try_start_11 .. :try_end_33} :catchall_48

    .line 10477
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10472
    return-void

    .line 10474
    :cond_3a
    :try_start_3a
    const-string v4, "finished"

    invoke-virtual {v3, v4}, Lcom/android/server/wm/DisplayContent;->finishRemoteConfigChangesLocked(Ljava/lang/String;)V

    .line 10475
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_40
    .catchall {:try_start_3a .. :try_end_40} :catchall_48

    :try_start_40
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_43
    .catchall {:try_start_40 .. :try_end_43} :catchall_4e

    .line 10477
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10478
    nop

    .line 10480
    .end local v0    # "origId":J
    return-void

    .line 10475
    .restart local v0    # "origId":J
    :catchall_48
    move-exception v3

    :try_start_49
    monitor-exit v2
    :try_end_4a
    .catchall {:try_start_49 .. :try_end_4a} :catchall_48

    :try_start_4a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v3
    :try_end_4e
    .catchall {:try_start_4a .. :try_end_4e} :catchall_4e

    .line 10477
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_4e
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10478
    throw v2

    .line 10464
    .end local v0    # "origId":J
    :cond_53
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public freezeDisplayRotation(II)V
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "rotation"    # I

    .line 4261
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string v1, "freezeRotation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5f

    .line 4265
    const/4 v0, -0x1

    if-lt p2, v0, :cond_57

    const/4 v0, 0x3

    if-gt p2, v0, :cond_57

    .line 4270
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4272
    .local v0, "origId":J
    :try_start_14
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_17
    .catchall {:try_start_14 .. :try_end_17} :catchall_52

    :try_start_17
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4273
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4274
    .local v3, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_31

    .line 4275
    const-string v4, "WindowManager"

    const-string v5, "Trying to freeze rotation for a missing display."

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4276
    monitor-exit v2
    :try_end_2a
    .catchall {:try_start_17 .. :try_end_2a} :catchall_4c

    .line 4281
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4276
    return-void

    .line 4278
    :cond_31
    :try_start_31
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v4

    invoke-virtual {v4, p2}, Lcom/android/server/wm/DisplayRotation;->freezeRotation(I)V

    .line 4279
    .end local v3    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_39
    .catchall {:try_start_31 .. :try_end_39} :catchall_4c

    :try_start_39
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3c
    .catchall {:try_start_39 .. :try_end_3c} :catchall_52

    .line 4281
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4282
    nop

    .line 4286
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {p2, p1, v2}, Lcom/android/server/wm/EventLogTags;->writeWmUserRotationChanged(III)V

    .line 4290
    const/4 v2, 0x0

    invoke-direct {p0, v2, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 4291
    return-void

    .line 4279
    :catchall_4c
    move-exception v3

    :try_start_4d
    monitor-exit v2
    :try_end_4e
    .catchall {:try_start_4d .. :try_end_4e} :catchall_4c

    :try_start_4e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "rotation":I
    throw v3
    :try_end_52
    .catchall {:try_start_4e .. :try_end_52} :catchall_52

    .line 4281
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "rotation":I
    :catchall_52
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4282
    throw v2

    .line 4266
    .end local v0    # "origId":J
    :cond_57
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Rotation argument must be -1 or a valid rotation constant."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4263
    :cond_5f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public freezeRotation(I)V
    .registers 3
    .param p1, "rotation"    # I

    .line 4249
    const/4 v0, 0x0

    invoke-virtual {p0, v0, p1}, Lcom/android/server/wm/WindowManagerService;->freezeDisplayRotation(II)V

    .line 4250
    return-void
.end method

.method public getAnimationScale(I)F
    .registers 3
    .param p1, "which"    # I

    .line 3696
    if-eqz p1, :cond_10

    const/4 v0, 0x1

    if-eq p1, v0, :cond_d

    const/4 v0, 0x2

    if-eq p1, v0, :cond_a

    .line 3701
    const/4 v0, 0x0

    return v0

    .line 3699
    :cond_a
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return v0

    .line 3698
    :cond_d
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return v0

    .line 3697
    :cond_10
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return v0
.end method

.method public getAnimationScales()[F
    .registers 4

    .line 3706
    const/4 v0, 0x3

    new-array v0, v0, [F

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    const/4 v2, 0x0

    aput v1, v0, v2

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    const/4 v2, 0x1

    aput v1, v0, v2

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    const/4 v2, 0x2

    aput v1, v0, v2

    return-object v0
.end method

.method public getAppContinuityMode(Ljava/lang/String;Landroid/content/pm/ActivityInfo;I)I
    .registers 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "aInfo"    # Landroid/content/pm/ActivityInfo;
    .param p3, "userId"    # I

    .line 9924
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9926
    .local v0, "ident":J
    const/4 v2, 0x0

    .line 9939
    .local v2, "appContinuityMode":I
    nop

    .line 9941
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9939
    return v2
.end method

.method public getBaseDisplayDensity(I)I
    .registers 5
    .param p1, "displayId"    # I

    .line 6043
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6044
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6045
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1f

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 6046
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6048
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1f
    :try_start_1f
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6049
    const/4 v0, -0x1

    return v0

    .line 6048
    :catchall_25
    move-exception v1

    :try_start_26
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .registers 6
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .line 5874
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5875
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5876
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_20

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_20

    .line 5877
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iput v2, p2, Landroid/graphics/Point;->x:I

    .line 5878
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iput v2, p2, Landroid/graphics/Point;->y:I

    .line 5880
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_20
    monitor-exit v0
    :try_end_21
    .catchall {:try_start_3 .. :try_end_21} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5881
    return-void

    .line 5880
    :catchall_25
    move-exception v1

    :try_start_26
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getCameraLensCoverState()I
    .registers 5

    .line 3767
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v1, -0x1

    const/16 v2, -0x100

    const/16 v3, 0x9

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 3769
    .local v0, "sw":I
    if-lez v0, :cond_f

    .line 3771
    const/4 v1, 0x1

    return v1

    .line 3772
    :cond_f
    if-nez v0, :cond_13

    .line 3774
    const/4 v1, 0x0

    return v1

    .line 3777
    :cond_13
    return v1
.end method

.method public getCurrentAnimatorScale()F
    .registers 3

    .line 3712
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3713
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v1, :cond_c

    const/4 v1, 0x0

    goto :goto_e

    :cond_c
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    :goto_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_13

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 3714
    :catchall_13
    move-exception v1

    :try_start_14
    monitor-exit v0
    :try_end_15
    .catchall {:try_start_14 .. :try_end_15} :catchall_13

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getCurrentImeTouchRegion()Landroid/graphics/Region;
    .registers 6

    .line 6914
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.RESTRICTED_VR_ACCESS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_47

    .line 6917
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6918
    new-instance v1, Landroid/graphics/Region;

    invoke-direct {v1}, Landroid/graphics/Region;-><init>()V

    .line 6922
    .local v1, "r":Landroid/graphics/Region;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v2, v2, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_1f
    if-ltz v2, :cond_3c

    .line 6923
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v3, v3, Lcom/android/server/wm/RootWindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/DisplayContent;

    .line 6924
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v4, :cond_39

    .line 6925
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowState;->getTouchableRegion(Landroid/graphics/Region;)V

    .line 6926
    monitor-exit v0
    :try_end_35
    .catchall {:try_start_d .. :try_end_35} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 6922
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_39
    add-int/lit8 v2, v2, -0x1

    goto :goto_1f

    .line 6929
    .end local v2    # "i":I
    :cond_3c
    :try_start_3c
    monitor-exit v0
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 6930
    .end local v1    # "r":Landroid/graphics/Region;
    :catchall_41
    move-exception v1

    :try_start_42
    monitor-exit v0
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6915
    :cond_47
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "getCurrentImeTouchRegion is restricted to VR services"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .registers 3

    .line 7586
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayRotation()I
    .registers 3

    .line 4411
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4412
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v1

    monitor-exit v0
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_13

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 4413
    :catchall_13
    move-exception v1

    :try_start_14
    monitor-exit v0
    :try_end_15
    .catchall {:try_start_14 .. :try_end_15} :catchall_13

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getDeviceConfigProperty(I)Ljava/lang/String;
    .registers 4
    .param p1, "configPropertyType"    # I

    .line 10030
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1c

    .line 10035
    if-eqz p1, :cond_17

    const/4 v0, 0x1

    if-eq p1, v0, :cond_12

    .line 10041
    const-string v0, ""

    return-object v0

    .line 10039
    :cond_12
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getAmbientBrightnessThreshold()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 10037
    :cond_17
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getDisplayBrightnessThreshold()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 10032
    :cond_1c
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getDockedStackSide()I
    .registers 2

    .line 7730
    const/4 v0, 0x0

    return v0
.end method

.method getFocusedWindow()Lcom/android/server/wm/WindowState;
    .registers 3

    .line 5118
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5119
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v1

    monitor-exit v0
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    .line 5120
    :catchall_f
    move-exception v1

    :try_start_10
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_10 .. :try_end_11} :catchall_f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getFoldedArea()Landroid/graphics/Rect;
    .registers 5

    .line 4677
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4679
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_1e

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4680
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v3}, Lcom/android/server/policy/WindowManagerPolicy;->getFoldedArea()Landroid/graphics/Rect;

    move-result-object v3

    monitor-exit v2
    :try_end_11
    .catchall {:try_start_7 .. :try_end_11} :catchall_18

    .line 4683
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4680
    return-object v3

    .line 4681
    :catchall_18
    move-exception v3

    :try_start_19
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_18

    :try_start_1a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3
    :try_end_1e
    .catchall {:try_start_1a .. :try_end_1e} :catchall_1e

    .line 4683
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catchall_1e
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4684
    throw v2
.end method

.method getImeFocusStackLocked()Lcom/android/server/wm/ActivityStack;
    .registers 4

    .line 5134
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5135
    .local v0, "topFocusedDisplay":Lcom/android/server/wm/DisplayContent;
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    .line 5136
    .local v1, "focusedApp":Lcom/android/server/wm/ActivityRecord;
    if-eqz v1, :cond_19

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    if-eqz v2, :cond_19

    .line 5137
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/Task;->getStack()Lcom/android/server/wm/ActivityStack;

    move-result-object v2

    goto :goto_1a

    :cond_19
    const/4 v2, 0x0

    .line 5136
    :goto_1a
    return-object v2
.end method

.method getInTouchMode()Z
    .registers 3

    .line 4077
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4078
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 4079
    :catchall_d
    move-exception v1

    :try_start_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_e .. :try_end_f} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getInitialDisplayDensity(I)I
    .registers 5
    .param p1, "displayId"    # I

    .line 6032
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6033
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6034
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1f

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 6035
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6037
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1f
    :try_start_1f
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6038
    const/4 v0, -0x1

    return v0

    .line 6037
    :catchall_25
    move-exception v1

    :try_start_26
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .registers 6
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .line 5863
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5864
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 5865
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_20

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v2

    if-eqz v2, :cond_20

    .line 5866
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v2, p2, Landroid/graphics/Point;->x:I

    .line 5867
    iget v2, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v2, p2, Landroid/graphics/Point;->y:I

    .line 5869
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_20
    monitor-exit v0
    :try_end_21
    .catchall {:try_start_3 .. :try_end_21} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5870
    return-void

    .line 5869
    :catchall_25
    move-exception v1

    :try_start_26
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getInputManagerCallback()Lcom/android/server/wm/InputManagerCallback;
    .registers 2

    .line 1535
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    return-object v0
.end method

.method public getInputMethodWindowLw()Lcom/android/server/policy/WindowManagerPolicy$WindowState;
    .registers 2

    .line 3306
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method public getKeyCustomizeEvent(II)Landroid/view/WindowManager$KeyCustomizeInfo;
    .registers 5
    .param p1, "press"    # I
    .param p2, "keyCode"    # I

    .line 10336
    const-string v0, "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

    const-string v1, "getKeyCustomizeEvent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 10340
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2}, Lcom/android/server/policy/WindowManagerPolicyExt;->getKeyCustomizeEvent(II)Landroid/view/WindowManager$KeyCustomizeInfo;

    move-result-object v0

    return-object v0

    .line 10338
    :cond_13
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires ACCESS_KEY_CUSTOMIZE_INFO permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getKeyCustomizeEventAll(I)Ljava/util/List;
    .registers 4
    .param p1, "press"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List<",
            "Landroid/view/WindowManager$KeyCustomizeInfo;",
            ">;"
        }
    .end annotation

    .line 10345
    const-string v0, "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

    const-string v1, "getKeyCustomizeEventAll"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 10349
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicyExt;->getKeyCustomizeEventAll(I)Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 10347
    :cond_13
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires ACCESS_KEY_CUSTOMIZE_INFO permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getLidState()I
    .registers 5

    .line 3744
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v1, -0x1

    const/16 v2, -0x100

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 3746
    .local v0, "sw":I
    if-lez v0, :cond_d

    .line 3748
    return v3

    .line 3749
    :cond_d
    if-nez v0, :cond_11

    .line 3751
    const/4 v1, 0x1

    return v1

    .line 3754
    :cond_11
    return v1
.end method

.method public getMaxAspectRatioPolicy(Ljava/lang/String;I)I
    .registers 7
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 9720
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    .line 9722
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 9720
    const/16 v3, 0x80

    invoke-virtual {v0, p1, v3, v1, v2}, Landroid/content/pm/PackageManagerInternal;->getApplicationInfo(Ljava/lang/String;III)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 9723
    .local v0, "appInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v0, :cond_20

    .line 9724
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mPackageSettingsManager:Lcom/android/server/wm/PackageSettingsManager;

    iget-object v1, v1, Lcom/android/server/wm/PackageSettingsManager;->mCustomAspectRatioPackages:Lcom/android/server/wm/PackageSettingsManager$CustomAspectRatioPackageManager;

    const/4 v2, 0x0

    .line 9725
    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/PackageSettingsManager$CustomAspectRatioPackageManager;->getMaxAspectRatioPolicy(Landroid/content/pm/ApplicationInfo;Landroid/content/pm/ActivityInfo;)I

    move-result v1

    .line 9724
    return v1

    .line 9728
    .end local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_20
    const/4 v0, 0x3

    return v0
.end method

.method public getMaxAspectRatioPolicyByComponent(Landroid/content/ComponentName;I)I
    .registers 7
    .param p1, "componentName"    # Landroid/content/ComponentName;
    .param p2, "uid"    # I

    .line 9705
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    .line 9707
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 9705
    const/16 v3, 0x80

    invoke-virtual {v0, p1, v3, v1, v2}, Landroid/content/pm/PackageManagerInternal;->getActivityInfo(Landroid/content/ComponentName;III)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .line 9708
    .local v0, "activityInfo":Landroid/content/pm/ActivityInfo;
    if-eqz v0, :cond_25

    iget-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v1, :cond_25

    .line 9709
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mPackageSettingsManager:Lcom/android/server/wm/PackageSettingsManager;

    iget-object v1, v1, Lcom/android/server/wm/PackageSettingsManager;->mCustomAspectRatioPackages:Lcom/android/server/wm/PackageSettingsManager$CustomAspectRatioPackageManager;

    iget-object v2, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9710
    invoke-virtual {v1, v2, v0}, Lcom/android/server/wm/PackageSettingsManager$CustomAspectRatioPackageManager;->getMaxAspectRatioPolicy(Landroid/content/pm/ApplicationInfo;Landroid/content/pm/ActivityInfo;)I

    move-result v1

    .line 9709
    return v1

    .line 9712
    :cond_25
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0, v1, p2}, Lcom/android/server/wm/WindowManagerService;->getMaxAspectRatioPolicy(Ljava/lang/String;I)I

    move-result v1

    return v1
.end method

.method public getNavBarPosition(I)I
    .registers 7
    .param p1, "displayId"    # I

    .line 6864
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6867
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6868
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_37

    .line 6869
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "getNavBarPosition with invalid displayId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " callers="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v4, 0x3

    .line 6870
    invoke-static {v4}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 6869
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6871
    const/4 v2, -0x1

    monitor-exit v0
    :try_end_33
    .catchall {:try_start_3 .. :try_end_33} :catchall_48

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6873
    :cond_37
    const/4 v2, 0x0

    :try_start_38
    invoke-virtual {v1, v2, v2}, Lcom/android/server/wm/DisplayContent;->performLayout(ZZ)V

    .line 6875
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayPolicy;->getNavBarPosition()I

    move-result v2

    monitor-exit v0
    :try_end_44
    .catchall {:try_start_38 .. :try_end_44} :catchall_48

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6876
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_48
    move-exception v1

    :try_start_49
    monitor-exit v0
    :try_end_4a
    .catchall {:try_start_49 .. :try_end_4a} :catchall_48

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getPreferredOptionsPanelGravity(I)I
    .registers 5
    .param p1, "displayId"    # I

    .line 4714
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4715
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4716
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_15

    .line 4717
    const/16 v2, 0x51

    monitor-exit v0
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_1e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4719
    :cond_15
    :try_start_15
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getPreferredOptionsPanelGravity()I

    move-result v2

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_15 .. :try_end_1a} :catchall_1e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4720
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1e
    move-exception v1

    :try_start_1f
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_1e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getRecentsAnimationController()Lcom/android/server/wm/RecentsAnimationController;
    .registers 2

    .line 3253
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    return-object v0
.end method

.method public getRemoveContentMode(I)I
    .registers 13
    .param p1, "displayId"    # I

    .line 8134
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "getRemoveContentMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_47

    .line 8138
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8139
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8140
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_36

    .line 8141
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_31

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0x1d9ac061

    const-string v7, "Attempted to get remove mode of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8144
    .end local v4    # "protoLogParam0":J
    :cond_31
    monitor-exit v0
    :try_end_32
    .catchall {:try_start_d .. :try_end_32} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 8146
    :cond_36
    :try_start_36
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/DisplayWindowSettings;->getRemoveContentModeLocked(Lcom/android/server/wm/DisplayContent;)I

    move-result v2

    monitor-exit v0
    :try_end_3d
    .catchall {:try_start_36 .. :try_end_3d} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8147
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_41
    move-exception v1

    :try_start_42
    monitor-exit v0
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 8135
    :cond_47
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getRotationLockOrientation(I)I
    .registers 5
    .param p1, "displayId"    # I

    .line 9690
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9691
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 9692
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1b

    .line 9693
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotation;->getRotationLockOrientation()I

    move-result v2

    monitor-exit v0
    :try_end_17
    .catchall {:try_start_3 .. :try_end_17} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 9695
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1b
    :try_start_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_1b .. :try_end_1c} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9697
    const/4 v0, 0x0

    return v0

    .line 9695
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v0
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getServiceVersion()I
    .registers 2

    .line 9890
    const/high16 v0, 0x1010000

    return v0
.end method

.method public getStableInsets(ILandroid/graphics/Rect;)V
    .registers 5
    .param p1, "displayId"    # I
    .param p2, "outInsets"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 7792
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7793
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(ILandroid/graphics/Rect;)V

    .line 7794
    monitor-exit v0
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7795
    return-void

    .line 7794
    :catchall_e
    move-exception v1

    :try_start_f
    monitor-exit v0
    :try_end_10
    .catchall {:try_start_f .. :try_end_10} :catchall_e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method getStableInsetsLocked(ILandroid/graphics/Rect;)V
    .registers 11
    .param p1, "displayId"    # I
    .param p2, "outInsets"    # Landroid/graphics/Rect;

    .line 7798
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V

    .line 7799
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 7800
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1f

    .line 7801
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v1

    .line 7802
    .local v1, "di":Landroid/view/DisplayInfo;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    iget v3, v1, Landroid/view/DisplayInfo;->rotation:I

    iget v4, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v5, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    iget-object v6, v1, Landroid/view/DisplayInfo;->displayCutout:Landroid/view/DisplayCutout;

    move-object v7, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/DisplayPolicy;->getStableInsetsLw(IIILandroid/view/DisplayCutout;Landroid/graphics/Rect;)V

    .line 7805
    .end local v1    # "di":Landroid/view/DisplayInfo;
    :cond_1f
    return-void
.end method

.method getStackBounds(IILandroid/graphics/Rect;)V
    .registers 5
    .param p1, "windowingMode"    # I
    .param p2, "activityType"    # I
    .param p3, "bounds"    # Landroid/graphics/Rect;

    .line 3288
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->getStack(II)Lcom/android/server/wm/ActivityStack;

    move-result-object v0

    .line 3289
    .local v0, "stack":Lcom/android/server/wm/ActivityStack;
    if-eqz v0, :cond_c

    .line 3290
    invoke-virtual {v0, p3}, Lcom/android/server/wm/ActivityStack;->getBounds(Landroid/graphics/Rect;)V

    .line 3291
    return-void

    .line 3293
    :cond_c
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 3294
    return-void
.end method

.method public getTaskSnapshot(IIZZ)Landroid/app/ActivityManager$TaskSnapshot;
    .registers 6
    .param p1, "taskId"    # I
    .param p2, "userId"    # I
    .param p3, "isLowResolution"    # Z
    .param p4, "restoreFromDisk"    # Z

    .line 4213
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0, p1, p2, p4, p3}, Lcom/android/server/wm/TaskSnapshotController;->getSnapshot(IIZZ)Landroid/app/ActivityManager$TaskSnapshot;

    move-result-object v0

    return-object v0
.end method

.method public getTopFocusedDisplayId()I
    .registers 3

    .line 10155
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10156
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayId()I

    move-result v1

    monitor-exit v0
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_11

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 10157
    :catchall_11
    move-exception v1

    :try_start_12
    monitor-exit v0
    :try_end_13
    .catchall {:try_start_12 .. :try_end_13} :catchall_11

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getTransitionAnimationScaleLocked()F
    .registers 2

    .line 3691
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v0, :cond_6

    const/4 v0, 0x0

    goto :goto_8

    :cond_6
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    :goto_8
    return v0
.end method

.method public getUserDisplayDensity()I
    .registers 2

    .line 9761
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerServiceExt;->getForcedDisplayDensity()I

    move-result v0

    return v0
.end method

.method public getUserDisplaySize(Landroid/graphics/Point;)V
    .registers 3
    .param p1, "point"    # Landroid/graphics/Point;

    .line 9749
    if-eqz p1, :cond_8

    .line 9751
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowManagerServiceExt;->getForcedDisplaySize(Landroid/graphics/Point;)V

    .line 9752
    return-void

    .line 9756
    :cond_8
    return-void
.end method

.method public getVisibleWinSurfacePkgList()Ljava/util/ArrayList;
    .registers 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 10416
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 10418
    .local v0, "surfacePkgList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowManagerServiceExt;->getVisibleWindowInfo()Ljava/util/List;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_f
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_29

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/samsung/android/view/SemWindowManager$VisibleWindowInfo;

    .line 10419
    .local v2, "info":Lcom/samsung/android/view/SemWindowManager$VisibleWindowInfo;
    iget-object v3, v2, Lcom/samsung/android/view/SemWindowManager$VisibleWindowInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_28

    .line 10420
    iget-object v3, v2, Lcom/samsung/android/view/SemWindowManager$VisibleWindowInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10422
    .end local v2    # "info":Lcom/samsung/android/view/SemWindowManager$VisibleWindowInfo;
    :cond_28
    goto :goto_f

    .line 10424
    :cond_29
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_2c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10425
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_37
    if-ltz v2, :cond_5b

    .line 10426
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v3, v2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Session;

    .line 10427
    .local v3, "s":Lcom/android/server/wm/Session;
    invoke-virtual {v3}, Lcom/android/server/wm/Session;->getWinSurfaceVisibleCount()I

    move-result v4

    if-lez v4, :cond_58

    .line 10428
    invoke-virtual {v3}, Lcom/android/server/wm/Session;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_58

    .line 10429
    invoke-virtual {v3}, Lcom/android/server/wm/Session;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10425
    .end local v3    # "s":Lcom/android/server/wm/Session;
    :cond_58
    add-int/lit8 v2, v2, -0x1

    goto :goto_37

    .line 10433
    .end local v2    # "i":I
    :cond_5b
    monitor-exit v1
    :try_end_5c
    .catchall {:try_start_2c .. :try_end_5c} :catchall_60

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 10434
    return-object v0

    .line 10433
    :catchall_60
    move-exception v2

    :try_start_61
    monitor-exit v1
    :try_end_62
    .catchall {:try_start_61 .. :try_end_62} :catchall_60

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method public getVisibleWindowInfo()Ljava/util/List;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Lcom/samsung/android/view/SemWindowManager$VisibleWindowInfo;",
            ">;"
        }
    .end annotation

    .line 9819
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerServiceExt;->getVisibleWindowInfo()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getWindowAnimationScaleLocked()F
    .registers 2

    .line 3687
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v0, :cond_6

    const/4 v0, 0x0

    goto :goto_8

    :cond_6
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    :goto_8
    return v0
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;

    .line 6979
    const-string v0, "android.permission.FRAME_STATS"

    const-string/jumbo v1, "getWindowContentFrameStats()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4f

    .line 6983
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6984
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 6985
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    if-nez v1, :cond_21

    .line 6986
    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_e .. :try_end_1d} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 6988
    :cond_21
    :try_start_21
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    .line 6989
    .local v3, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v3, :cond_2c

    .line 6990
    monitor-exit v0
    :try_end_28
    .catchall {:try_start_21 .. :try_end_28} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 6992
    :cond_2c
    :try_start_2c
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    if-nez v4, :cond_37

    .line 6993
    new-instance v4, Landroid/view/WindowContentFrameStats;

    invoke-direct {v4}, Landroid/view/WindowContentFrameStats;-><init>()V

    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 6995
    :cond_37
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 6996
    .local v4, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowSurfaceController;->getWindowContentFrameStats(Landroid/view/WindowContentFrameStats;)Z

    move-result v5

    if-nez v5, :cond_44

    .line 6997
    monitor-exit v0
    :try_end_40
    .catchall {:try_start_2c .. :try_end_40} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 6999
    :cond_44
    :try_start_44
    monitor-exit v0
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v4

    .line 7000
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    .end local v3    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v4    # "stats":Landroid/view/WindowContentFrameStats;
    :catchall_49
    move-exception v1

    :try_start_4a
    monitor-exit v0
    :try_end_4b
    .catchall {:try_start_4a .. :try_end_4b} :catchall_49

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6981
    :cond_4f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FRAME_STATS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    .line 2375
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2376
    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 2377
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_15

    .line 2378
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 2379
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_2c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2381
    :cond_15
    :try_start_15
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayFrameLw()Landroid/graphics/Rect;

    move-result-object v2

    invoke-virtual {p3, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2382
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->inSizeCompatMode()Z

    move-result v2

    if-eqz v2, :cond_27

    .line 2383
    iget v2, v1, Lcom/android/server/wm/WindowState;->mInvGlobalScale:F

    invoke-virtual {p3, v2}, Landroid/graphics/Rect;->scale(F)V

    .line 2385
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_27
    monitor-exit v0
    :try_end_28
    .catchall {:try_start_15 .. :try_end_28} :catchall_2c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2386
    return-void

    .line 2385
    :catchall_2c
    move-exception v1

    :try_start_2d
    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_2d .. :try_end_2e} :catchall_2c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .line 2401
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2402
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 2403
    .local v1, "window":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_13

    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWindowId:Lcom/android/server/wm/WindowState$WindowId;

    goto :goto_14

    :cond_13
    const/4 v2, 0x0

    :goto_14
    monitor-exit v0
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-object v2

    .line 2404
    .end local v1    # "window":Lcom/android/server/wm/WindowState;
    :catchall_19
    move-exception v1

    :try_start_1a
    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_1a .. :try_end_1b} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public getWindowInsets(Landroid/view/WindowManager$LayoutParams;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/DisplayCutout$ParcelableWrapper;Landroid/view/InsetsState;)Z
    .registers 23
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p2, "displayId"    # I
    .param p3, "outContentInsets"    # Landroid/graphics/Rect;
    .param p4, "outStableInsets"    # Landroid/graphics/Rect;
    .param p5, "outDisplayCutout"    # Landroid/view/DisplayCutout$ParcelableWrapper;
    .param p6, "outInsetsState"    # Landroid/view/InsetsState;

    .line 9664
    move-object/from16 v1, p0

    move-object/from16 v9, p1

    move/from16 v10, p2

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v11

    .line 9666
    .local v11, "origId":J
    :try_start_a
    iget-object v13, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v13
    :try_end_d
    .catchall {:try_start_a .. :try_end_d} :catchall_71

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9667
    iget-object v0, v9, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-direct {v1, v10, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9668
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_47

    .line 9672
    iget-object v2, v9, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContent;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v4

    .line 9673
    .local v4, "windowToken":Lcom/android/server/wm/WindowToken;
    nop

    .line 9674
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getInsetsStateController()Lcom/android/server/wm/InsetsStateController;

    move-result-object v2

    move-object v14, v2

    .line 9675
    .local v14, "insetsStateController":Lcom/android/server/wm/InsetsStateController;
    invoke-virtual {v14, v9}, Lcom/android/server/wm/InsetsStateController;->getInsetsForWindowMetrics(Landroid/view/WindowManager$LayoutParams;)Landroid/view/InsetsState;

    move-result-object v2
    :try_end_28
    .catchall {:try_start_d .. :try_end_28} :catchall_65

    move-object/from16 v15, p6

    :try_start_2a
    invoke-virtual {v15, v2}, Landroid/view/InsetsState;->set(Landroid/view/InsetsState;)V

    .line 9677
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    move-object/from16 v3, p1

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move-object/from16 v8, p5

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/wm/DisplayPolicy;->getLayoutHint(Landroid/view/WindowManager$LayoutParams;Lcom/android/server/wm/WindowToken;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/DisplayCutout$ParcelableWrapper;)Z

    move-result v2

    monitor-exit v13
    :try_end_40
    .catchall {:try_start_2a .. :try_end_40} :catchall_6f

    .line 9682
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9677
    return v2

    .line 9669
    .end local v4    # "windowToken":Lcom/android/server/wm/WindowToken;
    .end local v14    # "insetsStateController":Lcom/android/server/wm/InsetsStateController;
    :cond_47
    move-object/from16 v15, p6

    :try_start_49
    new-instance v2, Landroid/view/WindowManager$InvalidDisplayException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Display#"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, "could not be found!"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/view/WindowManager$InvalidDisplayException;-><init>(Ljava/lang/String;)V

    .end local v11    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p2    # "displayId":I
    .end local p3    # "outContentInsets":Landroid/graphics/Rect;
    .end local p4    # "outStableInsets":Landroid/graphics/Rect;
    .end local p5    # "outDisplayCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .end local p6    # "outInsetsState":Landroid/view/InsetsState;
    throw v2

    .line 9680
    .end local v0    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v11    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p2    # "displayId":I
    .restart local p3    # "outContentInsets":Landroid/graphics/Rect;
    .restart local p4    # "outStableInsets":Landroid/graphics/Rect;
    .restart local p5    # "outDisplayCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .restart local p6    # "outInsetsState":Landroid/view/InsetsState;
    :catchall_65
    move-exception v0

    move-object/from16 v15, p6

    :goto_68
    monitor-exit v13
    :try_end_69
    .catchall {:try_start_49 .. :try_end_69} :catchall_6f

    :try_start_69
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v11    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p2    # "displayId":I
    .end local p3    # "outContentInsets":Landroid/graphics/Rect;
    .end local p4    # "outStableInsets":Landroid/graphics/Rect;
    .end local p5    # "outDisplayCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .end local p6    # "outInsetsState":Landroid/view/InsetsState;
    throw v0
    :try_end_6d
    .catchall {:try_start_69 .. :try_end_6d} :catchall_6d

    .line 9682
    .restart local v11    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p2    # "displayId":I
    .restart local p3    # "outContentInsets":Landroid/graphics/Rect;
    .restart local p4    # "outStableInsets":Landroid/graphics/Rect;
    .restart local p5    # "outDisplayCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .restart local p6    # "outInsetsState":Landroid/view/InsetsState;
    :catchall_6d
    move-exception v0

    goto :goto_74

    .line 9680
    :catchall_6f
    move-exception v0

    goto :goto_68

    .line 9682
    :catchall_71
    move-exception v0

    move-object/from16 v15, p6

    :goto_74
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9683
    throw v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .registers 2

    .line 7633
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    return-object v0
.end method

.method public getWindowingMode(I)I
    .registers 13
    .param p1, "displayId"    # I

    .line 8081
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "getWindowingMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_48

    .line 8085
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8086
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8087
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_37

    .line 8088
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_32

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, 0x313c891

    const-string v7, "Attempted to get windowing mode of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8091
    .end local v4    # "protoLogParam0":J
    :cond_32
    monitor-exit v0
    :try_end_33
    .catchall {:try_start_e .. :try_end_33} :catchall_42

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 8093
    :cond_37
    :try_start_37
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/DisplayWindowSettings;->getWindowingModeLocked(Lcom/android/server/wm/DisplayContent;)I

    move-result v2

    monitor-exit v0
    :try_end_3e
    .catchall {:try_start_37 .. :try_end_3e} :catchall_42

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8094
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_42
    move-exception v1

    :try_start_43
    monitor-exit v0
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_42

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 8082
    :cond_48
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method grantInputChannel(IIILandroid/view/SurfaceControl;Landroid/view/IWindow;Landroid/os/IBinder;IILandroid/view/InputChannel;)V
    .registers 25
    .param p1, "callingUid"    # I
    .param p2, "callingPid"    # I
    .param p3, "displayId"    # I
    .param p4, "surface"    # Landroid/view/SurfaceControl;
    .param p5, "window"    # Landroid/view/IWindow;
    .param p6, "hostInputToken"    # Landroid/os/IBinder;
    .param p7, "flags"    # I
    .param p8, "type"    # I
    .param p9, "outInputChannel"    # Landroid/view/InputChannel;

    .line 9466
    move-object v12, p0

    iget-object v9, v12, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v9

    :try_start_4
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9467
    new-instance v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;

    iget-object v1, v12, Lcom/android/server/wm/WindowManagerService;->mInputToWindowMap:Ljava/util/HashMap;
    :try_end_b
    .catchall {:try_start_4 .. :try_end_b} :catchall_5b

    .line 9469
    move-object/from16 v13, p6

    :try_start_d
    invoke-virtual {v1, v13}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    move-object v4, v1

    check-cast v4, Lcom/android/server/wm/WindowState;

    move-object v1, v0

    move-object v2, p0

    move-object/from16 v3, p5

    move/from16 v5, p1

    move/from16 v6, p2

    move/from16 v7, p8

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindow;Lcom/android/server/wm/WindowState;III)V

    .line 9470
    .local v0, "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->openInputChannel()Landroid/view/InputChannel;

    move-result-object v1

    move-object v14, v1

    .line 9471
    .local v14, "clientChannel":Landroid/view/InputChannel;
    iget-object v1, v12, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v14}, Landroid/view/InputChannel;->getToken()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2, v0}, Lcom/android/server/wm/EmbeddedWindowController;->add(Landroid/os/IBinder;Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;)V

    .line 9472
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getApplicationHandle()Landroid/view/InputApplicationHandle;

    move-result-object v8

    .line 9473
    .local v8, "applicationHandle":Landroid/view/InputApplicationHandle;
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v7

    .line 9474
    .end local v0    # "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    .local v7, "name":Ljava/lang/String;
    monitor-exit v9
    :try_end_38
    .catchall {:try_start_d .. :try_end_38} :catchall_59

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9476
    invoke-virtual {v14}, Landroid/view/InputChannel;->getToken()Landroid/os/IBinder;

    move-result-object v2

    const/4 v11, 0x0

    move-object v1, p0

    move/from16 v3, p1

    move/from16 v4, p2

    move/from16 v5, p3

    move-object/from16 v6, p4

    move/from16 v9, p7

    move/from16 v10, p8

    invoke-direct/range {v1 .. v11}, Lcom/android/server/wm/WindowManagerService;->updateInputChannel(Landroid/os/IBinder;IIILandroid/view/SurfaceControl;Ljava/lang/String;Landroid/view/InputApplicationHandle;IILandroid/graphics/Region;)V

    .line 9479
    move-object/from16 v1, p9

    invoke-virtual {v14, v1}, Landroid/view/InputChannel;->transferTo(Landroid/view/InputChannel;)V

    .line 9480
    invoke-virtual {v14}, Landroid/view/InputChannel;->dispose()V

    .line 9481
    return-void

    .line 9474
    .end local v7    # "name":Ljava/lang/String;
    .end local v8    # "applicationHandle":Landroid/view/InputApplicationHandle;
    .end local v14    # "clientChannel":Landroid/view/InputChannel;
    :catchall_59
    move-exception v0

    goto :goto_5e

    :catchall_5b
    move-exception v0

    move-object/from16 v13, p6

    :goto_5e
    move-object/from16 v1, p9

    :goto_60
    :try_start_60
    monitor-exit v9
    :try_end_61
    .catchall {:try_start_60 .. :try_end_61} :catchall_65

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_65
    move-exception v0

    goto :goto_60
.end method

.method handleTaskFocusChange(Lcom/android/server/wm/Task;)V
    .registers 7
    .param p1, "task"    # Lcom/android/server/wm/Task;

    .line 9410
    if-nez p1, :cond_3

    .line 9411
    return-void

    .line 9415
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreeformWindowController:Lcom/android/server/wm/FreeformWindowController;

    iget-object v1, p1, Lcom/android/server/wm/Task;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/FreeformWindowController;->hasVisibleFreeform(Lcom/android/server/wm/DisplayContent;)Z

    move-result v0

    if-eqz v0, :cond_e

    goto :goto_48

    .line 9424
    :cond_e
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->isActivityTypeHome()Z

    move-result v0

    if-eqz v0, :cond_48

    .line 9427
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->getDisplayArea()Lcom/android/server/wm/TaskDisplayArea;

    move-result-object v0

    .line 9428
    .local v0, "homeTda":Lcom/android/server/wm/TaskDisplayArea;
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 9429
    .local v1, "curFocusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_27

    if-eqz v0, :cond_27

    .line 9430
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowState;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    move-result v2

    if-eqz v2, :cond_27

    .line 9431
    return-void

    .line 9435
    :cond_27
    if-nez v1, :cond_48

    if-eqz v0, :cond_48

    .line 9436
    iget-object v2, v0, Lcom/android/server/wm/TaskDisplayArea;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 9437
    .local v2, "dc":Lcom/android/server/wm/DisplayContent;
    iget-object v3, v0, Lcom/android/server/wm/TaskDisplayArea;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    .line 9438
    .local v3, "curFocusedApp":Lcom/android/server/wm/ActivityRecord;
    if-eqz v3, :cond_48

    .line 9439
    invoke-virtual {v3}, Lcom/android/server/wm/ActivityRecord;->isVisible()Z

    move-result v4

    if-nez v4, :cond_41

    iget-object v4, v2, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v4, v3}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_48

    .line 9440
    :cond_41
    invoke-virtual {v3, v0}, Lcom/android/server/wm/ActivityRecord;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    move-result v4

    if-eqz v4, :cond_48

    .line 9441
    return-void

    .line 9448
    .end local v0    # "homeTda":Lcom/android/server/wm/TaskDisplayArea;
    .end local v1    # "curFocusedWindow":Lcom/android/server/wm/WindowState;
    .end local v2    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "curFocusedApp":Lcom/android/server/wm/ActivityRecord;
    :cond_48
    :goto_48
    :try_start_48
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mActivityTaskManager:Landroid/app/IActivityTaskManager;

    iget v1, p1, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-interface {v0, v1}, Landroid/app/IActivityTaskManager;->setFocusedTask(I)V
    :try_end_4f
    .catch Landroid/os/RemoteException; {:try_start_48 .. :try_end_4f} :catch_50

    .line 9450
    goto :goto_51

    .line 9449
    :catch_50
    move-exception v0

    .line 9451
    :goto_51
    return-void
.end method

.method public hasFloatingOrOnScreenWindow(I)Z
    .registers 8
    .param p1, "uid"    # I

    .line 10388
    const/4 v0, 0x0

    .line 10389
    .local v0, "curWindow":Lcom/android/server/wm/WindowState;
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 10391
    .local v1, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_9
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10392
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v4, Lcom/android/server/wm/-$$Lambda$WindowManagerService$jP3t-i7IZpwECslz4gj6LGGcGpQ;

    invoke-direct {v4, v1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$jP3t-i7IZpwECslz4gj6LGGcGpQ;-><init>(Ljava/util/ArrayList;)V

    const/4 v5, 0x1

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 10395
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_18
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_3f

    .line 10396
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    move-object v0, v4

    .line 10397
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v4

    if-ne v4, p1, :cond_3c

    .line 10398
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isFloatingWindowOpsLocked(Lcom/android/server/wm/WindowState;)Z

    move-result v4

    if-nez v4, :cond_37

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v4

    if-eqz v4, :cond_3c

    .line 10399
    :cond_37
    monitor-exit v2
    :try_end_38
    .catchall {:try_start_9 .. :try_end_38} :catchall_45

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v5

    .line 10395
    :cond_3c
    add-int/lit8 v3, v3, 0x1

    goto :goto_18

    .line 10402
    .end local v3    # "i":I
    :cond_3f
    :try_start_3f
    monitor-exit v2
    :try_end_40
    .catchall {:try_start_3f .. :try_end_40} :catchall_45

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 10403
    const/4 v2, 0x0

    return v2

    .line 10402
    :catchall_45
    move-exception v3

    :try_start_46
    monitor-exit v2
    :try_end_47
    .catchall {:try_start_46 .. :try_end_47} :catchall_45

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3
.end method

.method hasHdrSupport()Z
    .registers 2

    .line 9173
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasHdrSupport:Z

    if-eqz v0, :cond_c

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hasWideColorGamutSupport()Z

    move-result v0

    if-eqz v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    :goto_d
    return v0
.end method

.method public hasNavigationBar(I)Z
    .registers 5
    .param p1, "displayId"    # I

    .line 6935
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6936
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6937
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_14

    .line 6938
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6940
    :cond_14
    :try_start_14
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayPolicy;->hasNavigationBar()Z

    move-result v2

    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_14 .. :try_end_1d} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 6941
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v0
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method hasWideColorGamutSupport()Z
    .registers 4

    .line 9168
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasWideColorGamutSupport:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_10

    .line 9169
    const-string/jumbo v0, "persist.sys.sf.native_mode"

    invoke-static {v0, v2}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    if-eq v0, v1, :cond_10

    goto :goto_11

    :cond_10
    move v1, v2

    .line 9168
    :goto_11
    return v1
.end method

.method public hideBootMessagesLocked()V
    .registers 14

    .line 4057
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_49

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .local v0, "protoLogParam0":Z
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .local v2, "protoLogParam1":Z
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v3, "protoLogParam2":Z
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v4, "protoLogParam3":Z
    new-instance v5, Ljava/lang/RuntimeException;

    const-string/jumbo v6, "here"

    invoke-direct {v5, v6}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v5}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam4":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v7, -0x507a6318

    const/16 v8, 0xff

    const/4 v9, 0x0

    const/4 v10, 0x5

    new-array v10, v10, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v11

    aput-object v11, v10, v1

    const/4 v11, 0x1

    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x2

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x3

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x4

    aput-object v5, v10, v11

    invoke-static {v6, v7, v8, v9, v10}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4062
    .end local v0    # "protoLogParam0":Z
    .end local v2    # "protoLogParam1":Z
    .end local v3    # "protoLogParam2":Z
    .end local v4    # "protoLogParam3":Z
    .end local v5    # "protoLogParam4":Ljava/lang/String;
    :cond_49
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v0, :cond_54

    .line 4063
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 4064
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->hideBootMessages()V

    .line 4066
    :cond_54
    return-void
.end method

.method public hideTransientBars(I)V
    .registers 7
    .param p1, "displayId"    # I

    .line 6804
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "android.permission.STATUS_BAR"

    const-string/jumbo v2, "hideTransientBars()"

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6806
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6807
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6808
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_36

    .line 6810
    nop

    .line 6811
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/wm/DisplayPolicy;->mExt:Lcom/android/server/wm/DisplayPolicyExt;

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayPolicyExt;->isGameToolsVisibleLw()Z

    move-result v2

    if-eqz v2, :cond_32

    .line 6812
    const-string v2, "WindowManager"

    const-string/jumbo v3, "hideTransientBars skipped by gametools."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6813
    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_d .. :try_end_2e} :catchall_52

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6816
    :cond_32
    :try_start_32
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->hideTransientBars()V

    goto :goto_4d

    .line 6818
    :cond_36
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "hideTransientBars with invalid displayId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6820
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_4d
    monitor-exit v0
    :try_end_4e
    .catchall {:try_start_32 .. :try_end_4e} :catchall_52

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6821
    return-void

    .line 6820
    :catchall_52
    move-exception v1

    :try_start_53
    monitor-exit v0
    :try_end_54
    .catchall {:try_start_53 .. :try_end_54} :catchall_52

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method inSurfaceTransaction(Ljava/lang/Runnable;)V
    .registers 3
    .param p1, "exec"    # Ljava/lang/Runnable;

    .line 9142
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 9144
    :try_start_3
    invoke-interface {p1}, Ljava/lang/Runnable;->run()V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_b

    .line 9146
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 9147
    nop

    .line 9148
    return-void

    .line 9146
    :catchall_b
    move-exception v0

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 9147
    throw v0
.end method

.method initializeRecentsAnimation(ILandroid/view/IRecentsAnimationRunner;Lcom/android/server/wm/RecentsAnimationController$RecentsAnimationCallbacks;ILandroid/util/SparseBooleanArray;Lcom/android/server/wm/ActivityRecord;)V
    .registers 8
    .param p1, "targetActivityType"    # I
    .param p2, "recentsAnimationRunner"    # Landroid/view/IRecentsAnimationRunner;
    .param p3, "callbacks"    # Lcom/android/server/wm/RecentsAnimationController$RecentsAnimationCallbacks;
    .param p4, "displayId"    # I
    .param p5, "recentTaskIds"    # Landroid/util/SparseBooleanArray;
    .param p6, "targetActivity"    # Lcom/android/server/wm/ActivityRecord;

    .line 3241
    new-instance v0, Lcom/android/server/wm/RecentsAnimationController;

    invoke-direct {v0, p0, p2, p3, p4}, Lcom/android/server/wm/RecentsAnimationController;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRecentsAnimationRunner;Lcom/android/server/wm/RecentsAnimationController$RecentsAnimationCallbacks;I)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 3243
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->updateBooster()V

    .line 3244
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    invoke-virtual {v0, p1, p5, p6}, Lcom/android/server/wm/RecentsAnimationController;->initialize(ILandroid/util/SparseBooleanArray;Lcom/android/server/wm/ActivityRecord;)V

    .line 3245
    return-void
.end method

.method public injectInputAfterTransactionsApplied(Landroid/view/InputEvent;I)Z
    .registers 9
    .param p1, "ev"    # Landroid/view/InputEvent;
    .param p2, "mode"    # I

    .line 9255
    instance-of v0, p1, Landroid/view/KeyEvent;

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_1d

    .line 9256
    move-object v0, p1

    check-cast v0, Landroid/view/KeyEvent;

    .line 9257
    .local v0, "keyEvent":Landroid/view/KeyEvent;
    invoke-virtual {v0}, Landroid/view/KeyEvent;->getAction()I

    move-result v3

    if-nez v3, :cond_11

    move v3, v2

    goto :goto_12

    :cond_11
    move v3, v1

    .line 9258
    .local v3, "isDown":Z
    :goto_12
    invoke-virtual {v0}, Landroid/view/KeyEvent;->getAction()I

    move-result v4

    if-ne v4, v2, :cond_1a

    move v4, v2

    goto :goto_1b

    :cond_1a
    move v4, v1

    :goto_1b
    move v0, v4

    .line 9259
    .local v0, "isUp":Z
    goto :goto_33

    .line 9260
    .end local v0    # "isUp":Z
    .end local v3    # "isDown":Z
    :cond_1d
    move-object v0, p1

    check-cast v0, Landroid/view/MotionEvent;

    .line 9261
    .local v0, "motionEvent":Landroid/view/MotionEvent;
    invoke-virtual {v0}, Landroid/view/MotionEvent;->getAction()I

    move-result v3

    if-nez v3, :cond_28

    move v3, v2

    goto :goto_29

    :cond_28
    move v3, v1

    .line 9262
    .restart local v3    # "isDown":Z
    :goto_29
    invoke-virtual {v0}, Landroid/view/MotionEvent;->getAction()I

    move-result v4

    if-ne v4, v2, :cond_31

    move v4, v2

    goto :goto_32

    :cond_31
    move v4, v1

    :goto_32
    move v0, v4

    .line 9264
    .local v0, "isUp":Z
    :goto_33
    invoke-virtual {p1}, Landroid/view/InputEvent;->getSource()I

    move-result v4

    const/16 v5, 0x2002

    if-ne v4, v5, :cond_3c

    move v1, v2

    .line 9269
    .local v1, "isMouseEvent":Z
    :cond_3c
    if-nez v3, :cond_40

    if-eqz v1, :cond_43

    .line 9270
    :cond_40
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->syncInputTransactions()V

    .line 9272
    :cond_43
    const-class v2, Landroid/hardware/input/InputManagerInternal;

    .line 9273
    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/hardware/input/InputManagerInternal;

    invoke-virtual {v2, p1, p2}, Landroid/hardware/input/InputManagerInternal;->injectInputEvent(Landroid/view/InputEvent;I)Z

    move-result v2

    .line 9274
    .local v2, "result":Z
    if-eqz v0, :cond_54

    .line 9275
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->syncInputTransactions()V

    .line 9277
    :cond_54
    return v2
.end method

.method intersectDisplayInsetBounds(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .registers 5
    .param p1, "display"    # Landroid/graphics/Rect;
    .param p2, "insets"    # Landroid/graphics/Rect;
    .param p3, "inOutBounds"    # Landroid/graphics/Rect;

    .line 7825
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {v0, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 7826
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {v0, p2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    .line 7827
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {p3, v0}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    .line 7828
    return-void
.end method

.method isCurrentProfile(I)Z
    .registers 6
    .param p1, "userId"    # I

    .line 3846
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    const/4 v1, 0x1

    if-ne p1, v0, :cond_6

    return v1

    .line 3847
    :cond_6
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_7
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    array-length v3, v2

    if-ge v0, v3, :cond_14

    .line 3848
    aget v2, v2, v0

    if-ne v2, p1, :cond_11

    return v1

    .line 3847
    :cond_11
    add-int/lit8 v0, v0, 0x1

    goto :goto_7

    .line 3850
    .end local v0    # "i":I
    :cond_14
    const/4 v0, 0x0

    return v0
.end method

.method public isDisplayRotationFrozen(I)Z
    .registers 6
    .param p1, "displayId"    # I

    .line 4341
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4342
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4343
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_1b

    .line 4344
    const-string v2, "WindowManager"

    const-string v3, "Trying to thaw rotation for a missing display."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4345
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_17
    .catchall {:try_start_3 .. :try_end_17} :catchall_28

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4347
    :cond_1b
    :try_start_1b
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotation;->isRotationFrozen()Z

    move-result v2

    monitor-exit v0
    :try_end_24
    .catchall {:try_start_1b .. :try_end_24} :catchall_28

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4348
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    :catchall_28
    move-exception v1

    :try_start_29
    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_29 .. :try_end_2a} :catchall_28

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public isFolded()Z
    .registers 2

    .line 9837
    const/4 v0, 0x0

    return v0
.end method

.method public isKeyguardLocked()Z
    .registers 2

    .line 3489
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v0

    return v0
.end method

.method public isKeyguardSecure(I)Z
    .registers 5
    .param p1, "userId"    # I

    .line 3498
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    if-eq p1, v0, :cond_1a

    .line 3499
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    const-string/jumbo v1, "isKeyguardSecure"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_12

    goto :goto_1a

    .line 3501
    :cond_12
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERACT_ACROSS_USERS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3504
    :cond_1a
    :goto_1a
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3506
    .local v0, "origId":J
    :try_start_1e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v2, p1}, Lcom/android/server/policy/WindowManagerPolicy;->isKeyguardSecure(I)Z

    move-result v2
    :try_end_24
    .catchall {:try_start_1e .. :try_end_24} :catchall_28

    .line 3508
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3506
    return v2

    .line 3508
    :catchall_28
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3509
    throw v2
.end method

.method public isKeyguardShowingAndNotOccluded()Z
    .registers 2

    .line 3493
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->isKeyguardShowingAndNotOccluded()Z

    move-result v0

    return v0
.end method

.method public isLayerTracing()Z
    .registers 9

    .line 9552
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "isLayerTracing"

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9554
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9556
    .local v0, "token":J
    const/4 v2, 0x0

    .line 9557
    .local v2, "data":Landroid/os/Parcel;
    const/4 v3, 0x0

    .line 9559
    .local v3, "reply":Landroid/os/Parcel;
    const/4 v4, 0x0

    :try_start_11
    const-string v5, "SurfaceFlinger"

    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v5

    .line 9560
    .local v5, "sf":Landroid/os/IBinder;
    if-eqz v5, :cond_3f

    .line 9561
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    move-object v3, v6

    .line 9562
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    move-object v2, v6

    .line 9563
    const-string v6, "android.ui.ISurfaceComposer"

    invoke-virtual {v2, v6}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 9564
    const/16 v6, 0x402

    invoke-interface {v5, v6, v2, v3, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 9565
    invoke-virtual {v3}, Landroid/os/Parcel;->readBoolean()Z

    move-result v4
    :try_end_31
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_31} :catch_4c
    .catchall {:try_start_11 .. :try_end_31} :catchall_4a

    .line 9570
    if-eqz v2, :cond_36

    .line 9571
    :try_start_33
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 9573
    :cond_36
    if-eqz v3, :cond_3b

    .line 9574
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V
    :try_end_3b
    .catchall {:try_start_33 .. :try_end_3b} :catchall_67

    .line 9578
    :cond_3b
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9565
    return v4

    .line 9570
    .end local v5    # "sf":Landroid/os/IBinder;
    :cond_3f
    if-eqz v2, :cond_44

    .line 9571
    :try_start_41
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 9573
    :cond_44
    if-eqz v3, :cond_5c

    .line 9574
    :goto_46
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V
    :try_end_49
    .catchall {:try_start_41 .. :try_end_49} :catchall_67

    goto :goto_5c

    .line 9570
    :catchall_4a
    move-exception v4

    goto :goto_61

    .line 9567
    :catch_4c
    move-exception v5

    .line 9568
    .local v5, "e":Landroid/os/RemoteException;
    :try_start_4d
    const-string v6, "WindowManager"

    const-string v7, "Failed to get layer tracing"

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_54
    .catchall {:try_start_4d .. :try_end_54} :catchall_4a

    .line 9570
    .end local v5    # "e":Landroid/os/RemoteException;
    if-eqz v2, :cond_59

    .line 9571
    :try_start_56
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V
    :try_end_59
    .catchall {:try_start_56 .. :try_end_59} :catchall_67

    .line 9573
    :cond_59
    if-eqz v3, :cond_5c

    .line 9574
    goto :goto_46

    .line 9578
    .end local v2    # "data":Landroid/os/Parcel;
    .end local v3    # "reply":Landroid/os/Parcel;
    :cond_5c
    :goto_5c
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9579
    nop

    .line 9580
    return v4

    .line 9570
    .restart local v2    # "data":Landroid/os/Parcel;
    .restart local v3    # "reply":Landroid/os/Parcel;
    :goto_61
    if-eqz v2, :cond_69

    .line 9571
    :try_start_63
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    goto :goto_69

    .line 9578
    .end local v2    # "data":Landroid/os/Parcel;
    .end local v3    # "reply":Landroid/os/Parcel;
    :catchall_67
    move-exception v2

    goto :goto_70

    .line 9573
    .restart local v2    # "data":Landroid/os/Parcel;
    .restart local v3    # "reply":Landroid/os/Parcel;
    :cond_69
    :goto_69
    if-eqz v3, :cond_6e

    .line 9574
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 9576
    :cond_6e
    nop

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v4
    :try_end_70
    .catchall {:try_start_63 .. :try_end_70} :catchall_67

    .line 9578
    .end local v2    # "data":Landroid/os/Parcel;
    .end local v3    # "reply":Landroid/os/Parcel;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :goto_70
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9579
    throw v2
.end method

.method public isMetaKeyEventRequested(Landroid/content/ComponentName;)Z
    .registers 3
    .param p1, "componentName"    # Landroid/content/ComponentName;

    .line 10250
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicyExt;->isMetaKeyEventRequested(Landroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isOnScreenWindow(I)Z
    .registers 8
    .param p1, "uid"    # I

    .line 10440
    const/4 v0, 0x0

    .line 10441
    .local v0, "curWindow":Lcom/android/server/wm/WindowState;
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 10443
    .local v1, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2

    :try_start_9
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10444
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v4, Lcom/android/server/wm/-$$Lambda$WindowManagerService$4P0X355edDR5urCQYieXgN1jMyw;

    invoke-direct {v4, v1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$4P0X355edDR5urCQYieXgN1jMyw;-><init>(Ljava/util/ArrayList;)V

    const/4 v5, 0x1

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 10447
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_18
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_39

    .line 10448
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    move-object v0, v4

    .line 10449
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v4

    if-ne v4, p1, :cond_36

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v4

    if-eqz v4, :cond_36

    .line 10450
    monitor-exit v2
    :try_end_32
    .catchall {:try_start_9 .. :try_end_32} :catchall_3f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v5

    .line 10447
    :cond_36
    add-int/lit8 v3, v3, 0x1

    goto :goto_18

    .line 10453
    .end local v3    # "i":I
    :cond_39
    :try_start_39
    monitor-exit v2
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_3f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 10454
    const/4 v2, 0x0

    return v2

    .line 10453
    :catchall_3f
    move-exception v3

    :try_start_40
    monitor-exit v2
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_3f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v3
.end method

.method public isRotationFrozen()Z
    .registers 2

    .line 4336
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isDisplayRotationFrozen(I)Z

    move-result v0

    return v0
.end method

.method public isSafeModeEnabled()Z
    .registers 2

    .line 6955
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v0
.end method

.method public isSupportFoldSDK()Z
    .registers 2

    .line 9885
    const/4 v0, 0x0

    return v0
.end method

.method public isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z
    .registers 4
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;

    .line 10245
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2}, Lcom/android/server/policy/WindowManagerPolicyExt;->isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isTableMode()Z
    .registers 2

    .line 9876
    const/4 v0, 0x0

    return v0
.end method

.method isValidPictureInPictureAspectRatio(Lcom/android/server/wm/DisplayContent;F)Z
    .registers 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "aspectRatio"    # F

    .line 3283
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getPinnedStackController()Lcom/android/server/wm/PinnedStackController;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/server/wm/PinnedStackController;->isValidPictureInPictureAspectRatio(F)Z

    move-result v0

    return v0
.end method

.method public isViewServerRunning()Z
    .registers 4

    .line 4805
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_8

    .line 4806
    return v1

    .line 4809
    :cond_8
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v2, "isViewServerRunning"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 4810
    return v1

    .line 4813
    :cond_14
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v0, :cond_1f

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_1f

    const/4 v1, 0x1

    :cond_1f
    return v1
.end method

.method public isWindowToken(Landroid/os/IBinder;)Z
    .registers 6
    .param p1, "binder"    # Landroid/os/IBinder;

    .line 3114
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3115
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v1

    .line 3116
    .local v1, "windowToken":Lcom/android/server/wm/WindowToken;
    const/4 v2, 0x0

    if-nez v1, :cond_14

    .line 3117
    monitor-exit v0
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_20

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3120
    :cond_14
    :try_start_14
    invoke-virtual {v1}, Lcom/android/server/wm/WindowToken;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    move-result-object v3

    if-nez v3, :cond_1b

    const/4 v2, 0x1

    :cond_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_14 .. :try_end_1c} :catchall_20

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3121
    .end local v1    # "windowToken":Lcom/android/server/wm/WindowToken;
    :catchall_20
    move-exception v1

    :try_start_21
    monitor-exit v0
    :try_end_22
    .catchall {:try_start_21 .. :try_end_22} :catchall_20

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public isWindowTraceEnabled()Z
    .registers 2

    .line 6151
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowTracing;->isEnabled()Z

    move-result v0

    return v0
.end method

.method public keyguardGoingAwayWithFingerprintUnlock(Z)V
    .registers 3
    .param p1, "isWakeAndUnlock"    # Z

    .line 10382
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicyExt;->keyguardGoingAwayWithFingerprintUnlock(Z)V

    .line 10383
    return-void
.end method

.method public synthetic lambda$checkDrawnWindowsLocked$9$WindowManagerService(Lcom/android/server/wm/WindowContainer;Ljava/lang/Runnable;)V
    .registers 21
    .param p1, "container"    # Lcom/android/server/wm/WindowContainer;
    .param p2, "callback"    # Ljava/lang/Runnable;

    .line 6211
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    iget-object v2, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    .local v2, "j":I
    :goto_c
    const/4 v4, 0x0

    if-ltz v2, :cond_ad

    .line 6212
    iget-object v5, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 6213
    .local v5, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v6, Lcom/android/server/protolog/ProtoLog$Cache;->WM_FORCE_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v6, :cond_5b

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam0":Ljava/lang/String;
    iget-boolean v7, v5, Lcom/android/server/wm/WindowState;->mRemoved:Z

    .local v7, "protoLogParam1":Z
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v8

    .local v8, "protoLogParam2":Z
    iget-boolean v9, v5, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .local v9, "protoLogParam3":Z
    iget-object v10, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v10, v10, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    int-to-long v10, v10

    .local v10, "protoLogParam4":J
    sget-object v12, Lcom/android/server/wm/ProtoLogGroup;->WM_FORCE_DEBUG_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v13, 0x513445a9

    const/16 v14, 0x1fc

    const/4 v15, 0x5

    new-array v15, v15, [Ljava/lang/Object;

    aput-object v6, v15, v4

    invoke-static {v7}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v15, v3

    const/16 v16, 0x2

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x3

    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x4

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v17

    aput-object v17, v15, v16

    const-string v4, "Waiting for drawn %s: removed=%b visible=%b mHasSurface=%b drawState=%d"

    invoke-static {v12, v13, v14, v4, v15}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6217
    .end local v6    # "protoLogParam0":Ljava/lang/String;
    .end local v7    # "protoLogParam1":Z
    .end local v8    # "protoLogParam2":Z
    .end local v9    # "protoLogParam3":Z
    .end local v10    # "protoLogParam4":J
    :cond_5b
    iget-boolean v4, v5, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-nez v4, :cond_8d

    iget-boolean v4, v5, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_8d

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleByPolicy()Z

    move-result v4

    if-nez v4, :cond_6a

    goto :goto_8d

    .line 6222
    :cond_6a
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    move-result v4

    if-eqz v4, :cond_a9

    .line 6224
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_FORCE_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v4, :cond_87

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_FORCE_DEBUG_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0xf67aee4

    new-array v8, v3, [Ljava/lang/Object;

    const/4 v9, 0x0

    aput-object v4, v8, v9

    const-string v10, "Window drawn win=%s"

    invoke-static {v6, v7, v9, v10, v8}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6226
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_87
    iget-object v4, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_a9

    .line 6219
    :cond_8d
    :goto_8d
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_FORCE_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v4, :cond_a4

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .restart local v4    # "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_FORCE_DEBUG_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x1b28a875

    new-array v8, v3, [Ljava/lang/Object;

    const/4 v9, 0x0

    aput-object v4, v8, v9

    const-string v10, "Aborted waiting for drawn: %s"

    invoke-static {v6, v7, v9, v10, v8}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6221
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_a4
    iget-object v4, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 6211
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_a9
    :goto_a9
    add-int/lit8 v2, v2, -0x1

    goto/16 :goto_c

    .line 6229
    .end local v2    # "j":I
    :cond_ad
    iget-object v2, v1, Lcom/android/server/wm/WindowContainer;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_d9

    .line 6230
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_FORCE_DEBUG_SCREEN_ON_enabled:Z

    if-eqz v2, :cond_c7

    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_FORCE_DEBUG_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v3, -0x513e1694

    const/4 v4, 0x0

    check-cast v4, [Ljava/lang/Object;

    const-string v5, "All windows drawn!"

    const/4 v6, 0x0

    invoke-static {v2, v3, v6, v5, v4}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6232
    :cond_c7
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x18

    invoke-virtual {v2, v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 6233
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x21

    invoke-virtual {v2, v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 6235
    :cond_d9
    return-void
.end method

.method public synthetic lambda$displayReady$7$WindowManagerService(Lcom/android/server/wm/DisplayContent;)V
    .registers 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 5251
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mMaxUiWidth:I

    invoke-virtual {p1, v0}, Lcom/android/server/wm/DisplayContent;->setMaxUiWidth(I)V

    return-void
.end method

.method public synthetic lambda$new$0$WindowManagerService()V
    .registers 2

    .line 768
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    return-void
.end method

.method public synthetic lambda$onOverlayChanged$15$WindowManagerService([ZLcom/android/server/wm/DisplayContent;)V
    .registers 13
    .param p1, "needTraversal"    # [Z
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 7597
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v0

    .line 7598
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1}, Lcom/android/server/policy/WindowManagerPolicy;->getUiMode()I

    move-result v1

    .line 7599
    .local v1, "uiMode":I
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v2

    .line 7600
    .local v2, "rotation":I
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v3

    .line 7601
    invoke-virtual {v3, v2, v1}, Lcom/android/server/wm/DisplayPolicy;->getNavigationBarHeight(II)I

    move-result v3

    .line 7602
    .local v3, "navHeight":I
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v4

    iget v5, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v6, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    iget v7, v0, Landroid/view/DisplayInfo;->rotation:I

    .line 7603
    invoke-virtual {v4, v5, v6, v7}, Lcom/android/server/wm/DisplayPolicy;->navigationBarPosition(III)I

    move-result v4

    .line 7606
    .local v4, "navPosition":I
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayPolicy;->onOverlayChangedLw()V

    .line 7607
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 7611
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v5

    .line 7612
    invoke-virtual {v5, v2, v1}, Lcom/android/server/wm/DisplayPolicy;->getNavigationBarHeight(II)I

    move-result v5

    .line 7613
    .local v5, "newHeight":I
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v6

    iget v7, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v8, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    iget v9, v0, Landroid/view/DisplayInfo;->rotation:I

    .line 7614
    invoke-virtual {v6, v7, v8, v9}, Lcom/android/server/wm/DisplayPolicy;->navigationBarPosition(III)I

    move-result v6

    .line 7615
    .local v6, "newNavPosition":I
    if-ne v3, v5, :cond_48

    if-eq v4, v6, :cond_4e

    .line 7616
    :cond_48
    invoke-virtual {p2}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 7617
    const/4 v7, 0x0

    aput-boolean v7, p1, v7

    .line 7621
    .end local v5    # "newHeight":I
    .end local v6    # "newNavPosition":I
    :cond_4e
    return-void
.end method

.method public synthetic lambda$stopFreezingDisplayLocked$10$WindowManagerService(Lcom/android/server/wm/DisplayContent;)V
    .registers 2
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 6455
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 6456
    return-void
.end method

.method public lockDeviceNow()V
    .registers 2

    .line 3761
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    .line 3762
    return-void
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .registers 3
    .param p1, "options"    # Landroid/os/Bundle;

    .line 6946
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    .line 6947
    return-void
.end method

.method makeSurfaceBuilder(Landroid/view/SurfaceSession;)Landroid/view/SurfaceControl$Builder;
    .registers 3
    .param p1, "s"    # Landroid/view/SurfaceSession;

    .line 9210
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mSurfaceControlFactory:Ljava/util/function/Function;

    invoke-interface {v0, p1}, Ljava/util/function/Function;->apply(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/SurfaceControl$Builder;

    return-object v0
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .registers 9
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .line 6191
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowToken;->okToDisplay()Z

    move-result v0

    if-nez v0, :cond_40

    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    const/4 v1, 0x2

    if-eq v0, v1, :cond_40

    .line 6192
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_24

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v3, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x614835ed

    const/4 v5, 0x0

    new-array v6, v1, [Ljava/lang/Object;

    aput-object v0, v6, v2

    invoke-static {v3, v4, v2, v5, v6}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6193
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_24
    invoke-virtual {p1, v1}, Lcom/android/server/wm/WindowState;->setOrientationChanging(Z)V

    .line 6194
    iput v2, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 6195
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iput-boolean v2, v0, Lcom/android/server/wm/RootWindowContainer;->mOrientationChangeComplete:Z

    .line 6196
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    if-nez v0, :cond_40

    .line 6197
    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 6200
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xb

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const-wide/16 v3, 0x7d0

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendNewMessageDelayed(ILjava/lang/Object;J)V

    .line 6204
    :cond_40
    return-void
.end method

.method public mirrorDisplay(ILandroid/view/SurfaceControl;)Z
    .registers 8
    .param p1, "displayId"    # I
    .param p2, "outSurfaceControl"    # Landroid/view/SurfaceControl;

    .line 9639
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v1, "mirrorDisplay()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_54

    .line 9644
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9645
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 9646
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_3a

    .line 9647
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Invalid displayId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " for mirrorDisplay"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9648
    const/4 v2, 0x0

    monitor-exit v0
    :try_end_36
    .catchall {:try_start_e .. :try_end_36} :catchall_4e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 9651
    :cond_3a
    :try_start_3a
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getWindowingLayer()Landroid/view/SurfaceControl;

    move-result-object v2

    move-object v1, v2

    .line 9652
    .local v1, "displaySc":Landroid/view/SurfaceControl;
    monitor-exit v0
    :try_end_40
    .catchall {:try_start_3a .. :try_end_40} :catchall_4e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9654
    invoke-static {v1}, Landroid/view/SurfaceControl;->mirrorSurface(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl;

    move-result-object v0

    .line 9655
    .local v0, "mirror":Landroid/view/SurfaceControl;
    const-string v2, "WMS.mirrorDisplay"

    invoke-virtual {p2, v0, v2}, Landroid/view/SurfaceControl;->copyFrom(Landroid/view/SurfaceControl;Ljava/lang/String;)V

    .line 9657
    const/4 v2, 0x1

    return v2

    .line 9652
    .end local v0    # "mirror":Landroid/view/SurfaceControl;
    .end local v1    # "displaySc":Landroid/view/SurfaceControl;
    :catchall_4e
    move-exception v1

    :try_start_4f
    monitor-exit v0
    :try_end_50
    .catchall {:try_start_4f .. :try_end_50} :catchall_4e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 9640
    :cond_54
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public modifyDisplayWindowInsets(ILandroid/view/InsetsState;)V
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "state"    # Landroid/view/InsetsState;

    .line 4504
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_46

    .line 4508
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4510
    .local v0, "origId":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_41

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4511
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4512
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_33

    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mRemoteInsetsControlTarget:Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;

    if-nez v4, :cond_21

    goto :goto_33

    .line 4515
    :cond_21
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getInsetsStateController()Lcom/android/server/wm/InsetsStateController;

    move-result-object v4

    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mRemoteInsetsControlTarget:Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;

    invoke-virtual {v4, v5, p2}, Lcom/android/server/wm/InsetsStateController;->onInsetsModified(Lcom/android/server/wm/InsetsControlTarget;Landroid/view/InsetsState;)V

    .line 4517
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_2b
    .catchall {:try_start_11 .. :try_end_2b} :catchall_3b

    :try_start_2b
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2e
    .catchall {:try_start_2b .. :try_end_2e} :catchall_41

    .line 4519
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4520
    nop

    .line 4521
    return-void

    .line 4513
    .restart local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_33
    :goto_33
    :try_start_33
    monitor-exit v2
    :try_end_34
    .catchall {:try_start_33 .. :try_end_34} :catchall_3b

    .line 4519
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4513
    return-void

    .line 4517
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_3b
    move-exception v3

    :try_start_3c
    monitor-exit v2
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_3b

    :try_start_3d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "state":Landroid/view/InsetsState;
    throw v3
    :try_end_41
    .catchall {:try_start_3d .. :try_end_41} :catchall_41

    .line 4519
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "state":Landroid/view/InsetsState;
    :catchall_41
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4520
    throw v2

    .line 4506
    .end local v0    # "origId":J
    :cond_46
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public monitor()V
    .registers 3

    .line 7579
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    monitor-exit v0
    :try_end_7
    .catchall {:try_start_3 .. :try_end_7} :catchall_b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7580
    return-void

    .line 7579
    :catchall_b
    move-exception v1

    :try_start_c
    monitor-exit v0
    :try_end_d
    .catchall {:try_start_c .. :try_end_d} :catchall_b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public moveDisplayToTop(I)V
    .registers 6
    .param p1, "displayId"    # I

    .line 3348
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3349
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3350
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1d

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2}, Lcom/android/server/wm/RootWindowContainer;->getTopChild()Lcom/android/server/wm/WindowContainer;

    move-result-object v2

    if-eq v2, v1, :cond_1d

    .line 3351
    const v2, 0x7fffffff

    const/4 v3, 0x1

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/DisplayContent;->positionDisplayAt(IZ)V

    .line 3354
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1d
    monitor-exit v0
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3355
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->syncInputTransactions()V

    .line 3356
    return-void

    .line 3354
    :catchall_25
    move-exception v1

    :try_start_26
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_25

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public moveDisplayToTop(ILjava/lang/String;)V
    .registers 3
    .param p1, "displayId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .line 10175
    return-void
.end method

.method notifyHardKeyboardStatusChange()V
    .registers 4

    .line 5086
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5087
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

    .line 5088
    .local v1, "listener":Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    .line 5089
    .local v2, "available":Z
    monitor-exit v0
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_14

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5090
    if-eqz v1, :cond_13

    .line 5091
    invoke-interface {v1, v2}, Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    .line 5093
    :cond_13
    return-void

    .line 5089
    .end local v1    # "listener":Lcom/android/server/wm/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    .end local v2    # "available":Z
    :catchall_14
    move-exception v1

    :try_start_15
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_15 .. :try_end_16} :catchall_14

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method notifyKeyguardFlagsChanged(Ljava/lang/Runnable;I)V
    .registers 4
    .param p1, "callback"    # Ljava/lang/Runnable;
    .param p2, "displayId"    # I

    .line 3364
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->notifyKeyguardFlagsChanged(Ljava/lang/Runnable;I)V

    .line 3365
    return-void
.end method

.method public notifyKeyguardTrustedChanged()V
    .registers 2

    .line 3311
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->notifyKeyguardTrustedChanged()V

    .line 3312
    return-void
.end method

.method public notifyShowingDreamChanged()V
    .registers 3

    .line 3301
    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->notifyKeyguardFlagsChanged(Ljava/lang/Runnable;I)V

    .line 3302
    return-void
.end method

.method onAnimationFinished()V
    .registers 3

    .line 9333
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9334
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    invoke-virtual {v1}, Ljava/lang/Object;->notifyAll()V

    .line 9335
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9336
    return-void

    .line 9335
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onInitReady()V
    .registers 2

    .line 1526
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->initPolicy()V

    .line 1529
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 1530
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermark()V

    .line 1531
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->showEmulatorDisplayOverlayIfNeeded()V

    .line 1532
    return-void
.end method

.method public onKeyguardShowingAndNotOccludedChanged()V
    .registers 3

    .line 3326
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x3d

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3327
    return-void
.end method

.method onLockTaskStateChanged(I)V
    .registers 6
    .param p1, "lockTaskState"    # I

    .line 9224
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9227
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v1, v1, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicyExt;->onLockTaskStateChanged(I)V

    .line 9230
    sget-object v1, Lcom/android/server/wm/-$$Lambda$5zz5Ugt4wxIXoNE3lZS6NA9z_Jk;->INSTANCE:Lcom/android/server/wm/-$$Lambda$5zz5Ugt4wxIXoNE3lZS6NA9z_Jk;

    .line 9231
    invoke-static {}, Lcom/android/internal/util/function/pooled/PooledLambda;->__()Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;

    move-result-object v2

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    .line 9230
    invoke-static {v1, v2, v3}, Lcom/android/internal/util/function/pooled/PooledLambda;->obtainConsumer(Ljava/util/function/BiConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer;

    move-result-object v1

    .line 9232
    .local v1, "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 9233
    invoke-interface {v1}, Lcom/android/internal/util/function/pooled/PooledConsumer;->recycle()V

    .line 9234
    .end local v1    # "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    monitor-exit v0
    :try_end_24
    .catchall {:try_start_3 .. :try_end_24} :catchall_28

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9235
    return-void

    .line 9234
    :catchall_28
    move-exception v1

    :try_start_29
    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_29 .. :try_end_2a} :catchall_28

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onOverlayChanged()V
    .registers 6

    .line 7590
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7592
    const/4 v1, 0x1

    new-array v2, v1, [Z

    const/4 v3, 0x0

    aput-boolean v1, v2, v3

    move-object v1, v2

    .line 7595
    .local v1, "needTraversal":[Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v4, Lcom/android/server/wm/-$$Lambda$WindowManagerService$H528DvYqVoKgtfAOKV1hgSage0A;

    invoke-direct {v4, p0, v1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$H528DvYqVoKgtfAOKV1hgSage0A;-><init>(Lcom/android/server/wm/WindowManagerService;[Z)V

    invoke-virtual {v2, v4}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 7624
    aget-boolean v2, v1, v3

    if-eqz v2, :cond_1e

    .line 7626
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V

    .line 7628
    .end local v1    # "needTraversal":[Z
    :cond_1e
    monitor-exit v0
    :try_end_1f
    .catchall {:try_start_3 .. :try_end_1f} :catchall_23

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7629
    return-void

    .line 7628
    :catchall_23
    move-exception v1

    :try_start_24
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_24 .. :try_end_25} :catchall_23

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onPowerKeyDown(Z)V
    .registers 5
    .param p1, "isScreenOn"    # Z

    .line 3331
    sget-object v0, Lcom/android/server/wm/-$$Lambda$99XNq73vh8e4HVH9BuxFhbLxKVY;->INSTANCE:Lcom/android/server/wm/-$$Lambda$99XNq73vh8e4HVH9BuxFhbLxKVY;

    .line 3332
    invoke-static {}, Lcom/android/internal/util/function/pooled/PooledLambda;->__()Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;

    move-result-object v1

    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v2

    .line 3331
    invoke-static {v0, v1, v2}, Lcom/android/internal/util/function/pooled/PooledLambda;->obtainConsumer(Ljava/util/function/BiConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer;

    move-result-object v0

    .line 3333
    .local v0, "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 3334
    invoke-interface {v0}, Lcom/android/internal/util/function/pooled/PooledConsumer;->recycle()V

    .line 3335
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    .line 2389
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2390
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_1d

    .line 2391
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 2392
    .local v1, "window":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_1d

    .line 2393
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    .line 2394
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    .line 2393
    invoke-virtual {v2, v3, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequestedLocked(ILandroid/graphics/Rect;)V

    .line 2397
    .end local v1    # "window":Lcom/android/server/wm/WindowState;
    :cond_1d
    monitor-exit v0
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_22

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2398
    return-void

    .line 2397
    :catchall_22
    move-exception v1

    :try_start_23
    monitor-exit v0
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public onShellCommand(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)V
    .registers 15
    .param p1, "in"    # Ljava/io/FileDescriptor;
    .param p2, "out"    # Ljava/io/FileDescriptor;
    .param p3, "err"    # Ljava/io/FileDescriptor;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "callback"    # Landroid/os/ShellCallback;
    .param p6, "result"    # Landroid/os/ResultReceiver;

    .line 1280
    new-instance v0, Lcom/android/server/wm/WindowManagerShellCommand;

    invoke-direct {v0, p0}, Lcom/android/server/wm/WindowManagerShellCommand;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object v7, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/WindowManagerShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    .line 1281
    return-void
.end method

.method public onSystemUiStarted()V
    .registers 2

    .line 3912
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->onSystemUiStarted()V

    .line 3913
    return-void
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .registers 12
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 1542
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    move-result v0
    :try_end_4
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_4} :catch_5

    return v0

    .line 1543
    :catch_5
    move-exception v0

    .line 1546
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    if-nez v1, :cond_22

    .line 1547
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_22

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x1626ce5b

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object v1, v4, v5

    const-string v6, "Window Manager Crash %s"

    invoke-static {v2, v3, v5, v6, v4}, Lcom/android/server/protolog/ProtoLogImpl;->wtf(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 1549
    .end local v1    # "protoLogParam0":Ljava/lang/String;
    :cond_22
    throw v0
.end method

.method public onUserSwitched()V
    .registers 4

    .line 3339
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;->updateSystemUiSettings()V

    .line 3340
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_8
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3342
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v2, Lcom/android/server/wm/-$$Lambda$_jL5KNK44AQYPj1d8Hd3FYO0W-M;->INSTANCE:Lcom/android/server/wm/-$$Lambda$_jL5KNK44AQYPj1d8Hd3FYO0W-M;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 3343
    monitor-exit v0
    :try_end_13
    .catchall {:try_start_8 .. :try_end_13} :catchall_17

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3344
    return-void

    .line 3343
    :catchall_17
    move-exception v1

    :try_start_18
    monitor-exit v0
    :try_end_19
    .catchall {:try_start_18 .. :try_end_19} :catchall_17

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;)Landroid/view/IWindowSession;
    .registers 3
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;

    .line 5853
    new-instance v0, Lcom/android/server/wm/Session;

    invoke-direct {v0, p0, p1}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;)V

    return-object v0
.end method

.method openSurfaceTransaction()V
    .registers 4

    .line 1131
    const-wide/16 v0, 0x20

    :try_start_2
    const-string/jumbo v2, "openSurfaceTransaction"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 1132
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_b
    .catchall {:try_start_2 .. :try_end_b} :catchall_10

    .line 1134
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1135
    nop

    .line 1136
    return-void

    .line 1134
    :catchall_10
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 1135
    throw v2
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .registers 11
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .line 2972
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2975
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_31

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2976
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 2977
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_19

    .line 2978
    monitor-exit v2
    :try_end_12
    .catchall {:try_start_7 .. :try_end_12} :catchall_2b

    .line 2983
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2978
    return v3

    .line 2980
    :cond_19
    :try_start_19
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const-string v7, "from-client"

    invoke-virtual {v5, v6, v7, v3}, Lcom/android/server/wm/RootWindowContainer;->reclaimSomeSurfaceMemory(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z

    move-result v3

    monitor-exit v2
    :try_end_24
    .catchall {:try_start_19 .. :try_end_24} :catchall_2b

    .line 2983
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2980
    return v3

    .line 2981
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :catchall_2b
    move-exception v3

    :try_start_2c
    monitor-exit v2
    :try_end_2d
    .catchall {:try_start_2c .. :try_end_2d} :catchall_2b

    :try_start_2d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    throw v3
    :try_end_31
    .catchall {:try_start_2d .. :try_end_31} :catchall_31

    .line 2983
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    :catchall_31
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2984
    throw v2
.end method

.method public overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;ZI)V
    .registers 10
    .param p1, "specsFuture"    # Landroid/view/IAppTransitionAnimationSpecsFuture;
    .param p2, "callback"    # Landroid/os/IRemoteCallback;
    .param p3, "scaleUp"    # Z
    .param p4, "displayId"    # I

    .line 3190
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3191
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3192
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_2e

    .line 3193
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to call overridePendingAppTransitionMultiThumbFuture for the display "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " that does not exist."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3195
    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_3 .. :try_end_2a} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3197
    :cond_2e
    :try_start_2e
    iget-object v2, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V

    .line 3199
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_34
    .catchall {:try_start_2e .. :try_end_34} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3200
    return-void

    .line 3199
    :catchall_38
    move-exception v1

    :try_start_39
    monitor-exit v0
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public overridePendingAppTransitionRemote(Landroid/view/RemoteAnimationAdapter;I)V
    .registers 8
    .param p1, "remoteAnimationAdapter"    # Landroid/view/RemoteAnimationAdapter;
    .param p2, "displayId"    # I

    .line 3205
    const-string v0, "android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS"

    const-string/jumbo v1, "overridePendingAppTransitionRemote()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_49

    .line 3210
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3211
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3212
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_39

    .line 3213
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to call overridePendingAppTransitionRemote for the display "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " that does not exist."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3215
    monitor-exit v0
    :try_end_35
    .catchall {:try_start_e .. :try_end_35} :catchall_43

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3217
    :cond_39
    :try_start_39
    iget-object v2, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionRemote(Landroid/view/RemoteAnimationAdapter;)V

    .line 3219
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_3f
    .catchall {:try_start_39 .. :try_end_3f} :catchall_43

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3220
    return-void

    .line 3219
    :catchall_43
    move-exception v1

    :try_start_44
    monitor-exit v0
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_43

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3207
    :cond_49
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public performBootTimeout()V
    .registers 7

    .line 3898
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3899
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v1, :cond_f

    .line 3900
    monitor-exit v0
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_2c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 3902
    :cond_f
    :try_start_f
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_21

    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v2, 0x3bb7db44

    const/4 v3, 0x0

    const-string v4, "***** BOOT TIMEOUT: forcing display enabled"

    const/4 v5, 0x0

    check-cast v5, [Ljava/lang/Object;

    invoke-static {v1, v2, v3, v4, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3903
    :cond_21
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 3904
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_f .. :try_end_25} :catchall_2c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3905
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 3906
    return-void

    .line 3904
    :catchall_2c
    move-exception v1

    :try_start_2d
    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_2d .. :try_end_2e} :catchall_2c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .registers 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    .line 2408
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2409
    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 2410
    .local v1, "window":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_12

    .line 2411
    iget-wide v2, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V

    .line 2413
    .end local v1    # "window":Lcom/android/server/wm/WindowState;
    :cond_12
    monitor-exit v0
    :try_end_13
    .catchall {:try_start_3 .. :try_end_13} :catchall_17

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2414
    return-void

    .line 2413
    :catchall_17
    move-exception v1

    :try_start_18
    monitor-exit v0
    :try_end_19
    .catchall {:try_start_18 .. :try_end_19} :catchall_17

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method postWindowRemoveCleanupLocked(Lcom/android/server/wm/WindowState;)V
    .registers 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .line 2203
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    const/4 v1, 0x0

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-eqz v0, :cond_17

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/server/wm/ProtoLogGroup;

    const v5, -0x252230fa

    new-array v6, v2, [Ljava/lang/Object;

    aput-object v0, v6, v3

    invoke-static {v4, v5, v3, v1, v6}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2204
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_17
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v4}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 2206
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 2207
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v4

    invoke-virtual {v4, p1, v3}, Lcom/android/server/wm/DisplayRotation;->markForSeamlessRotation(Lcom/android/server/wm/WindowState;Z)V

    .line 2209
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->resetAppOpsState()V

    .line 2211
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-nez v4, :cond_39

    .line 2212
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mWinRemovedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2214
    :cond_39
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/EmbeddedWindowController;->onWindowRemoved(Lcom/android/server/wm/WindowState;)V

    .line 2215
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2216
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2217
    invoke-virtual {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->updateNonSystemOverlayWindowsVisibilityIfNeeded(Lcom/android/server/wm/WindowState;Z)V

    .line 2218
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 2219
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_WINDOW_MOVEMENT_enabled:Z

    if-eqz v4, :cond_61

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_WINDOW_MOVEMENT:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0xb8ce44d

    new-array v7, v2, [Ljava/lang/Object;

    aput-object v4, v7, v3

    invoke-static {v5, v6, v3, v1, v7}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2221
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_61
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 2222
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v5, v4, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v5, p1, :cond_6d

    .line 2223
    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayContent;->setInputMethodWindowLocked(Lcom/android/server/wm/WindowState;)V

    goto :goto_74

    .line 2226
    :cond_6d
    iget-object v5, v4, Lcom/android/server/wm/DisplayContent;->mClipBoardWindow:Lcom/android/server/wm/WindowState;

    if-ne v5, p1, :cond_74

    .line 2227
    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayContent;->setClipBoardWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 2231
    :cond_74
    :goto_74
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 2232
    .local v5, "token":Lcom/android/server/wm/WindowToken;
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2233
    .local v6, "activity":Lcom/android/server/wm/ActivityRecord;
    sget-boolean v7, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ADD_REMOVE_enabled:Z

    if-eqz v7, :cond_93

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam1":Ljava/lang/String;
    sget-object v9, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/server/wm/ProtoLogGroup;

    const v10, -0x75080bd7

    const/4 v11, 0x2

    new-array v11, v11, [Ljava/lang/Object;

    aput-object v7, v11, v3

    aput-object v8, v11, v2

    invoke-static {v9, v10, v3, v1, v11}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2235
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    .end local v8    # "protoLogParam1":Ljava/lang/String;
    :cond_93
    invoke-virtual {v5}, Lcom/android/server/wm/WindowToken;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_b3

    .line 2236
    iget-boolean v1, v5, Lcom/android/server/wm/WindowToken;->mPersistOnEmpty:Z

    if-nez v1, :cond_a1

    .line 2237
    invoke-virtual {v5}, Lcom/android/server/wm/WindowToken;->removeImmediately()V

    goto :goto_b3

    .line 2238
    :cond_a1
    if-eqz v6, :cond_b3

    .line 2241
    iput-boolean v3, v6, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 2242
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->clearAllDrawn()V

    .line 2243
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->getStack()Lcom/android/server/wm/ActivityStack;

    move-result-object v1

    .line 2244
    .local v1, "stack":Lcom/android/server/wm/ActivityStack;
    if-eqz v1, :cond_b3

    .line 2245
    iget-object v3, v1, Lcom/android/server/wm/ActivityStack;->mExitingActivities:Ljava/util/ArrayList;

    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2250
    .end local v1    # "stack":Lcom/android/server/wm/ActivityStack;
    :cond_b3
    :goto_b3
    if-eqz v6, :cond_b8

    .line 2251
    invoke-virtual {v6, p1}, Lcom/android/server/wm/ActivityRecord;->postWindowRemoveStartingWindowCleanup(Lcom/android/server/wm/WindowState;)V

    .line 2254
    :cond_b8
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7dd

    if-ne v1, v3, :cond_cc

    .line 2255
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v1}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    .line 2256
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v1, v1, 0x4

    iput v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_db

    .line 2257
    :cond_cc
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v3, 0x100000

    and-int/2addr v1, v3

    if-eqz v1, :cond_db

    .line 2258
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v1, v1, 0x4

    iput v1, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 2261
    :cond_db
    :goto_db
    if-eqz v0, :cond_f6

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->isInLayout()Z

    move-result v1

    if-nez v1, :cond_f6

    .line 2262
    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContent;->assignWindowLayers(Z)V

    .line 2263
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2264
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v1, :cond_f6

    .line 2265
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->updateReportedVisibilityLocked()V

    .line 2269
    :cond_f6
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v1

    invoke-virtual {v1, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2270
    return-void
.end method

.method public prepareAppTransition(IZ)V
    .registers 5
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    .line 3179
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v1, "prepareAppTransition()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_14

    .line 3182
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v0, p1, p2, v1, v1}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(IZIZ)V

    .line 3184
    return-void

    .line 3180
    :cond_14
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public putKeyCustomizeEvent(ILandroid/view/WindowManager$KeyCustomizeInfo;)V
    .registers 5
    .param p1, "press"    # I
    .param p2, "keyCustomizeInfo"    # Landroid/view/WindowManager$KeyCustomizeInfo;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/IllegalArgumentException;
        }
    .end annotation

    .line 10327
    const-string v0, "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

    const-string/jumbo v1, "putKeyCustomizeEvent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 10331
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2}, Lcom/android/server/policy/WindowManagerPolicyExt;->putKeyCustomizeEvent(ILandroid/view/WindowManager$KeyCustomizeInfo;)V

    .line 10332
    return-void

    .line 10329
    :cond_13
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires ACCESS_KEY_CUSTOMIZE_INFO permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public reboot(Z)V
    .registers 4
    .param p1, "confirm"    # Z

    .line 3799
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v0

    const-string/jumbo v1, "userrequested"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 3801
    return-void
.end method

.method public rebootSafeMode(Z)V
    .registers 3
    .param p1, "confirm"    # Z

    .line 3807
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v0

    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    .line 3809
    return-void
.end method

.method public reenableKeyguard(Landroid/os/IBinder;I)V
    .registers 11
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "userId"    # I

    .line 3445
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string/jumbo v6, "reenableKeyguard"

    const/4 v7, 0x0

    move v3, p2

    invoke-virtual/range {v0 .. v7}, Landroid/app/ActivityManagerInternal;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 3447
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3c

    .line 3451
    const-string/jumbo v0, "token is null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 3452
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3453
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 3455
    .local v1, "origIdentity":J
    :try_start_2d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v3, p1, v0, p2}, Lcom/android/server/wm/KeyguardDisableHandler;->reenableKeyguard(Landroid/os/IBinder;II)V
    :try_end_32
    .catchall {:try_start_2d .. :try_end_32} :catchall_37

    .line 3457
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3458
    nop

    .line 3459
    return-void

    .line 3457
    :catchall_37
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3458
    throw v3

    .line 3449
    .end local v0    # "callingUid":I
    .end local v1    # "origIdentity":J
    :cond_3c
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public refreshScreenCaptureDisabled(I)V
    .registers 5
    .param p1, "userId"    # I

    .line 2171
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 2172
    .local v0, "callingUid":I
    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_1e

    .line 2176
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_b
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2178
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/RootWindowContainer;->setSecureSurfaceState(I)V

    .line 2179
    monitor-exit v1
    :try_end_14
    .catchall {:try_start_b .. :try_end_14} :catchall_18

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2180
    return-void

    .line 2179
    :catchall_18
    move-exception v2

    :try_start_19
    monitor-exit v1
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_18

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 2173
    :cond_1e
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Only system can call refreshScreenCaptureDisabled."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method registerAppFreezeListener(Lcom/android/server/wm/WindowManagerService$AppFreezeListener;)V
    .registers 3
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$AppFreezeListener;

    .line 9108
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 9109
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9111
    :cond_d
    return-void
.end method

.method public registerDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/IDisplayFoldListener;

    .line 4644
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->registerDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V

    .line 4645
    return-void
.end method

.method public registerDisplayWindowListener(Landroid/view/IDisplayWindowListener;)V
    .registers 5
    .param p1, "listener"    # Landroid/view/IDisplayWindowListener;

    .line 4690
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1d

    .line 4694
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4696
    .local v0, "ident":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/DisplayWindowListenerController;->registerListener(Landroid/view/IDisplayWindowListener;)V
    :try_end_13
    .catchall {:try_start_e .. :try_end_13} :catchall_18

    .line 4698
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4699
    nop

    .line 4700
    return-void

    .line 4698
    :catchall_18
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4699
    throw v2

    .line 4692
    .end local v0    # "ident":J
    :cond_1d
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public registerFoldStateChangedCallback(Landroid/view/IFoldStateChangedCallback;)V
    .registers 2
    .param p1, "callback"    # Landroid/view/IFoldStateChangedCallback;

    .line 9860
    return-void
.end method

.method public registerOneHandOpWatcher(Lcom/samsung/android/onehandop/IOneHandOpWatcher;)V
    .registers 3
    .param p1, "watcher"    # Lcom/samsung/android/onehandop/IOneHandOpWatcher;

    .line 10139
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowManagerServiceExt;->registerOneHandOpWatcher(Lcom/samsung/android/onehandop/IOneHandOpWatcher;)V

    .line 10141
    return-void
.end method

.method public registerPinnedStackListener(ILandroid/view/IPinnedStackListener;)V
    .registers 6
    .param p1, "displayId"    # I
    .param p2, "listener"    # Landroid/view/IPinnedStackListener;

    .line 7766
    const-string v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    const-string/jumbo v1, "registerPinnedStackListener()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_c

    .line 7768
    return-void

    .line 7770
    :cond_c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-boolean v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mSupportsPictureInPicture:Z

    if-nez v0, :cond_13

    .line 7771
    return-void

    .line 7773
    :cond_13
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_16
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7774
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7775
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getPinnedStackController()Lcom/android/server/wm/PinnedStackController;

    move-result-object v2

    invoke-virtual {v2, p2}, Lcom/android/server/wm/PinnedStackController;->registerPinnedStackListener(Landroid/view/IPinnedStackListener;)V

    .line 7776
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_16 .. :try_end_27} :catchall_2b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7777
    return-void

    .line 7776
    :catchall_2b
    move-exception v1

    :try_start_2c
    monitor-exit v0
    :try_end_2d
    .catchall {:try_start_2c .. :try_end_2d} :catchall_2b

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;I)V
    .registers 5
    .param p1, "listener"    # Landroid/view/WindowManagerPolicyConstants$PointerEventListener;
    .param p2, "displayId"    # I

    .line 3723
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3724
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3725
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_11

    .line 3726
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->registerPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;)V

    .line 3728
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_16

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3729
    return-void

    .line 3728
    :catchall_16
    move-exception v1

    :try_start_17
    monitor-exit v0
    :try_end_18
    .catchall {:try_start_17 .. :try_end_18} :catchall_16

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V
    .registers 6
    .param p1, "shortcutCode"    # J
    .param p3, "shortcutKeyReceiver"    # Lcom/android/internal/policy/IShortcutService;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 8314
    const-string v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    const-string/jumbo v1, "registerShortcutKey"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 8318
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Lcom/android/server/policy/WindowManagerPolicy;->registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V

    .line 8319
    return-void

    .line 8315
    :cond_11
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires REGISTER_WINDOW_MANAGER_LISTENERS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public registerSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;I)V
    .registers 8
    .param p1, "listener"    # Landroid/view/ISystemGestureExclusionListener;
    .param p2, "displayId"    # I

    .line 4609
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4610
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4611
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_16

    .line 4615
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->registerSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;)V

    .line 4616
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_2d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4617
    return-void

    .line 4612
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_16
    :try_start_16
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to register visibility event for invalid display: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .end local p2    # "displayId":I
    throw v2

    .line 4616
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .restart local p2    # "displayId":I
    :catchall_2d
    move-exception v1

    monitor-exit v0
    :try_end_2f
    .catchall {:try_start_16 .. :try_end_2f} :catchall_2d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public registerTentModeListener(Landroid/view/ITentModeListener;)V
    .registers 2
    .param p1, "listener"    # Landroid/view/ITentModeListener;

    .line 9900
    return-void
.end method

.method public registerWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)Z
    .registers 8
    .param p1, "listener"    # Landroid/view/IWallpaperVisibilityListener;
    .param p2, "displayId"    # I

    .line 4586
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4587
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4588
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1e

    .line 4592
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/WallpaperVisibilityListeners;->registerWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)V

    .line 4593
    iget-object v2, v1, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v2}, Lcom/android/server/wm/WallpaperController;->isWallpaperVisible()Z

    move-result v2

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 4589
    :cond_1e
    :try_start_1e
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to register visibility event for invalid display: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "listener":Landroid/view/IWallpaperVisibilityListener;
    .end local p2    # "displayId":I
    throw v2

    .line 4594
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "listener":Landroid/view/IWallpaperVisibilityListener;
    .restart local p2    # "displayId":I
    :catchall_35
    move-exception v1

    monitor-exit v0
    :try_end_37
    .catchall {:try_start_1e .. :try_end_37} :catchall_35

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIIJLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/DisplayCutout$ParcelableWrapper;Landroid/util/MergedConfiguration;Landroid/view/SurfaceControl;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;Landroid/graphics/Point;Landroid/view/SurfaceControl;)I
    .registers 67
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "frameNumber"    # J
    .param p11, "outFrame"    # Landroid/graphics/Rect;
    .param p12, "outContentInsets"    # Landroid/graphics/Rect;
    .param p13, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p14, "outStableInsets"    # Landroid/graphics/Rect;
    .param p15, "outBackdropFrame"    # Landroid/graphics/Rect;
    .param p16, "outCutout"    # Landroid/view/DisplayCutout$ParcelableWrapper;
    .param p17, "mergedConfiguration"    # Landroid/util/MergedConfiguration;
    .param p18, "outSurfaceControl"    # Landroid/view/SurfaceControl;
    .param p19, "outInsetsState"    # Landroid/view/InsetsState;
    .param p20, "outActiveControls"    # [Landroid/view/InsetsSourceControl;
    .param p21, "outSurfaceSize"    # Landroid/graphics/Point;
    .param p22, "outBLASTSurfaceControl"    # Landroid/view/SurfaceControl;

    .line 2429
    move-object/from16 v7, p0

    move-object/from16 v8, p4

    move/from16 v9, p5

    move/from16 v10, p6

    move/from16 v11, p7

    move-object/from16 v12, p11

    move-object/from16 v13, p16

    move-object/from16 v14, p17

    move-object/from16 v15, p18

    move-object/from16 v6, p20

    const/4 v0, 0x0

    invoke-static {v6, v0}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    .line 2430
    const/4 v1, 0x0

    .line 2432
    .local v1, "result":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 2433
    .local v5, "pid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 2434
    .local v3, "uid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 2437
    .local v16, "origId":J
    new-instance v2, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v2}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    .line 2438
    .local v2, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    const/4 v4, 0x0

    .line 2441
    .local v4, "winHashCode":Ljava/lang/String;
    iget-object v13, v7, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v13

    :try_start_2e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V
    :try_end_31
    .catchall {:try_start_2e .. :try_end_31} :catchall_910

    .line 2442
    const/4 v12, 0x0

    move-object/from16 v14, p1

    move-object/from16 v15, p2

    :try_start_36
    invoke-virtual {v7, v14, v15, v12}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v18
    :try_end_3a
    .catchall {:try_start_36 .. :try_end_3a} :catchall_906

    move-object/from16 v19, v18

    .line 2443
    .local v19, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v12, v19

    .end local v19    # "win":Lcom/android/server/wm/WindowState;
    .local v12, "win":Lcom/android/server/wm/WindowState;
    if-nez v12, :cond_58

    .line 2444
    :try_start_40
    monitor-exit v13
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_46

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v13, 0x0

    return v13

    .line 2851
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    :catchall_46
    move-exception v0

    move-object/from16 v10, p11

    move/from16 v28, v3

    move-object/from16 v38, v4

    move v9, v5

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    move-object v4, v2

    goto/16 :goto_921

    .line 2446
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    :cond_58
    :try_start_58
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    move-object/from16 v20, v19

    .line 2447
    .local v20, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy;

    move-result-object v19

    move-object/from16 v21, v19

    .line 2449
    .local v21, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;
    :try_end_66
    .catchall {:try_start_58 .. :try_end_66} :catchall_906

    move-object/from16 v22, v0

    .line 2450
    .local v22, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v0, 0x8

    if-eq v11, v0, :cond_6f

    .line 2451
    :try_start_6c
    invoke-virtual {v12, v9, v10}, Lcom/android/server/wm/WindowState;->setRequestedSize(II)V
    :try_end_6f
    .catchall {:try_start_6c .. :try_end_6f} :catchall_46

    .line 2454
    :cond_6f
    move-wide/from16 v14, p9

    :try_start_71
    invoke-virtual {v12, v14, v15}, Lcom/android/server/wm/WindowState;->setFrameNumber(J)V

    .line 2456
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v23

    move-object/from16 v24, v23

    .line 2457
    .local v24, "dc":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v14, v24

    .end local v24    # "dc":Lcom/android/server/wm/DisplayContent;
    .local v14, "dc":Lcom/android/server/wm/DisplayContent;
    iget-boolean v15, v14, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z
    :try_end_7e
    .catchall {:try_start_71 .. :try_end_7e} :catchall_906

    if-nez v15, :cond_84

    .line 2458
    const/4 v15, 0x0

    :try_start_81
    invoke-virtual {v12, v15}, Lcom/android/server/wm/WindowState;->finishSeamlessRotation(Z)V
    :try_end_84
    .catchall {:try_start_81 .. :try_end_84} :catchall_46

    .line 2461
    :cond_84
    :try_start_84
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->useBLASTSync()Z

    move-result v15
    :try_end_88
    .catchall {:try_start_84 .. :try_end_88} :catchall_906

    if-eqz v15, :cond_8c

    .line 2462
    or-int/lit16 v1, v1, 0x80

    .line 2465
    :cond_8c
    const/4 v15, 0x0

    .line 2466
    .local v15, "attrChanges":I
    const/16 v23, 0x0

    .line 2467
    .local v23, "flagChanges":I
    const/16 v24, 0x0

    .line 2469
    .local v24, "privateFlagChanges":I
    const/16 v25, 0x0

    .line 2471
    .local v25, "samsungFlagChanges":I
    move-object/from16 v26, v14

    .end local v14    # "dc":Lcom/android/server/wm/DisplayContent;
    .local v26, "dc":Lcom/android/server/wm/DisplayContent;
    if-eqz v8, :cond_20d

    .line 2472
    move-object/from16 v14, v21

    .end local v21    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .local v14, "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    :try_start_99
    invoke-virtual {v14, v12, v8, v5, v3}, Lcom/android/server/wm/DisplayPolicy;->adjustWindowParamsLw(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;II)V

    .line 2473
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    invoke-virtual {v0, v12, v8}, Lcom/android/server/wm/WindowToken;->adjustWindowParams(Lcom/android/server/wm/WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 2475
    iget v0, v12, Lcom/android/server/wm/WindowState;->mSeq:I
    :try_end_a3
    .catchall {:try_start_99 .. :try_end_a3} :catchall_1f7

    move/from16 v28, v15

    move/from16 v15, p3

    .end local v15    # "attrChanges":I
    .local v28, "attrChanges":I
    if-ne v15, v0, :cond_e8

    .line 2476
    :try_start_a9
    iget v0, v8, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I
    :try_end_ab
    .catchall {:try_start_a9 .. :try_end_ab} :catchall_d4

    move-object/from16 v29, v4

    .end local v4    # "winHashCode":Ljava/lang/String;
    .local v29, "winHashCode":Ljava/lang/String;
    :try_start_ad
    iget v4, v8, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    or-int/2addr v0, v4

    .line 2478
    .local v0, "systemUiVisibility":I
    const/high16 v4, 0x3ff0000

    and-int/2addr v4, v0

    if-eqz v4, :cond_bf

    .line 2479
    invoke-direct {v7, v5, v3}, Lcom/android/server/wm/WindowManagerService;->hasStatusBarPermission(II)Z

    move-result v4

    if-nez v4, :cond_bf

    .line 2480
    const v4, -0x3ff0001

    and-int/2addr v0, v4

    .line 2483
    :cond_bf
    iput v0, v12, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I
    :try_end_c1
    .catchall {:try_start_ad .. :try_end_c1} :catchall_c2

    goto :goto_ea

    .line 2851
    .end local v0    # "systemUiVisibility":I
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v23    # "flagChanges":I
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v28    # "attrChanges":I
    :catchall_c2
    move-exception v0

    move-object/from16 v10, p11

    move-object v4, v2

    move/from16 v28, v3

    move v9, v5

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v29

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .end local v29    # "winHashCode":Ljava/lang/String;
    .restart local v4    # "winHashCode":Ljava/lang/String;
    :catchall_d4
    move-exception v0

    move-object/from16 v29, v4

    move-object/from16 v10, p11

    move-object v4, v2

    move/from16 v28, v3

    move v9, v5

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v29

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v4    # "winHashCode":Ljava/lang/String;
    .restart local v29    # "winHashCode":Ljava/lang/String;
    goto/16 :goto_921

    .line 2475
    .end local v29    # "winHashCode":Ljava/lang/String;
    .restart local v4    # "winHashCode":Ljava/lang/String;
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v23    # "flagChanges":I
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v28    # "attrChanges":I
    :cond_e8
    move-object/from16 v29, v4

    .line 2485
    .end local v4    # "winHashCode":Ljava/lang/String;
    .restart local v29    # "winHashCode":Ljava/lang/String;
    :goto_ea
    :try_start_ea
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    iget v4, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v0, v4, :cond_1c4

    .line 2491
    iget v0, v8, Landroid/view/WindowManager$LayoutParams;->privateFlags:I
    :try_end_f4
    .catchall {:try_start_ea .. :try_end_f4} :catchall_1e5

    and-int/lit16 v0, v0, 0x2000

    if-eqz v0, :cond_110

    .line 2493
    :try_start_f8
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->x:I

    iput v0, v8, Landroid/view/WindowManager$LayoutParams;->x:I

    .line 2494
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    iput v0, v8, Landroid/view/WindowManager$LayoutParams;->y:I

    .line 2495
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    iput v0, v8, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 2496
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    iput v0, v8, Landroid/view/WindowManager$LayoutParams;->height:I
    :try_end_110
    .catchall {:try_start_f8 .. :try_end_110} :catchall_c2

    .line 2501
    :cond_110
    :try_start_110
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    iget v4, v8, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    xor-int v25, v0, v4

    .line 2504
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    iget v4, v8, Landroid/view/WindowManager$LayoutParams;->flags:I

    xor-int v23, v0, v4

    .line 2505
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    iget v4, v8, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    xor-int v24, v0, v4

    .line 2506
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v0, v8}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    move-result v0
    :try_end_12e
    .catchall {:try_start_110 .. :try_end_12e} :catchall_1e5

    .line 2507
    .end local v28    # "attrChanges":I
    .local v0, "attrChanges":I
    and-int/lit16 v4, v0, 0x4001

    if-eqz v4, :cond_135

    .line 2509
    const/4 v4, 0x1

    :try_start_133
    iput-boolean v4, v12, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z
    :try_end_135
    .catchall {:try_start_133 .. :try_end_135} :catchall_c2

    .line 2511
    :cond_135
    :try_start_135
    iget-object v4, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;
    :try_end_137
    .catchall {:try_start_135 .. :try_end_137} :catchall_1e5

    const/high16 v28, 0x80000

    if-eqz v4, :cond_14a

    and-int v4, v23, v28

    if-nez v4, :cond_145

    const/high16 v4, 0x400000

    and-int v4, v23, v4

    if-eqz v4, :cond_14a

    .line 2513
    :cond_145
    :try_start_145
    iget-object v4, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v4}, Lcom/android/server/wm/ActivityRecord;->checkKeyguardFlagsChanged()V
    :try_end_14a
    .catchall {:try_start_145 .. :try_end_14a} :catchall_c2

    .line 2515
    :cond_14a
    const/high16 v4, 0x2000000

    and-int/2addr v4, v0

    if-eqz v4, :cond_16c

    :try_start_14f
    iget-object v4, v7, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v4, :cond_16c

    .line 2518
    iget-object v4, v7, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;
    :try_end_155
    .catchall {:try_start_14f .. :try_end_155} :catchall_1e5

    move/from16 v30, v3

    move/from16 v31, v5

    const/4 v3, 0x1

    .end local v3    # "uid":I
    .end local v5    # "pid":I
    .local v30, "uid":I
    .local v31, "pid":I
    :try_start_15a
    new-array v5, v3, [I

    .line 2519
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v3

    const/16 v18, 0x0

    aput v3, v5, v18

    .line 2518
    invoke-virtual {v4, v5}, Lcom/android/server/wm/AccessibilityController;->onSomeWindowResizedOrMovedLocked([I)V

    goto :goto_170

    .line 2515
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v3    # "uid":I
    .restart local v5    # "pid":I
    :cond_16c
    move/from16 v30, v3

    move/from16 v31, v5

    .line 2522
    .end local v3    # "uid":I
    .end local v5    # "pid":I
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    :goto_170
    and-int v3, v24, v28

    if-eqz v3, :cond_17d

    .line 2523
    iget-object v3, v12, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 2524
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    move-result v3

    .line 2523
    invoke-virtual {v7, v12, v3}, Lcom/android/server/wm/WindowManagerService;->updateNonSystemOverlayWindowsVisibilityIfNeeded(Lcom/android/server/wm/WindowState;Z)V

    .line 2526
    :cond_17d
    const/high16 v3, 0x20000

    and-int/2addr v3, v0

    if-eqz v3, :cond_194

    .line 2527
    iget-object v3, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v4, 0x1000000

    and-int/2addr v3, v4

    if-eqz v3, :cond_18d

    const/4 v3, 0x1

    goto :goto_18e

    :cond_18d
    const/4 v3, 0x0

    :goto_18e
    move-object/from16 v5, v22

    .end local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v5, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowStateAnimator;->setColorSpaceAgnosticLocked(Z)V

    goto :goto_196

    .line 2526
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_194
    move-object/from16 v5, v22

    .line 2533
    .end local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :goto_196
    const/high16 v3, -0x80000000

    and-int v4, v25, v3

    if-eqz v4, :cond_1a9

    .line 2535
    iget-object v4, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/2addr v3, v4

    if-eqz v3, :cond_1a5

    const/4 v3, 0x1

    goto :goto_1a6

    :cond_1a5
    const/4 v3, 0x0

    :goto_1a6
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowStateAnimator;->setInternalPresentationOnly(Z)V

    .line 2541
    :cond_1a9
    and-int/lit8 v3, v25, 0x8

    if-eqz v3, :cond_1bf

    .line 2543
    iget-object v3, v12, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-object v4, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/16 v21, 0x8

    and-int/lit8 v4, v4, 0x8

    if-eqz v4, :cond_1bb

    const/4 v4, 0x1

    goto :goto_1bc

    :cond_1bb
    const/4 v4, 0x0

    :goto_1bc
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowToken;->setPortraitWindowToken(Z)V

    .line 2551
    :cond_1bf
    move v3, v0

    move/from16 v4, v23

    goto/16 :goto_21f

    .line 2486
    .end local v0    # "attrChanges":I
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v3    # "uid":I
    .local v5, "pid":I
    .restart local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v28    # "attrChanges":I
    :cond_1c4
    move/from16 v30, v3

    move/from16 v31, v5

    move-object/from16 v5, v22

    .end local v3    # "uid":I
    .end local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v5, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v3, "Window type can not be changed after the window is added."

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v1    # "result":I
    .end local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v16    # "origId":J
    .end local v29    # "winHashCode":Ljava/lang/String;
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "seq":I
    .end local p4    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p5    # "requestedWidth":I
    .end local p6    # "requestedHeight":I
    .end local p7    # "viewVisibility":I
    .end local p8    # "flags":I
    .end local p9    # "frameNumber":J
    .end local p11    # "outFrame":Landroid/graphics/Rect;
    .end local p12    # "outContentInsets":Landroid/graphics/Rect;
    .end local p13    # "outVisibleInsets":Landroid/graphics/Rect;
    .end local p14    # "outStableInsets":Landroid/graphics/Rect;
    .end local p15    # "outBackdropFrame":Landroid/graphics/Rect;
    .end local p16    # "outCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .end local p17    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .end local p18    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .end local p19    # "outInsetsState":Landroid/view/InsetsState;
    .end local p20    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .end local p21    # "outSurfaceSize":Landroid/graphics/Point;
    .end local p22    # "outBLASTSurfaceControl":Landroid/view/SurfaceControl;
    throw v0
    :try_end_1d2
    .catchall {:try_start_15a .. :try_end_1d2} :catchall_1d2

    .line 2851
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v23    # "flagChanges":I
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v28    # "attrChanges":I
    .restart local v1    # "result":I
    .restart local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v16    # "origId":J
    .restart local v29    # "winHashCode":Ljava/lang/String;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "seq":I
    .restart local p4    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p5    # "requestedWidth":I
    .restart local p6    # "requestedHeight":I
    .restart local p7    # "viewVisibility":I
    .restart local p8    # "flags":I
    .restart local p9    # "frameNumber":J
    .restart local p11    # "outFrame":Landroid/graphics/Rect;
    .restart local p12    # "outContentInsets":Landroid/graphics/Rect;
    .restart local p13    # "outVisibleInsets":Landroid/graphics/Rect;
    .restart local p14    # "outStableInsets":Landroid/graphics/Rect;
    .restart local p15    # "outBackdropFrame":Landroid/graphics/Rect;
    .restart local p16    # "outCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .restart local p17    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .restart local p18    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .restart local p19    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p20    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .restart local p21    # "outSurfaceSize":Landroid/graphics/Point;
    .restart local p22    # "outBLASTSurfaceControl":Landroid/view/SurfaceControl;
    :catchall_1d2
    move-exception v0

    move-object/from16 v10, p11

    move-object v4, v2

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v29

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v3    # "uid":I
    .local v5, "pid":I
    :catchall_1e5
    move-exception v0

    move-object/from16 v10, p11

    move-object v4, v2

    move/from16 v28, v3

    move v9, v5

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v29

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v3    # "uid":I
    .end local v5    # "pid":I
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    goto/16 :goto_921

    .end local v29    # "winHashCode":Ljava/lang/String;
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v3    # "uid":I
    .restart local v4    # "winHashCode":Ljava/lang/String;
    .restart local v5    # "pid":I
    :catchall_1f7
    move-exception v0

    move/from16 v15, p3

    move-object/from16 v29, v4

    move-object/from16 v10, p11

    move-object v4, v2

    move/from16 v28, v3

    move v9, v5

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v29

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v3    # "uid":I
    .end local v4    # "winHashCode":Ljava/lang/String;
    .end local v5    # "pid":I
    .restart local v29    # "winHashCode":Ljava/lang/String;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    goto/16 :goto_921

    .line 2471
    .end local v29    # "winHashCode":Ljava/lang/String;
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v3    # "uid":I
    .restart local v4    # "winHashCode":Ljava/lang/String;
    .restart local v5    # "pid":I
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v15    # "attrChanges":I
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v23    # "flagChanges":I
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_20d
    move/from16 v30, v3

    move-object/from16 v29, v4

    move/from16 v31, v5

    move/from16 v28, v15

    move-object/from16 v14, v21

    move-object/from16 v5, v22

    move/from16 v15, p3

    .end local v3    # "uid":I
    .end local v4    # "winHashCode":Ljava/lang/String;
    .end local v15    # "attrChanges":I
    .end local v21    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v22    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v5, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v28    # "attrChanges":I
    .restart local v29    # "winHashCode":Ljava/lang/String;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    move/from16 v4, v23

    move/from16 v3, v28

    .line 2551
    .end local v23    # "flagChanges":I
    .end local v28    # "attrChanges":I
    .local v3, "attrChanges":I
    .local v4, "flagChanges":I
    :goto_21f
    :try_start_21f
    const-string v0, "WindowManager"
    :try_end_221
    .catchall {:try_start_21f .. :try_end_221} :catchall_8f4

    :try_start_221
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "Relayout "

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v15, ": viewVisibility="

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v15, " req="

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v15, "x"

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v0, v6}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2553
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v2, v0}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    .line 2554
    invoke-static {v12}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0
    :try_end_25b
    .catchall {:try_start_221 .. :try_end_25b} :catchall_8ee

    move-object v15, v0

    .line 2560
    .end local v29    # "winHashCode":Ljava/lang/String;
    .local v15, "winHashCode":Ljava/lang/String;
    and-int/lit8 v0, p8, 0x2

    if-eqz v0, :cond_262

    const/4 v0, 0x1

    goto :goto_263

    :cond_262
    const/4 v0, 0x0

    :goto_263
    :try_start_263
    iput-boolean v0, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z
    :try_end_265
    .catchall {:try_start_263 .. :try_end_265} :catchall_8d9

    .line 2561
    and-int/lit16 v0, v3, 0x80

    if-eqz v0, :cond_283

    .line 2562
    :try_start_269
    iget v0, v8, Landroid/view/WindowManager$LayoutParams;->alpha:F

    iput v0, v5, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F
    :try_end_26d
    .catchall {:try_start_269 .. :try_end_26d} :catchall_26e

    goto :goto_283

    .line 2851
    .end local v3    # "attrChanges":I
    .end local v4    # "flagChanges":I
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_26e
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v4, v2

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v15

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .line 2564
    .restart local v3    # "attrChanges":I
    .restart local v4    # "flagChanges":I
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_283
    :goto_283
    :try_start_283
    iget v0, v12, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    iget v6, v12, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    invoke-virtual {v12, v0, v6}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    .line 2566
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->left:I
    :try_end_290
    .catchall {:try_start_283 .. :try_end_290} :catchall_8d9

    if-nez v0, :cond_2aa

    :try_start_292
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->top:I

    if-nez v0, :cond_2aa

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->right:I

    if-nez v0, :cond_2aa

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v0, v0, Landroid/graphics/Rect;->bottom:I
    :try_end_2a8
    .catchall {:try_start_292 .. :try_end_2a8} :catchall_26e

    if-eqz v0, :cond_2ae

    .line 2570
    :cond_2aa
    const/4 v6, 0x0

    :try_start_2ab
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    .line 2573
    :cond_2ae
    iget v0, v12, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move v6, v0

    .line 2577
    .local v6, "oldVisibility":I
    const/4 v0, 0x4

    if-eq v6, v0, :cond_2b8

    const/16 v0, 0x8

    if-ne v6, v0, :cond_2bc

    :cond_2b8
    if-nez v11, :cond_2bc

    const/4 v0, 0x1

    goto :goto_2bd

    :cond_2bc
    const/4 v0, 0x0

    :goto_2bd
    move/from16 v21, v0

    .line 2580
    .local v21, "becameVisible":Z
    const v0, 0x20008

    and-int/2addr v0, v4

    if-nez v0, :cond_2ca

    if-eqz v21, :cond_2c8

    goto :goto_2ca

    :cond_2c8
    const/4 v0, 0x0

    goto :goto_2cb

    :cond_2ca
    :goto_2ca
    const/4 v0, 0x1

    :goto_2cb
    move/from16 v23, v0

    .line 2582
    .local v23, "imMayMove":Z
    iget v0, v12, Lcom/android/server/wm/WindowState;->mViewVisibility:I
    :try_end_2cf
    .catchall {:try_start_2ab .. :try_end_2cf} :catchall_8d9

    if-ne v0, v11, :cond_2dc

    and-int/lit8 v0, v4, 0x8

    if-nez v0, :cond_2dc

    :try_start_2d5
    iget-boolean v0, v12, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z
    :try_end_2d7
    .catchall {:try_start_2d5 .. :try_end_2d7} :catchall_26e

    if-nez v0, :cond_2da

    goto :goto_2dc

    :cond_2da
    const/4 v0, 0x0

    goto :goto_2dd

    :cond_2dc
    :goto_2dc
    const/4 v0, 0x1

    .line 2586
    .local v0, "focusMayChange":Z
    :goto_2dd
    move-object/from16 v28, v2

    .end local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v28, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    :try_start_2df
    iget v2, v12, Lcom/android/server/wm/WindowState;->mViewVisibility:I
    :try_end_2e1
    .catchall {:try_start_2df .. :try_end_2e1} :catchall_8c2

    const/high16 v29, 0x100000

    if-eq v2, v11, :cond_305

    :try_start_2e5
    iget-object v2, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int v2, v2, v29

    if-eqz v2, :cond_305

    const/4 v2, 0x1

    goto :goto_306

    .line 2851
    .end local v0    # "focusMayChange":Z
    .end local v3    # "attrChanges":I
    .end local v4    # "flagChanges":I
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v6    # "oldVisibility":I
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_2ef
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v38, v15

    move-object/from16 v4, v28

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .line 2586
    .restart local v0    # "focusMayChange":Z
    .restart local v3    # "attrChanges":I
    .restart local v4    # "flagChanges":I
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v6    # "oldVisibility":I
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_305
    const/4 v2, 0x0

    .line 2588
    .local v2, "wallpaperMayMove":Z
    :goto_306
    and-int v32, v4, v29

    if-eqz v32, :cond_30d

    const/16 v32, 0x1

    goto :goto_30f

    :cond_30d
    const/16 v32, 0x0

    :goto_30f
    or-int v32, v2, v32

    .line 2589
    .end local v2    # "wallpaperMayMove":Z
    .local v32, "wallpaperMayMove":Z
    and-int/lit16 v2, v4, 0x2000

    if-eqz v2, :cond_325

    iget-object v2, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    if-eqz v2, :cond_325

    .line 2590
    iget-object v2, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move/from16 v33, v4

    .end local v4    # "flagChanges":I
    .local v33, "flagChanges":I
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isSecureLocked()Z

    move-result v4

    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowSurfaceController;->setSecure(Z)V
    :try_end_324
    .catchall {:try_start_2e5 .. :try_end_324} :catchall_2ef

    goto :goto_327

    .line 2589
    .end local v33    # "flagChanges":I
    .restart local v4    # "flagChanges":I
    :cond_325
    move/from16 v33, v4

    .line 2593
    .end local v4    # "flagChanges":I
    .restart local v33    # "flagChanges":I
    :goto_327
    const/4 v2, 0x1

    :try_start_328
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    .line 2594
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mInRelayout:Z

    .line 2596
    invoke-virtual {v12, v11}, Lcom/android/server/wm/WindowState;->setViewVisibility(I)V

    .line 2597
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_SCREEN_ON_enabled:Z
    :try_end_331
    .catchall {:try_start_328 .. :try_end_331} :catchall_8c2

    if-eqz v2, :cond_38b

    :try_start_333
    invoke-static {v12}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    move-object/from16 v34, v5

    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v2, "protoLogParam0":Ljava/lang/String;
    .local v34, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    int-to-long v4, v6

    .local v4, "protoLogParam1":J
    int-to-long v8, v11

    .local v8, "protoLogParam2":J
    new-instance v36, Ljava/lang/RuntimeException;

    invoke-direct/range {v36 .. v36}, Ljava/lang/RuntimeException;-><init>()V

    invoke-virtual/range {v36 .. v36}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v36

    invoke-static/range {v36 .. v36}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v36

    move/from16 v37, v6

    .end local v6    # "oldVisibility":I
    .local v36, "protoLogParam3":Ljava/lang/String;
    .local v37, "oldVisibility":I
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;
    :try_end_34c
    .catchall {:try_start_333 .. :try_end_34c} :catchall_375

    move-object/from16 v38, v15

    .end local v15    # "winHashCode":Ljava/lang/String;
    .local v38, "winHashCode":Ljava/lang/String;
    const/4 v15, 0x4

    :try_start_34f
    new-array v10, v15, [Ljava/lang/Object;

    const/4 v15, 0x0

    aput-object v2, v10, v15

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v15

    const/16 v27, 0x1

    aput-object v15, v10, v27

    invoke-static {v8, v9}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v15

    const/16 v35, 0x2

    aput-object v15, v10, v35

    const/4 v15, 0x3

    aput-object v36, v10, v15

    move-object/from16 v39, v2

    move-wide/from16 v40, v4

    const/16 v2, 0x14

    const/4 v4, 0x0

    const v15, -0x2cf8cd70

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    .end local v4    # "protoLogParam1":J
    .local v39, "protoLogParam0":Ljava/lang/String;
    .local v40, "protoLogParam1":J
    invoke-static {v6, v15, v2, v4, v10}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_374
    .catchall {:try_start_34f .. :try_end_374} :catchall_3b8

    goto :goto_393

    .line 2851
    .end local v0    # "focusMayChange":Z
    .end local v3    # "attrChanges":I
    .end local v8    # "protoLogParam2":J
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v36    # "protoLogParam3":Ljava/lang/String;
    .end local v37    # "oldVisibility":I
    .end local v38    # "winHashCode":Ljava/lang/String;
    .end local v39    # "protoLogParam0":Ljava/lang/String;
    .end local v40    # "protoLogParam1":J
    .restart local v15    # "winHashCode":Ljava/lang/String;
    :catchall_375
    move-exception v0

    move-object/from16 v38, v15

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v28

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v15    # "winHashCode":Ljava/lang/String;
    .restart local v38    # "winHashCode":Ljava/lang/String;
    goto/16 :goto_921

    .line 2597
    .end local v38    # "winHashCode":Ljava/lang/String;
    .restart local v0    # "focusMayChange":Z
    .restart local v3    # "attrChanges":I
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v6    # "oldVisibility":I
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "winHashCode":Ljava/lang/String;
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    :cond_38b
    move-object/from16 v34, v5

    move/from16 v37, v6

    move-object/from16 v38, v15

    const/16 v35, 0x2

    .line 2602
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v6    # "oldVisibility":I
    .end local v15    # "winHashCode":Ljava/lang/String;
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v37    # "oldVisibility":I
    .restart local v38    # "winHashCode":Ljava/lang/String;
    :goto_393
    :try_start_393
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2603
    and-int/lit8 v2, p8, 0x1

    if-eqz v2, :cond_39c

    const/4 v2, 0x1

    goto :goto_39d

    :cond_39c
    const/4 v2, 0x0

    :goto_39d
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z
    :try_end_39f
    .catchall {:try_start_393 .. :try_end_39f} :catchall_8ac

    .line 2607
    if-nez v11, :cond_3cc

    :try_start_3a1
    iget-object v2, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v2, :cond_3b5

    iget-object v2, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v4, 0x3

    if-eq v2, v4, :cond_3b6

    iget-object v2, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2609
    invoke-virtual {v2}, Lcom/android/server/wm/ActivityRecord;->isClientVisible()Z

    move-result v2

    if-eqz v2, :cond_3cd

    goto :goto_3b6

    .line 2607
    :cond_3b5
    const/4 v4, 0x3

    .line 2609
    :cond_3b6
    :goto_3b6
    const/4 v2, 0x1

    goto :goto_3ce

    .line 2851
    .end local v0    # "focusMayChange":Z
    .end local v3    # "attrChanges":I
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v37    # "oldVisibility":I
    :catchall_3b8
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v28

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .line 2607
    .restart local v0    # "focusMayChange":Z
    .restart local v3    # "attrChanges":I
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v37    # "oldVisibility":I
    :cond_3cc
    const/4 v4, 0x3

    .line 2609
    :cond_3cd
    const/4 v2, 0x0

    :goto_3ce
    move v8, v2

    .line 2620
    .local v8, "shouldRelayout":Z
    if-nez v8, :cond_412

    invoke-virtual/range {v34 .. v34}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    move-result v2

    if-eqz v2, :cond_412

    iget-boolean v2, v12, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-nez v2, :cond_412

    .line 2621
    sget-boolean v2, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG_VISIBILITY:Z

    if-eqz v2, :cond_3ff

    .line 2622
    const-string v2, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Relayout invis "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, ": mAnimatingExit="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v6, v12, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2625
    :cond_3ff
    or-int/lit8 v1, v1, 0x4

    .line 2626
    iget-boolean v2, v12, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    if-nez v2, :cond_40e

    .line 2627
    move-object/from16 v5, v34

    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-direct {v7, v12, v5, v0}, Lcom/android/server/wm/WindowManagerService;->tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;Z)Z

    move-result v2
    :try_end_40b
    .catchall {:try_start_3a1 .. :try_end_40b} :catchall_3b8

    move v0, v2

    move v9, v0

    goto :goto_415

    .line 2626
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_40e
    move-object/from16 v5, v34

    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    move v9, v0

    goto :goto_415

    .line 2620
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_412
    move-object/from16 v5, v34

    .line 2633
    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    move v9, v0

    .end local v0    # "focusMayChange":Z
    .local v9, "focusMayChange":Z
    :goto_415
    :try_start_415
    iget-object v0, v7, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement(Z)V
    :try_end_41b
    .catchall {:try_start_415 .. :try_end_41b} :catchall_8ac

    .line 2635
    move v15, v9

    .end local v9    # "focusMayChange":Z
    .local v15, "focusMayChange":Z
    const-wide/16 v9, 0x20

    if-eqz v8, :cond_535

    .line 2636
    :try_start_420
    const-string/jumbo v0, "relayoutWindow: viewVisibility_1"

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2638
    invoke-virtual {v12, v1, v3}, Lcom/android/server/wm/WindowState;->relayoutVisibleWindow(II)I

    move-result v0
    :try_end_42a
    .catchall {:try_start_420 .. :try_end_42a} :catchall_51f

    move v6, v4

    move/from16 v2, v35

    move v4, v0

    .line 2641
    .end local v1    # "result":I
    .local v4, "result":I
    move-object/from16 v1, p0

    move-object/from16 v42, v28

    .end local v28    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v42, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v2, p18

    move/from16 v28, v30

    move/from16 v30, v3

    .end local v3    # "attrChanges":I
    .local v28, "uid":I
    .local v30, "attrChanges":I
    move-object/from16 v3, p22

    move-object/from16 v34, v5

    move/from16 v43, v31

    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v31    # "pid":I
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v43, "pid":I
    move-object v5, v12

    move/from16 v31, v37

    .end local v37    # "oldVisibility":I
    .local v31, "oldVisibility":I
    move-object/from16 v6, v34

    :try_start_443
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->createSurfaceControl(Landroid/view/SurfaceControl;Landroid/view/SurfaceControl;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I

    move-result v0
    :try_end_447
    .catch Ljava/lang/Exception; {:try_start_443 .. :try_end_447} :catch_4aa
    .catchall {:try_start_443 .. :try_end_447} :catchall_497

    move v1, v0

    .line 2651
    .end local v4    # "result":I
    .restart local v1    # "result":I
    nop

    .line 2652
    and-int/lit8 v0, v1, 0x2

    if-eqz v0, :cond_44f

    .line 2653
    const/4 v0, 0x1

    move v15, v0

    .line 2655
    :cond_44f
    :try_start_44f
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v2, 0x7db

    if-ne v0, v2, :cond_464

    move-object/from16 v2, v20

    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v0, v2, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-nez v0, :cond_466

    .line 2657
    invoke-virtual {v2, v12}, Lcom/android/server/wm/DisplayContent;->setInputMethodWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 2658
    const/4 v0, 0x1

    move/from16 v23, v0

    .end local v23    # "imMayMove":Z
    .local v0, "imMayMove":Z
    goto :goto_478

    .line 2655
    .end local v0    # "imMayMove":Z
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v23    # "imMayMove":Z
    :cond_464
    move-object/from16 v2, v20

    .line 2661
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_466
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x960

    if-ne v0, v3, :cond_478

    iget-object v0, v2, Lcom/android/server/wm/DisplayContent;->mClipBoardWindow:Lcom/android/server/wm/WindowState;

    if-nez v0, :cond_478

    .line 2663
    invoke-virtual {v2, v12}, Lcom/android/server/wm/DisplayContent;->setClipBoardWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 2664
    const/4 v0, 0x1

    move/from16 v23, v0

    .line 2667
    :cond_478
    :goto_478
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    if-eqz v0, :cond_488

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget-object v3, v2, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    if-ne v0, v3, :cond_488

    iget-object v0, v2, Lcom/android/server/wm/DisplayContent;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-nez v0, :cond_488

    .line 2671
    const/4 v0, 0x1

    move v15, v0

    .line 2674
    :cond_488
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->adjustStartingWindowFlags()V

    .line 2675
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_48e
    .catchall {:try_start_44f .. :try_end_48e} :catchall_5bc

    move-object/from16 v5, p18

    move-object/from16 v6, p22

    move v9, v15

    move-object/from16 v3, v34

    goto/16 :goto_5f6

    .line 2851
    .end local v1    # "result":I
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "shouldRelayout":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "focusMayChange":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v4    # "result":I
    :catchall_497
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move v1, v4

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .line 2643
    .restart local v8    # "shouldRelayout":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "focusMayChange":Z
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :catch_4aa
    move-exception v0

    move-object/from16 v2, v20

    move-object v1, v0

    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object v0, v1

    .line 2644
    .local v0, "e":Ljava/lang/Exception;
    :try_start_4af
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v1

    const/4 v3, 0x1

    invoke-virtual {v1, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2646
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_4ea

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    iget-object v3, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam1":Ljava/lang/String;
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam2":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string v10, "Exception thrown when creating surface for client %s (%s). %s"

    const/4 v9, 0x3

    new-array v9, v9, [Ljava/lang/Object;
    :try_end_4d4
    .catchall {:try_start_4af .. :try_end_4d4} :catchall_509

    move/from16 v20, v4

    const/4 v4, 0x0

    .end local v4    # "result":I
    .local v20, "result":I
    :try_start_4d7
    aput-object v1, v9, v4

    const/16 v18, 0x1

    aput-object v3, v9, v18

    const/4 v4, 0x2

    aput-object v5, v9, v4

    move-object/from16 v19, v1

    const/4 v1, 0x0

    const v4, -0x685207b6

    .end local v1    # "protoLogParam0":Ljava/lang/String;
    .local v19, "protoLogParam0":Ljava/lang/String;
    invoke-static {v6, v4, v1, v10, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_4ec

    .end local v3    # "protoLogParam1":Ljava/lang/String;
    .end local v5    # "protoLogParam2":Ljava/lang/String;
    .end local v19    # "protoLogParam0":Ljava/lang/String;
    .end local v20    # "result":I
    .restart local v4    # "result":I
    :cond_4ea
    move/from16 v20, v4

    .line 2649
    .end local v4    # "result":I
    .restart local v20    # "result":I
    :goto_4ec
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2650
    monitor-exit v13
    :try_end_4f0
    .catchall {:try_start_4d7 .. :try_end_4f0} :catchall_4f5

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return v1

    .line 2851
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "shouldRelayout":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "focusMayChange":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_4f5
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move/from16 v1, v20

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .end local v20    # "result":I
    .restart local v4    # "result":I
    :catchall_509
    move-exception v0

    move/from16 v20, v4

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move/from16 v1, v20

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v4    # "result":I
    .restart local v20    # "result":I
    goto/16 :goto_921

    .end local v20    # "result":I
    .end local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v43    # "pid":I
    .local v1, "result":I
    .local v28, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v30, "uid":I
    .local v31, "pid":I
    :catchall_51f
    move-exception v0

    move-object/from16 v42, v28

    move/from16 v28, v30

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move/from16 v9, v31

    move-object/from16 v4, v42

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .local v28, "uid":I
    .restart local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v43    # "pid":I
    goto/16 :goto_921

    .line 2677
    .end local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v43    # "pid":I
    .local v3, "attrChanges":I
    .local v5, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v8    # "shouldRelayout":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "focusMayChange":Z
    .local v20, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .local v28, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    .restart local v37    # "oldVisibility":I
    :cond_535
    move-object/from16 v34, v5

    move-object/from16 v2, v20

    move-object/from16 v42, v28

    move/from16 v28, v30

    move/from16 v43, v31

    move/from16 v4, v35

    move/from16 v31, v37

    move/from16 v30, v3

    .end local v3    # "attrChanges":I
    .end local v5    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v37    # "oldVisibility":I
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v28, "uid":I
    .local v30, "attrChanges":I
    .local v31, "oldVisibility":I
    .restart local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v43    # "pid":I
    :try_start_545
    const-string/jumbo v0, "relayoutWindow: viewVisibility_2"

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2679
    move-object/from16 v3, v34

    const/4 v5, 0x0

    .end local v34    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v3, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iput-boolean v5, v3, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 2680
    iput-boolean v5, v3, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z
    :try_end_552
    .catchall {:try_start_545 .. :try_end_552} :catchall_898

    .line 2682
    if-nez v11, :cond_59d

    :try_start_554
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    move-result v0

    if-eqz v0, :cond_59d

    .line 2686
    const-string/jumbo v0, "relayoutWindow: getSurface"

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2687
    iget-object v0, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_562
    .catchall {:try_start_554 .. :try_end_562} :catchall_587

    move-object/from16 v5, p18

    :try_start_564
    invoke-virtual {v0, v5}, Lcom/android/server/wm/WindowSurfaceController;->getSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2688
    iget-object v0, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_569
    .catchall {:try_start_564 .. :try_end_569} :catchall_573

    move-object/from16 v6, p22

    :try_start_56b
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowSurfaceController;->getBLASTSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2689
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_571
    .catchall {:try_start_56b .. :try_end_571} :catchall_5bc

    goto/16 :goto_5f2

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v8    # "shouldRelayout":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "focusMayChange":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    :catchall_573
    move-exception v0

    move-object/from16 v6, p22

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    :catchall_587
    move-exception v0

    move-object/from16 v5, p18

    move-object/from16 v6, p22

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .line 2682
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v8    # "shouldRelayout":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "focusMayChange":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    :cond_59d
    move-object/from16 v5, p18

    move-object/from16 v6, p22

    .line 2691
    :try_start_5a1
    sget-boolean v0, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG_VISIBILITY:Z
    :try_end_5a3
    .catchall {:try_start_5a1 .. :try_end_5a3} :catchall_898

    if-eqz v0, :cond_5ce

    :try_start_5a5
    const-string v0, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Releasing surface in: "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5bb
    .catchall {:try_start_5a5 .. :try_end_5bb} :catchall_5bc

    goto :goto_5ce

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v8    # "shouldRelayout":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "focusMayChange":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    :catchall_5bc
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    goto/16 :goto_921

    .line 2694
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v8    # "shouldRelayout":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "focusMayChange":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    :cond_5ce
    :goto_5ce
    :try_start_5ce
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "wmReleaseOutSurface_"

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 2695
    invoke-virtual {v4}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2694
    const-wide/16 v9, 0x20

    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2696
    invoke-virtual/range {p18 .. p18}, Landroid/view/SurfaceControl;->release()V
    :try_end_5ee
    .catchall {:try_start_5ce .. :try_end_5ee} :catchall_878

    .line 2698
    :try_start_5ee
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    .line 2699
    nop

    .line 2702
    :goto_5f2
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_5f5
    .catchall {:try_start_5ee .. :try_end_5f5} :catchall_862

    move v9, v15

    .line 2705
    .end local v15    # "focusMayChange":Z
    .restart local v9    # "focusMayChange":Z
    :goto_5f6
    if-eqz v9, :cond_602

    .line 2713
    const/4 v4, 0x1

    const/4 v10, 0x0

    :try_start_5fa
    invoke-virtual {v7, v10, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v0

    if-eqz v0, :cond_602

    .line 2714
    const/16 v23, 0x0

    .line 2720
    :cond_602
    and-int/lit8 v0, v1, 0x2

    if-eqz v0, :cond_608

    const/4 v0, 0x1

    goto :goto_609

    :cond_608
    const/4 v0, 0x0

    .line 2721
    .local v0, "toBeDisplayed":Z
    :goto_609
    if-eqz v23, :cond_615

    .line 2722
    const/4 v4, 0x1

    invoke-virtual {v2, v4}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 2723
    if-eqz v0, :cond_615

    .line 2728
    const/4 v4, 0x0

    invoke-virtual {v2, v4}, Lcom/android/server/wm/DisplayContent;->assignWindowLayers(Z)V

    .line 2732
    :cond_615
    if-eqz v32, :cond_61d

    .line 2733
    iget v4, v2, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    const/4 v10, 0x4

    or-int/2addr v4, v10

    iput v4, v2, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I
    :try_end_61d
    .catchall {:try_start_5fa .. :try_end_61d} :catchall_5bc

    .line 2737
    :cond_61d
    :try_start_61d
    iget-object v4, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;
    :try_end_61f
    .catchall {:try_start_61d .. :try_end_61f} :catchall_862

    if-eqz v4, :cond_628

    .line 2738
    :try_start_621
    iget-object v4, v2, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    iget-object v10, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v4, v10}, Lcom/android/server/wm/UnknownAppVisibilityController;->notifyRelayouted(Lcom/android/server/wm/ActivityRecord;)V
    :try_end_628
    .catchall {:try_start_621 .. :try_end_628} :catchall_5bc

    .line 2741
    :cond_628
    :try_start_628
    const-string/jumbo v4, "relayoutWindow: updateOrientation"
    :try_end_62b
    .catchall {:try_start_628 .. :try_end_62b} :catchall_862

    const-wide/16 v6, 0x20

    :try_start_62d
    invoke-static {v6, v7, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2742
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateOrientation()Z

    move-result v4

    .line 2743
    .local v4, "configChanged":Z
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_637
    .catchall {:try_start_62d .. :try_end_637} :catchall_84e

    .line 2745
    if-eqz v0, :cond_657

    :try_start_639
    iget-boolean v6, v12, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v6, :cond_657

    .line 2746
    iget-object v6, v2, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    const/4 v7, 0x0

    invoke-virtual {v6, v12, v7}, Lcom/android/server/wm/WallpaperController;->updateWallpaperOffset(Lcom/android/server/wm/WindowState;Z)Z
    :try_end_643
    .catchall {:try_start_639 .. :try_end_643} :catchall_644

    goto :goto_657

    .line 2851
    .end local v0    # "toBeDisplayed":Z
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v4    # "configChanged":Z
    .end local v8    # "shouldRelayout":Z
    .end local v9    # "focusMayChange":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    :catchall_644
    move-exception v0

    move-object/from16 v5, p0

    move-object/from16 v10, p11

    :goto_649
    move-object/from16 v6, p20

    move-object/from16 v7, p21

    move-object/from16 v22, v13

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    goto/16 :goto_921

    .line 2748
    .restart local v0    # "toBeDisplayed":Z
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v4    # "configChanged":Z
    .restart local v8    # "shouldRelayout":Z
    .restart local v9    # "focusMayChange":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    :cond_657
    :goto_657
    :try_start_657
    iget-object v6, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;
    :try_end_659
    .catchall {:try_start_657 .. :try_end_659} :catchall_84e

    if-eqz v6, :cond_660

    .line 2749
    :try_start_65b
    iget-object v6, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->updateReportedVisibilityLocked()V
    :try_end_660
    .catchall {:try_start_65b .. :try_end_660} :catchall_644

    .line 2751
    :cond_660
    :try_start_660
    iget-boolean v6, v3, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z
    :try_end_662
    .catchall {:try_start_660 .. :try_end_662} :catchall_84e

    if-eqz v6, :cond_669

    .line 2752
    const/4 v6, 0x0

    :try_start_665
    iput-boolean v6, v3, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z
    :try_end_667
    .catchall {:try_start_665 .. :try_end_667} :catchall_644

    .line 2753
    or-int/lit8 v1, v1, 0x20

    .line 2755
    :cond_669
    :try_start_669
    invoke-virtual {v14, v12}, Lcom/android/server/wm/DisplayPolicy;->areSystemBarsForcedShownLw(Lcom/android/server/wm/WindowState;)Z

    move-result v6

    if-eqz v6, :cond_671

    .line 2756
    or-int/lit8 v1, v1, 0x40

    .line 2758
    :cond_671
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    move-result v6
    :try_end_675
    .catchall {:try_start_669 .. :try_end_675} :catchall_84e

    if-nez v6, :cond_67b

    .line 2759
    const/4 v6, 0x0

    :try_start_678
    iput-boolean v6, v12, Lcom/android/server/wm/WindowState;->mResizedWhileGone:Z

    goto :goto_67c

    .line 2758
    :cond_67b
    const/4 v6, 0x0

    .line 2772
    :goto_67c
    if-eqz v8, :cond_684

    .line 2773
    move-object/from16 v7, p17

    invoke-virtual {v12, v7}, Lcom/android/server/wm/WindowState;->getMergedConfiguration(Landroid/util/MergedConfiguration;)V
    :try_end_683
    .catchall {:try_start_678 .. :try_end_683} :catchall_644

    goto :goto_689

    .line 2775
    :cond_684
    move-object/from16 v7, p17

    :try_start_686
    invoke-virtual {v12, v7}, Lcom/android/server/wm/WindowState;->getLastReportedMergedConfiguration(Landroid/util/MergedConfiguration;)V

    .line 2777
    :goto_689
    invoke-virtual {v12, v7}, Lcom/android/server/wm/WindowState;->setLastReportedMergedConfiguration(Landroid/util/MergedConfiguration;)V

    .line 2780
    iget-boolean v10, v12, Lcom/android/server/wm/WindowState;->mDssEnabled:Z
    :try_end_68e
    .catchall {:try_start_686 .. :try_end_68e} :catchall_84e

    if-eqz v10, :cond_69b

    .line 2781
    :try_start_690
    invoke-static {}, Lcom/android/server/DssController;->getService()Lcom/android/server/DssController;

    move-result-object v10

    .line 2782
    .local v10, "dssController":Lcom/android/server/DssController;
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v15, v15, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v7, v15}, Lcom/android/server/DssController;->scaleExistingMergedConfiguration(Landroid/util/MergedConfiguration;Ljava/lang/String;)V
    :try_end_69b
    .catchall {:try_start_690 .. :try_end_69b} :catchall_644

    .line 2789
    .end local v10    # "dssController":Lcom/android/server/DssController;
    :cond_69b
    :try_start_69b
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->updateLastInsetValues()V
    :try_end_69e
    .catchall {:try_start_69b .. :try_end_69e} :catchall_84e

    .line 2791
    move-object/from16 v10, p11

    :try_start_6a0
    invoke-virtual {v12, v10}, Lcom/android/server/wm/WindowState;->getCompatFrame(Landroid/graphics/Rect;)V
    :try_end_6a3
    .catchall {:try_start_6a0 .. :try_end_6a3} :catchall_84a

    .line 2792
    move-object/from16 v15, p12

    move-object/from16 v6, p13

    move-object/from16 v7, p14

    :try_start_6a9
    invoke-virtual {v12, v15, v6, v7}, Lcom/android/server/wm/WindowState;->getInsetsForRelayout(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 2795
    move/from16 v20, v0

    .end local v0    # "toBeDisplayed":Z
    .local v20, "toBeDisplayed":Z
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;
    :try_end_6b0
    .catchall {:try_start_6a9 .. :try_end_6b0} :catchall_846

    if-nez v0, :cond_6bb

    :try_start_6b2
    iget-boolean v0, v12, Lcom/android/server/wm/WindowState;->mIsImWindow:Z
    :try_end_6b4
    .catchall {:try_start_6b2 .. :try_end_6b4} :catchall_6b7

    if-eqz v0, :cond_6be

    goto :goto_6bb

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v4    # "configChanged":Z
    .end local v8    # "shouldRelayout":Z
    .end local v9    # "focusMayChange":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    :catchall_6b7
    move-exception v0

    move-object/from16 v5, p0

    goto :goto_649

    .line 2797
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v4    # "configChanged":Z
    .restart local v8    # "shouldRelayout":Z
    .restart local v9    # "focusMayChange":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "toBeDisplayed":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    :cond_6bb
    :goto_6bb
    :try_start_6bb
    invoke-virtual {v12, v2}, Lcom/android/server/wm/WindowState;->updateLetterboxDirectionIfNeeded(Lcom/android/server/wm/DisplayContent;)V

    .line 2800
    :cond_6be
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getWmDisplayCutout()Lcom/android/server/wm/utils/WmDisplayCutout;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/utils/WmDisplayCutout;->getDisplayCutout()Landroid/view/DisplayCutout;

    move-result-object v0
    :try_end_6c6
    .catchall {:try_start_6bb .. :try_end_6c6} :catchall_846

    move-object/from16 v22, v13

    move-object/from16 v13, p16

    :try_start_6ca
    invoke-virtual {v13, v0}, Landroid/view/DisplayCutout$ParcelableWrapper;->set(Landroid/view/DisplayCutout;)V

    .line 2801
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    invoke-virtual {v12, v0}, Lcom/android/server/wm/WindowState;->getBackdropFrame(Landroid/graphics/Rect;)Landroid/graphics/Rect;

    move-result-object v0

    move-object/from16 v6, p15

    invoke-virtual {v6, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2802
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getInsetsState()Landroid/view/InsetsState;

    move-result-object v0

    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isClientLocal()Z

    move-result v6

    move-object/from16 v7, p19

    invoke-virtual {v7, v0, v6}, Landroid/view/InsetsState;->set(Landroid/view/InsetsState;Z)V

    .line 2803
    sget-boolean v0, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG:Z
    :try_end_6e9
    .catchall {:try_start_6ca .. :try_end_6e9} :catchall_83a

    if-eqz v0, :cond_73f

    .line 2804
    :try_start_6eb
    const-string v0, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Relayout given client "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ", requestedWidth="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v7, p5

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, ", requestedHeight="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v7, p6

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, ", viewVisibility="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, "\nRelayout returning frame="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ", surface="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v0, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_731
    .catchall {:try_start_6eb .. :try_end_731} :catchall_732

    goto :goto_73f

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v4    # "configChanged":Z
    .end local v8    # "shouldRelayout":Z
    .end local v9    # "focusMayChange":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    :catchall_732
    move-exception v0

    move-object/from16 v5, p0

    :goto_735
    move-object/from16 v6, p20

    move-object/from16 v7, p21

    :goto_739
    move-object/from16 v4, v42

    move/from16 v9, v43

    goto/16 :goto_921

    .line 2812
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v4    # "configChanged":Z
    .restart local v8    # "shouldRelayout":Z
    .restart local v9    # "focusMayChange":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "toBeDisplayed":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    :cond_73f
    :goto_73f
    :try_start_73f
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_FOCUS_enabled:Z
    :try_end_741
    .catchall {:try_start_73f .. :try_end_741} :catchall_83a

    if-eqz v0, :cond_769

    :try_start_743
    invoke-static {v12}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    move v6, v9

    .local v6, "protoLogParam1":Z
    sget-object v7, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/server/wm/ProtoLogGroup;

    const/4 v5, 0x2

    new-array v5, v5, [Ljava/lang/Object;

    const/16 v18, 0x0

    aput-object v0, v5, v18

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v35

    const/16 v27, 0x1

    aput-object v35, v5, v27

    move-object/from16 v35, v0

    move/from16 v19, v6

    move/from16 v36, v8

    const v0, 0x5b75a9f

    const/16 v6, 0xc

    const/4 v8, 0x0

    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Z
    .end local v8    # "shouldRelayout":Z
    .local v19, "protoLogParam1":Z
    .local v35, "protoLogParam0":Ljava/lang/String;
    .local v36, "shouldRelayout":Z
    invoke-static {v7, v0, v6, v8, v5}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_768
    .catchall {:try_start_743 .. :try_end_768} :catchall_732

    goto :goto_76d

    .end local v19    # "protoLogParam1":Z
    .end local v35    # "protoLogParam0":Ljava/lang/String;
    .end local v36    # "shouldRelayout":Z
    .restart local v8    # "shouldRelayout":Z
    :cond_769
    move/from16 v36, v8

    const/16 v27, 0x1

    .line 2815
    .end local v8    # "shouldRelayout":Z
    .restart local v36    # "shouldRelayout":Z
    :goto_76d
    move-object/from16 v5, p0

    :try_start_76f
    iget-boolean v0, v5, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    if-eqz v0, :cond_774

    goto :goto_776

    :cond_774
    const/16 v27, 0x0

    :goto_776
    or-int v1, v1, v27

    .line 2823
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;
    :try_end_77a
    .catchall {:try_start_76f .. :try_end_77a} :catchall_838

    if-eqz v0, :cond_78c

    :try_start_77c
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/wm/ActivityRecord;->mBoundsCompatController:Lcom/android/server/wm/BoundsCompatController;

    .line 2825
    invoke-virtual {v0}, Lcom/android/server/wm/BoundsCompatController;->isBoundsCompatEnabled()Z

    move-result v0
    :try_end_784
    .catchall {:try_start_77c .. :try_end_784} :catchall_78a

    if-eqz v0, :cond_78c

    .line 2826
    or-int v0, v1, v29

    move v1, v0

    .end local v1    # "result":I
    .local v0, "result":I
    goto :goto_78c

    .line 2851
    .end local v0    # "result":I
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v4    # "configChanged":Z
    .end local v9    # "focusMayChange":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v36    # "shouldRelayout":Z
    .restart local v1    # "result":I
    :catchall_78a
    move-exception v0

    goto :goto_735

    .line 2828
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v4    # "configChanged":Z
    .restart local v9    # "focusMayChange":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "toBeDisplayed":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    .restart local v36    # "shouldRelayout":Z
    :cond_78c
    :goto_78c
    :try_start_78c
    iget-object v0, v5, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiStarController:Lcom/android/server/wm/MultiStarController;

    .line 2829
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v6

    invoke-virtual {v0, v6}, Lcom/android/server/wm/MultiStarController;->isOverlapNotchLocked(Lcom/android/server/wm/Task;)Z

    move-result v0
    :try_end_798
    .catchall {:try_start_78c .. :try_end_798} :catchall_838

    if-eqz v0, :cond_7a3

    .line 2830
    :try_start_79a
    sget-object v0, Landroid/view/DisplayCutout;->NO_CUTOUT:Landroid/view/DisplayCutout;

    invoke-virtual {v13, v0}, Landroid/view/DisplayCutout$ParcelableWrapper;->set(Landroid/view/DisplayCutout;)V
    :try_end_79f
    .catchall {:try_start_79a .. :try_end_79f} :catchall_78a

    .line 2831
    const/high16 v0, 0x200000

    or-int/2addr v0, v1

    move v1, v0

    .line 2834
    :cond_7a3
    :try_start_7a3
    sget-boolean v0, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG_LAYOUT:Z
    :try_end_7a5
    .catchall {:try_start_7a3 .. :try_end_7a5} :catchall_838

    if-eqz v0, :cond_7c9

    .line 2835
    :try_start_7a7
    const-string v0, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Relayout complete "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ": outFrame="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2836
    invoke-virtual/range {p11 .. p11}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 2835
    invoke-static {v0, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7c9
    .catchall {:try_start_7a7 .. :try_end_7c9} :catchall_78a

    .line 2838
    :cond_7c9
    const/4 v6, 0x0

    :try_start_7ca
    iput-boolean v6, v12, Lcom/android/server/wm/WindowState;->mInRelayout:Z
    :try_end_7cc
    .catchall {:try_start_7ca .. :try_end_7cc} :catchall_838

    .line 2840
    if-eqz v4, :cond_7dc

    .line 2841
    :try_start_7ce
    const-string/jumbo v0, "relayoutWindow: postNewConfigurationToHandler"

    const-wide/16 v6, 0x20

    invoke-static {v6, v7, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2843
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 2844
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V
    :try_end_7dc
    .catchall {:try_start_7ce .. :try_end_7dc} :catchall_78a

    .line 2846
    :cond_7dc
    :try_start_7dc
    iget-object v0, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_7de
    .catchall {:try_start_7dc .. :try_end_7de} :catchall_838

    if-eqz v0, :cond_7fb

    .line 2847
    :try_start_7e0
    iget-object v0, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfaceController;->getWidth()I

    move-result v0

    iget-object v6, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    .line 2848
    invoke-virtual {v6}, Lcom/android/server/wm/WindowSurfaceController;->getHeight()I

    move-result v6
    :try_end_7ec
    .catchall {:try_start_7e0 .. :try_end_7ec} :catchall_7f4

    .line 2847
    move-object/from16 v7, p21

    :try_start_7ee
    invoke-virtual {v7, v0, v6}, Landroid/graphics/Point;->set(II)V
    :try_end_7f1
    .catchall {:try_start_7ee .. :try_end_7f1} :catchall_7f2

    goto :goto_7fd

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v4    # "configChanged":Z
    .end local v9    # "focusMayChange":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v36    # "shouldRelayout":Z
    :catchall_7f2
    move-exception v0

    goto :goto_7f7

    :catchall_7f4
    move-exception v0

    move-object/from16 v7, p21

    :goto_7f7
    move-object/from16 v6, p20

    goto/16 :goto_739

    .line 2846
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v4    # "configChanged":Z
    .restart local v9    # "focusMayChange":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v20    # "toBeDisplayed":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    .restart local v36    # "shouldRelayout":Z
    :cond_7fb
    move-object/from16 v7, p21

    .line 2850
    :goto_7fd
    move-object/from16 v6, p20

    :try_start_7ff
    invoke-direct {v5, v12, v6}, Lcom/android/server/wm/WindowManagerService;->getInsetsSourceControls(Lcom/android/server/wm/WindowState;[Landroid/view/InsetsSourceControl;)V

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v9    # "focusMayChange":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v20    # "toBeDisplayed":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v36    # "shouldRelayout":Z
    monitor-exit v22
    :try_end_803
    .catchall {:try_start_7ff .. :try_end_803} :catchall_836

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2855
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Relayout hash="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v8, v38

    .end local v38    # "winHashCode":Ljava/lang/String;
    .local v8, "winHashCode":Ljava/lang/String;
    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ", pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v9, v43

    .end local v43    # "pid":I
    .local v9, "pid":I
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ": mAttrs="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v2, v42

    .end local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v2, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v3, "WindowManager"

    invoke-static {v3, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2860
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2861
    return v1

    .line 2851
    .end local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v4    # "configChanged":Z
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .restart local v38    # "winHashCode":Ljava/lang/String;
    .restart local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v43    # "pid":I
    :catchall_836
    move-exception v0

    goto :goto_841

    :catchall_838
    move-exception v0

    goto :goto_83d

    :catchall_83a
    move-exception v0

    move-object/from16 v5, p0

    :goto_83d
    move-object/from16 v6, p20

    move-object/from16 v7, p21

    :goto_841
    move-object/from16 v8, v38

    move/from16 v9, v43

    goto :goto_874

    :catchall_846
    move-exception v0

    move-object/from16 v5, p0

    goto :goto_855

    :catchall_84a
    move-exception v0

    move-object/from16 v5, p0

    goto :goto_853

    :catchall_84e
    move-exception v0

    move-object/from16 v5, p0

    move-object/from16 v10, p11

    :goto_853
    move-object/from16 v15, p12

    :goto_855
    move-object/from16 v6, p20

    move-object/from16 v7, p21

    move-object/from16 v22, v13

    move-object/from16 v8, v38

    move/from16 v9, v43

    move-object/from16 v13, p16

    goto :goto_874

    :catchall_862
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v15, p12

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v8, v38

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    :goto_874
    move-object/from16 v4, v42

    .end local v38    # "winHashCode":Ljava/lang/String;
    .end local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v43    # "pid":I
    .restart local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    goto/16 :goto_921

    .line 2698
    .end local v9    # "pid":I
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .local v8, "shouldRelayout":Z
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    .restart local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .restart local v15    # "focusMayChange":Z
    .restart local v21    # "becameVisible":Z
    .restart local v23    # "imMayMove":Z
    .restart local v24    # "privateFlagChanges":I
    .restart local v25    # "samsungFlagChanges":I
    .restart local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "attrChanges":I
    .restart local v31    # "oldVisibility":I
    .restart local v32    # "wallpaperMayMove":Z
    .restart local v33    # "flagChanges":I
    .restart local v38    # "winHashCode":Ljava/lang/String;
    .restart local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v43    # "pid":I
    :catchall_878
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move/from16 v36, v8

    move-object/from16 v22, v13

    move-object/from16 v8, v38

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v38    # "winHashCode":Ljava/lang/String;
    .end local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v43    # "pid":I
    .local v4, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v8, "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    .restart local v36    # "shouldRelayout":Z
    const-wide/16 v18, 0x20

    :try_start_88e
    invoke-static/range {v18 .. v19}, Landroid/os/Trace;->traceEnd(J)V

    .line 2699
    nop

    .end local v1    # "result":I
    .end local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .end local v16    # "origId":J
    .end local v28    # "uid":I
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "seq":I
    .end local p4    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local p5    # "requestedWidth":I
    .end local p6    # "requestedHeight":I
    .end local p7    # "viewVisibility":I
    .end local p8    # "flags":I
    .end local p9    # "frameNumber":J
    .end local p11    # "outFrame":Landroid/graphics/Rect;
    .end local p12    # "outContentInsets":Landroid/graphics/Rect;
    .end local p13    # "outVisibleInsets":Landroid/graphics/Rect;
    .end local p14    # "outStableInsets":Landroid/graphics/Rect;
    .end local p15    # "outBackdropFrame":Landroid/graphics/Rect;
    .end local p16    # "outCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .end local p17    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .end local p18    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .end local p19    # "outInsetsState":Landroid/view/InsetsState;
    .end local p20    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .end local p21    # "outSurfaceSize":Landroid/graphics/Point;
    .end local p22    # "outBLASTSurfaceControl":Landroid/view/SurfaceControl;
    throw v0
    :try_end_893
    .catchall {:try_start_88e .. :try_end_893} :catchall_893

    .line 2851
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    .end local v14    # "displayPolicy":Lcom/android/server/wm/DisplayPolicy;
    .end local v15    # "focusMayChange":Z
    .end local v21    # "becameVisible":Z
    .end local v23    # "imMayMove":Z
    .end local v24    # "privateFlagChanges":I
    .end local v25    # "samsungFlagChanges":I
    .end local v26    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "attrChanges":I
    .end local v31    # "oldVisibility":I
    .end local v32    # "wallpaperMayMove":Z
    .end local v33    # "flagChanges":I
    .end local v36    # "shouldRelayout":Z
    .restart local v1    # "result":I
    .restart local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    .restart local v16    # "origId":J
    .restart local v28    # "uid":I
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "seq":I
    .restart local p4    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local p5    # "requestedWidth":I
    .restart local p6    # "requestedHeight":I
    .restart local p7    # "viewVisibility":I
    .restart local p8    # "flags":I
    .restart local p9    # "frameNumber":J
    .restart local p11    # "outFrame":Landroid/graphics/Rect;
    .restart local p12    # "outContentInsets":Landroid/graphics/Rect;
    .restart local p13    # "outVisibleInsets":Landroid/graphics/Rect;
    .restart local p14    # "outStableInsets":Landroid/graphics/Rect;
    .restart local p15    # "outBackdropFrame":Landroid/graphics/Rect;
    .restart local p16    # "outCutout":Landroid/view/DisplayCutout$ParcelableWrapper;
    .restart local p17    # "mergedConfiguration":Landroid/util/MergedConfiguration;
    .restart local p18    # "outSurfaceControl":Landroid/view/SurfaceControl;
    .restart local p19    # "outInsetsState":Landroid/view/InsetsState;
    .restart local p20    # "outActiveControls":[Landroid/view/InsetsSourceControl;
    .restart local p21    # "outSurfaceSize":Landroid/graphics/Point;
    .restart local p22    # "outBLASTSurfaceControl":Landroid/view/SurfaceControl;
    :catchall_893
    move-exception v0

    move-object/from16 v38, v8

    goto/16 :goto_921

    .end local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .restart local v38    # "winHashCode":Ljava/lang/String;
    .restart local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v43    # "pid":I
    :catchall_898
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v8, v38

    move-object/from16 v4, v42

    move/from16 v9, v43

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v38    # "winHashCode":Ljava/lang/String;
    .end local v42    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v43    # "pid":I
    .restart local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    goto/16 :goto_921

    .end local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .local v28, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v30, "uid":I
    .local v31, "pid":I
    .restart local v38    # "winHashCode":Ljava/lang/String;
    :catchall_8ac
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object/from16 v4, v28

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v8, v38

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .end local v38    # "winHashCode":Ljava/lang/String;
    .restart local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    .local v28, "uid":I
    goto/16 :goto_921

    .end local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .local v15, "winHashCode":Ljava/lang/String;
    .local v28, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    :catchall_8c2
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v5, v7

    move-object/from16 v22, v13

    move-object v8, v15

    move-object/from16 v4, v28

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    move-object/from16 v38, v8

    .end local v15    # "winHashCode":Ljava/lang/String;
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    .local v28, "uid":I
    goto/16 :goto_921

    .end local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .end local v28    # "uid":I
    .local v2, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v15    # "winHashCode":Ljava/lang/String;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    :catchall_8d9
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    move-object v4, v2

    move-object v5, v7

    move-object/from16 v22, v13

    move-object v8, v15

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    move-object/from16 v38, v8

    .end local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v15    # "winHashCode":Ljava/lang/String;
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "winHashCode":Ljava/lang/String;
    .restart local v9    # "pid":I
    .restart local v28    # "uid":I
    goto :goto_921

    .end local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "winHashCode":Ljava/lang/String;
    .end local v9    # "pid":I
    .end local v28    # "uid":I
    .restart local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v29    # "winHashCode":Ljava/lang/String;
    .restart local v30    # "uid":I
    .restart local v31    # "pid":I
    :catchall_8ee
    move-exception v0

    move-object/from16 v10, p11

    move-object/from16 v6, p20

    goto :goto_8f7

    :catchall_8f4
    move-exception v0

    move-object/from16 v10, p11

    :goto_8f7
    move-object v4, v2

    move-object v5, v7

    move-object/from16 v22, v13

    move/from16 v28, v30

    move/from16 v9, v31

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    move-object/from16 v38, v29

    .end local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v30    # "uid":I
    .end local v31    # "pid":I
    .restart local v4    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v9    # "pid":I
    .restart local v28    # "uid":I
    goto :goto_921

    .end local v9    # "pid":I
    .end local v28    # "uid":I
    .end local v29    # "winHashCode":Ljava/lang/String;
    .restart local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .local v3, "uid":I
    .local v4, "winHashCode":Ljava/lang/String;
    .local v5, "pid":I
    :catchall_906
    move-exception v0

    move-object/from16 v10, p11

    move/from16 v28, v3

    move-object/from16 v29, v4

    move v9, v5

    move-object v5, v7

    goto :goto_918

    :catchall_910
    move-exception v0

    move/from16 v28, v3

    move-object/from16 v29, v4

    move v9, v5

    move-object v5, v7

    move-object v10, v12

    :goto_918
    move-object/from16 v22, v13

    move-object/from16 v13, p16

    move-object/from16 v7, p21

    move-object v4, v2

    move-object/from16 v38, v29

    .end local v2    # "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .end local v3    # "uid":I
    .end local v5    # "pid":I
    .local v4, "winAttrsForLog":Landroid/view/WindowManager$LayoutParams;
    .restart local v9    # "pid":I
    .restart local v28    # "uid":I
    .restart local v38    # "winHashCode":Ljava/lang/String;
    :goto_921
    :try_start_921
    monitor-exit v22
    :try_end_922
    .catchall {:try_start_921 .. :try_end_922} :catchall_926

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_926
    move-exception v0

    goto :goto_921
.end method

.method public removeFixedRefreshRatePackage(Ljava/lang/String;)V
    .registers 5
    .param p1, "packageName"    # Ljava/lang/String;

    .line 10115
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_REFRESH_RATE_POLICY:Z

    if-eqz v0, :cond_1f

    .line 10116
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10117
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v2, Lcom/android/server/wm/-$$Lambda$WindowManagerService$9jWr-iX8JD8ZEG_BPL-elTRKROE;

    invoke-direct {v2, p1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$9jWr-iX8JD8ZEG_BPL-elTRKROE;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 10119
    monitor-exit v0
    :try_end_15
    .catchall {:try_start_7 .. :try_end_15} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_1f

    :catchall_19
    move-exception v1

    :try_start_1a
    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_1a .. :try_end_1b} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 10121
    :cond_1f
    :goto_1f
    return-void
.end method

.method public removeKeyCustomizeEvent(IIIZ)V
    .registers 7
    .param p1, "priority"    # I
    .param p2, "press"    # I
    .param p3, "keyCode"    # I
    .param p4, "restore"    # Z

    .line 10354
    const-string v0, "com.samsung.android.permisson.ACCESS_KEY_CUSTOMIZE_INFO"

    const-string/jumbo v1, "removeKeyCustomizeEvent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 10358
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2, p3, p4}, Lcom/android/server/policy/WindowManagerPolicyExt;->removeKeyCustomizeEvent(IIIZ)V

    .line 10359
    return-void

    .line 10356
    :cond_13
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires ACCESS_KEY_CUSTOMIZE_INFO permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public removeObsoleteTaskFiles(Landroid/util/ArraySet;[I)V
    .registers 5
    .param p2, "runningUserIds"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArraySet<",
            "Ljava/lang/Integer;",
            ">;[I)V"
        }
    .end annotation

    .line 4226
    .local p1, "persistentTaskIds":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/Integer;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4227
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/TaskSnapshotController;->removeObsoleteTaskFiles(Landroid/util/ArraySet;[I)V

    .line 4228
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4229
    return-void

    .line 4228
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .registers 10
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .line 4567
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4568
    .local v0, "watcherBinder":Landroid/os/IBinder;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4569
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_b
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_3e

    .line 4570
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 4571
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v4, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->mWatcher:Landroid/view/IRotationWatcher;

    invoke-interface {v4}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    if-ne v0, v4, :cond_3b

    .line 4572
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 4573
    .local v4, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->mWatcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    .line 4574
    .local v5, "binder":Landroid/os/IBinder;
    if-eqz v5, :cond_39

    .line 4575
    iget-object v6, v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->mDeathRecipient:Landroid/os/IBinder$DeathRecipient;

    const/4 v7, 0x0

    invoke-interface {v5, v6, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4577
    :cond_39
    add-int/lit8 v2, v2, -0x1

    .line 4569
    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    .end local v4    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    .end local v5    # "binder":Landroid/os/IBinder;
    :cond_3b
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    .line 4580
    .end local v2    # "i":I
    :cond_3e
    monitor-exit v1
    :try_end_3f
    .catchall {:try_start_7 .. :try_end_3f} :catchall_43

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4581
    return-void

    .line 4580
    :catchall_43
    move-exception v2

    :try_start_44
    monitor-exit v1
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_43

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2
.end method

.method removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .line 2183
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2184
    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 2185
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_15

    .line 2186
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->removeIfPossible()V

    .line 2187
    monitor-exit v0
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_1f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 2191
    :cond_15
    :try_start_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/EmbeddedWindowController;->remove(Landroid/view/IWindow;)V

    .line 2192
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_15 .. :try_end_1b} :catchall_1f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 2193
    return-void

    .line 2192
    :catchall_1f
    move-exception v1

    :try_start_20
    monitor-exit v0
    :try_end_21
    .catchall {:try_start_20 .. :try_end_21} :catchall_1f

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 5021
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5022
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5023
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5024
    return-void

    .line 5023
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public removeWindowToken(Landroid/os/IBinder;I)V
    .registers 21
    .param p1, "binder"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I

    .line 3126
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p2

    .line 3127
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "removeWindowToken()"

    invoke-virtual {v1, v0, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    .line 3129
    .local v4, "callerCanManageAppTokens":Z
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v5

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3130
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/RootWindowContainer;->getWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    move-result-object v0

    move-object v6, v0

    .line 3131
    .local v6, "windowToken":Lcom/android/server/wm/WindowToken;
    monitor-exit v5
    :try_end_1d
    .catchall {:try_start_12 .. :try_end_1d} :catchall_b6

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3132
    const/4 v0, 0x1

    const/4 v5, 0x0

    if-nez v6, :cond_3c

    .line 3133
    sget-boolean v7, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_3b

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    sget-object v8, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v9, 0x5a8266d6

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v7, v0, v5

    const-string/jumbo v10, "removeWindowToken: Attempted to remove non-existing token: %s"

    invoke-static {v8, v9, v5, v10, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3135
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    :cond_3b
    return-void

    .line 3137
    :cond_3c
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 3141
    .local v7, "callingUid":I
    if-nez v4, :cond_59

    invoke-virtual {v6}, Lcom/android/server/wm/WindowToken;->getOwnerUid()I

    move-result v8

    const/4 v9, -0x1

    if-eq v8, v9, :cond_50

    .line 3142
    invoke-virtual {v6}, Lcom/android/server/wm/WindowToken;->getOwnerUid()I

    move-result v8

    if-ne v7, v8, :cond_50

    goto :goto_59

    .line 3143
    :cond_50
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v5, "removeWindowToken: Requires MANAGE_APP_TOKENS permission to remove token owned by another uid"

    invoke-direct {v0, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3147
    :cond_59
    :goto_59
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 3149
    .local v8, "origId":J
    :try_start_5d
    iget-object v10, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v10
    :try_end_60
    .catchall {:try_start_5d .. :try_end_60} :catchall_b1

    :try_start_60
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3150
    iget-object v11, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v11, v3}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    .line 3151
    .local v11, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v11, :cond_97

    .line 3152
    sget-boolean v12, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v12, :cond_8f

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v12

    .local v12, "protoLogParam0":Ljava/lang/String;
    int-to-long v13, v3

    .local v13, "protoLogParam1":J
    sget-object v15, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string/jumbo v0, "removeWindowToken: Attempted to remove token: %s for non-exiting displayId=%d"

    const/4 v5, 0x2

    new-array v5, v5, [Ljava/lang/Object;

    const/16 v17, 0x0

    aput-object v12, v5, v17

    invoke-static {v13, v14}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v17

    const/16 v16, 0x1

    aput-object v17, v5, v16

    const v1, 0x67ab9823

    const/4 v3, 0x4

    invoke-static {v15, v1, v3, v0, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 3154
    .end local v12    # "protoLogParam0":Ljava/lang/String;
    .end local v13    # "protoLogParam1":J
    :cond_8f
    monitor-exit v10
    :try_end_90
    .catchall {:try_start_60 .. :try_end_90} :catchall_ab

    .line 3161
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3154
    return-void

    .line 3157
    :cond_97
    :try_start_97
    invoke-virtual {v11, v2}, Lcom/android/server/wm/DisplayContent;->removeWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/WindowToken;

    .line 3158
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getInputMonitor()Lcom/android/server/wm/InputMonitor;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 3159
    .end local v11    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v10
    :try_end_a3
    .catchall {:try_start_97 .. :try_end_a3} :catchall_ab

    :try_start_a3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_a6
    .catchall {:try_start_a3 .. :try_end_a6} :catchall_b1

    .line 3161
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3162
    nop

    .line 3163
    return-void

    .line 3159
    :catchall_ab
    move-exception v0

    :try_start_ac
    monitor-exit v10
    :try_end_ad
    .catchall {:try_start_ac .. :try_end_ad} :catchall_ab

    :try_start_ad
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v4    # "callerCanManageAppTokens":Z
    .end local v6    # "windowToken":Lcom/android/server/wm/WindowToken;
    .end local v7    # "callingUid":I
    .end local v8    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "binder":Landroid/os/IBinder;
    .end local p2    # "displayId":I
    throw v0
    :try_end_b1
    .catchall {:try_start_ad .. :try_end_b1} :catchall_b1

    .line 3161
    .restart local v4    # "callerCanManageAppTokens":Z
    .restart local v6    # "windowToken":Lcom/android/server/wm/WindowToken;
    .restart local v7    # "callingUid":I
    .restart local v8    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "binder":Landroid/os/IBinder;
    .restart local p2    # "displayId":I
    :catchall_b1
    move-exception v0

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3162
    throw v0

    .line 3131
    .end local v6    # "windowToken":Lcom/android/server/wm/WindowToken;
    .end local v7    # "callingUid":I
    .end local v8    # "origId":J
    :catchall_b6
    move-exception v0

    :try_start_b7
    monitor-exit v5
    :try_end_b8
    .catchall {:try_start_b7 .. :try_end_b8} :catchall_b6

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method reparentDisplayContent(Landroid/view/IWindow;Landroid/view/SurfaceControl;I)V
    .registers 14
    .param p1, "client"    # Landroid/view/IWindow;
    .param p2, "sc"    # Landroid/view/SurfaceControl;
    .param p3, "displayId"    # I

    .line 7938
    invoke-direct {p0, p3}, Lcom/android/server/wm/WindowManagerService;->checkCallerOwnsDisplay(I)V

    .line 7940
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7941
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_d
    .catchall {:try_start_6 .. :try_end_d} :catchall_53

    .line 7943
    .local v1, "token":J
    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_f
    invoke-virtual {p0, v3, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v5

    .line 7944
    .local v5, "win":Lcom/android/server/wm/WindowState;
    if-nez v5, :cond_34

    .line 7945
    sget-boolean v3, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_2c

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x4f03ccce

    const-string v8, "Bad requesting window %s"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    aput-object v3, v9, v4

    invoke-static {v6, v7, v4, v8, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_2c
    .catchall {:try_start_f .. :try_end_2c} :catchall_4d

    .line 7956
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_2c
    :try_start_2c
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit v0
    :try_end_30
    .catchall {:try_start_2c .. :try_end_30} :catchall_53

    .line 7946
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7948
    :cond_34
    :try_start_34
    invoke-direct {p0, p3, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3, v5, p2}, Lcom/android/server/wm/DisplayContent;->reparentDisplayContent(Lcom/android/server/wm/WindowState;Landroid/view/SurfaceControl;)V

    .line 7951
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v3, :cond_44

    .line 7952
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v3, p3, v5}, Lcom/android/server/wm/AccessibilityController;->handleWindowObserverOfEmbeddedDisplayLocked(ILcom/android/server/wm/WindowState;)V
    :try_end_44
    .catchall {:try_start_34 .. :try_end_44} :catchall_4d

    .line 7956
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_44
    :try_start_44
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7957
    nop

    .line 7958
    .end local v1    # "token":J
    monitor-exit v0
    :try_end_49
    .catchall {:try_start_44 .. :try_end_49} :catchall_53

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7959
    return-void

    .line 7956
    .restart local v1    # "token":J
    :catchall_4d
    move-exception v3

    :try_start_4e
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7957
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "client":Landroid/view/IWindow;
    .end local p2    # "sc":Landroid/view/SurfaceControl;
    .end local p3    # "displayId":I
    throw v3

    .line 7958
    .end local v1    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "client":Landroid/view/IWindow;
    .restart local p2    # "sc":Landroid/view/SurfaceControl;
    .restart local p3    # "displayId":I
    :catchall_53
    move-exception v1

    monitor-exit v0
    :try_end_55
    .catchall {:try_start_4e .. :try_end_55} :catchall_53

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method reportSystemGestureExclusionChanged(Lcom/android/server/wm/Session;Landroid/view/IWindow;Ljava/util/List;)V
    .registers 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "window"    # Landroid/view/IWindow;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/wm/Session;",
            "Landroid/view/IWindow;",
            "Ljava/util/List<",
            "Landroid/graphics/Rect;",
            ">;)V"
        }
    .end annotation

    .line 4634
    .local p3, "exclusionRects":Ljava/util/List;, "Ljava/util/List<Landroid/graphics/Rect;>;"
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4635
    const/4 v1, 0x1

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 4636
    .local v1, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v1, p3}, Lcom/android/server/wm/WindowState;->setSystemGestureExclusion(Ljava/util/List;)Z

    move-result v2

    if-eqz v2, :cond_18

    .line 4637
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateSystemGestureExclusion()Z

    .line 4639
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_18
    monitor-exit v0
    :try_end_19
    .catchall {:try_start_3 .. :try_end_19} :catchall_1d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4640
    return-void

    .line 4639
    :catchall_1d
    move-exception v1

    :try_start_1e
    monitor-exit v0
    :try_end_1f
    .catchall {:try_start_1e .. :try_end_1f} :catchall_1d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    .registers 5
    .param p1, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p2, "deviceId"    # I

    .line 7782
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 7783
    .local v0, "focusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_13

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    if-eqz v1, :cond_13

    .line 7784
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v1, p1, p2}, Landroid/view/IWindow;->requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_13} :catch_14

    .line 7787
    .end local v0    # "focusedWindow":Lcom/android/server/wm/WindowState;
    :cond_13
    goto :goto_15

    .line 7786
    :catch_14
    move-exception v0

    .line 7788
    :goto_15
    return-void
.end method

.method public requestAssistScreenshot(Landroid/app/IAssistDataReceiver;)Z
    .registers 6
    .param p1, "receiver"    # Landroid/app/IAssistDataReceiver;

    .line 4173
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v1, "requestAssistScreenshot()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_4f

    .line 4178
    if-eqz p1, :cond_47

    .line 4184
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_10
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4185
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4186
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_29

    .line 4187
    sget-boolean v2, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG_SCREENSHOT:Z

    if-eqz v2, :cond_27

    .line 4188
    const-string v2, "WindowManager"

    const-string v3, "Screenshot returning null. No Display for displayId=0"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4191
    :cond_27
    const/4 v2, 0x0

    .local v2, "bm":Landroid/graphics/Bitmap;
    goto :goto_2f

    .line 4193
    .end local v2    # "bm":Landroid/graphics/Bitmap;
    :cond_29
    sget-object v2, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->screenshotDisplayLocked(Landroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    move-result-object v2

    .line 4195
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "bm":Landroid/graphics/Bitmap;
    :goto_2f
    monitor-exit v0
    :try_end_30
    .catchall {:try_start_10 .. :try_end_30} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4197
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/-$$Lambda$WindowManagerService$m8s7DAHVcbhp97hLWdi3Yhx6a6Y;

    invoke-direct {v1, p1, v2}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$m8s7DAHVcbhp97hLWdi3Yhx6a6Y;-><init>(Landroid/app/IAssistDataReceiver;Landroid/graphics/Bitmap;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 4204
    const/4 v0, 0x1

    return v0

    .line 4195
    .end local v2    # "bm":Landroid/graphics/Bitmap;
    :catchall_41
    move-exception v1

    :try_start_42
    monitor-exit v0
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_41

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 4179
    :cond_47
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Null receiver"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4174
    :cond_4f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public requestDeviceFolded(Z)V
    .registers 2
    .param p1, "switched"    # Z

    .line 9853
    return-void
.end method

.method public requestMetaKeyEvent(Landroid/content/ComponentName;Z)V
    .registers 4
    .param p1, "componentName"    # Landroid/content/ComponentName;
    .param p2, "request"    # Z

    .line 10235
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2}, Lcom/android/server/policy/WindowManagerPolicyExt;->requestMetaKeyEvent(Landroid/content/ComponentName;Z)V

    .line 10236
    return-void
.end method

.method public requestScrollCapture(ILandroid/os/IBinder;ILandroid/view/IScrollCaptureController;)V
    .registers 22
    .param p1, "displayId"    # I
    .param p2, "behindClient"    # Landroid/os/IBinder;
    .param p3, "taskId"    # I
    .param p4, "controller"    # Landroid/view/IScrollCaptureController;

    .line 8016
    move-object/from16 v1, p0

    move/from16 v2, p1

    move-object/from16 v3, p2

    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v4, "requestScrollCapture()"

    invoke-virtual {v1, v0, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_dd

    .line 8019
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 8021
    .local v4, "token":J
    const/4 v6, 0x1

    const/4 v7, 0x0

    :try_start_17
    iget-object v8, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v8
    :try_end_1a
    .catch Landroid/os/RemoteException; {:try_start_17 .. :try_end_1a} :catch_b5
    .catchall {:try_start_17 .. :try_end_1a} :catchall_af

    :try_start_1a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8022
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    move-object v9, v0

    .line 8023
    .local v9, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v9, :cond_48

    .line 8024
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_3d

    int-to-long v10, v2

    .local v10, "protoLogParam0":J
    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v12, 0x269025b8    # 1.0002231E-15f

    const-string v13, "Invalid displayId for requestScrollCapture: %d"

    new-array v14, v6, [Ljava/lang/Object;

    invoke-static {v10, v11}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v15

    aput-object v15, v14, v7

    invoke-static {v0, v12, v6, v13, v14}, Lcom/android/server/protolog/ProtoLogImpl;->e(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8026
    .end local v10    # "protoLogParam0":J
    :cond_3d
    invoke-interface/range {p4 .. p4}, Landroid/view/IScrollCaptureController;->onClientUnavailable()V

    .line 8027
    monitor-exit v8
    :try_end_41
    .catchall {:try_start_1a .. :try_end_41} :catchall_a1

    .line 8052
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8027
    return-void

    .line 8029
    :cond_48
    const/4 v0, 0x0

    .line 8030
    .local v0, "topWindow":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_52

    .line 8031
    const/4 v10, 0x0

    :try_start_4c
    invoke-virtual {v1, v10, v3, v6}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v10
    :try_end_50
    .catchall {:try_start_4c .. :try_end_50} :catchall_a1

    move-object v0, v10

    goto :goto_53

    .line 8030
    :cond_52
    move-object v10, v0

    .line 8033
    .end local v0    # "topWindow":Lcom/android/server/wm/WindowState;
    .local v10, "topWindow":Lcom/android/server/wm/WindowState;
    :goto_53
    move/from16 v11, p3

    :try_start_55
    invoke-virtual {v9, v10, v11}, Lcom/android/server/wm/DisplayContent;->findScrollCaptureTargetWindow(Lcom/android/server/wm/WindowState;I)Lcom/android/server/wm/WindowState;

    move-result-object v0

    move-object v12, v0

    .line 8034
    .local v12, "targetWindow":Lcom/android/server/wm/WindowState;
    if-nez v12, :cond_67

    .line 8035
    invoke-interface/range {p4 .. p4}, Landroid/view/IScrollCaptureController;->onClientUnavailable()V

    .line 8036
    monitor-exit v8
    :try_end_60
    .catchall {:try_start_55 .. :try_end_60} :catchall_9f

    .line 8052
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8036
    return-void

    .line 8040
    :cond_67
    :try_start_67
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;
    :try_end_69
    .catch Landroid/os/RemoteException; {:try_start_67 .. :try_end_69} :catch_71
    .catchall {:try_start_67 .. :try_end_69} :catchall_9f

    move-object/from16 v13, p4

    :try_start_6b
    invoke-interface {v0, v13}, Landroid/view/IWindow;->requestScrollCapture(Landroid/view/IScrollCaptureController;)V
    :try_end_6e
    .catch Landroid/os/RemoteException; {:try_start_6b .. :try_end_6e} :catch_6f
    .catchall {:try_start_6b .. :try_end_6e} :catchall_ad

    .line 8046
    goto :goto_9a

    .line 8041
    :catch_6f
    move-exception v0

    goto :goto_74

    :catch_71
    move-exception v0

    move-object/from16 v13, p4

    .line 8042
    .local v0, "e":Landroid/os/RemoteException;
    :goto_74
    :try_start_74
    sget-boolean v14, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v14, :cond_95

    iget-object v14, v12, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v14}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v14

    invoke-static {v14}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v14

    .local v14, "protoLogParam0":Ljava/lang/String;
    sget-object v15, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const-string/jumbo v7, "requestScrollCapture: caught exception dispatching to window.token=%s"

    move-object/from16 v16, v0

    .end local v0    # "e":Landroid/os/RemoteException;
    .local v16, "e":Landroid/os/RemoteException;
    new-array v0, v6, [Ljava/lang/Object;

    const/4 v6, 0x0

    aput-object v14, v0, v6

    const v1, -0x5a7973b0

    invoke-static {v15, v1, v6, v7, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_97

    .end local v14    # "protoLogParam0":Ljava/lang/String;
    .end local v16    # "e":Landroid/os/RemoteException;
    .restart local v0    # "e":Landroid/os/RemoteException;
    :cond_95
    move-object/from16 v16, v0

    .line 8045
    .end local v0    # "e":Landroid/os/RemoteException;
    .restart local v16    # "e":Landroid/os/RemoteException;
    :goto_97
    invoke-interface/range {p4 .. p4}, Landroid/view/IScrollCaptureController;->onClientUnavailable()V

    .line 8047
    .end local v9    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "topWindow":Lcom/android/server/wm/WindowState;
    .end local v12    # "targetWindow":Lcom/android/server/wm/WindowState;
    .end local v16    # "e":Landroid/os/RemoteException;
    :goto_9a
    monitor-exit v8
    :try_end_9b
    .catchall {:try_start_74 .. :try_end_9b} :catchall_ad

    :try_start_9b
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_9e
    .catch Landroid/os/RemoteException; {:try_start_9b .. :try_end_9e} :catch_ab
    .catchall {:try_start_9b .. :try_end_9e} :catchall_d8

    goto :goto_d3

    :catchall_9f
    move-exception v0

    goto :goto_a4

    :catchall_a1
    move-exception v0

    move/from16 v11, p3

    :goto_a4
    move-object/from16 v13, p4

    :goto_a6
    :try_start_a6
    monitor-exit v8
    :try_end_a7
    .catchall {:try_start_a6 .. :try_end_a7} :catchall_ad

    :try_start_a7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v4    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "behindClient":Landroid/os/IBinder;
    .end local p3    # "taskId":I
    .end local p4    # "controller":Landroid/view/IScrollCaptureController;
    throw v0
    :try_end_ab
    .catch Landroid/os/RemoteException; {:try_start_a7 .. :try_end_ab} :catch_ab
    .catchall {:try_start_a7 .. :try_end_ab} :catchall_d8

    .line 8048
    .restart local v4    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "behindClient":Landroid/os/IBinder;
    .restart local p3    # "taskId":I
    .restart local p4    # "controller":Landroid/view/IScrollCaptureController;
    :catch_ab
    move-exception v0

    goto :goto_ba

    .line 8047
    :catchall_ad
    move-exception v0

    goto :goto_a6

    .line 8052
    :catchall_af
    move-exception v0

    move/from16 v11, p3

    move-object/from16 v13, p4

    goto :goto_d9

    .line 8048
    :catch_b5
    move-exception v0

    move/from16 v11, p3

    move-object/from16 v13, p4

    .line 8049
    .restart local v0    # "e":Landroid/os/RemoteException;
    :goto_ba
    :try_start_ba
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_d3

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x3e66c5be

    const-string/jumbo v8, "requestScrollCapture: caught exception dispatching callback: %s"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    const/4 v10, 0x0

    aput-object v1, v9, v10

    invoke-static {v6, v7, v10, v8, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_d3
    .catchall {:try_start_ba .. :try_end_d3} :catchall_d8

    .line 8052
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "protoLogParam0":Ljava/lang/String;
    :cond_d3
    :goto_d3
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8053
    nop

    .line 8054
    return-void

    .line 8052
    :catchall_d8
    move-exception v0

    :goto_d9
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8053
    throw v0

    .line 8017
    .end local v4    # "token":J
    :cond_dd
    move/from16 v11, p3

    move-object/from16 v13, p4

    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z
    .registers 5
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;
    .param p3, "request"    # Z

    .line 10240
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1, p2, p3}, Lcom/android/server/policy/WindowManagerPolicyExt;->requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z

    move-result v0

    return v0
.end method

.method requestTraversal()V
    .registers 2

    .line 6299
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    .line 6300
    return-void
.end method

.method restorePointerIconLocked(Lcom/android/server/wm/DisplayContent;FF)V
    .registers 11
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "latestX"    # F
    .param p3, "latestY"    # F

    .line 7905
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->updatePosition(FF)V

    .line 7907
    nop

    .line 7908
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 7909
    .local v0, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_2f

    .line 7911
    :try_start_c
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 7912
    invoke-virtual {v0, p2}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    move-result v2

    .line 7913
    invoke-virtual {v0, p3}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    move-result v3

    .line 7911
    invoke-interface {v1, v2, v3}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_19
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_19} :catch_1a

    goto :goto_2e

    .line 7914
    :catch_1a
    move-exception v1

    .line 7915
    .local v1, "e":Landroid/os/RemoteException;
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_2e

    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x54d7a428

    const/4 v4, 0x0

    const/4 v5, 0x0

    check-cast v5, [Ljava/lang/Object;

    const-string/jumbo v6, "unable to restore pointer icon"

    invoke-static {v2, v3, v4, v6, v5}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7916
    .end local v1    # "e":Landroid/os/RemoteException;
    :cond_2e
    :goto_2e
    goto :goto_38

    .line 7918
    :cond_2f
    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;

    move-result-object v1

    const/16 v2, 0x3e8

    invoke-virtual {v1, v2}, Landroid/hardware/input/InputManager;->setPointerIconType(I)V

    .line 7920
    :goto_38
    return-void
.end method

.method saveANRStateLocked(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .registers 13
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    .line 7336
    new-instance v0, Ljava/io/StringWriter;

    invoke-direct {v0}, Ljava/io/StringWriter;-><init>()V

    .line 7337
    .local v0, "sw":Ljava/io/StringWriter;
    new-instance v1, Lcom/android/internal/util/FastPrintWriter;

    const/4 v2, 0x0

    const/16 v3, 0x400

    invoke-direct {v1, v0, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 7338
    .local v1, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  ANR time: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Ljava/text/DateFormat;->getDateTimeInstance()Ljava/text/DateFormat;

    move-result-object v3

    new-instance v4, Ljava/util/Date;

    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7339
    if-eqz p1, :cond_46

    .line 7340
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Application at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p1, Lcom/android/server/wm/ActivityRecord;->stringName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7342
    :cond_46
    if-eqz p2, :cond_62

    .line 7343
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Window at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7345
    :cond_62
    if-eqz p3, :cond_78

    .line 7346
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Reason: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7348
    :cond_78
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2}, Lcom/android/server/wm/RootWindowContainer;->getChildCount()I

    move-result v2

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    .local v2, "i":I
    :goto_80
    if-ltz v2, :cond_db

    .line 7349
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, v2}, Lcom/android/server/wm/RootWindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/DisplayContent;

    .line 7350
    .local v4, "dc":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    .line 7351
    .local v5, "displayId":I
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mWinAddedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    const-string v7, " since null focus: "

    if-nez v6, :cond_b4

    .line 7352
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "  Windows added in display #"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/wm/DisplayContent;->mWinAddedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7355
    :cond_b4
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mWinRemovedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_d8

    .line 7356
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "  Windows removed in display #"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/server/wm/DisplayContent;->mWinRemovedSinceNullFocus:Ljava/util/ArrayList;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7348
    .end local v4    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "displayId":I
    :cond_d8
    add-int/lit8 v2, v2, -0x1

    goto :goto_80

    .line 7360
    .end local v2    # "i":I
    :cond_db
    invoke-virtual {v1}, Ljava/io/PrintWriter;->println()V

    .line 7361
    const/4 v2, 0x0

    invoke-direct {p0, v1, v3, v2}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 7362
    invoke-virtual {v1}, Ljava/io/PrintWriter;->println()V

    .line 7363
    const-string v2, "Last ANR continued"

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 7364
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/RootWindowContainer;->dumpDisplayContents(Ljava/io/PrintWriter;)V

    .line 7365
    invoke-virtual {v1}, Ljava/io/PrintWriter;->close()V

    .line 7366
    invoke-virtual {v0}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    .line 7368
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x26

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 7369
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/32 v4, 0x6ddd00

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 7370
    return-void
.end method

.method scheduleAnimationLocked()V
    .registers 2

    .line 6304
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    if-eqz v0, :cond_7

    .line 6305
    invoke-virtual {v0}, Lcom/android/server/wm/WindowAnimator;->scheduleAnimation()V

    .line 6307
    :cond_7
    return-void
.end method

.method scheduleClearWillReplaceWindows(Landroid/os/IBinder;Z)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "replacing"    # Z

    .line 7706
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    .line 7707
    .local v0, "activity":Lcom/android/server/wm/ActivityRecord;
    if-nez v0, :cond_21

    .line 7708
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v1, :cond_20

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .local v1, "protoLogParam0":Ljava/lang/String;
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v3, 0x247ea29

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object v1, v4, v5

    const-string v6, "Attempted to reset replacing window on non-existing app token %s"

    invoke-static {v2, v3, v5, v6, v4}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7710
    .end local v1    # "protoLogParam0":Ljava/lang/String;
    :cond_20
    return-void

    .line 7712
    :cond_21
    if-eqz p2, :cond_27

    .line 7713
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleWindowReplacementTimeouts(Lcom/android/server/wm/ActivityRecord;)V

    goto :goto_2a

    .line 7715
    :cond_27
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->clearWillReplaceWindows()V

    .line 7717
    :goto_2a
    return-void
.end method

.method scheduleWindowReplacementTimeouts(Lcom/android/server/wm/ActivityRecord;)V
    .registers 6
    .param p1, "activity"    # Lcom/android/server/wm/ActivityRecord;

    .line 7720
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowReplacementTimeouts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 7721
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowReplacementTimeouts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7723
    :cond_d
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x2e

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 7724
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v2, 0x7d0

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 7726
    return-void
.end method

.method public screenTurningOff(Lcom/android/server/policy/WindowManagerPolicy$ScreenOffListener;)V
    .registers 3
    .param p1, "listener"    # Lcom/android/server/policy/WindowManagerPolicy$ScreenOffListener;

    .line 3316
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/TaskSnapshotController;->screenTurningOff(Lcom/android/server/policy/WindowManagerPolicy$ScreenOffListener;)V

    .line 3317
    return-void
.end method

.method public screenshotWallpaper()Landroid/graphics/Bitmap;
    .registers 6

    .line 4151
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v1, "screenshotWallpaper()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_39

    .line 4155
    const-wide/16 v0, 0x20

    :try_start_d
    const-string/jumbo v2, "screenshotWallpaper"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4156
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_16
    .catchall {:try_start_d .. :try_end_16} :catchall_34

    :try_start_16
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4158
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4159
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v4}, Lcom/android/server/wm/WallpaperController;->screenshotWallpaperLocked()Landroid/graphics/Bitmap;

    move-result-object v4

    monitor-exit v2
    :try_end_27
    .catchall {:try_start_16 .. :try_end_27} :catchall_2e

    .line 4162
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 4159
    return-object v4

    .line 4160
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    :catchall_2e
    move-exception v3

    :try_start_2f
    monitor-exit v2
    :try_end_30
    .catchall {:try_start_2f .. :try_end_30} :catchall_2e

    :try_start_30
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3
    :try_end_34
    .catchall {:try_start_30 .. :try_end_34} :catchall_34

    .line 4162
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catchall_34
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 4163
    throw v2

    .line 4152
    :cond_39
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAnimationScale(IF)V
    .registers 7
    .param p1, "which"    # I
    .param p2, "scale"    # F

    .line 3568
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string/jumbo v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_88

    .line 3574
    const/high16 v0, -0x40800000    # -1.0f

    .line 3576
    .local v0, "lastScale":F
    const/4 v1, 0x2

    const/4 v2, 0x1

    if-eqz p1, :cond_1c

    if-eq p1, v2, :cond_19

    if-eq p1, v1, :cond_16

    goto :goto_1e

    .line 3579
    :cond_16
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    goto :goto_1e

    .line 3578
    :cond_19
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    goto :goto_1e

    .line 3577
    :cond_1c
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 3584
    :goto_1e
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result p2

    .line 3585
    if-eqz p1, :cond_2f

    if-eq p1, v2, :cond_2c

    if-eq p1, v1, :cond_29

    goto :goto_31

    .line 3588
    :cond_29
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    goto :goto_31

    .line 3587
    :cond_2c
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    goto :goto_31

    .line 3586
    :cond_2f
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 3593
    :goto_31
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 3594
    .local v3, "sb":Ljava/lang/StringBuilder;
    if-eqz p1, :cond_49

    if-eq p1, v2, :cond_43

    if-eq p1, v1, :cond_3d

    goto :goto_4f

    .line 3602
    :cond_3d
    const-string v1, "ANIMATION_DURATION_SCALE"

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4f

    .line 3599
    :cond_43
    const-string v1, "TRANSITION_ANIMATION_SCALE"

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3600
    goto :goto_4f

    .line 3596
    :cond_49
    const-string v1, "WINDOW_ANIMATION_SCALE"

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3597
    nop

    .line 3605
    :goto_4f
    const-string v1, " changed from "

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3606
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3607
    const-string v1, " to "

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3608
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3609
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 3610
    .local v1, "callingPid":I
    const-string v2, ", callingPid="

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3611
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3612
    const-string v2, ", processName="

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3613
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getProcessName(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3614
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/android/server/wm/WindowManagerServiceExt;->logCriticalInfo(Ljava/lang/String;)V

    .line 3619
    .end local v1    # "callingPid":I
    .end local v3    # "sb":Ljava/lang/StringBuilder;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0xe

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3620
    return-void

    .line 3570
    .end local v0    # "lastScale":F
    :cond_88
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAnimationScales([F)V
    .registers 10
    .param p1, "scales"    # [F

    .line 3624
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string/jumbo v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_c1

    .line 3629
    const/4 v0, 0x3

    new-array v1, v0, [F

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    const/4 v3, 0x0

    aput v2, v1, v3

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    const/4 v4, 0x1

    aput v2, v1, v4

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    const/4 v5, 0x2

    aput v2, v1, v5

    .line 3633
    .local v1, "lastScale":[F
    if-eqz p1, :cond_44

    .line 3634
    array-length v2, p1

    if-lt v2, v4, :cond_2a

    .line 3635
    aget v2, p1, v3

    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v2

    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 3637
    :cond_2a
    array-length v2, p1

    if-lt v2, v5, :cond_35

    .line 3638
    aget v2, p1, v4

    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v2

    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 3640
    :cond_35
    array-length v2, p1

    if-lt v2, v0, :cond_44

    .line 3641
    aget v2, p1, v5

    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v2

    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 3642
    const/4 v2, 0x0

    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    .line 3647
    :cond_44
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 3648
    .local v2, "sb":Ljava/lang/StringBuilder;
    if-eqz p1, :cond_98

    .line 3649
    array-length v6, p1

    const-string v7, " to "

    if-lt v6, v4, :cond_66

    .line 3650
    const-string v6, "WINDOW_ANIMATION_SCALE changed from "

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3651
    aget v6, v1, v3

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3652
    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3653
    aget v3, p1, v3

    invoke-static {v3}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3655
    :cond_66
    array-length v3, p1

    if-lt v3, v5, :cond_7f

    .line 3656
    const-string v3, "TRANSITION_ANIMATION_SCALE changed from "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3657
    aget v3, v1, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3658
    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3659
    aget v3, p1, v4

    invoke-static {v3}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3661
    :cond_7f
    array-length v3, p1

    if-lt v3, v0, :cond_98

    .line 3662
    const-string v0, "ANIMATION_DURATION_SCALE changed from "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3663
    aget v0, v1, v5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3664
    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3665
    aget v0, p1, v5

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3668
    :cond_98
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 3669
    .local v0, "callingPid":I
    const-string v3, ", callingPid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3670
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3671
    const-string v3, ", processName="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3672
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v3, v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getProcessName(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3673
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/android/server/wm/WindowManagerServiceExt;->logCriticalInfo(Ljava/lang/String;)V

    .line 3678
    .end local v0    # "callingPid":I
    .end local v2    # "sb":Ljava/lang/StringBuilder;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0xe

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3679
    return-void

    .line 3626
    .end local v1    # "lastScale":[F
    :cond_c1
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAodShowing(Z)V
    .registers 4
    .param p1, "aodShowing"    # Z

    .line 9243
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9244
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setAodShowing(Z)Z

    move-result v1

    if-eqz v1, :cond_13

    .line 9245
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 9247
    :cond_13
    monitor-exit v0
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_18

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9248
    return-void

    .line 9247
    :catchall_18
    move-exception v1

    :try_start_19
    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_18

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setAppContinuityMode(Ljava/lang/String;IZ)V
    .registers 6
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "applyAppContinuityMode"    # Z

    .line 9948
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9957
    .local v0, "ident":J
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9958
    nop

    .line 9959
    return-void
.end method

.method public setCurrentProfileIds([I)V
    .registers 4
    .param p1, "currentProfileIds"    # [I

    .line 3812
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3813
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 3814
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3815
    return-void

    .line 3814
    :catchall_d
    move-exception v1

    :try_start_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_e .. :try_end_f} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setCurrentUser(I[I)V
    .registers 8
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    .line 3818
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3819
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 3820
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 3821
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setCurrentUserLw(I)V

    .line 3822
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->setCurrentUser(I)V

    .line 3825
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->switchUser(I)V

    .line 3826
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 3829
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3831
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v3, Lcom/android/server/wm/-$$Lambda$WindowManagerService$Em0v9TqvDp2RUmLBaOYm_MjKZNo;

    invoke-direct {v3, p1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$Em0v9TqvDp2RUmLBaOYm_MjKZNo;-><init>(I)V

    invoke-virtual {v2, v3}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 3835
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v2, :cond_3f

    .line 3836
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    move-result v2

    .line 3837
    .local v2, "forcedDensity":I
    if-eqz v2, :cond_38

    move v3, v2

    goto :goto_3a

    .line 3838
    :cond_38
    iget v3, v1, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    :goto_3a
    nop

    .line 3839
    .local v3, "targetDensity":I
    const/4 v4, -0x2

    invoke-virtual {v1, v3, v4}, Lcom/android/server/wm/DisplayContent;->setForcedDensity(II)V

    .line 3841
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "forcedDensity":I
    .end local v3    # "targetDensity":I
    :cond_3f
    monitor-exit v0
    :try_end_40
    .catchall {:try_start_3 .. :try_end_40} :catchall_44

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3842
    return-void

    .line 3841
    :catchall_44
    move-exception v1

    :try_start_45
    monitor-exit v0
    :try_end_46
    .catchall {:try_start_45 .. :try_end_46} :catchall_44

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setDeadzoneHole(Landroid/os/Bundle;)V
    .registers 4
    .param p1, "deadzoneHole"    # Landroid/os/Bundle;

    .line 10257
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_16

    .line 10263
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_TSP_DEADZONE:Z

    if-eqz v0, :cond_15

    .line 10264
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicyExt;->setDeadzoneHole(Landroid/os/Bundle;)V

    .line 10266
    :cond_15
    return-void

    .line 10259
    :cond_16
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "setDeadzoneHole requires permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDeviceConfigProperty(ILjava/lang/String;)V
    .registers 5
    .param p1, "configPropertyType"    # I
    .param p2, "value"    # Ljava/lang/String;

    .line 10011
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_19

    .line 10016
    if-eqz p1, :cond_14

    const/4 v0, 0x1

    if-eq p1, v0, :cond_10

    goto :goto_18

    .line 10021
    :cond_10
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->setAmbientBrightnessThreshold(Ljava/lang/String;)V

    .line 10022
    goto :goto_18

    .line 10018
    :cond_14
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->setDisplayBrightnessThreshold(Ljava/lang/String;)V

    .line 10019
    nop

    .line 10026
    :goto_18
    return-void

    .line 10013
    :cond_19
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDisplayWindowInsetsController(ILandroid/view/IDisplayWindowInsetsController;)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "insetsController"    # Landroid/view/IDisplayWindowInsetsController;

    .line 4484
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3b

    .line 4488
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4490
    .local v0, "origId":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_36

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4491
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4492
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_24

    .line 4493
    monitor-exit v2
    :try_end_1d
    .catchall {:try_start_11 .. :try_end_1d} :catchall_30

    .line 4498
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4493
    return-void

    .line 4495
    :cond_24
    :try_start_24
    invoke-virtual {v3, p2}, Lcom/android/server/wm/DisplayContent;->setRemoteInsetsController(Landroid/view/IDisplayWindowInsetsController;)V

    .line 4496
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_28
    .catchall {:try_start_24 .. :try_end_28} :catchall_30

    :try_start_28
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2b
    .catchall {:try_start_28 .. :try_end_2b} :catchall_36

    .line 4498
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4499
    nop

    .line 4500
    return-void

    .line 4496
    :catchall_30
    move-exception v3

    :try_start_31
    monitor-exit v2
    :try_end_32
    .catchall {:try_start_31 .. :try_end_32} :catchall_30

    :try_start_32
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "insetsController":Landroid/view/IDisplayWindowInsetsController;
    throw v3
    :try_end_36
    .catchall {:try_start_32 .. :try_end_36} :catchall_36

    .line 4498
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "insetsController":Landroid/view/IDisplayWindowInsetsController;
    :catchall_36
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4499
    throw v2

    .line 4486
    .end local v0    # "origId":J
    :cond_3b
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDisplayWindowRotationController(Landroid/view/IDisplayWindowRotationController;)V
    .registers 6
    .param p1, "controller"    # Landroid/view/IDisplayWindowRotationController;

    .line 4418
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_43

    .line 4423
    :try_start_a
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0
    :try_end_d
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_d} :catch_3a

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4424
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    const/4 v2, 0x0

    if-eqz v1, :cond_23

    .line 4425
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    invoke-interface {v1}, Landroid/view/IDisplayWindowRotationController;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

    invoke-interface {v1, v3, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4427
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    .line 4429
    :cond_23
    invoke-interface {p1}, Landroid/view/IDisplayWindowRotationController;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationControllerDeath:Landroid/os/IBinder$DeathRecipient;

    invoke-interface {v1, v3, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 4430
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayRotationController:Landroid/view/IDisplayWindowRotationController;

    .line 4431
    monitor-exit v0
    :try_end_2f
    .catchall {:try_start_d .. :try_end_2f} :catchall_34

    :try_start_2f
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_32
    .catch Landroid/os/RemoteException; {:try_start_2f .. :try_end_32} :catch_3a

    .line 4434
    nop

    .line 4435
    return-void

    .line 4431
    :catchall_34
    move-exception v1

    :try_start_35
    monitor-exit v0
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_34

    :try_start_36
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "controller":Landroid/view/IDisplayWindowRotationController;
    throw v1
    :try_end_3a
    .catch Landroid/os/RemoteException; {:try_start_36 .. :try_end_3a} :catch_3a

    .line 4432
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "controller":Landroid/view/IDisplayWindowRotationController;
    :catch_3a
    move-exception v0

    .line 4433
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Unable to set rotation controller"

    invoke-direct {v1, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4420
    .end local v0    # "e":Landroid/os/RemoteException;
    :cond_43
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDockedStackDividerTouchRegion(Landroid/graphics/Rect;)V
    .registers 5
    .param p1, "touchRegion"    # Landroid/graphics/Rect;

    .line 7740
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7741
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7742
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/wm/DockedStackDividerController;->setTouchRegion(Landroid/graphics/Rect;)V

    .line 7743
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->updateTouchExcludeRegion()V

    .line 7744
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7745
    return-void

    .line 7744
    :catchall_19
    move-exception v1

    :try_start_1a
    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_1a .. :try_end_1b} :catchall_19

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setDockedStackResizing(Z)V
    .registers 3
    .param p1, "resizing"    # Z

    .line 7734
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setResizing(Z)V

    .line 7735
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V

    .line 7736
    return-void
.end method

.method public setEventDispatching(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .line 5104
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v1, "setEventDispatching()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_27

    .line 5108
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5109
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    .line 5110
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v1, :cond_1c

    .line 5111
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/InputManagerCallback;->setEventDispatchingLw(Z)V

    .line 5113
    :cond_1c
    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_e .. :try_end_1d} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 5114
    return-void

    .line 5113
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v0
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 5105
    :cond_27
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setFixedToUserRotation(II)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "fixedToUserRotation"    # I

    .line 4233
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string v1, "freezeRotation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_36

    .line 4237
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4238
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4239
    .local v1, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_24

    .line 4240
    const-string v2, "WindowManager"

    const-string v3, "Trying to set rotate for app for a missing display."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4241
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_d .. :try_end_20} :catchall_30

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4243
    :cond_24
    :try_start_24
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v2

    invoke-virtual {v2, p2}, Lcom/android/server/wm/DisplayRotation;->setFixedToUserRotation(I)V

    .line 4244
    .end local v1    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_2c
    .catchall {:try_start_24 .. :try_end_2c} :catchall_30

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4245
    return-void

    .line 4244
    :catchall_30
    move-exception v1

    :try_start_31
    monitor-exit v0
    :try_end_32
    .catchall {:try_start_31 .. :try_end_32} :catchall_30

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 4235
    :cond_36
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setForceDesktopModeOnExternalDisplays(Z)V
    .registers 4
    .param p1, "forceDesktopModeOnExternalDisplays"    # Z

    .line 7748
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7749
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mForceDesktopModeOnExternalDisplays:Z

    .line 7750
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7751
    return-void

    .line 7750
    :catchall_d
    move-exception v1

    :try_start_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_e .. :try_end_f} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setForceShowSystemBars(Z)V
    .registers 7
    .param p1, "show"    # Z

    .line 6825
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "android.hardware.type.automotive"

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v0

    .line 6827
    .local v0, "isAutomotive":Z
    if-eqz v0, :cond_47

    .line 6831
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.STATUS_BAR"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_3f

    .line 6836
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_1b
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6837
    sget-object v2, Lcom/android/server/wm/-$$Lambda$XcHmyRxMY5ULhjLiV-sIKnPtvOM;->INSTANCE:Lcom/android/server/wm/-$$Lambda$XcHmyRxMY5ULhjLiV-sIKnPtvOM;

    .line 6838
    invoke-static {}, Lcom/android/internal/util/function/pooled/PooledLambda;->__()Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;

    move-result-object v3

    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v4

    .line 6837
    invoke-static {v2, v3, v4}, Lcom/android/internal/util/function/pooled/PooledLambda;->obtainConsumer(Ljava/util/function/BiConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer;

    move-result-object v2

    .line 6839
    .local v2, "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, v2}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 6840
    invoke-interface {v2}, Lcom/android/internal/util/function/pooled/PooledConsumer;->recycle()V

    .line 6841
    .end local v2    # "c":Lcom/android/internal/util/function/pooled/PooledConsumer;
    monitor-exit v1
    :try_end_35
    .catchall {:try_start_1b .. :try_end_35} :catchall_39

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6842
    return-void

    .line 6841
    :catchall_39
    move-exception v2

    :try_start_3a
    monitor-exit v1
    :try_end_3b
    .catchall {:try_start_3a .. :try_end_3b} :catchall_39

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 6833
    :cond_3f
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6828
    :cond_47
    new-instance v1, Ljava/lang/UnsupportedOperationException;

    const-string v2, "Force showing system bars is only supportedfor Automotive use cases."

    invoke-direct {v1, v2}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public setForcedDisplayDensityForUser(III)V
    .registers 20
    .param p1, "displayId"    # I
    .param p2, "density"    # I
    .param p3, "userId"    # I

    .line 6054
    move-object/from16 v1, p0

    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_7c

    .line 6059
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 6060
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v8, 0x0

    .line 6059
    const-string/jumbo v7, "setForcedDisplayDensityForUser"

    move/from16 v4, p3

    invoke-static/range {v2 .. v8}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    move-result v2

    .line 6062
    .local v2, "targetUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 6064
    .local v3, "ident":J
    :try_start_24
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v5
    :try_end_27
    .catchall {:try_start_24 .. :try_end_27} :catchall_64

    :try_start_27
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6065
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_56

    move/from16 v14, p1

    :try_start_2e
    invoke-virtual {v0, v14}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0
    :try_end_32
    .catchall {:try_start_2e .. :try_end_32} :catchall_54

    .line 6066
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3a

    .line 6067
    move/from16 v15, p2

    :try_start_36
    invoke-virtual {v0, v15, v2}, Lcom/android/server/wm/DisplayContent;->setForcedDensity(II)V

    goto :goto_3c

    .line 6066
    :cond_3a
    move/from16 v15, p2

    .line 6069
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_3c
    monitor-exit v5
    :try_end_3d
    .catchall {:try_start_36 .. :try_end_3d} :catchall_62

    :try_start_3d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_40
    .catchall {:try_start_3d .. :try_end_40} :catchall_60

    .line 6071
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6074
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v9, -0x1

    const/4 v10, -0x1

    const/4 v12, 0x0

    const/4 v13, -0x1

    move/from16 v7, p1

    move/from16 v8, p3

    move/from16 v11, p2

    invoke-virtual/range {v6 .. v13}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 6078
    nop

    .line 6079
    return-void

    .line 6069
    :catchall_54
    move-exception v0

    goto :goto_59

    :catchall_56
    move-exception v0

    move/from16 v14, p1

    :goto_59
    move/from16 v15, p2

    :goto_5b
    :try_start_5b
    monitor-exit v5
    :try_end_5c
    .catchall {:try_start_5b .. :try_end_5c} :catchall_62

    :try_start_5c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v2    # "targetUserId":I
    .end local v3    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "density":I
    .end local p3    # "userId":I
    throw v0
    :try_end_60
    .catchall {:try_start_5c .. :try_end_60} :catchall_60

    .line 6071
    .restart local v2    # "targetUserId":I
    .restart local v3    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "density":I
    .restart local p3    # "userId":I
    :catchall_60
    move-exception v0

    goto :goto_69

    .line 6069
    :catchall_62
    move-exception v0

    goto :goto_5b

    .line 6071
    :catchall_64
    move-exception v0

    move/from16 v14, p1

    move/from16 v15, p2

    :goto_69
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6074
    iget-object v6, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v9, -0x1

    const/4 v10, -0x1

    const/4 v12, 0x0

    const/4 v13, -0x1

    move/from16 v7, p1

    move/from16 v8, p3

    move/from16 v11, p2

    invoke-virtual/range {v6 .. v13}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 6078
    throw v0

    .line 6056
    .end local v2    # "targetUserId":I
    .end local v3    # "ident":J
    :cond_7c
    move/from16 v14, p1

    move/from16 v15, p2

    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForcedDisplayScalingMode(II)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .line 5916
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_33

    .line 5921
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5923
    .local v0, "ident":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_2e

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5924
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5925
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_1f

    .line 5926
    invoke-virtual {v3, p2}, Lcom/android/server/wm/DisplayContent;->setForcedScalingMode(I)V

    .line 5928
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1f
    monitor-exit v2
    :try_end_20
    .catchall {:try_start_11 .. :try_end_20} :catchall_28

    :try_start_20
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_2e

    .line 5930
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5931
    nop

    .line 5932
    return-void

    .line 5928
    :catchall_28
    move-exception v3

    :try_start_29
    monitor-exit v2
    :try_end_2a
    .catchall {:try_start_29 .. :try_end_2a} :catchall_28

    :try_start_2a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "mode":I
    throw v3
    :try_end_2e
    .catchall {:try_start_2a .. :try_end_2e} :catchall_2e

    .line 5930
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "mode":I
    :catchall_2e
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5931
    throw v2

    .line 5918
    .end local v0    # "ident":J
    :cond_33
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForcedDisplaySize(III)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    .line 5885
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4b

    .line 5890
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5892
    .local v0, "ident":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_3a

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5893
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5894
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_1f

    .line 5900
    invoke-virtual {v3, p2, p3}, Lcom/android/server/wm/DisplayContent;->setForcedSize(II)V

    .line 5902
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1f
    monitor-exit v2
    :try_end_20
    .catchall {:try_start_11 .. :try_end_20} :catchall_34

    :try_start_20
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_3a

    .line 5904
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5907
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v6, -0x1

    const/4 v9, -0x1

    const/4 v10, 0x0

    const/4 v11, -0x1

    move v5, p1

    move v7, p2

    move v8, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 5911
    nop

    .line 5912
    return-void

    .line 5902
    :catchall_34
    move-exception v3

    :try_start_35
    monitor-exit v2
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_34

    :try_start_36
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "width":I
    .end local p3    # "height":I
    throw v3
    :try_end_3a
    .catchall {:try_start_36 .. :try_end_3a} :catchall_3a

    .line 5904
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "width":I
    .restart local p3    # "height":I
    :catchall_3a
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5907
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    const/4 v5, -0x1

    const/4 v8, -0x1

    const/4 v9, 0x0

    const/4 v10, -0x1

    move v4, p1

    move v6, p2

    move v7, p3

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/WindowManagerServiceExt;->updateDisplaySizeDensityChangedReason(IIIIIZI)V

    .line 5911
    throw v2

    .line 5887
    .end local v0    # "ident":J
    :cond_4b
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForcedDisplaySizeDensity(IIIIZI)V
    .registers 14
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I
    .param p4, "density"    # I
    .param p5, "saveToSettings"    # Z
    .param p6, "forcedHideNotch"    # I

    .line 9777
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerServiceExt;->setForcedDisplaySizeDensity(IIIIZI)V

    .line 9780
    return-void
.end method

.method public setForwardedInsets(ILandroid/graphics/Insets;)V
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "insets"    # Landroid/graphics/Insets;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 7809
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7810
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7811
    .local v1, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_13

    .line 7812
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_31

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7814
    :cond_13
    :try_start_13
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 7815
    .local v2, "callingUid":I
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/Display;->getOwnerUid()I

    move-result v3

    .line 7816
    .local v3, "displayOwnerUid":I
    if-ne v2, v3, :cond_29

    .line 7820
    invoke-virtual {v1, p2}, Lcom/android/server/wm/DisplayContent;->setForwardedInsets(Landroid/graphics/Insets;)V

    .line 7821
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "callingUid":I
    .end local v3    # "displayOwnerUid":I
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_13 .. :try_end_25} :catchall_31

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7822
    return-void

    .line 7817
    .restart local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "callingUid":I
    .restart local v3    # "displayOwnerUid":I
    :cond_29
    :try_start_29
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Only owner of the display can set ForwardedInsets to it."

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "insets":Landroid/graphics/Insets;
    throw v4

    .line 7821
    .end local v1    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "callingUid":I
    .end local v3    # "displayOwnerUid":I
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "insets":Landroid/graphics/Insets;
    :catchall_31
    move-exception v1

    monitor-exit v0
    :try_end_33
    .catchall {:try_start_29 .. :try_end_33} :catchall_31

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setHoldDexScreenLocked(Lcom/android/server/wm/Session;)V
    .registers 8
    .param p1, "newHoldDexScreen"    # Lcom/android/server/wm/Session;

    .line 6268
    if-eqz p1, :cond_4

    const/4 v0, 0x1

    goto :goto_5

    :cond_4
    const/4 v0, 0x0

    .line 6270
    .local v0, "hold":Z
    :goto_5
    if-eqz v0, :cond_17

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingDexScreenOn:Lcom/android/server/wm/Session;

    if-eq v1, p1, :cond_17

    .line 6271
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingDexScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v2, Landroid/os/WorkSource;

    iget v3, p1, Lcom/android/server/wm/Session;->mUid:I

    invoke-direct {v2, v3}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v1, v2}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 6273
    :cond_17
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingDexScreenOn:Lcom/android/server/wm/Session;

    .line 6275
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingDexScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v1

    .line 6276
    .local v1, "state":Z
    if-eq v0, v1, :cond_7b

    .line 6277
    const-string v2, "WindowManager"

    const/4 v3, 0x0

    if-eqz v0, :cond_51

    .line 6278
    sget-boolean v4, Lcom/samsung/android/rune/CoreRune;->MD_DEBUG_LOG:Z

    if-eqz v4, :cond_43

    .line 6279
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setHoldDexScreenLocked: Acquiring screen wakelock due to "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v5, v5, Lcom/android/server/wm/RootWindowContainer;->mHoldDexScreenWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6282
    :cond_43
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v2, v2, Lcom/android/server/wm/RootWindowContainer;->mHoldDexScreenWindow:Lcom/android/server/wm/WindowState;

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingDexScreenWindow:Lcom/android/server/wm/WindowState;

    .line 6283
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringDexScreenWindow:Lcom/android/server/wm/WindowState;

    .line 6284
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingDexScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    goto :goto_7b

    .line 6286
    :cond_51
    sget-boolean v4, Lcom/samsung/android/rune/CoreRune;->MD_DEBUG_LOG:Z

    if-eqz v4, :cond_6e

    .line 6287
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setHoldDexScreenLocked: Releasing screen wakelock, obscured by "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v5, v5, Lcom/android/server/wm/RootWindowContainer;->mObscuringDexScreenWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6290
    :cond_6e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingDexScreenWindow:Lcom/android/server/wm/WindowState;

    .line 6291
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v2, v2, Lcom/android/server/wm/RootWindowContainer;->mObscuringDexScreenWindow:Lcom/android/server/wm/WindowState;

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringDexScreenWindow:Lcom/android/server/wm/WindowState;

    .line 6292
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingDexScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 6295
    :cond_7b
    :goto_7b
    return-void
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .registers 10
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    .line 6239
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-eqz p1, :cond_6

    move v2, v0

    goto :goto_7

    :cond_6
    move v2, v1

    .line 6241
    .local v2, "hold":Z
    :goto_7
    if-eqz v2, :cond_19

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    if-eq v3, p1, :cond_19

    .line 6242
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v4, Landroid/os/WorkSource;

    iget v5, p1, Lcom/android/server/wm/Session;->mUid:I

    invoke-direct {v4, v5}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 6244
    :cond_19
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    .line 6246
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v3

    .line 6247
    .local v3, "state":Z
    if-eq v2, v3, :cond_7b

    .line 6248
    const/4 v4, 0x0

    if-eqz v2, :cond_51

    .line 6249
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_KEEP_SCREEN_ON_enabled:Z

    if-eqz v5, :cond_3e

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v5, v5, Lcom/android/server/wm/RootWindowContainer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_KEEP_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x7cf81cba

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v5, v0, v1

    invoke-static {v6, v7, v1, v4, v0}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6251
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_3e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v0, v0, Lcom/android/server/wm/RootWindowContainer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 6252
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 6253
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 6254
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->keepScreenOnStartedLw()V

    goto :goto_7b

    .line 6256
    :cond_51
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_KEEP_SCREEN_ON_enabled:Z

    if-eqz v5, :cond_69

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v5, v5, Lcom/android/server/wm/RootWindowContainer;->mObscuringWindow:Lcom/android/server/wm/WindowState;

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_KEEP_SCREEN_ON:Lcom/android/server/wm/ProtoLogGroup;

    const v7, -0x7fec2232

    new-array v0, v0, [Ljava/lang/Object;

    aput-object v5, v0, v1

    invoke-static {v6, v7, v1, v4, v0}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6258
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_69
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 6259
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    iget-object v0, v0, Lcom/android/server/wm/RootWindowContainer;->mObscuringWindow:Lcom/android/server/wm/WindowState;

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 6260
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    .line 6261
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 6264
    :cond_7b
    :goto_7b
    return-void
.end method

.method public setInTouchMode(Z)V
    .registers 4
    .param p1, "mode"    # Z

    .line 4070
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4071
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 4072
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_12

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4073
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/input/InputManagerService;->setInTouchMode(Z)V

    .line 4074
    return-void

    .line 4072
    :catchall_12
    move-exception v1

    :try_start_13
    monitor-exit v0
    :try_end_14
    .catchall {:try_start_13 .. :try_end_14} :catchall_12

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .registers 15
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    .line 2329
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2331
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_ef

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2332
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 2333
    .local v4, "w":Lcom/android/server/wm/WindowState;
    sget-boolean v5, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG_LAYOUT:Z

    if-eqz v5, :cond_72

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setInsetsWindow "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ", contentInsets="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, " -> "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ", visibleInsets="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, " -> "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ", touchableRegion="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, " -> "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, ", touchableInsets "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, " -> "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2338
    :cond_72
    if-eqz v4, :cond_e0

    .line 2339
    iput-boolean v3, v4, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 2340
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v5, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2341
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v5, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2342
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v5, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 2343
    iput p3, v4, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    .line 2344
    iget v5, v4, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    const/high16 v6, 0x3f800000    # 1.0f

    cmpl-float v5, v5, v6

    if-eqz v5, :cond_a4

    .line 2345
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v5, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 2346
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v5, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 2347
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v5, v7}, Landroid/graphics/Region;->scale(F)V

    .line 2351
    :cond_a4
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mDssEnabled:Z

    if-eqz v5, :cond_c2

    .line 2352
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mDssScale:F

    div-float v7, v6, v7

    invoke-virtual {v5, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 2353
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mDssScale:F

    div-float v7, v6, v7

    invoke-virtual {v5, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 2354
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v7, v4, Lcom/android/server/wm/WindowState;->mDssScale:F

    div-float/2addr v6, v7

    invoke-virtual {v5, v6}, Landroid/graphics/Region;->scale(F)V

    .line 2358
    :cond_c2
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2359
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2362
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v5, :cond_e0

    .line 2363
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    const/4 v6, 0x1

    new-array v6, v6, [I

    .line 2364
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    aput v7, v6, v3

    .line 2363
    invoke-virtual {v5, v6}, Lcom/android/server/wm/AccessibilityController;->onSomeWindowResizedOrMovedLocked([I)V

    .line 2367
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_e0
    monitor-exit v2
    :try_end_e1
    .catchall {:try_start_7 .. :try_end_e1} :catchall_e9

    :try_start_e1
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_e4
    .catchall {:try_start_e1 .. :try_end_e4} :catchall_ef

    .line 2369
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2370
    nop

    .line 2371
    return-void

    .line 2367
    :catchall_e9
    move-exception v3

    :try_start_ea
    monitor-exit v2
    :try_end_eb
    .catchall {:try_start_ea .. :try_end_eb} :catchall_e9

    :try_start_eb
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "touchableInsets":I
    .end local p4    # "contentInsets":Landroid/graphics/Rect;
    .end local p5    # "visibleInsets":Landroid/graphics/Rect;
    .end local p6    # "touchableRegion":Landroid/graphics/Region;
    throw v3
    :try_end_ef
    .catchall {:try_start_eb .. :try_end_ef} :catchall_ef

    .line 2369
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "touchableInsets":I
    .restart local p4    # "contentInsets":Landroid/graphics/Rect;
    .restart local p5    # "visibleInsets":Landroid/graphics/Rect;
    .restart local p6    # "touchableRegion":Landroid/graphics/Region;
    :catchall_ef
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2370
    throw v2
.end method

.method setIsPc(Z)V
    .registers 4
    .param p1, "isPc"    # Z

    .line 7755
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7756
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mIsPc:Z

    .line 7757
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7758
    return-void

    .line 7757
    :catchall_d
    move-exception v1

    :try_start_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_e .. :try_end_f} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setKeyguardGoingAway(Z)V
    .registers 4
    .param p1, "keyguardGoingAway"    # Z

    .line 3368
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3369
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardGoingAway:Z

    .line 3370
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3371
    return-void

    .line 3370
    :catchall_d
    move-exception v1

    :try_start_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_e .. :try_end_f} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setKeyguardOrAodShowingOnDefaultDisplay(Z)V
    .registers 4
    .param p1, "showing"    # Z

    .line 3374
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3375
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardOrAodShowingOnDefaultDisplay:Z

    .line 3376
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3377
    return-void

    .line 3376
    :catchall_d
    move-exception v1

    :try_start_e
    monitor-exit v0
    :try_end_f
    .catchall {:try_start_e .. :try_end_f} :catchall_d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setLayerTracing(Z)V
    .registers 9
    .param p1, "enabled"    # Z

    .line 9585
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "setLayerTracing"

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9587
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9589
    .local v0, "token":J
    const/4 v2, 0x0

    .line 9591
    .local v2, "data":Landroid/os/Parcel;
    :try_start_f
    const-string v3, "SurfaceFlinger"

    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    .line 9592
    .local v3, "sf":Landroid/os/IBinder;
    if-eqz v3, :cond_30

    .line 9593
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    move-object v2, v4

    .line 9594
    const-string v4, "android.ui.ISurfaceComposer"

    invoke-virtual {v2, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 9595
    const/4 v4, 0x0

    if-eqz p1, :cond_26

    const/4 v5, 0x1

    goto :goto_27

    :cond_26
    move v5, v4

    :goto_27
    invoke-virtual {v2, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 9596
    const/16 v5, 0x401

    const/4 v6, 0x0

    invoke-interface {v3, v5, v2, v6, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_30
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_30} :catch_38
    .catchall {:try_start_f .. :try_end_30} :catchall_36

    .line 9601
    .end local v3    # "sf":Landroid/os/IBinder;
    :cond_30
    if-eqz v2, :cond_43

    .line 9602
    :goto_32
    :try_start_32
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V
    :try_end_35
    .catchall {:try_start_32 .. :try_end_35} :catchall_4f

    goto :goto_43

    .line 9601
    :catchall_36
    move-exception v3

    goto :goto_48

    .line 9598
    :catch_38
    move-exception v3

    .line 9599
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_39
    const-string v4, "WindowManager"

    const-string v5, "Failed to set layer tracing"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_40
    .catchall {:try_start_39 .. :try_end_40} :catchall_36

    .line 9601
    .end local v3    # "e":Landroid/os/RemoteException;
    if-eqz v2, :cond_43

    .line 9602
    goto :goto_32

    .line 9606
    .end local v2    # "data":Landroid/os/Parcel;
    :cond_43
    :goto_43
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9607
    nop

    .line 9608
    return-void

    .line 9601
    .restart local v2    # "data":Landroid/os/Parcel;
    :goto_48
    if-eqz v2, :cond_4d

    .line 9602
    :try_start_4a
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 9604
    :cond_4d
    nop

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "enabled":Z
    throw v3
    :try_end_4f
    .catchall {:try_start_4a .. :try_end_4f} :catchall_4f

    .line 9606
    .end local v2    # "data":Landroid/os/Parcel;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "enabled":Z
    :catchall_4f
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9607
    throw v2
.end method

.method public setLayerTracingFlags(I)V
    .registers 9
    .param p1, "flags"    # I

    .line 9612
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "setLayerTracingFlags"

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9614
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9616
    .local v0, "token":J
    const/4 v2, 0x0

    .line 9618
    .local v2, "data":Landroid/os/Parcel;
    :try_start_f
    const-string v3, "SurfaceFlinger"

    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    .line 9619
    .local v3, "sf":Landroid/os/IBinder;
    if-eqz v3, :cond_2b

    .line 9620
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    move-object v2, v4

    .line 9621
    const-string v4, "android.ui.ISurfaceComposer"

    invoke-virtual {v2, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 9622
    invoke-virtual {v2, p1}, Landroid/os/Parcel;->writeInt(I)V

    .line 9623
    const/16 v4, 0x409

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-interface {v3, v4, v2, v5, v6}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_2b
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_2b} :catch_33
    .catchall {:try_start_f .. :try_end_2b} :catchall_31

    .line 9628
    .end local v3    # "sf":Landroid/os/IBinder;
    :cond_2b
    if-eqz v2, :cond_3e

    .line 9629
    :goto_2d
    :try_start_2d
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V
    :try_end_30
    .catchall {:try_start_2d .. :try_end_30} :catchall_4a

    goto :goto_3e

    .line 9628
    :catchall_31
    move-exception v3

    goto :goto_43

    .line 9625
    :catch_33
    move-exception v3

    .line 9626
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_34
    const-string v4, "WindowManager"

    const-string v5, "Failed to set layer tracing flags"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3b
    .catchall {:try_start_34 .. :try_end_3b} :catchall_31

    .line 9628
    .end local v3    # "e":Landroid/os/RemoteException;
    if-eqz v2, :cond_3e

    .line 9629
    goto :goto_2d

    .line 9633
    .end local v2    # "data":Landroid/os/Parcel;
    :cond_3e
    :goto_3e
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9634
    nop

    .line 9635
    return-void

    .line 9628
    .restart local v2    # "data":Landroid/os/Parcel;
    :goto_43
    if-eqz v2, :cond_48

    .line 9629
    :try_start_45
    invoke-virtual {v2}, Landroid/os/Parcel;->recycle()V

    .line 9631
    :cond_48
    nop

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "flags":I
    throw v3
    :try_end_4a
    .catchall {:try_start_45 .. :try_end_4a} :catchall_4a

    .line 9633
    .end local v2    # "data":Landroid/os/Parcel;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "flags":I
    :catchall_4a
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9634
    throw v2
.end method

.method public setMaxAspectRatioPolicy(Ljava/lang/String;IZI)V
    .registers 8
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "enable"    # Z
    .param p4, "restartTaskId"    # I

    .line 9735
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9737
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mPackageSettingsManager:Lcom/android/server/wm/PackageSettingsManager;

    iget-object v2, v2, Lcom/android/server/wm/PackageSettingsManager;->mCustomAspectRatioPackages:Lcom/android/server/wm/PackageSettingsManager$CustomAspectRatioPackageManager;

    .line 9738
    invoke-virtual {v2, p1, p2, p3, p4}, Lcom/android/server/wm/PackageSettingsManager$CustomAspectRatioPackageManager;->setMaxAspectRatioPolicy(Ljava/lang/String;IZI)V
    :try_end_f
    .catchall {:try_start_4 .. :try_end_f} :catchall_14

    .line 9740
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9741
    nop

    .line 9743
    .end local v0    # "origId":J
    return-void

    .line 9740
    .restart local v0    # "origId":J
    :catchall_14
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9741
    throw v2
.end method

.method public setNavBarVirtualKeyHapticFeedbackEnabled(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .line 6845
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_20

    .line 6851
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6852
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setNavBarVirtualKeyHapticFeedbackEnabledLw(Z)V

    .line 6853
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_d .. :try_end_16} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6854
    return-void

    .line 6853
    :catchall_1a
    move-exception v1

    :try_start_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_1b .. :try_end_1c} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6847
    :cond_20
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setNewDisplayOverrideConfiguration(Landroid/content/res/Configuration;Lcom/android/server/wm/DisplayContent;)V
    .registers 4
    .param p1, "overrideConfig"    # Landroid/content/res/Configuration;
    .param p2, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 3167
    iget-boolean v0, p2, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    if-eqz v0, :cond_c

    .line 3168
    const/4 v0, 0x0

    iput-boolean v0, p2, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    .line 3169
    const-string/jumbo v0, "new-config"

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 3172
    :cond_c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->setDisplayOverrideConfigurationIfNeeded(Landroid/content/res/Configuration;Lcom/android/server/wm/DisplayContent;)V

    .line 3173
    return-void
.end method

.method setOverrideFoldedArea(Landroid/graphics/Rect;)V
    .registers 6
    .param p1, "area"    # Landroid/graphics/Rect;

    .line 4658
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2d

    .line 4663
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4665
    .local v0, "origId":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_28

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4666
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v3, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setOverrideFoldedArea(Landroid/graphics/Rect;)V

    .line 4667
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_11 .. :try_end_1a} :catchall_22

    :try_start_1a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_28

    .line 4669
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4670
    nop

    .line 4671
    return-void

    .line 4667
    :catchall_22
    move-exception v3

    :try_start_23
    monitor-exit v2
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    :try_start_24
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "area":Landroid/graphics/Rect;
    throw v3
    :try_end_28
    .catchall {:try_start_24 .. :try_end_28} :catchall_28

    .line 4669
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "area":Landroid/graphics/Rect;
    :catchall_28
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4670
    throw v2

    .line 4660
    .end local v0    # "origId":J
    :cond_2d
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setPendingIntentAfterUnlock(Landroid/app/PendingIntent;Landroid/content/Intent;)V
    .registers 4
    .param p1, "pendingIntent"    # Landroid/app/PendingIntent;
    .param p2, "fillInIntent"    # Landroid/content/Intent;

    .line 9996
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerServiceExt;->setPendingIntentAfterUnlock(Landroid/app/PendingIntent;Landroid/content/Intent;)V

    .line 9997
    return-void
.end method

.method public setPipVisibility(Z)V
    .registers 4
    .param p1, "visible"    # Z

    .line 6773
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_20

    .line 6779
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6780
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setPipVisibilityLw(Z)V

    .line 6781
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_d .. :try_end_16} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6782
    return-void

    .line 6781
    :catchall_1a
    move-exception v1

    :try_start_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_1b .. :try_end_1c} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6775
    :cond_20
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method setRecentsAnimationController(Lcom/android/server/wm/RecentsAnimationController;)V
    .registers 2
    .param p1, "controller"    # Lcom/android/server/wm/RecentsAnimationController;

    .line 3249
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 3250
    return-void
.end method

.method public setRecentsVisibility(Z)V
    .registers 5
    .param p1, "visible"    # Z

    .line 6764
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "android.permission.STATUS_BAR"

    const-string/jumbo v2, "setRecentsVisibility()"

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6766
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6767
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v1, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setRecentsVisibilityLw(Z)V

    .line 6768
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_d .. :try_end_16} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6769
    return-void

    .line 6768
    :catchall_1a
    move-exception v1

    :try_start_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_1b .. :try_end_1c} :catchall_1a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setRemoveContentMode(II)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .line 8152
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "setRemoveContentMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_59

    .line 8156
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8158
    .local v0, "origId":J
    :try_start_f
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_12
    .catchall {:try_start_f .. :try_end_12} :catchall_54

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8159
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 8160
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_3d

    .line 8161
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_35

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x1131efb7

    const-string v8, "Attempted to set remove mode to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8164
    .end local v4    # "protoLogParam0":J
    :cond_35
    monitor-exit v2
    :try_end_36
    .catchall {:try_start_12 .. :try_end_36} :catchall_4e

    .line 8171
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8164
    return-void

    .line 8167
    :cond_3d
    :try_start_3d
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setRemoveContentModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 8168
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 8169
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_46
    .catchall {:try_start_3d .. :try_end_46} :catchall_4e

    :try_start_46
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_49
    .catchall {:try_start_46 .. :try_end_49} :catchall_54

    .line 8171
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8172
    nop

    .line 8173
    return-void

    .line 8169
    :catchall_4e
    move-exception v3

    :try_start_4f
    monitor-exit v2
    :try_end_50
    .catchall {:try_start_4f .. :try_end_50} :catchall_4e

    :try_start_50
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "mode":I
    throw v3
    :try_end_54
    .catchall {:try_start_50 .. :try_end_54} :catchall_54

    .line 8171
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "mode":I
    :catchall_54
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8172
    throw v2

    .line 8153
    .end local v0    # "origId":J
    :cond_59
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShellRootAccessibilityWindow(IILandroid/view/IWindow;)V
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "windowType"    # I
    .param p3, "target"    # Landroid/view/IWindow;

    .line 4459
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4d

    .line 4463
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4465
    .local v0, "origId":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_11
    .catchall {:try_start_e .. :try_end_11} :catchall_48

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4466
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4467
    .local v3, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_24

    .line 4468
    monitor-exit v2
    :try_end_1d
    .catchall {:try_start_11 .. :try_end_1d} :catchall_42

    .line 4477
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4468
    return-void

    .line 4470
    :cond_24
    :try_start_24
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mShellRoots:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/ShellRoot;

    .line 4471
    .local v4, "root":Lcom/android/server/wm/ShellRoot;
    if-nez v4, :cond_36

    .line 4472
    monitor-exit v2
    :try_end_2f
    .catchall {:try_start_24 .. :try_end_2f} :catchall_42

    .line 4477
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4472
    return-void

    .line 4474
    :cond_36
    :try_start_36
    invoke-virtual {v4, p3}, Lcom/android/server/wm/ShellRoot;->setAccessibilityWindow(Landroid/view/IWindow;)V

    .line 4475
    .end local v3    # "dc":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "root":Lcom/android/server/wm/ShellRoot;
    monitor-exit v2
    :try_end_3a
    .catchall {:try_start_36 .. :try_end_3a} :catchall_42

    :try_start_3a
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3d
    .catchall {:try_start_3a .. :try_end_3d} :catchall_48

    .line 4477
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4478
    nop

    .line 4479
    return-void

    .line 4475
    :catchall_42
    move-exception v3

    :try_start_43
    monitor-exit v2
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_42

    :try_start_44
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "windowType":I
    .end local p3    # "target":Landroid/view/IWindow;
    throw v3
    :try_end_48
    .catchall {:try_start_44 .. :try_end_48} :catchall_48

    .line 4477
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "windowType":I
    .restart local p3    # "target":Landroid/view/IWindow;
    :catchall_48
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4478
    throw v2

    .line 4461
    .end local v0    # "origId":J
    :cond_4d
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_APP_TOKENS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShouldShowIme(IZ)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "shouldShow"    # Z

    .line 8285
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "setShouldShowIme()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_76

    .line 8288
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8290
    .local v0, "origId":J
    :try_start_f
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_12
    .catchall {:try_start_f .. :try_end_12} :catchall_71

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8291
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 8292
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_3d

    .line 8293
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_35

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x571e787

    const-string v8, "Attempted to set IME flag to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8295
    .end local v4    # "protoLogParam0":J
    :cond_35
    monitor-exit v2
    :try_end_36
    .catchall {:try_start_12 .. :try_end_36} :catchall_6b

    .line 8307
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8295
    return-void

    .line 8297
    :cond_3d
    :try_start_3d
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isTrusted()Z

    move-result v4

    if-eqz v4, :cond_54

    .line 8302
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setShouldShowImeLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 8304
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 8305
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_4c
    .catchall {:try_start_3d .. :try_end_4c} :catchall_6b

    :try_start_4c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4f
    .catchall {:try_start_4c .. :try_end_4f} :catchall_71

    .line 8307
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8308
    nop

    .line 8309
    return-void

    .line 8298
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_54
    :try_start_54
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to set IME flag to an untrusted virtual display: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v4

    .line 8305
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_6b
    move-exception v3

    monitor-exit v2
    :try_end_6d
    .catchall {:try_start_54 .. :try_end_6d} :catchall_6b

    :try_start_6d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v3
    :try_end_71
    .catchall {:try_start_6d .. :try_end_71} :catchall_71

    .line 8307
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_71
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8308
    throw v2

    .line 8286
    .end local v0    # "origId":J
    :cond_76
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShouldShowSystemDecors(IZ)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "shouldShow"    # Z

    .line 8237
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "setShouldShowSystemDecors()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_76

    .line 8240
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8242
    .local v0, "origId":J
    :try_start_f
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_12
    .catchall {:try_start_f .. :try_end_12} :catchall_71

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8243
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 8244
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_3d

    .line 8245
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_35

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, -0x170a515b

    const-string v8, "Attempted to set system decors flag to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8247
    .end local v4    # "protoLogParam0":J
    :cond_35
    monitor-exit v2
    :try_end_36
    .catchall {:try_start_12 .. :try_end_36} :catchall_6b

    .line 8259
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8247
    return-void

    .line 8249
    :cond_3d
    :try_start_3d
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isTrusted()Z

    move-result v4

    if-eqz v4, :cond_54

    .line 8254
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setShouldShowSystemDecorsLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 8256
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 8257
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_4c
    .catchall {:try_start_3d .. :try_end_4c} :catchall_6b

    :try_start_4c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4f
    .catchall {:try_start_4c .. :try_end_4f} :catchall_71

    .line 8259
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8260
    nop

    .line 8261
    return-void

    .line 8250
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_54
    :try_start_54
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to set system decors flag to an untrusted virtual display: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v4

    .line 8257
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_6b
    move-exception v3

    monitor-exit v2
    :try_end_6d
    .catchall {:try_start_54 .. :try_end_6d} :catchall_6b

    :try_start_6d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v3
    :try_end_71
    .catchall {:try_start_6d .. :try_end_71} :catchall_71

    .line 8259
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_71
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8260
    throw v2

    .line 8238
    .end local v0    # "origId":J
    :cond_76
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setShouldShowWithInsecureKeyguard(IZ)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "shouldShow"    # Z

    .line 8194
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "setShouldShowWithInsecureKeyguard()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_59

    .line 8198
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8200
    .local v0, "origId":J
    :try_start_f
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_12
    .catchall {:try_start_f .. :try_end_12} :catchall_54

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8201
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 8202
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_3d

    .line 8203
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_35

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x5aafe1c6

    const-string v8, "Attempted to set flag to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8205
    .end local v4    # "protoLogParam0":J
    :cond_35
    monitor-exit v2
    :try_end_36
    .catchall {:try_start_12 .. :try_end_36} :catchall_4e

    .line 8214
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8205
    return-void

    .line 8208
    :cond_3d
    :try_start_3d
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v4, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setShouldShowWithInsecureKeyguardLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 8211
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 8212
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v2
    :try_end_46
    .catchall {:try_start_3d .. :try_end_46} :catchall_4e

    :try_start_46
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_49
    .catchall {:try_start_46 .. :try_end_49} :catchall_54

    .line 8214
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8215
    nop

    .line 8216
    return-void

    .line 8212
    :catchall_4e
    move-exception v3

    :try_start_4f
    monitor-exit v2
    :try_end_50
    .catchall {:try_start_4f .. :try_end_50} :catchall_4e

    :try_start_50
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "shouldShow":Z
    throw v3
    :try_end_54
    .catchall {:try_start_50 .. :try_end_54} :catchall_54

    .line 8214
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "shouldShow":Z
    :catchall_54
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8215
    throw v2

    .line 8196
    .end local v0    # "origId":J
    :cond_59
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .registers 3
    .param p1, "value"    # Ljava/lang/String;

    .line 4146
    const-string/jumbo v0, "persist.sys.strictmode.visual"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 4147
    return-void
.end method

.method public setSwitchingUser(Z)V
    .registers 4
    .param p1, "switching"    # Z

    .line 3524
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const-string/jumbo v1, "setSwitchingUser()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_23

    .line 3528
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->setSwitchingUser(Z)V

    .line 3529
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_13
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3530
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mSwitchingUser:Z

    .line 3531
    monitor-exit v0
    :try_end_19
    .catchall {:try_start_13 .. :try_end_19} :catchall_1d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3532
    return-void

    .line 3531
    :catchall_1d
    move-exception v1

    :try_start_1e
    monitor-exit v0
    :try_end_1f
    .catchall {:try_start_1e .. :try_end_1f} :catchall_1d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3526
    :cond_23
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERACT_ACROSS_USERS_FULL permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setTableModeEnabled(Z)V
    .registers 2
    .param p1, "isTableModeEnabled"    # Z

    .line 9868
    return-void
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .registers 16
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    .line 2311
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2313
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_46

    :try_start_7
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 2314
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 2315
    .local v4, "w":Lcom/android/server/wm/WindowState;
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_SHOW_TRANSACTIONS_enabled:Z

    if-eqz v5, :cond_2c

    invoke-static {p3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    .local v6, "protoLogParam1":Ljava/lang/String;
    sget-object v7, Lcom/android/server/wm/ProtoLogGroup;->WM_SHOW_TRANSACTIONS:Lcom/android/server/wm/ProtoLogGroup;

    const v8, -0x3305e822    # -1.3112088E8f

    const/4 v9, 0x0

    const/4 v10, 0x2

    new-array v10, v10, [Ljava/lang/Object;

    aput-object v5, v10, v3

    const/4 v11, 0x1

    aput-object v6, v10, v11

    invoke-static {v7, v8, v3, v9, v10}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 2318
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Ljava/lang/String;
    :cond_2c
    if-eqz v4, :cond_37

    iget-boolean v3, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v3, :cond_37

    .line 2319
    iget-object v3, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V

    .line 2321
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_37
    monitor-exit v2
    :try_end_38
    .catchall {:try_start_7 .. :try_end_38} :catchall_40

    :try_start_38
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3b
    .catchall {:try_start_38 .. :try_end_3b} :catchall_46

    .line 2323
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2324
    nop

    .line 2325
    return-void

    .line 2321
    :catchall_40
    move-exception v3

    :try_start_41
    monitor-exit v2
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    :try_start_42
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "region":Landroid/graphics/Region;
    throw v3
    :try_end_46
    .catchall {:try_start_42 .. :try_end_46} :catchall_46

    .line 2323
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "region":Landroid/graphics/Region;
    :catchall_46
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2324
    throw v2
.end method

.method public setTspDeadzone(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/os/Bundle;)V
    .registers 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "deadzone"    # Landroid/os/Bundle;

    .line 10278
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10279
    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 10280
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1a

    .line 10281
    const-string v2, "WindowManager"

    const-string/jumbo v3, "setTspDeadzone failed. The win is null."

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10282
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_3d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 10284
    :cond_1a
    :try_start_1a
    invoke-virtual {v1, p3}, Lcom/android/server/wm/WindowState;->setTspDeadzone(Landroid/os/Bundle;)V

    .line 10286
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 10287
    .local v2, "imeWindow":Lcom/android/server/wm/WindowState;
    if-ne v1, v2, :cond_31

    .line 10288
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v3, v3, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mImeTargetWindow:Lcom/android/server/wm/WindowState;

    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mImeWindowVisible:Z

    invoke-interface {v3, v2, v4, v5}, Lcom/android/server/policy/WindowManagerPolicyExt;->updateTspImePolicy(Lcom/android/server/policy/WindowManagerPolicy$WindowState;Lcom/android/server/policy/WindowManagerPolicy$WindowState;Z)V

    goto :goto_38

    .line 10290
    :cond_31
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v3, v3, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v3, v1}, Lcom/android/server/policy/WindowManagerPolicyExt;->updateTspWindowPolicy(Lcom/android/server/policy/WindowManagerPolicy$WindowState;)V

    .line 10292
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "imeWindow":Lcom/android/server/wm/WindowState;
    :goto_38
    monitor-exit v0
    :try_end_39
    .catchall {:try_start_1a .. :try_end_39} :catchall_3d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 10293
    return-void

    .line 10292
    :catchall_3d
    move-exception v1

    :try_start_3e
    monitor-exit v0
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_3d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public setTspNoteMode(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)V
    .registers 11
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "isTspNoteMode"    # Z

    .line 10298
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 10299
    .local v0, "uid":I
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 10300
    invoke-static {v1, v0}, Landroid/provider/Settings;->getPackageNameForUid(Landroid/content/Context;I)Ljava/lang/String;

    move-result-object v2

    .line 10299
    const/4 v3, 0x0

    invoke-static {v1, v0, v2, v3}, Landroid/provider/Settings;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_4f

    .line 10304
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 10306
    .local v1, "origId":J
    :try_start_15
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4
    :try_end_18
    .catchall {:try_start_15 .. :try_end_18} :catchall_4a

    :try_start_18
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 10307
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 10308
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_31

    .line 10309
    const-string v5, "WindowManager"

    const-string/jumbo v6, "setTspNoteMode failed. The win is null."

    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10310
    monitor-exit v4
    :try_end_2a
    .catchall {:try_start_18 .. :try_end_2a} :catchall_44

    .line 10316
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10310
    return-void

    .line 10312
    :cond_31
    :try_start_31
    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowState;->setTspNoteMode(Z)V

    .line 10313
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v5, v5, Lcom/android/server/wm/WindowManagerServiceExt;->mPolicyExt:Lcom/android/server/policy/WindowManagerPolicyExt;

    invoke-interface {v5, v3}, Lcom/android/server/policy/WindowManagerPolicyExt;->updateTspWindowPolicy(Lcom/android/server/policy/WindowManagerPolicy$WindowState;)V

    .line 10314
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    monitor-exit v4
    :try_end_3c
    .catchall {:try_start_31 .. :try_end_3c} :catchall_44

    :try_start_3c
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3f
    .catchall {:try_start_3c .. :try_end_3f} :catchall_4a

    .line 10316
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10317
    nop

    .line 10318
    return-void

    .line 10314
    :catchall_44
    move-exception v3

    :try_start_45
    monitor-exit v4
    :try_end_46
    .catchall {:try_start_45 .. :try_end_46} :catchall_44

    :try_start_46
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "uid":I
    .end local v1    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "session":Lcom/android/server/wm/Session;
    .end local p2    # "client":Landroid/view/IWindow;
    .end local p3    # "isTspNoteMode":Z
    throw v3
    :try_end_4a
    .catchall {:try_start_46 .. :try_end_4a} :catchall_4a

    .line 10316
    .restart local v0    # "uid":I
    .restart local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "session":Lcom/android/server/wm/Session;
    .restart local p2    # "client":Landroid/view/IWindow;
    .restart local p3    # "isTspNoteMode":Z
    :catchall_4a
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10317
    throw v3

    .line 10301
    .end local v1    # "origId":J
    :cond_4f
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires WRITE_SETTINGS permission."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method setWillReplaceWindow(Landroid/os/IBinder;Z)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "animate"    # Z

    .line 7643
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    .line 7644
    .local v0, "activity":Lcom/android/server/wm/ActivityRecord;
    const/4 v1, 0x1

    const/4 v2, 0x0

    if-nez v0, :cond_21

    .line 7645
    sget-boolean v3, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_20

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, -0x630b9984

    new-array v1, v1, [Ljava/lang/Object;

    aput-object v3, v1, v2

    const-string v6, "Attempted to set replacing window on non-existing app token %s"

    invoke-static {v4, v5, v2, v6, v1}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7647
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_20
    return-void

    .line 7649
    :cond_21
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->hasContentToDisplay()Z

    move-result v3

    if-nez v3, :cond_3e

    .line 7650
    sget-boolean v3, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_3d

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .restart local v3    # "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, -0x4bbdd3a9

    new-array v1, v1, [Ljava/lang/Object;

    aput-object v3, v1, v2

    const-string v6, "Attempted to set replacing window on app token with no content %s"

    invoke-static {v4, v5, v2, v6, v1}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7653
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_3d
    return-void

    .line 7655
    :cond_3e
    invoke-virtual {v0, p2}, Lcom/android/server/wm/ActivityRecord;->setWillReplaceWindows(Z)V

    .line 7656
    return-void
.end method

.method setWillReplaceWindows(Landroid/os/IBinder;Z)V
    .registers 11
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "childrenOnly"    # Z

    .line 7671
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7672
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v1

    .line 7673
    .local v1, "activity":Lcom/android/server/wm/ActivityRecord;
    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez v1, :cond_2b

    .line 7674
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_26

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .local v4, "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0x630b9984

    const-string v7, "Attempted to set replacing window on non-existing app token %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v4, v2, v3

    invoke-static {v5, v6, v3, v7, v2}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7677
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_26
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_3 .. :try_end_27} :catchall_5d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7679
    :cond_2b
    :try_start_2b
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->hasContentToDisplay()Z

    move-result v4

    if-nez v4, :cond_4c

    .line 7680
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_47

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    .restart local v4    # "protoLogParam0":Ljava/lang/String;
    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0x4bbdd3a9

    const-string v7, "Attempted to set replacing window on app token with no content %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v4, v2, v3

    invoke-static {v5, v6, v3, v7, v2}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7683
    .end local v4    # "protoLogParam0":Ljava/lang/String;
    :cond_47
    monitor-exit v0
    :try_end_48
    .catchall {:try_start_2b .. :try_end_48} :catchall_5d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7686
    :cond_4c
    if-eqz p2, :cond_52

    .line 7687
    :try_start_4e
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->setWillReplaceChildWindows()V

    goto :goto_55

    .line 7689
    :cond_52
    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityRecord;->setWillReplaceWindows(Z)V

    .line 7692
    :goto_55
    invoke-virtual {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->scheduleClearWillReplaceWindows(Landroid/os/IBinder;Z)V

    .line 7693
    .end local v1    # "activity":Lcom/android/server/wm/ActivityRecord;
    monitor-exit v0
    :try_end_59
    .catchall {:try_start_4e .. :try_end_59} :catchall_5d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7694
    return-void

    .line 7693
    :catchall_5d
    move-exception v1

    :try_start_5e
    monitor-exit v0
    :try_end_5f
    .catchall {:try_start_5e .. :try_end_5f} :catchall_5d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .registers 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    .line 3276
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getActivityRecord(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    .line 3277
    .local v0, "wtoken":Lcom/android/server/wm/ActivityRecord;
    if-eqz v0, :cond_b

    .line 3278
    invoke-virtual {v0, p2}, Lcom/android/server/wm/ActivityRecord;->setMainWindowOpaque(Z)V

    .line 3280
    :cond_b
    return-void
.end method

.method public setWindowingMode(II)V
    .registers 16
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .line 8099
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "setWindowingMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_69

    .line 8103
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8105
    .local v0, "origId":J
    :try_start_f
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_12
    .catchall {:try_start_f .. :try_end_12} :catchall_64

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8106
    const/4 v3, 0x0

    invoke-direct {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentOrCreate(ILandroid/os/IBinder;)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 8107
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_3d

    .line 8108
    sget-boolean v4, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v4, :cond_35

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, -0x6d99e8bf

    const-string v8, "Attempted to set windowing mode to a display that does not exist: %d"

    const/4 v9, 0x1

    new-array v10, v9, [Ljava/lang/Object;

    const/4 v11, 0x0

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v12

    aput-object v12, v10, v11

    invoke-static {v6, v7, v9, v8, v10}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8111
    .end local v4    # "protoLogParam0":J
    :cond_35
    monitor-exit v2
    :try_end_36
    .catchall {:try_start_12 .. :try_end_36} :catchall_5e

    .line 8128
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8111
    return-void

    .line 8114
    :cond_3d
    :try_start_3d
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getWindowingMode()I

    move-result v4

    .line 8115
    .local v4, "lastWindowingMode":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v5, v3, p2}, Lcom/android/server/wm/DisplayWindowSettings;->setWindowingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 8117
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 8119
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getWindowingMode()I

    move-result v5

    if-eq v4, v5, :cond_55

    .line 8122
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 8124
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 8126
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "lastWindowingMode":I
    :cond_55
    monitor-exit v2
    :try_end_56
    .catchall {:try_start_3d .. :try_end_56} :catchall_5e

    :try_start_56
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_59
    .catchall {:try_start_56 .. :try_end_59} :catchall_64

    .line 8128
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8129
    nop

    .line 8130
    return-void

    .line 8126
    :catchall_5e
    move-exception v3

    :try_start_5f
    monitor-exit v2
    :try_end_60
    .catchall {:try_start_5f .. :try_end_60} :catchall_5e

    :try_start_60
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    .end local p2    # "mode":I
    throw v3
    :try_end_64
    .catchall {:try_start_60 .. :try_end_64} :catchall_64

    .line 8128
    .restart local v0    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    .restart local p2    # "mode":I
    :catchall_64
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8129
    throw v2

    .line 8100
    .end local v0    # "origId":J
    :cond_69
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public shouldBeLoggingHalfOpenMode()I
    .registers 2

    .line 9913
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_SA_LOGGING_FOR_HALF_OPEN_MODE:Z

    if-nez v0, :cond_6

    .line 9914
    const/4 v0, -0x1

    return v0

    .line 9916
    :cond_6
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->shouldBeLoggingHalfOpenMode()I

    move-result v0

    return v0
.end method

.method public shouldShowIme(I)Z
    .registers 11
    .param p1, "displayId"    # I

    .line 8265
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "shouldShowIme()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_42

    .line 8269
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 8270
    .local v0, "dc":Lcom/android/server/wm/DisplayContent;
    if-nez v0, :cond_2d

    .line 8271
    sget-boolean v1, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    const/4 v2, 0x0

    if-eqz v1, :cond_2c

    int-to-long v3, p1

    .local v3, "protoLogParam0":J
    sget-object v1, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, 0x5addfd7

    const/4 v6, 0x1

    new-array v7, v6, [Ljava/lang/Object;

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v8

    aput-object v8, v7, v2

    const-string v8, "Attempted to get IME flag of a display that does not exist: %d"

    invoke-static {v1, v5, v6, v8, v7}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8274
    .end local v3    # "protoLogParam0":J
    :cond_2c
    return v2

    .line 8276
    :cond_2d
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_30
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8277
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->canShowIme()Z

    move-result v2

    .line 8278
    .local v2, "show":Z
    monitor-exit v1
    :try_end_38
    .catchall {:try_start_30 .. :try_end_38} :catchall_3c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8280
    return v2

    .line 8278
    .end local v2    # "show":Z
    :catchall_3c
    move-exception v2

    :try_start_3d
    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_3d .. :try_end_3e} :catchall_3c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v2

    .line 8266
    .end local v0    # "dc":Lcom/android/server/wm/DisplayContent;
    :cond_42
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public shouldShowSystemDecors(I)Z
    .registers 13
    .param p1, "displayId"    # I

    .line 8220
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "shouldShowSystemDecors()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_46

    .line 8224
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8225
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8226
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_37

    .line 8227
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_32

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, 0xa8c5f5

    const-string v7, "Attempted to get system decors flag of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8229
    .end local v4    # "protoLogParam0":J
    :cond_32
    monitor-exit v0
    :try_end_33
    .catchall {:try_start_e .. :try_end_33} :catchall_40

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 8231
    :cond_37
    :try_start_37
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->supportsSystemDecorations()Z

    move-result v2

    monitor-exit v0
    :try_end_3c
    .catchall {:try_start_37 .. :try_end_3c} :catchall_40

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8232
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_40
    move-exception v1

    :try_start_41
    monitor-exit v0
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 8221
    :cond_46
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public shouldShowWithInsecureKeyguard(I)Z
    .registers 13
    .param p1, "displayId"    # I

    .line 8177
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "shouldShowWithInsecureKeyguard()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_48

    .line 8181
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 8182
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8183
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_37

    .line 8184
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_32

    int-to-long v4, p1

    .local v4, "protoLogParam0":J
    sget-object v2, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v6, 0x557ef416

    const-string v7, "Attempted to get flag of a display that does not exist: %d"

    const/4 v8, 0x1

    new-array v9, v8, [Ljava/lang/Object;

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    aput-object v10, v9, v3

    invoke-static {v2, v6, v8, v7, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 8186
    .end local v4    # "protoLogParam0":J
    :cond_32
    monitor-exit v0
    :try_end_33
    .catchall {:try_start_e .. :try_end_33} :catchall_42

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 8188
    :cond_37
    :try_start_37
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayWindowSettings:Lcom/android/server/wm/DisplayWindowSettings;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/DisplayWindowSettings;->shouldShowWithInsecureKeyguardLocked(Lcom/android/server/wm/DisplayContent;)Z

    move-result v2

    monitor-exit v0
    :try_end_3e
    .catchall {:try_start_37 .. :try_end_3e} :catchall_42

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 8189
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_42
    move-exception v1

    :try_start_43
    monitor-exit v0
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_42

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 8178
    :cond_48
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .registers 21
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .line 4029
    move-object/from16 v1, p0

    move/from16 v2, p2

    const/4 v3, 0x0

    .line 4030
    .local v3, "first":Z
    iget-object v4, v1, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v4

    :try_start_8
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4031
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_BOOT_enabled:Z

    const/4 v5, 0x1

    if-eqz v0, :cond_60

    invoke-static/range {p1 .. p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    move/from16 v6, p2

    .local v6, "protoLogParam1":Z
    iget-boolean v7, v1, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    .local v7, "protoLogParam2":Z
    iget-boolean v8, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .local v8, "protoLogParam3":Z
    iget-boolean v9, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .local v9, "protoLogParam4":Z
    new-instance v10, Ljava/lang/RuntimeException;

    const-string/jumbo v11, "here"

    invoke-direct {v10, v11}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v10}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v10

    invoke-static {v10}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    .local v10, "protoLogParam5":Ljava/lang/String;
    sget-object v11, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_BOOT:Lcom/android/server/wm/ProtoLogGroup;

    const v12, -0x341f003a    # -2.9491084E7f

    const/16 v13, 0x3fc

    const/4 v14, 0x0

    const/4 v15, 0x6

    new-array v15, v15, [Ljava/lang/Object;

    const/16 v16, 0x0

    aput-object v0, v15, v16

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v16

    aput-object v16, v15, v5

    const/16 v16, 0x2

    invoke-static {v7}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x3

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x4

    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v17

    aput-object v17, v15, v16

    const/16 v16, 0x5

    aput-object v10, v15, v16

    invoke-static {v11, v12, v13, v14, v15}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4036
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    .end local v6    # "protoLogParam1":Z
    .end local v7    # "protoLogParam2":Z
    .end local v8    # "protoLogParam3":Z
    .end local v9    # "protoLogParam4":Z
    .end local v10    # "protoLogParam5":Ljava/lang/String;
    :cond_60
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    if-nez v0, :cond_69

    .line 4037
    monitor-exit v4
    :try_end_65
    .catchall {:try_start_8 .. :try_end_65} :catchall_92

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4039
    :cond_69
    :try_start_69
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v0, :cond_76

    .line 4040
    if-nez v2, :cond_74

    .line 4041
    monitor-exit v4
    :try_end_70
    .catchall {:try_start_69 .. :try_end_70} :catchall_92

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4043
    :cond_74
    const/4 v0, 0x1

    move v3, v0

    .line 4045
    :cond_76
    :try_start_76
    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v0, :cond_7f

    .line 4046
    monitor-exit v4
    :try_end_7b
    .catchall {:try_start_76 .. :try_end_7b} :catchall_92

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4048
    :cond_7f
    :try_start_7f
    iput-boolean v5, v1, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 4049
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;
    :try_end_83
    .catchall {:try_start_7f .. :try_end_83} :catchall_92

    move-object/from16 v5, p1

    :try_start_85
    invoke-interface {v0, v5, v2}, Lcom/android/server/policy/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 4050
    monitor-exit v4
    :try_end_89
    .catchall {:try_start_85 .. :try_end_89} :catchall_9a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4051
    if-eqz v3, :cond_91

    .line 4052
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 4054
    :cond_91
    return-void

    .line 4050
    :catchall_92
    move-exception v0

    move-object/from16 v5, p1

    :goto_95
    :try_start_95
    monitor-exit v4
    :try_end_96
    .catchall {:try_start_95 .. :try_end_96} :catchall_9a

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_9a
    move-exception v0

    goto :goto_95
.end method

.method public showEmulatorDisplayOverlay()V
    .registers 9

    .line 4092
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4094
    sget-boolean v1, Lcom/android/server/wm/WindowManagerDebugConfig;->SHOW_LIGHT_TRANSACTIONS:Z

    if-eqz v1, :cond_11

    const-string v1, "WindowManager"

    const-string v2, ">>> showEmulatorDisplayOverlay"

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4095
    :cond_11
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    if-nez v1, :cond_33

    .line 4096
    new-instance v1, Lcom/android/server/wm/EmulatorDisplayOverlay;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSurfaceFactory:Ljava/util/function/Supplier;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 4097
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    const/16 v6, 0x7e2

    .line 4098
    invoke-interface {v2, v6}, Lcom/android/server/policy/WindowManagerPolicy;->getWindowLayerFromTypeLw(I)I

    move-result v2

    mul-int/lit16 v2, v2, 0x2710

    add-int/lit8 v6, v2, 0xa

    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    move-object v2, v1

    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Ljava/util/function/Supplier;Landroid/content/Context;Lcom/android/server/wm/DisplayContent;ILandroid/view/SurfaceControl$Transaction;)V

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    .line 4101
    :cond_33
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    const/4 v2, 0x1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(ZLandroid/view/SurfaceControl$Transaction;)V

    .line 4102
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v1}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 4103
    monitor-exit v0
    :try_end_41
    .catchall {:try_start_3 .. :try_end_41} :catchall_45

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4104
    return-void

    .line 4103
    :catchall_45
    move-exception v1

    :try_start_46
    monitor-exit v0
    :try_end_47
    .catchall {:try_start_46 .. :try_end_47} :catchall_45

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .registers 3

    .line 4083
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x1110117

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_28

    const/4 v0, 0x0

    .line 4085
    const-string/jumbo v1, "ro.emulator.circular"

    invoke-static {v1, v0}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_28

    sget-boolean v0, Landroid/os/Build;->IS_EMULATOR:Z

    if-eqz v0, :cond_28

    .line 4087
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x24

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 4089
    :cond_28
    return-void
.end method

.method public showGlobalActions()V
    .registers 3

    .line 3537
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string/jumbo v1, "showGlobalActions()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 3541
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->showGlobalActions()V

    .line 3542
    return-void

    .line 3539
    :cond_11
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires INTERNAL_SYSTEM_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public showRecentApps()V
    .registers 2

    .line 6950
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->showRecentApps()V

    .line 6951
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .registers 8
    .param p1, "on"    # Z

    .line 4110
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 4111
    .local v0, "pid":I
    const/4 v1, 0x0

    const/16 v2, 0x19

    if-eqz p1, :cond_1f

    .line 4114
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v4, 0x1

    invoke-virtual {v3, v2, v4, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 4115
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v2, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v4, 0x3e8

    invoke-virtual {v3, v1, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto :goto_28

    .line 4118
    :cond_1f
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v2, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 4120
    :goto_28
    return-void
.end method

.method public shutdown(Z)V
    .registers 4
    .param p1, "confirm"    # Z

    .line 3791
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v0

    const-string/jumbo v1, "userrequested"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 3793
    return-void
.end method

.method startFreezingDisplay(II)V
    .registers 4
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .line 6317
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(IILcom/android/server/wm/DisplayContent;)V

    .line 6318
    return-void
.end method

.method startFreezingDisplay(IILcom/android/server/wm/DisplayContent;)V
    .registers 5
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I
    .param p3, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .line 6321
    const/4 v0, -0x1

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(IILcom/android/server/wm/DisplayContent;I)V

    .line 6323
    return-void
.end method

.method startFreezingDisplay(IILcom/android/server/wm/DisplayContent;I)V
    .registers 22
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I
    .param p3, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p4, "overrideOriginalRotation"    # I

    .line 6328
    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p2

    move-object/from16 v3, p3

    const/4 v4, 0x0

    .line 6329
    .local v4, "useBlackScreenshot":Z
    iget-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->mUseBlackScreenshot:Z

    const/4 v6, 0x0

    if-eqz v5, :cond_11

    .line 6330
    iput-boolean v6, v3, Lcom/android/server/wm/DisplayContent;->mUseBlackScreenshot:Z

    .line 6331
    const/4 v4, 0x1

    .line 6349
    :cond_11
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    const-string v7, "WindowManager"

    if-nez v5, :cond_21

    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayRotation;->isRotatingSeamlessly()Z

    move-result v5

    if-eqz v5, :cond_4a

    .line 6351
    :cond_21
    iget-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->mDisplayFrozen:Z

    if-nez v5, :cond_13b

    .line 6352
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayRotation;->isRotatingSeamlessly()Z

    move-result v5

    if-nez v5, :cond_138

    .line 6353
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->allowMultiDisplayFreezeLocked()Z

    move-result v5

    if-eqz v5, :cond_135

    .line 6354
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "startFreezingDisplayLocked(MultiFreeze): Try, dc="

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v7, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6361
    :cond_4a
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->isReady()Z

    move-result v5

    if-eqz v5, :cond_132

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v5}, Lcom/android/server/policy/WindowManagerPolicy;->isScreenOn()Z

    move-result v5

    if-eqz v5, :cond_132

    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->okToAnimate()Z

    move-result v5

    if-nez v5, :cond_62

    move/from16 v6, p4

    goto/16 :goto_134

    .line 6376
    :cond_62
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_FORCE_DEBUG_ORIENTATION_enabled:Z

    const/4 v8, 0x1

    if-eqz v5, :cond_92

    int-to-long v9, v1

    .local v9, "protoLogParam0":J
    int-to-long v11, v2

    .local v11, "protoLogParam1":J
    const/16 v5, 0x8

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam2":Ljava/lang/String;
    sget-object v13, Lcom/android/server/wm/ProtoLogGroup;->WM_FORCE_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const/4 v15, 0x5

    const/4 v14, 0x3

    new-array v14, v14, [Ljava/lang/Object;

    invoke-static {v9, v10}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v14, v6

    invoke-static {v11, v12}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v16

    aput-object v16, v14, v8

    const/16 v16, 0x2

    aput-object v5, v14, v16

    const-string/jumbo v8, "startFreezingDisplayLocked: exitAnim=%d enterAnim=%d called by %s"

    const v6, -0x5b31cd7b

    invoke-static {v13, v6, v15, v8, v14}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6382
    .end local v5    # "protoLogParam2":Ljava/lang/String;
    .end local v9    # "protoLogParam0":J
    .end local v11    # "protoLogParam1":J
    :cond_92
    const-wide/16 v5, 0x20

    const-string v8, "Screen frozen"

    const/4 v9, 0x0

    invoke-static {v5, v6, v8, v9}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 6386
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    const/4 v6, 0x1

    add-int/2addr v5, v6

    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    .line 6390
    iput-boolean v6, v3, Lcom/android/server/wm/DisplayContent;->mDisplayFrozen:Z

    .line 6391
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    long-to-int v5, v5

    iput v5, v3, Lcom/android/server/wm/DisplayContent;->mDisplayFreezeTime:I

    .line 6394
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v5, :cond_d2

    .line 6397
    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v5}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v5

    if-eqz v5, :cond_ba

    .line 6398
    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v5}, Lcom/android/server/wm/AppTransition;->freeze()V

    .line 6400
    :cond_ba
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "startFreezingDisplayLocked(MultiFreeze): mFrozenDisplayId="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mFrozenDisplayId:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v7, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_107

    .line 6403
    :cond_d2
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v5}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 6405
    const/4 v5, 0x1

    iput-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 6406
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    iput-wide v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 6407
    const/4 v5, 0x0

    iput-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 6411
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mFrozenDisplayId:I

    .line 6413
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    invoke-virtual {v5}, Lcom/android/server/wm/InputManagerCallback;->freezeInputDispatchingLw()V

    .line 6415
    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v5}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v5

    if-eqz v5, :cond_fb

    .line 6416
    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v5}, Lcom/android/server/wm/AppTransition;->freeze()V

    .line 6424
    :cond_fb
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

    const/4 v6, 0x6

    invoke-virtual {v5, v6}, Lcom/android/internal/util/LatencyTracker;->onActionStart(I)V

    .line 6426
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mLatencyTrackingDisplayId:I

    .line 6429
    :goto_107
    iput v1, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 6430
    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 6432
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 6433
    const/4 v5, -0x1

    move/from16 v6, p4

    if-eq v6, v5, :cond_115

    .line 6434
    move v5, v6

    goto :goto_11b

    .line 6435
    :cond_115
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v5

    iget v5, v5, Landroid/view/DisplayInfo;->rotation:I

    :goto_11b
    nop

    .line 6436
    .local v5, "originalRotation":I
    new-instance v7, Lcom/android/server/wm/ScreenRotationAnimation;

    invoke-direct {v7, v3, v5, v4}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Lcom/android/server/wm/DisplayContent;IZ)V

    invoke-virtual {v3, v7}, Lcom/android/server/wm/DisplayContent;->setRotationAnimation(Lcom/android/server/wm/ScreenRotationAnimation;)V

    .line 6444
    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    const/4 v8, 0x1

    if-le v7, v8, :cond_12e

    .line 6445
    iget-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 6447
    :cond_12e
    const/4 v7, 0x0

    iput v7, v0, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    .line 6450
    return-void

    .line 6361
    .end local v5    # "originalRotation":I
    :cond_132
    move/from16 v6, p4

    .line 6371
    :goto_134
    return-void

    .line 6353
    :cond_135
    move/from16 v6, p4

    goto :goto_13d

    .line 6352
    :cond_138
    move/from16 v6, p4

    goto :goto_13d

    .line 6351
    :cond_13b
    move/from16 v6, p4

    .line 6357
    :goto_13d
    return-void
.end method

.method public startFreezingScreen(II)V
    .registers 10
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .line 3385
    const-string v0, "android.permission.FREEZE_SCREEN"

    const-string/jumbo v1, "startFreezingScreen()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_42

    .line 3390
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3391
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v1, :cond_37

    .line 3392
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 3393
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_1c
    .catchall {:try_start_e .. :try_end_1c} :catchall_3c

    .line 3395
    .local v1, "origId":J
    :try_start_1c
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(II)V

    .line 3396
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 3397
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v5, 0x1388

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_2d
    .catchall {:try_start_1c .. :try_end_2d} :catchall_31

    .line 3399
    :try_start_2d
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3400
    goto :goto_37

    .line 3399
    :catchall_31
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3400
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "exitAnim":I
    .end local p2    # "enterAnim":I
    throw v3

    .line 3402
    .end local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "exitAnim":I
    .restart local p2    # "enterAnim":I
    :cond_37
    :goto_37
    monitor-exit v0
    :try_end_38
    .catchall {:try_start_2d .. :try_end_38} :catchall_3c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3403
    return-void

    .line 3402
    :catchall_3c
    move-exception v1

    :try_start_3d
    monitor-exit v0
    :try_end_3e
    .catchall {:try_start_3d .. :try_end_3e} :catchall_3c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3387
    :cond_42
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FREEZE_SCREEN permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public startLockscreenFingerprintAuth()V
    .registers 2

    .line 10003
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerServiceExt;->startLockscreenFingerprintAuth()V

    .line 10004
    return-void
.end method

.method public startSurfaceAnimation(Landroid/os/IBinder;Ljava/lang/String;)V
    .registers 3
    .param p1, "window"    # Landroid/os/IBinder;
    .param p2, "args"    # Ljava/lang/String;

    .line 10229
    return-void
.end method

.method public startViewServer(I)Z
    .registers 8
    .param p1, "port"    # I

    .line 4735
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_8

    .line 4736
    return v1

    .line 4739
    :cond_8
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v2, "startViewServer"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 4740
    return v1

    .line 4743
    :cond_14
    const/16 v0, 0x400

    if-ge p1, v0, :cond_19

    .line 4744
    return v1

    .line 4747
    :cond_19
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    const/4 v2, 0x0

    const-string v3, "View server did not start"

    const v4, -0x5c258446

    if-eqz v0, :cond_3d

    .line 4748
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v0

    if-nez v0, :cond_3c

    .line 4750
    :try_start_29
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->start()Z

    move-result v0
    :try_end_2f
    .catch Ljava/io/IOException; {:try_start_29 .. :try_end_2f} :catch_30

    return v0

    .line 4751
    :catch_30
    move-exception v0

    .line 4752
    .local v0, "e":Ljava/io/IOException;
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_3c

    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    check-cast v2, [Ljava/lang/Object;

    invoke-static {v5, v4, v1, v3, v2}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4755
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3c
    return v1

    .line 4759
    :cond_3d
    :try_start_3d
    new-instance v0, Lcom/android/server/wm/ViewServer;

    invoke-direct {v0, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    .line 4760
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->start()Z

    move-result v0
    :try_end_48
    .catch Ljava/io/IOException; {:try_start_3d .. :try_end_48} :catch_49

    return v0

    .line 4761
    :catch_49
    move-exception v0

    .line 4762
    .restart local v0    # "e":Ljava/io/IOException;
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_55

    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    check-cast v2, [Ljava/lang/Object;

    invoke-static {v5, v4, v1, v3, v2}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4764
    .end local v0    # "e":Ljava/io/IOException;
    :cond_55
    return v1
.end method

.method public startWindowTrace()V
    .registers 3

    .line 6141
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowTracing;->startTrace(Ljava/io/PrintWriter;)V

    .line 6142
    return-void
.end method

.method public statusBarVisibilityChanged(II)V
    .registers 8
    .param p1, "displayId"    # I
    .param p2, "visibility"    # I

    .line 6786
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3e

    .line 6792
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6793
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 6794
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1c

    .line 6795
    invoke-virtual {v1, p2}, Lcom/android/server/wm/DisplayContent;->statusBarVisibilityChanged(I)V

    goto :goto_33

    .line 6797
    :cond_1c
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "statusBarVisibilityChanged with invalid displayId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6799
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_33
    monitor-exit v0
    :try_end_34
    .catchall {:try_start_d .. :try_end_34} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 6800
    return-void

    .line 6799
    :catchall_38
    move-exception v1

    :try_start_39
    monitor-exit v0
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 6788
    :cond_3e
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method stopFreezingDisplayLocked()V
    .registers 3

    .line 6454
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v1, Lcom/android/server/wm/-$$Lambda$WindowManagerService$bZz5Va7EZ309Ymq4DAMtHxm89Zs;

    invoke-direct {v1, p0}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$bZz5Va7EZ309Ymq4DAMtHxm89Zs;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 6457
    return-void
.end method

.method stopFreezingDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 31
    .param p1, "dc"    # Lcom/android/server/wm/DisplayContent;

    .line 6461
    move-object/from16 v1, p0

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v0, :cond_7

    .line 6462
    return-void

    .line 6466
    :cond_7
    iget v0, v1, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    const-string v2, "WindowManager"

    const/4 v3, 0x1

    if-lez v0, :cond_18

    .line 6467
    add-int/2addr v0, v3

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mInDisplayFreezing:I

    .line 6468
    const-string/jumbo v0, "stopFreezingDisplayLocked: Returning in startFreezingDisplay"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6469
    return-void

    .line 6473
    :cond_18
    move-object/from16 v4, p1

    .line 6476
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v5, p1

    iget-boolean v0, v5, Lcom/android/server/wm/DisplayContent;->mDisplayFrozen:Z

    if-nez v0, :cond_21

    .line 6477
    return-void

    .line 6483
    :cond_21
    const/4 v6, 0x0

    if-eqz v4, :cond_39

    .line 6484
    iget-object v0, v4, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    move-result v0

    .line 6485
    .local v0, "numOpeningApps":I
    iget-boolean v7, v4, Lcom/android/server/wm/DisplayContent;->mWaitingForConfig:Z

    .line 6486
    .local v7, "waitingForConfig":Z
    nop

    .line 6487
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayRotation;->isWaitingForRemoteRotation()Z

    move-result v8

    move v9, v8

    move v8, v7

    move v7, v0

    .local v8, "waitingForRemoteRotation":Z
    goto :goto_3f

    .line 6489
    .end local v0    # "numOpeningApps":I
    .end local v7    # "waitingForConfig":Z
    .end local v8    # "waitingForRemoteRotation":Z
    :cond_39
    move v8, v6

    .restart local v8    # "waitingForRemoteRotation":Z
    move v7, v6

    .line 6490
    .restart local v7    # "waitingForConfig":Z
    const/4 v0, 0x0

    move v9, v8

    move v8, v7

    move v7, v0

    .line 6493
    .local v7, "numOpeningApps":I
    .local v8, "waitingForConfig":Z
    .local v9, "waitingForRemoteRotation":Z
    :goto_3f
    const/4 v0, 0x0

    .line 6494
    .local v0, "isWaitingForRemoteConfigChanges":Z
    iget-boolean v10, v4, Lcom/android/server/wm/DisplayContent;->mIsWaitingForRemoteConfigChanges:Z

    if-eqz v10, :cond_5f

    .line 6496
    if-nez v8, :cond_59

    if-nez v9, :cond_59

    iget v10, v1, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-gtz v10, :cond_59

    iget v10, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    if-eq v10, v3, :cond_59

    iget-boolean v10, v1, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v10, :cond_59

    if-lez v7, :cond_57

    goto :goto_59

    :cond_57
    move v10, v6

    goto :goto_5a

    :cond_59
    :goto_59
    move v10, v3

    .line 6500
    .local v10, "isWaitingForStandardReason":Z
    :goto_5a
    if-nez v10, :cond_5f

    .line 6501
    const/4 v0, 0x1

    move v10, v0

    goto :goto_60

    .line 6506
    .end local v10    # "isWaitingForStandardReason":Z
    :cond_5f
    move v10, v0

    .end local v0    # "isWaitingForRemoteConfigChanges":Z
    .local v10, "isWaitingForRemoteConfigChanges":Z
    :goto_60
    if-nez v8, :cond_79

    if-nez v9, :cond_79

    iget v0, v1, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-gtz v0, :cond_79

    iget v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    if-eq v0, v3, :cond_79

    iget-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v0, :cond_79

    if-gtz v7, :cond_79

    if-eqz v10, :cond_75

    goto :goto_79

    :cond_75
    move-object v11, v4

    move v3, v7

    goto/16 :goto_18a

    .line 6512
    :cond_79
    :goto_79
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v0, :cond_cd

    move v0, v8

    .local v0, "protoLogParam0":Z
    move v13, v9

    .local v13, "protoLogParam1":Z
    iget v14, v1, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    int-to-long v14, v14

    .local v14, "protoLogParam2":J
    iget v12, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    move-object/from16 v17, v4

    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v17, "displayContent":Lcom/android/server/wm/DisplayContent;
    int-to-long v3, v12

    .local v3, "protoLogParam3":J
    iget-boolean v12, v1, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    move/from16 v18, v12

    .local v18, "protoLogParam4":Z
    int-to-long v11, v7

    .local v11, "protoLogParam5":J
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    move/from16 v22, v7

    const/4 v5, 0x6

    .end local v7    # "numOpeningApps":I
    .local v22, "numOpeningApps":I
    new-array v7, v5, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v5

    const/16 v19, 0x0

    aput-object v5, v7, v19

    invoke-static {v13}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v5

    const/16 v16, 0x1

    aput-object v5, v7, v16

    const/4 v5, 0x2

    invoke-static {v14, v15}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v23

    aput-object v23, v7, v5

    const/4 v5, 0x3

    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v23

    aput-object v23, v7, v5

    const/4 v5, 0x4

    invoke-static/range {v18 .. v18}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v23

    aput-object v23, v7, v5

    const/4 v5, 0x5

    invoke-static {v11, v12}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v23

    aput-object v23, v7, v5

    move/from16 v20, v0

    move-wide/from16 v23, v3

    const/16 v0, 0x75f

    const/4 v3, 0x0

    const v5, 0x4a44fcf1    # 3227452.2f

    .end local v0    # "protoLogParam0":Z
    .end local v3    # "protoLogParam3":J
    .local v20, "protoLogParam0":Z
    .local v23, "protoLogParam3":J
    invoke-static {v6, v5, v0, v3, v7}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_d1

    .end local v11    # "protoLogParam5":J
    .end local v13    # "protoLogParam1":Z
    .end local v14    # "protoLogParam2":J
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v18    # "protoLogParam4":Z
    .end local v20    # "protoLogParam0":Z
    .end local v22    # "numOpeningApps":I
    .end local v23    # "protoLogParam3":J
    .restart local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v7    # "numOpeningApps":I
    :cond_cd
    move-object/from16 v17, v4

    move/from16 v22, v7

    .line 6520
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v7    # "numOpeningApps":I
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "numOpeningApps":I
    :goto_d1
    if-eqz v10, :cond_dd

    .line 6521
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->SAFE_DEBUG:Z

    if-eqz v0, :cond_dd

    .line 6522
    const-string/jumbo v0, "stopFreezingDisplayLocked: Returning isWaitingForRemoteConfigChanges=true"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6525
    :cond_dd
    const-string v0, ", isWaitingForRemoteConfigChanges="

    const-string v3, ", mClientFreezingScreen="

    const-string v4, ", mWindowsFreezingScreen="

    const-string v5, ", mAppsFreezingScreen="

    if-eqz v17, :cond_145

    .line 6526
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    move-object/from16 v11, v17

    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v12, v11, Lcom/android/server/wm/DisplayContent;->mDisplayFreezeTime:I

    int-to-long v12, v12

    sub-long/2addr v6, v12

    long-to-int v6, v6

    .line 6528
    .local v6, "freezeDuration":I
    const/16 v7, 0x1b58

    if-le v6, v7, :cond_147

    .line 6529
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "stopFreezingDisplayLocked: display is frozen too long time ("

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v12, "ms), mWaitingForConfig="

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v12, ", waitingForRemoteRotation="

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v12, v1, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v12, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v12, v1, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v12, ", mOpeningApps="

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v12, v11, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v2, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_147

    .line 6525
    .end local v6    # "freezeDuration":I
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_145
    move-object/from16 v11, v17

    .line 6541
    .end local v17    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_147
    :goto_147
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->isRemovingDisplay()Z

    move-result v6

    if-eqz v6, :cond_3c0

    .line 6543
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "stopFreezingDisplayLocked: Force stopFreezingDisplay for removing display. mWaitingForConfig="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, v1, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v1, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v3, ", mOpeningApps.size()="

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v3, v22

    .end local v22    # "numOpeningApps":I
    .local v3, "numOpeningApps":I
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6556
    :goto_18a
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v0, :cond_19c

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const v4, 0x1533dc4c

    const/4 v5, 0x0

    move-object v12, v5

    check-cast v12, [Ljava/lang/Object;

    const/4 v6, 0x0

    invoke-static {v0, v4, v6, v5, v12}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_19d

    :cond_19c
    const/4 v6, 0x0

    .line 6561
    :goto_19d
    const-wide/16 v4, 0x20

    const-string v0, "Screen frozen"

    invoke-static {v4, v5, v0, v6}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 6563
    if-eqz v11, :cond_1f4

    iget-boolean v0, v11, Lcom/android/server/wm/DisplayContent;->mDisplayFrozen:Z

    if-eqz v0, :cond_1f4

    .line 6565
    iget v0, v11, Lcom/android/server/wm/DisplayContent;->mDisplayFreezeTime:I

    .line 6566
    .local v0, "freezeTime":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    int-to-long v6, v0

    sub-long/2addr v4, v6

    long-to-int v4, v4

    iput v4, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 6567
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "stopFreezingDisplayInnerLocked(MultiFreeze): Screen(#"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6568
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ") frozen for "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v5, "ms, dc="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 6570
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->SAFE_DEBUG:Z

    if-eqz v5, :cond_1e5

    const/16 v5, 0x8

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    goto :goto_1e7

    :cond_1e5
    const-string v5, ""

    :goto_1e7
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 6567
    invoke-static {v2, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6571
    const/4 v4, 0x0

    iput-boolean v4, v11, Lcom/android/server/wm/DisplayContent;->mDisplayFrozen:Z

    .line 6574
    .end local v0    # "freezeTime":I
    :cond_1f4
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->hasFreezedDisplayLocked()Z

    move-result v0

    if-eqz v0, :cond_204

    .line 6576
    const-string/jumbo v0, "stopFreezingDisplayInnerLocked(MultiFreeze): Keep DisplayFrozen"

    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v6, 0x1

    goto :goto_265

    .line 6582
    :cond_204
    const/4 v0, -0x1

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mFrozenDisplayId:I

    .line 6583
    const/4 v2, 0x0

    iput-boolean v2, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 6584
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputManagerCallback:Lcom/android/server/wm/InputManagerCallback;

    invoke-virtual {v0}, Lcom/android/server/wm/InputManagerCallback;->thawInputDispatchingLw()V

    .line 6585
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    iget-wide v6, v1, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    sub-long/2addr v4, v6

    long-to-int v0, v4

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 6586
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 6587
    .local v0, "sb":Ljava/lang/StringBuilder;
    const-string v2, "Screen frozen for "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6588
    iget v2, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v4, v2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 6589
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v2, :cond_239

    .line 6590
    const-string v2, " due to "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6591
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 6593
    :cond_239
    sget-boolean v2, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v2, :cond_256

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, -0x22c05ae8

    const/4 v6, 0x1

    new-array v7, v6, [Ljava/lang/Object;

    const/4 v12, 0x0

    aput-object v2, v7, v12

    const-string v13, "%s"

    invoke-static {v4, v5, v12, v13, v7}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_257

    .end local v2    # "protoLogParam0":Ljava/lang/String;
    :cond_256
    const/4 v6, 0x1

    .line 6594
    :goto_257
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x11

    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6595
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6601
    .end local v0    # "sb":Ljava/lang/StringBuilder;
    :goto_265
    const/4 v2, 0x0

    .line 6603
    .local v2, "updateRotation":Z
    if-nez v11, :cond_26a

    const/4 v0, 0x0

    goto :goto_26e

    .line 6604
    :cond_26a
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getRotationAnimation()Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v0

    :goto_26e
    move-object v4, v0

    .line 6605
    .local v4, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v4, :cond_360

    invoke-virtual {v4}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v0

    if-eqz v0, :cond_360

    .line 6606
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v0, :cond_289

    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const v5, 0x616d601a

    const/4 v7, 0x0

    move-object v12, v7

    check-cast v12, [Ljava/lang/Object;

    const/4 v13, 0x0

    invoke-static {v0, v5, v13, v7, v12}, Lcom/android/server/protolog/ProtoLogImpl;->i(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_28a

    :cond_289
    const/4 v13, 0x0

    .line 6607
    :goto_28a
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v5

    .line 6609
    .local v5, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v0

    iget v7, v1, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    iget v12, v1, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    invoke-virtual {v0, v7, v12, v13}, Lcom/android/server/wm/DisplayRotation;->validateRotationAnimation(IIZ)Z

    move-result v0

    if-nez v0, :cond_2a0

    .line 6611
    iput v13, v1, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    iput v13, v1, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 6613
    :cond_2a0
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    const-wide/16 v22, 0x2710

    .line 6614
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    move-result v24

    iget v7, v5, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v12, v5, Landroid/view/DisplayInfo;->logicalHeight:I

    iget v13, v1, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    iget v14, v1, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 6613
    move-object/from16 v20, v4

    move-object/from16 v21, v0

    move/from16 v25, v7

    move/from16 v26, v12

    move/from16 v27, v13

    move/from16 v28, v14

    invoke-virtual/range {v20 .. v28}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceControl$Transaction;JFIIII)Z

    move-result v0

    if-eqz v0, :cond_357

    .line 6616
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mTransaction:Landroid/view/SurfaceControl$Transaction;

    invoke-virtual {v0}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 6618
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_INFORM_SCREEN_ROTATION_ANIMATION_STARTED_FOR_CAPTURED_BLUR:Z

    if-eqz v0, :cond_2ee

    .line 6620
    :try_start_2cb
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    if-eqz v0, :cond_2e3

    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v0}, Landroid/app/IActivityManager;->getProcessesReady()Z

    move-result v0

    if-eqz v0, :cond_2e3

    .line 6621
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    .line 6622
    invoke-virtual {v4}, Lcom/android/server/wm/ScreenRotationAnimation;->getDuration()J

    move-result-wide v12

    const-wide/16 v14, 0x1e

    add-long/2addr v12, v14

    .line 6621
    invoke-virtual {v0, v12, v13}, Lcom/android/server/wm/WindowManagerServiceExt;->broadcastScreenRotationAnimationStarted(J)V
    :try_end_2e3
    .catch Landroid/os/RemoteException; {:try_start_2cb .. :try_end_2e3} :catch_2e4

    .line 6628
    :cond_2e3
    goto :goto_2ee

    .line 6626
    :catch_2e4
    move-exception v0

    .line 6627
    .local v0, "e":Landroid/os/RemoteException;
    invoke-virtual {v0}, Landroid/os/RemoteException;->toString()Ljava/lang/String;

    move-result-object v7

    const-string v12, "getProcessesReady() "

    invoke-static {v12, v7}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6630
    .end local v0    # "e":Landroid/os/RemoteException;
    :cond_2ee
    :goto_2ee
    iget-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v0, :cond_35f

    .line 6631
    invoke-static {}, Lcom/android/server/wm/CoreLiveLog;->isPossible()Z

    move-result v0

    if-eqz v0, :cond_35f

    .line 6632
    invoke-static {}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->getInstance()Lcom/android/server/wm/CoreLiveLog$StatisticPool;

    move-result-object v0

    .line 6634
    iget-object v7, v1, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 6635
    invoke-virtual {v7}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    .line 6634
    invoke-static {v7}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->isSystemUIWindowName(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_30a

    .line 6635
    move v7, v6

    goto :goto_30b

    :cond_30a
    const/4 v7, 0x0

    .line 6632
    :goto_30b
    const-string v12, "STAT_ROTATION"

    invoke-virtual {v0, v12, v7}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->addCountableData(Ljava/lang/String;I)V

    .line 6636
    invoke-static {}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->getInstance()Lcom/android/server/wm/CoreLiveLog$StatisticPool;

    move-result-object v0

    iget v7, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v13, v7

    invoke-virtual {v0, v12, v13, v14}, Lcom/android/server/wm/CoreLiveLog$StatisticPool;->addArithmeticData(Ljava/lang/String;J)V

    .line 6638
    iget v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v13, v0

    const-wide/16 v16, 0xfa0

    cmp-long v0, v13, v16

    if-lez v0, :cond_35f

    .line 6639
    new-instance v0, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;

    invoke-direct {v0}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;-><init>()V

    .line 6640
    const-string v7, "TRANSITION_SLOW"

    invoke-virtual {v0, v7}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;->addStaticMessage(Ljava/lang/String;)Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;

    move-result-object v0

    .line 6642
    .local v0, "builder":Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v13, v1, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 6643
    invoke-virtual {v13}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " / "

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v13, v1, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 6642
    invoke-virtual {v0, v7}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;->addStaticMessage(Ljava/lang/String;)Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;

    .line 6645
    iget-object v7, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v7}, Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;->build(Landroid/content/Context;)Lcom/android/server/wm/CoreLiveLog;

    move-result-object v7

    invoke-virtual {v7, v12}, Lcom/android/server/wm/CoreLiveLog;->sendLog(Ljava/lang/String;)V

    .line 6646
    .end local v0    # "builder":Lcom/android/server/wm/CoreLiveLog$SnapshotBuilder;
    goto :goto_35f

    .line 6650
    :cond_357
    invoke-virtual {v4}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 6651
    const/4 v7, 0x0

    invoke-virtual {v11, v7}, Lcom/android/server/wm/DisplayContent;->setRotationAnimation(Lcom/android/server/wm/ScreenRotationAnimation;)V

    .line 6652
    const/4 v2, 0x1

    .line 6654
    .end local v5    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_35f
    :goto_35f
    goto :goto_36a

    .line 6655
    :cond_360
    if-eqz v4, :cond_369

    .line 6656
    invoke-virtual {v4}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 6657
    const/4 v5, 0x0

    invoke-virtual {v11, v5}, Lcom/android/server/wm/DisplayContent;->setRotationAnimation(Lcom/android/server/wm/ScreenRotationAnimation;)V

    .line 6659
    :cond_369
    const/4 v2, 0x1

    .line 6668
    :goto_36a
    if-eqz v11, :cond_373

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->updateOrientation()Z

    move-result v0

    if-eqz v0, :cond_373

    goto :goto_374

    :cond_373
    const/4 v6, 0x0

    :goto_374
    move v0, v6

    .line 6675
    .local v0, "configChanged":Z
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0xf

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6676
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v12, 0x7d0

    invoke-virtual {v5, v6, v12, v13}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 6679
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v5}, Lcom/android/server/wm/RootWindowContainer;->hasFreezedDisplayLocked()Z

    move-result v5

    if-eqz v5, :cond_38c

    goto :goto_391

    .line 6683
    :cond_38c
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v5}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 6686
    :goto_391
    if-eqz v2, :cond_3ab

    if-eqz v11, :cond_3ab

    .line 6687
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    if-eqz v5, :cond_3a6

    sget-object v5, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const v6, -0x2eb1d36a

    const/4 v7, 0x0

    move-object v12, v7

    check-cast v12, [Ljava/lang/Object;

    const/4 v13, 0x0

    invoke-static {v5, v6, v13, v7, v12}, Lcom/android/server/protolog/ProtoLogImpl;->d(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6688
    :cond_3a6
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->updateRotationUnchecked()Z

    move-result v5

    or-int/2addr v0, v5

    .line 6691
    :cond_3ab
    if-eqz v0, :cond_3b0

    .line 6692
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->sendNewConfiguration()V

    .line 6696
    :cond_3b0
    iget v5, v1, Lcom/android/server/wm/WindowManagerService;->mLatencyTrackingDisplayId:I

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v6

    if-eq v5, v6, :cond_3b9

    goto :goto_3bf

    .line 6700
    :cond_3b9
    iget-object v5, v1, Lcom/android/server/wm/WindowManagerService;->mLatencyTracker:Lcom/android/internal/util/LatencyTracker;

    const/4 v6, 0x6

    invoke-virtual {v5, v6}, Lcom/android/internal/util/LatencyTracker;->onActionEnd(I)V

    .line 6702
    :goto_3bf
    return-void

    .line 6552
    .end local v0    # "configChanged":Z
    .end local v2    # "updateRotation":Z
    .end local v3    # "numOpeningApps":I
    .end local v4    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v22    # "numOpeningApps":I
    :cond_3c0
    return-void
.end method

.method public stopFreezingScreen()V
    .registers 5

    .line 3407
    const-string v0, "android.permission.FREEZE_SCREEN"

    const-string/jumbo v1, "stopFreezingScreen()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_38

    .line 3412
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3413
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-eqz v1, :cond_2d

    .line 3414
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 3415
    const-string v1, "client"

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 3416
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_20
    .catchall {:try_start_e .. :try_end_20} :catchall_32

    .line 3418
    .local v1, "origId":J
    :try_start_20
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_27

    .line 3420
    :try_start_23
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3421
    goto :goto_2d

    .line 3420
    :catchall_27
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3421
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3

    .line 3423
    .end local v1    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :cond_2d
    :goto_2d
    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_23 .. :try_end_2e} :catchall_32

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3424
    return-void

    .line 3423
    :catchall_32
    move-exception v1

    :try_start_33
    monitor-exit v0
    :try_end_34
    .catchall {:try_start_33 .. :try_end_34} :catchall_32

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1

    .line 3409
    :cond_38
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FREEZE_SCREEN permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public stopViewServer()Z
    .registers 4

    .line 4782
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_8

    .line 4783
    return v1

    .line 4786
    :cond_8
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v2, "stopViewServer"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 4787
    return v1

    .line 4790
    :cond_14
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v0, :cond_1d

    .line 4791
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    move-result v0

    return v0

    .line 4793
    :cond_1d
    return v1
.end method

.method public stopWindowTrace()V
    .registers 3

    .line 6146
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowTracing:Lcom/android/server/wm/WindowTracing;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowTracing;->stopTrace(Ljava/io/PrintWriter;)V

    .line 6147
    return-void
.end method

.method public switchKeyboardLayout(II)V
    .registers 4
    .param p1, "deviceId"    # I
    .param p2, "direction"    # I

    .line 3784
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/input/InputManagerService;->switchKeyboardLayout(II)V

    .line 3785
    return-void
.end method

.method public syncInputTransactions()V
    .registers 7

    .line 9282
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9284
    .local v0, "token":J
    :try_start_4
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->waitForAnimationsToComplete()V

    .line 9288
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    invoke-interface {v2}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/SurfaceControl$Transaction;

    .line 9289
    .local v2, "t":Landroid/view/SurfaceControl$Transaction;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3
    :try_end_12
    .catchall {:try_start_4 .. :try_end_12} :catchall_3a

    :try_start_12
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9290
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacementIfScheduled()V

    .line 9291
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v5, Lcom/android/server/wm/-$$Lambda$WindowManagerService$YD5JOFRDnU23w8h_C3VxDKP_a3I;

    invoke-direct {v5, v2}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$YD5JOFRDnU23w8h_C3VxDKP_a3I;-><init>(Landroid/view/SurfaceControl$Transaction;)V

    invoke-virtual {v4, v5}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplays(Ljava/util/function/Consumer;)V

    .line 9293
    monitor-exit v3
    :try_end_25
    .catchall {:try_start_12 .. :try_end_25} :catchall_34

    :try_start_25
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9295
    invoke-virtual {v2}, Landroid/view/SurfaceControl$Transaction;->syncInputWindows()Landroid/view/SurfaceControl$Transaction;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/SurfaceControl$Transaction;->apply()V
    :try_end_2f
    .catchall {:try_start_25 .. :try_end_2f} :catchall_3a

    .line 9297
    .end local v2    # "t":Landroid/view/SurfaceControl$Transaction;
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9298
    nop

    .line 9299
    return-void

    .line 9293
    .restart local v2    # "t":Landroid/view/SurfaceControl$Transaction;
    :catchall_34
    move-exception v4

    :try_start_35
    monitor-exit v3
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_34

    :try_start_36
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "token":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v4
    :try_end_3a
    .catchall {:try_start_36 .. :try_end_3a} :catchall_3a

    .line 9297
    .end local v2    # "t":Landroid/view/SurfaceControl$Transaction;
    .restart local v0    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catchall_3a
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9298
    throw v2
.end method

.method public systemReady()V
    .registers 5

    .line 5279
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemReady:Z

    .line 5280
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0}, Lcom/android/server/policy/WindowManagerPolicy;->systemReady()V

    .line 5281
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    sget-object v1, Lcom/android/server/wm/-$$Lambda$cJE-iQ28Rv-ThCcuht9wXeFzPgo;->INSTANCE:Lcom/android/server/wm/-$$Lambda$cJE-iQ28Rv-ThCcuht9wXeFzPgo;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllDisplayPolicies(Ljava/util/function/Consumer;)V

    .line 5282
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v0}, Lcom/android/server/wm/TaskSnapshotController;->systemReady()V

    .line 5283
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->queryWideColorGamutSupport()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasWideColorGamutSupport:Z

    .line 5284
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->queryHdrSupport()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHasHdrSupport:Z

    .line 5285
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    invoke-static {v1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v2, Lcom/android/server/wm/-$$Lambda$saxKzkaCgueXiijz1VFL4g-SiV0;

    invoke-direct {v2, v1}, Lcom/android/server/wm/-$$Lambda$saxKzkaCgueXiijz1VFL4g-SiV0;-><init>(Lcom/android/server/wm/WindowManagerService$SettingsObserver;)V

    invoke-virtual {v0, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 5286
    nop

    .line 5287
    const-string/jumbo v0, "vrmanager"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 5286
    invoke-static {v0}, Landroid/service/vr/IVrManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/service/vr/IVrManager;

    move-result-object v0

    .line 5288
    .local v0, "vrManager":Landroid/service/vr/IVrManager;
    if-eqz v0, :cond_63

    .line 5290
    :try_start_3f
    invoke-interface {v0}, Landroid/service/vr/IVrManager;->getVrModeState()Z

    move-result v1

    .line 5291
    .local v1, "vrModeEnabled":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v2
    :try_end_46
    .catch Landroid/os/RemoteException; {:try_start_3f .. :try_end_46} :catch_62

    :try_start_46
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 5292
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

    invoke-interface {v0, v3}, Landroid/service/vr/IVrManager;->registerListener(Landroid/service/vr/IVrStateCallbacks;)V

    .line 5293
    if-eqz v1, :cond_57

    .line 5294
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mVrModeEnabled:Z

    .line 5295
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mVrStateCallbacks:Landroid/service/vr/IVrStateCallbacks;

    invoke-interface {v3, v1}, Landroid/service/vr/IVrStateCallbacks;->onVrStateChanged(Z)V

    .line 5297
    :cond_57
    monitor-exit v2
    :try_end_58
    .catchall {:try_start_46 .. :try_end_58} :catchall_5c

    :try_start_58
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_5b
    .catch Landroid/os/RemoteException; {:try_start_58 .. :try_end_5b} :catch_62

    .line 5300
    .end local v1    # "vrModeEnabled":Z
    goto :goto_63

    .line 5297
    .restart local v1    # "vrModeEnabled":Z
    :catchall_5c
    move-exception v3

    :try_start_5d
    monitor-exit v2
    :try_end_5e
    .catchall {:try_start_5d .. :try_end_5e} :catchall_5c

    :try_start_5e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v0    # "vrManager":Landroid/service/vr/IVrManager;
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    throw v3
    :try_end_62
    .catch Landroid/os/RemoteException; {:try_start_5e .. :try_end_62} :catch_62

    .line 5298
    .end local v1    # "vrModeEnabled":Z
    .restart local v0    # "vrManager":Landroid/service/vr/IVrManager;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    :catch_62
    move-exception v1

    .line 5303
    :cond_63
    :goto_63
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowManagerServiceExt;->systemReady()V

    .line 5305
    return-void
.end method

.method public takeScreenshotToTargetWindow(IIZLandroid/graphics/Rect;IIZIZ)Landroid/graphics/Bitmap;
    .registers 22
    .param p1, "displayId"    # I
    .param p2, "targetWindowType"    # I
    .param p3, "containsTargetSystemWindow"    # Z
    .param p4, "sourceCrop"    # Landroid/graphics/Rect;
    .param p5, "width"    # I
    .param p6, "height"    # I
    .param p7, "useIdentityTransform"    # Z
    .param p8, "rotation"    # I
    .param p9, "ignorePolicy"    # Z

    .line 9789
    move-object v0, p0

    const-string v1, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v2, "takeScreenshotToTargetWindow()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_3b

    .line 9792
    if-eqz p9, :cond_23

    .line 9793
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerServiceExt;->isIgnorePolicyNotAllowedUid(I)Z

    move-result v1

    if-nez v1, :cond_1b

    goto :goto_23

    .line 9794
    :cond_1b
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Only certain apps can request to ignorePolicy"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9797
    :cond_23
    :goto_23
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerServiceExt;->mScreenshotController:Lcom/android/server/wm/ScreenshotController;

    move v3, p1

    move v4, p2

    move v5, p3

    move-object/from16 v6, p4

    move/from16 v7, p5

    move/from16 v8, p6

    move/from16 v9, p7

    move/from16 v10, p8

    move/from16 v11, p9

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/wm/ScreenshotController;->takeScreenshotToTargetWindow(IIZLandroid/graphics/Rect;IIZIZ)Landroid/graphics/Bitmap;

    move-result-object v1

    return-object v1

    .line 9790
    :cond_3b
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public thawDisplayRotation(I)V
    .registers 11
    .param p1, "displayId"    # I

    .line 4304
    const-string v0, "android.permission.SET_ORIENTATION"

    const-string/jumbo v1, "thawRotation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6f

    .line 4309
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_DEBUG_ORIENTATION_enabled:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_27

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayRotation()I

    move-result v0

    int-to-long v2, v0

    .local v2, "protoLogParam0":J
    sget-object v0, Lcom/android/server/wm/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/server/wm/ProtoLogGroup;

    const v4, -0x403162bf

    const/4 v5, 0x0

    const/4 v6, 0x1

    new-array v7, v6, [Ljava/lang/Object;

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v8

    aput-object v8, v7, v1

    invoke-static {v0, v4, v6, v5, v7}, Lcom/android/server/protolog/ProtoLogImpl;->v(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 4311
    .end local v2    # "protoLogParam0":J
    :cond_27
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 4313
    .local v2, "origId":J
    :try_start_2b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0
    :try_end_2e
    .catchall {:try_start_2b .. :try_end_2e} :catchall_6a

    :try_start_2e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4314
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 4315
    .local v4, "display":Lcom/android/server/wm/DisplayContent;
    if-nez v4, :cond_48

    .line 4316
    const-string v1, "WindowManager"

    const-string v5, "Trying to thaw rotation for a missing display."

    invoke-static {v1, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4317
    monitor-exit v0
    :try_end_41
    .catchall {:try_start_2e .. :try_end_41} :catchall_64

    .line 4322
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4317
    return-void

    .line 4319
    :cond_48
    :try_start_48
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayRotation()Lcom/android/server/wm/DisplayRotation;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayRotation;->thawRotation()V

    .line 4320
    .end local v4    # "display":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_50
    .catchall {:try_start_48 .. :try_end_50} :catchall_64

    :try_start_50
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V
    :try_end_53
    .catchall {:try_start_50 .. :try_end_53} :catchall_6a

    .line 4322
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4323
    nop

    .line 4327
    const/16 v0, 0x309

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-static {v0, p1, v4}, Lcom/android/server/wm/EventLogTags;->writeWmUserRotationChanged(III)V

    .line 4331
    invoke-direct {p0, v1, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 4332
    return-void

    .line 4320
    :catchall_64
    move-exception v1

    :try_start_65
    monitor-exit v0
    :try_end_66
    .catchall {:try_start_65 .. :try_end_66} :catchall_64

    :try_start_66
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .end local v2    # "origId":J
    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "displayId":I
    throw v1
    :try_end_6a
    .catchall {:try_start_66 .. :try_end_6a} :catchall_6a

    .line 4322
    .restart local v2    # "origId":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "displayId":I
    :catchall_6a
    move-exception v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4323
    throw v0

    .line 4306
    .end local v2    # "origId":J
    :cond_6f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public thawRotation()V
    .registers 2

    .line 4295
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->thawDisplayRotation(I)V

    .line 4296
    return-void
.end method

.method public triggerAnimationFailsafe()V
    .registers 3

    .line 3321
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3322
    return-void
.end method

.method unregisterAppFreezeListener(Lcom/android/server/wm/WindowManagerService$AppFreezeListener;)V
    .registers 3
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$AppFreezeListener;

    .line 9114
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9115
    return-void
.end method

.method public unregisterDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/IDisplayFoldListener;

    .line 4649
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    invoke-interface {v0, p1}, Lcom/android/server/policy/WindowManagerPolicy;->unregisterDisplayFoldListener(Landroid/view/IDisplayFoldListener;)V

    .line 4650
    return-void
.end method

.method public unregisterDisplayWindowListener(Landroid/view/IDisplayWindowListener;)V
    .registers 4
    .param p1, "listener"    # Landroid/view/IDisplayWindowListener;

    .line 4705
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_10

    .line 4709
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayNotificationController:Lcom/android/server/wm/DisplayWindowListenerController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayWindowListenerController;->unregisterListener(Landroid/view/IDisplayWindowListener;)V

    .line 4710
    return-void

    .line 4707
    :cond_10
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Must hold permission android.permission.MANAGE_ACTIVITY_STACKS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public unregisterOneHandOpWatcher(Lcom/samsung/android/onehandop/IOneHandOpWatcher;)V
    .registers 3
    .param p1, "watcher"    # Lcom/samsung/android/onehandop/IOneHandOpWatcher;

    .line 10146
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowManagerServiceExt;->unregisterOneHandOpWatcher(Lcom/samsung/android/onehandop/IOneHandOpWatcher;)V

    .line 10148
    return-void
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;I)V
    .registers 5
    .param p1, "listener"    # Landroid/view/WindowManagerPolicyConstants$PointerEventListener;
    .param p2, "displayId"    # I

    .line 3733
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 3734
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3735
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_11

    .line 3736
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicyConstants$PointerEventListener;)V

    .line 3738
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_16

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 3739
    return-void

    .line 3738
    :catchall_16
    move-exception v1

    :try_start_17
    monitor-exit v0
    :try_end_18
    .catchall {:try_start_17 .. :try_end_18} :catchall_16

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public unregisterSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;I)V
    .registers 8
    .param p1, "listener"    # Landroid/view/ISystemGestureExclusionListener;
    .param p2, "displayId"    # I

    .line 4622
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4623
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4624
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_16

    .line 4628
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContent;->unregisterSystemGestureExclusionListener(Landroid/view/ISystemGestureExclusionListener;)V

    .line 4629
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_2d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4630
    return-void

    .line 4625
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_16
    :try_start_16
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to register visibility event for invalid display: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .end local p2    # "displayId":I
    throw v2

    .line 4629
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "listener":Landroid/view/ISystemGestureExclusionListener;
    .restart local p2    # "displayId":I
    :catchall_2d
    move-exception v1

    monitor-exit v0
    :try_end_2f
    .catchall {:try_start_16 .. :try_end_2f} :catchall_2d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public unregisterTentModeListener(Landroid/view/ITentModeListener;)V
    .registers 2
    .param p1, "listener"    # Landroid/view/ITentModeListener;

    .line 9907
    return-void
.end method

.method public unregisterWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)V
    .registers 5
    .param p1, "listener"    # Landroid/view/IWallpaperVisibilityListener;
    .param p2, "displayId"    # I

    .line 4600
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4601
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperVisibilityListeners:Lcom/android/server/wm/WallpaperVisibilityListeners;

    .line 4602
    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/WallpaperVisibilityListeners;->unregisterWallpaperVisibilityListener(Landroid/view/IWallpaperVisibilityListener;I)V

    .line 4603
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4604
    return-void

    .line 4603
    :catchall_10
    move-exception v1

    :try_start_11
    monitor-exit v0
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateDisplayContentLocation(Landroid/view/IWindow;III)V
    .registers 15
    .param p1, "client"    # Landroid/view/IWindow;
    .param p2, "x"    # I
    .param p3, "y"    # I
    .param p4, "displayId"    # I

    .line 7963
    invoke-direct {p0, p4}, Lcom/android/server/wm/WindowManagerService;->checkCallerOwnsDisplay(I)V

    .line 7965
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7966
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_d
    .catchall {:try_start_6 .. :try_end_d} :catchall_4e

    .line 7968
    .local v1, "token":J
    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_f
    invoke-virtual {p0, v3, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 7969
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_34

    .line 7970
    sget-boolean v5, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v5, :cond_2c

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x4f03ccce

    const-string v8, "Bad requesting window %s"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    aput-object v5, v9, v4

    invoke-static {v6, v7, v4, v8, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_2c
    .catchall {:try_start_f .. :try_end_2c} :catchall_48

    .line 7978
    .end local v5    # "protoLogParam0":Ljava/lang/String;
    :cond_2c
    :try_start_2c
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit v0
    :try_end_30
    .catchall {:try_start_2c .. :try_end_30} :catchall_4e

    .line 7971
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7973
    :cond_34
    :try_start_34
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v4, p4}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 7974
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_3f

    .line 7975
    invoke-virtual {v4, v3, p2, p3}, Lcom/android/server/wm/DisplayContent;->updateLocation(Lcom/android/server/wm/WindowState;II)V
    :try_end_3f
    .catchall {:try_start_34 .. :try_end_3f} :catchall_48

    .line 7978
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    .end local v4    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_3f
    :try_start_3f
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7979
    nop

    .line 7980
    .end local v1    # "token":J
    monitor-exit v0
    :try_end_44
    .catchall {:try_start_3f .. :try_end_44} :catchall_4e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7981
    return-void

    .line 7978
    .restart local v1    # "token":J
    :catchall_48
    move-exception v3

    :try_start_49
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7979
    nop

    .end local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .end local p1    # "client":Landroid/view/IWindow;
    .end local p2    # "x":I
    .end local p3    # "y":I
    .end local p4    # "displayId":I
    throw v3

    .line 7980
    .end local v1    # "token":J
    .restart local p0    # "this":Lcom/android/server/wm/WindowManagerService;
    .restart local p1    # "client":Landroid/view/IWindow;
    .restart local p2    # "x":I
    .restart local p3    # "y":I
    .restart local p4    # "displayId":I
    :catchall_4e
    move-exception v1

    monitor-exit v0
    :try_end_50
    .catchall {:try_start_49 .. :try_end_50} :catchall_4e

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateFocusedWindowLocked(IZ)Z
    .registers 6
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    .line 6310
    const-wide/16 v0, 0x20

    const-string/jumbo v2, "wmUpdateFocus"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 6311
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/RootWindowContainer;->updateFocusedWindowLocked(IZ)Z

    move-result v2

    .line 6312
    .local v2, "changed":Z
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6313
    return v2
.end method

.method updateInputChannel(Landroid/os/IBinder;ILandroid/view/SurfaceControl;ILandroid/graphics/Region;)V
    .registers 21
    .param p1, "channelToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "surface"    # Landroid/view/SurfaceControl;
    .param p4, "flags"    # I
    .param p5, "region"    # Landroid/graphics/Region;

    .line 9530
    move-object v12, p0

    move-object/from16 v13, p5

    iget-object v1, v12, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v1

    :try_start_6
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9531
    iget-object v0, v12, Lcom/android/server/wm/WindowManagerService;->mEmbeddedWindowController:Lcom/android/server/wm/EmbeddedWindowController;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_4d

    move-object/from16 v14, p1

    :try_start_d
    invoke-virtual {v0, v14}, Lcom/android/server/wm/EmbeddedWindowController;->get(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;

    move-result-object v0

    .line 9532
    .local v0, "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    if-nez v0, :cond_1f

    .line 9533
    const-string v2, "WindowManager"

    const-string v3, "Couldn\'t find window for provided channelToken."

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9534
    monitor-exit v1
    :try_end_1b
    .catchall {:try_start_d .. :try_end_1b} :catchall_55

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 9536
    :cond_1f
    :try_start_1f
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getName()Ljava/lang/String;

    move-result-object v7

    .line 9537
    .local v7, "name":Ljava/lang/String;
    invoke-virtual {v0}, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->getApplicationHandle()Landroid/view/InputApplicationHandle;

    move-result-object v8

    .line 9539
    .local v8, "applicationHandle":Landroid/view/InputApplicationHandle;
    iget v2, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mWindowType:I

    const/16 v3, 0x7f2

    if-ne v2, v3, :cond_34

    if-eqz v13, :cond_34

    .line 9541
    iget-object v2, v12, Lcom/android/server/wm/WindowManagerService;->mMtWindowController:Lcom/android/server/wm/MultiTaskingWindowController;

    invoke-virtual {v2, v13}, Lcom/android/server/wm/MultiTaskingWindowController;->setDividerTouchableRegion(Landroid/graphics/Region;)V

    .line 9544
    :cond_34
    monitor-exit v1
    :try_end_35
    .catchall {:try_start_1f .. :try_end_35} :catchall_55

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9546
    iget v3, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mOwnerUid:I

    iget v4, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mOwnerPid:I

    iget v10, v0, Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;->mWindowType:I

    move-object v1, p0

    move-object/from16 v2, p1

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v9, p4

    move-object/from16 v11, p5

    invoke-direct/range {v1 .. v11}, Lcom/android/server/wm/WindowManagerService;->updateInputChannel(Landroid/os/IBinder;IIILandroid/view/SurfaceControl;Ljava/lang/String;Landroid/view/InputApplicationHandle;IILandroid/graphics/Region;)V

    .line 9548
    return-void

    .line 9544
    .end local v0    # "win":Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow;
    .end local v7    # "name":Ljava/lang/String;
    .end local v8    # "applicationHandle":Landroid/view/InputApplicationHandle;
    :catchall_4d
    move-exception v0

    move-object/from16 v14, p1

    :goto_50
    :try_start_50
    monitor-exit v1
    :try_end_51
    .catchall {:try_start_50 .. :try_end_51} :catchall_55

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_55
    move-exception v0

    goto :goto_50
.end method

.method updateNonSystemOverlayWindowsVisibilityIfNeeded(Lcom/android/server/wm/WindowState;Z)V
    .registers 8
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "surfaceShown"    # Z

    .line 9177
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->hideNonSystemOverlayWindowsWhenVisible()Z

    move-result v0

    if-nez v0, :cond_f

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    .line 9178
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 9179
    return-void

    .line 9181
    :cond_f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    .line 9182
    .local v0, "systemAlertWindowsHidden":Z
    if-eqz p2, :cond_2d

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->hideNonSystemOverlayWindowsWhenVisible()Z

    move-result v1

    if-eqz v1, :cond_2d

    .line 9183
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_32

    .line 9184
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_32

    .line 9187
    :cond_2d
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9190
    :cond_32
    :goto_32
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHidingNonSystemOverlayWindows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    xor-int/lit8 v1, v1, 0x1

    .line 9192
    .local v1, "hideSystemAlertWindows":Z
    if-ne v0, v1, :cond_3d

    .line 9193
    return-void

    .line 9196
    :cond_3d
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v3, Lcom/android/server/wm/-$$Lambda$WindowManagerService$HPtUufAFqhnjPLEeCLcOfMP_JFU;

    invoke-direct {v3, v1}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$HPtUufAFqhnjPLEeCLcOfMP_JFU;-><init>(Z)V

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 9199
    return-void
.end method

.method updatePointerIcon(Landroid/view/IWindow;)V
    .registers 14
    .param p1, "client"    # Landroid/view/IWindow;

    .line 7860
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    monitor-enter v0

    .line 7861
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    # getter for: Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->mLatestEventWasMouse:Z
    invoke-static {v1}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->access$1900(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)Z

    move-result v1

    if-nez v1, :cond_d

    .line 7862
    monitor-exit v0

    return-void

    .line 7864
    :cond_d
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    # getter for: Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->mLatestMouseX:F
    invoke-static {v1}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->access$2000(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    move-result v1

    .line 7865
    .local v1, "mouseX":F
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    # getter for: Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->mLatestMouseY:F
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->access$2100(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    move-result v2

    .line 7866
    .local v2, "mouseY":F
    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_93

    .line 7868
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_1d
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7869
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDragDropController:Lcom/android/server/wm/DragDropController;

    invoke-virtual {v0}, Lcom/android/server/wm/DragDropController;->dragDropActiveLocked()Z

    move-result v0

    if-eqz v0, :cond_2d

    .line 7871
    monitor-exit v3
    :try_end_29
    .catchall {:try_start_1d .. :try_end_29} :catchall_8d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7873
    :cond_2d
    const/4 v0, 0x0

    const/4 v4, 0x0

    :try_start_2f
    invoke-virtual {p0, v0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v5

    .line 7874
    .local v5, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v5, :cond_51

    .line 7875
    sget-boolean v0, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v0, :cond_4c

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .local v0, "protoLogParam0":Ljava/lang/String;
    sget-object v6, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v7, 0x4f03ccce

    const-string v8, "Bad requesting window %s"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Object;

    aput-object v0, v9, v4

    invoke-static {v6, v7, v4, v8, v9}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7876
    .end local v0    # "protoLogParam0":Ljava/lang/String;
    :cond_4c
    monitor-exit v3
    :try_end_4d
    .catchall {:try_start_2f .. :try_end_4d} :catchall_8d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7878
    :cond_51
    :try_start_51
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v6

    .line 7879
    .local v6, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v6, :cond_5c

    .line 7880
    monitor-exit v3
    :try_end_58
    .catchall {:try_start_51 .. :try_end_58} :catchall_8d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7882
    :cond_5c
    nop

    .line 7883
    :try_start_5d
    invoke-virtual {v6, v1, v2}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    move-result-object v7

    .line 7890
    .local v7, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eq v7, v5, :cond_68

    .line 7891
    monitor-exit v3
    :try_end_64
    .catchall {:try_start_5d .. :try_end_64} :catchall_8d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7894
    :cond_68
    :try_start_68
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 7895
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    move-result v9

    .line 7896
    invoke-virtual {v7, v2}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    move-result v10

    .line 7894
    invoke-interface {v8, v9, v10}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_75
    .catch Landroid/os/RemoteException; {:try_start_68 .. :try_end_75} :catch_76
    .catchall {:try_start_68 .. :try_end_75} :catchall_8d

    .line 7899
    goto :goto_88

    .line 7897
    :catch_76
    move-exception v8

    .line 7898
    .local v8, "e":Landroid/os/RemoteException;
    :try_start_77
    sget-boolean v9, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v9, :cond_88

    sget-object v9, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v10, -0x1774697d

    const-string/jumbo v11, "unable to update pointer icon"

    check-cast v0, [Ljava/lang/Object;

    invoke-static {v9, v10, v4, v11, v0}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7900
    .end local v5    # "callingWin":Lcom/android/server/wm/WindowState;
    .end local v6    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v7    # "windowUnderPointer":Lcom/android/server/wm/WindowState;
    .end local v8    # "e":Landroid/os/RemoteException;
    :cond_88
    :goto_88
    monitor-exit v3
    :try_end_89
    .catchall {:try_start_77 .. :try_end_89} :catchall_8d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 7901
    return-void

    .line 7900
    :catchall_8d
    move-exception v0

    :try_start_8e
    monitor-exit v3
    :try_end_8f
    .catchall {:try_start_8e .. :try_end_8f} :catchall_8d

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 7866
    .end local v1    # "mouseX":F
    .end local v2    # "mouseY":F
    :catchall_93
    move-exception v1

    :try_start_94
    monitor-exit v0
    :try_end_95
    .catchall {:try_start_94 .. :try_end_95} :catchall_93

    throw v1
.end method

.method public updateRotation(ZZ)V
    .registers 3
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .line 4360
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 4361
    return-void
.end method

.method public updateScreenshotPolicy(I)V
    .registers 4
    .param p1, "userId"    # I

    .line 9809
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9810
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    iget-object v1, v1, Lcom/android/server/wm/WindowManagerServiceExt;->mScreenshotController:Lcom/android/server/wm/ScreenshotController;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/ScreenshotController;->updateScreenshotRestrictionPolicyLocked(I)V

    .line 9811
    monitor-exit v0
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_12

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9813
    return-void

    .line 9811
    :catchall_12
    move-exception v1

    :try_start_13
    monitor-exit v0
    :try_end_14
    .catchall {:try_start_13 .. :try_end_14} :catchall_12

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method updateTapExcludeRegion(Landroid/view/IWindow;Landroid/graphics/Region;)V
    .registers 11
    .param p1, "client"    # Landroid/view/IWindow;
    .param p2, "region"    # Landroid/graphics/Region;

    .line 7994
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 7995
    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {p0, v1, p1, v2}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 7996
    .local v1, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_2a

    .line 7997
    sget-boolean v3, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v3, :cond_25

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .local v3, "protoLogParam0":Ljava/lang/String;
    sget-object v4, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v5, 0x4f03ccce

    const-string v6, "Bad requesting window %s"

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    aput-object v3, v7, v2

    invoke-static {v4, v5, v2, v6, v7}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 7998
    .end local v3    # "protoLogParam0":Ljava/lang/String;
    :cond_25
    monitor-exit v0
    :try_end_26
    .catchall {:try_start_3 .. :try_end_26} :catchall_32

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8000
    :cond_2a
    :try_start_2a
    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowState;->updateTapExcludeRegion(Landroid/graphics/Region;)V

    .line 8001
    .end local v1    # "callingWin":Lcom/android/server/wm/WindowState;
    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_2a .. :try_end_2e} :catchall_32

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 8002
    return-void

    .line 8001
    :catchall_32
    move-exception v1

    :try_start_33
    monitor-exit v0
    :try_end_34
    .catchall {:try_start_33 .. :try_end_34} :catchall_32

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public updateTaskPositionInTaskBar(Ljava/util/Map;)V
    .registers 2
    .param p1, "taskPositions"    # Ljava/util/Map;

    .line 10199
    return-void
.end method

.method public useBLAST()Z
    .registers 2

    .line 5858
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mUseBLAST:Z

    return v0
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .registers 9
    .param p1, "client"    # Ljava/net/Socket;

    .line 4880
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    if-eqz v0, :cond_8

    .line 4881
    const/4 v0, 0x0

    return v0

    .line 4884
    :cond_8
    const/4 v0, 0x1

    .line 4886
    .local v0, "result":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 4888
    .local v1, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    .line 4892
    .local v2, "out":Ljava/io/BufferedWriter;
    :try_start_e
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v3

    .line 4893
    .local v3, "clientStream":Ljava/io/OutputStream;
    new-instance v4, Ljava/io/BufferedWriter;

    new-instance v5, Ljava/io/OutputStreamWriter;

    invoke-direct {v5, v3}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v6, 0x2000

    invoke-direct {v4, v5, v6}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V

    move-object v2, v4

    .line 4895
    if-eqz v1, :cond_3a

    .line 4896
    invoke-static {v1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4897
    const/16 v4, 0x20

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->write(I)V

    .line 4898
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v4}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 4900
    :cond_3a
    const/16 v4, 0xa

    invoke-virtual {v2, v4}, Ljava/io/BufferedWriter;->write(I)V

    .line 4901
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->flush()V
    :try_end_42
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_42} :catch_51
    .catchall {:try_start_e .. :try_end_42} :catchall_47

    .line 4905
    .end local v3    # "clientStream":Ljava/io/OutputStream;
    nop

    .line 4907
    :try_start_43
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->close()V
    :try_end_46
    .catch Ljava/io/IOException; {:try_start_43 .. :try_end_46} :catch_59

    goto :goto_5b

    .line 4905
    :catchall_47
    move-exception v3

    if-eqz v2, :cond_50

    .line 4907
    :try_start_4a
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->close()V
    :try_end_4d
    .catch Ljava/io/IOException; {:try_start_4a .. :try_end_4d} :catch_4e

    .line 4910
    goto :goto_50

    .line 4908
    :catch_4e
    move-exception v4

    .line 4909
    .local v4, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4912
    .end local v4    # "e":Ljava/io/IOException;
    :cond_50
    :goto_50
    throw v3

    .line 4902
    :catch_51
    move-exception v3

    .line 4903
    .local v3, "e":Ljava/lang/Exception;
    const/4 v0, 0x0

    .line 4905
    .end local v3    # "e":Ljava/lang/Exception;
    if-eqz v2, :cond_5b

    .line 4907
    :try_start_55
    invoke-virtual {v2}, Ljava/io/BufferedWriter;->close()V
    :try_end_58
    .catch Ljava/io/IOException; {:try_start_55 .. :try_end_58} :catch_59

    goto :goto_5b

    .line 4908
    :catch_59
    move-exception v3

    .line 4909
    .local v3, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4914
    .end local v3    # "e":Ljava/io/IOException;
    :cond_5b
    :goto_5b
    return v0
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .registers 10
    .param p1, "client"    # Ljava/net/Socket;

    .line 4825
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_8

    .line 4826
    return v1

    .line 4829
    :cond_8
    const/4 v0, 0x1

    .line 4831
    .local v0, "result":Z
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 4832
    .local v2, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_11
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4833
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    new-instance v5, Lcom/android/server/wm/-$$Lambda$WindowManagerService$rX4HxGQ0OV3ZmF_qp5BG_mP7Sfo;

    invoke-direct {v5, v2}, Lcom/android/server/wm/-$$Lambda$WindowManagerService$rX4HxGQ0OV3ZmF_qp5BG_mP7Sfo;-><init>(Ljava/util/ArrayList;)V

    invoke-virtual {v4, v5, v1}, Lcom/android/server/wm/RootWindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 4836
    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_11 .. :try_end_1f} :catchall_84

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4838
    const/4 v1, 0x0

    .line 4842
    .local v1, "out":Ljava/io/BufferedWriter;
    :try_start_23
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v3

    .line 4843
    .local v3, "clientStream":Ljava/io/OutputStream;
    new-instance v4, Ljava/io/BufferedWriter;

    new-instance v5, Ljava/io/OutputStreamWriter;

    invoke-direct {v5, v3}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v6, 0x2000

    invoke-direct {v4, v5, v6}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V

    move-object v1, v4

    .line 4845
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 4846
    .local v4, "count":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_39
    if-ge v5, v4, :cond_62

    .line 4847
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 4848
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v6}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v7

    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4849
    const/16 v7, 0x20

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->write(I)V

    .line 4850
    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 4851
    const/16 v7, 0xa

    invoke-virtual {v1, v7}, Ljava/io/BufferedWriter;->write(I)V

    .line 4846
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    add-int/lit8 v5, v5, 0x1

    goto :goto_39

    .line 4854
    .end local v5    # "i":I
    :cond_62
    const-string v5, "DONE.\n"

    invoke-virtual {v1, v5}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4855
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->flush()V
    :try_end_6a
    .catch Ljava/lang/Exception; {:try_start_23 .. :try_end_6a} :catch_79
    .catchall {:try_start_23 .. :try_end_6a} :catchall_6f

    .line 4859
    .end local v3    # "clientStream":Ljava/io/OutputStream;
    .end local v4    # "count":I
    nop

    .line 4861
    :try_start_6b
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->close()V
    :try_end_6e
    .catch Ljava/io/IOException; {:try_start_6b .. :try_end_6e} :catch_81

    goto :goto_83

    .line 4859
    :catchall_6f
    move-exception v3

    if-eqz v1, :cond_78

    .line 4861
    :try_start_72
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->close()V
    :try_end_75
    .catch Ljava/io/IOException; {:try_start_72 .. :try_end_75} :catch_76

    .line 4864
    goto :goto_78

    .line 4862
    :catch_76
    move-exception v4

    .line 4863
    .local v4, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4866
    .end local v4    # "e":Ljava/io/IOException;
    :cond_78
    :goto_78
    throw v3

    .line 4856
    :catch_79
    move-exception v3

    .line 4857
    .local v3, "e":Ljava/lang/Exception;
    const/4 v0, 0x0

    .line 4859
    .end local v3    # "e":Ljava/lang/Exception;
    if-eqz v1, :cond_83

    .line 4861
    :try_start_7d
    invoke-virtual {v1}, Ljava/io/BufferedWriter;->close()V
    :try_end_80
    .catch Ljava/io/IOException; {:try_start_7d .. :try_end_80} :catch_81

    goto :goto_83

    .line 4862
    :catch_81
    move-exception v3

    .line 4863
    .local v3, "e":Ljava/io/IOException;
    const/4 v0, 0x0

    .line 4868
    .end local v3    # "e":Ljava/io/IOException;
    :cond_83
    :goto_83
    return v0

    .line 4836
    .end local v1    # "out":Ljava/io/BufferedWriter;
    :catchall_84
    move-exception v1

    :try_start_85
    monitor-exit v3
    :try_end_86
    .catchall {:try_start_85 .. :try_end_86} :catchall_84

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 21
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    .line 4938
    move-object/from16 v1, p3

    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    const/4 v2, 0x0

    if-eqz v0, :cond_a

    .line 4939
    return v2

    .line 4942
    :cond_a
    const/4 v3, 0x1

    .line 4943
    .local v3, "success":Z
    const/4 v4, 0x0

    .line 4944
    .local v4, "data":Landroid/os/Parcel;
    const/4 v5, 0x0

    .line 4946
    .local v5, "reply":Landroid/os/Parcel;
    const/4 v6, 0x0

    .line 4951
    .local v6, "out":Ljava/io/BufferedWriter;
    const/16 v0, 0x20

    const/4 v7, 0x1

    :try_start_11
    invoke-virtual {v1, v0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    .line 4952
    .local v0, "index":I
    const/4 v8, -0x1

    if-ne v0, v8, :cond_1e

    .line 4953
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v8

    move v0, v8

    goto :goto_1f

    .line 4952
    :cond_1e
    move v8, v0

    .line 4955
    .end local v0    # "index":I
    .local v8, "index":I
    :goto_1f
    invoke-virtual {v1, v2, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    move-object v9, v0

    .line 4956
    .local v9, "code":Ljava/lang/String;
    const/16 v0, 0x10

    invoke-static {v9, v0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    move-result-wide v10

    long-to-int v10, v10

    .line 4959
    .local v10, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v0

    if-ge v8, v0, :cond_39

    .line 4960
    add-int/lit8 v0, v8, 0x1

    invoke-virtual {v1, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v0

    move-object v1, v0

    .end local p3    # "parameters":Ljava/lang/String;
    .local v0, "parameters":Ljava/lang/String;
    goto :goto_3c

    .line 4962
    .end local v0    # "parameters":Ljava/lang/String;
    .restart local p3    # "parameters":Ljava/lang/String;
    :cond_39
    const-string v0, ""
    :try_end_3b
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_3b} :catch_c6
    .catchall {:try_start_11 .. :try_end_3b} :catchall_bf

    .end local p3    # "parameters":Ljava/lang/String;
    .restart local v0    # "parameters":Ljava/lang/String;
    move-object v1, v0

    .line 4965
    .end local v0    # "parameters":Ljava/lang/String;
    .local v1, "parameters":Ljava/lang/String;
    :goto_3c
    move-object/from16 v11, p0

    :try_start_3e
    invoke-direct {v11, v10}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;

    move-result-object v0
    :try_end_42
    .catch Ljava/lang/Exception; {:try_start_3e .. :try_end_42} :catch_bb
    .catchall {:try_start_3e .. :try_end_42} :catchall_b6

    move-object v12, v0

    .line 4966
    .local v12, "window":Lcom/android/server/wm/WindowState;
    if-nez v12, :cond_58

    .line 4967
    nop

    .line 4996
    if-eqz v4, :cond_4b

    .line 4997
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4999
    :cond_4b
    if-eqz v5, :cond_50

    .line 5000
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 5002
    :cond_50
    if-eqz v6, :cond_57

    .line 5004
    :try_start_52
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_55
    .catch Ljava/io/IOException; {:try_start_52 .. :try_end_55} :catch_56

    .line 5007
    goto :goto_57

    .line 5005
    :catch_56
    move-exception v0

    .line 4967
    :cond_57
    :goto_57
    return v2

    .line 4970
    :cond_58
    :try_start_58
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    move-object v4, v0

    .line 4971
    const-string v0, "android.view.IWindow"

    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
    :try_end_62
    .catch Ljava/lang/Exception; {:try_start_58 .. :try_end_62} :catch_bb
    .catchall {:try_start_58 .. :try_end_62} :catchall_b6

    .line 4972
    move-object/from16 v13, p2

    :try_start_64
    invoke-virtual {v4, v13}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 4973
    invoke-virtual {v4, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 4974
    invoke-virtual {v4, v7}, Landroid/os/Parcel;->writeInt(I)V

    .line 4975
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    move-result-object v0

    invoke-virtual {v0, v4, v2}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    .line 4977
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    move-object v5, v0

    .line 4979
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4981
    .local v0, "binder":Landroid/os/IBinder;
    invoke-interface {v0, v7, v4, v5, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 4983
    invoke-virtual {v5}, Landroid/os/Parcel;->readException()V

    .line 4985
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    move-result v14

    if-nez v14, :cond_a2

    .line 4986
    new-instance v14, Ljava/io/BufferedWriter;

    new-instance v15, Ljava/io/OutputStreamWriter;

    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v7

    invoke-direct {v15, v7}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    invoke-direct {v14, v15}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V

    move-object v6, v14

    .line 4987
    const-string v7, "DONE\n"

    invoke-virtual {v6, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 4988
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->flush()V
    :try_end_a2
    .catch Ljava/lang/Exception; {:try_start_64 .. :try_end_a2} :catch_b4
    .catchall {:try_start_64 .. :try_end_a2} :catchall_104

    .line 4996
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v8    # "index":I
    .end local v9    # "code":Ljava/lang/String;
    .end local v10    # "hashCode":I
    .end local v12    # "window":Lcom/android/server/wm/WindowState;
    :cond_a2
    if-eqz v4, :cond_a7

    .line 4997
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4999
    :cond_a7
    if-eqz v5, :cond_ac

    .line 5000
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 5002
    :cond_ac
    if-eqz v6, :cond_103

    .line 5004
    :try_start_ae
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_b1
    .catch Ljava/io/IOException; {:try_start_ae .. :try_end_b1} :catch_b2

    .line 5007
    :goto_b1
    goto :goto_103

    .line 5005
    :catch_b2
    move-exception v0

    goto :goto_b1

    .line 4991
    :catch_b4
    move-exception v0

    goto :goto_cb

    .line 4996
    :catchall_b6
    move-exception v0

    move-object/from16 v13, p2

    move-object v2, v0

    goto :goto_106

    .line 4991
    :catch_bb
    move-exception v0

    move-object/from16 v13, p2

    goto :goto_cb

    .line 4996
    .end local v1    # "parameters":Ljava/lang/String;
    .restart local p3    # "parameters":Ljava/lang/String;
    :catchall_bf
    move-exception v0

    move-object/from16 v11, p0

    move-object/from16 v13, p2

    move-object v2, v0

    goto :goto_106

    .line 4991
    :catch_c6
    move-exception v0

    move-object/from16 v11, p0

    move-object/from16 v13, p2

    .line 4992
    .end local p3    # "parameters":Ljava/lang/String;
    .local v0, "e":Ljava/lang/Exception;
    .restart local v1    # "parameters":Ljava/lang/String;
    :goto_cb
    :try_start_cb
    sget-boolean v7, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_f2

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    .local v8, "protoLogParam1":Ljava/lang/String;
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    .local v9, "protoLogParam2":Ljava/lang/String;
    sget-object v10, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    const v12, 0x7c633cfd

    const-string v14, "Could not send command %s with parameters %s. %s"

    const/4 v15, 0x3

    new-array v15, v15, [Ljava/lang/Object;

    aput-object v7, v15, v2

    const/16 v16, 0x1

    aput-object v8, v15, v16

    const/16 v16, 0x2

    aput-object v9, v15, v16

    invoke-static {v10, v12, v2, v14, v15}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_f2
    .catchall {:try_start_cb .. :try_end_f2} :catchall_104

    .line 4994
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    .end local v8    # "protoLogParam1":Ljava/lang/String;
    .end local v9    # "protoLogParam2":Ljava/lang/String;
    :cond_f2
    const/4 v3, 0x0

    .line 4996
    .end local v0    # "e":Ljava/lang/Exception;
    if-eqz v4, :cond_f8

    .line 4997
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4999
    :cond_f8
    if-eqz v5, :cond_fd

    .line 5000
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 5002
    :cond_fd
    if-eqz v6, :cond_103

    .line 5004
    :try_start_ff
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_102
    .catch Ljava/io/IOException; {:try_start_ff .. :try_end_102} :catch_b2

    goto :goto_b1

    .line 5011
    :cond_103
    :goto_103
    return v3

    .line 4996
    :catchall_104
    move-exception v0

    move-object v2, v0

    :goto_106
    if-eqz v4, :cond_10b

    .line 4997
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 4999
    :cond_10b
    if-eqz v5, :cond_110

    .line 5000
    invoke-virtual {v5}, Landroid/os/Parcel;->recycle()V

    .line 5002
    :cond_110
    if-eqz v6, :cond_117

    .line 5004
    :try_start_112
    invoke-virtual {v6}, Ljava/io/BufferedWriter;->close()V
    :try_end_115
    .catch Ljava/io/IOException; {:try_start_112 .. :try_end_115} :catch_116

    .line 5007
    goto :goto_117

    .line 5005
    :catch_116
    move-exception v0

    .line 5009
    :cond_117
    :goto_117
    throw v2
.end method

.method waitForAnimationsToComplete()V
    .registers 8

    .line 9309
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 9310
    const-wide/16 v1, 0x1388

    .line 9313
    .local v1, "timeoutRemaining":J
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowAnimator;->mNotifyWhenNoAnimation:Z

    .line 9314
    :goto_d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->isAnimationScheduled()Z

    move-result v3

    const/4 v4, 0x5

    if-nez v3, :cond_1e

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    .line 9315
    invoke-virtual {v3, v4}, Lcom/android/server/wm/RootWindowContainer;->isAnimating(I)Z

    move-result v3

    if-eqz v3, :cond_36

    :cond_1e
    const-wide/16 v5, 0x0

    cmp-long v3, v1, v5

    if-lez v3, :cond_36

    .line 9316
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v3
    :try_end_28
    .catchall {:try_start_3 .. :try_end_28} :catchall_57

    .line 9318
    .local v3, "startTime":J
    :try_start_28
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    invoke-virtual {v5, v1, v2}, Ljava/lang/Object;->wait(J)V
    :try_end_2d
    .catch Ljava/lang/InterruptedException; {:try_start_28 .. :try_end_2d} :catch_2e
    .catchall {:try_start_28 .. :try_end_2d} :catchall_57

    .line 9320
    goto :goto_2f

    .line 9319
    :catch_2e
    move-exception v5

    .line 9321
    :goto_2f
    :try_start_2f
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v5

    sub-long/2addr v5, v3

    sub-long/2addr v1, v5

    .line 9322
    .end local v3    # "startTime":J
    goto :goto_d

    .line 9323
    :cond_36
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v5, 0x0

    iput-boolean v5, v3, Lcom/android/server/wm/WindowAnimator;->mNotifyWhenNoAnimation:Z

    .line 9325
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->isAnimationScheduled()Z

    move-result v3

    if-nez v3, :cond_4b

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    .line 9326
    invoke-virtual {v3, v4}, Lcom/android/server/wm/RootWindowContainer;->isAnimating(I)Z

    move-result v3

    if-eqz v3, :cond_52

    .line 9327
    :cond_4b
    const-string v3, "WindowManager"

    const-string v4, "Timed out waiting for animations to complete."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9329
    .end local v1    # "timeoutRemaining":J
    :cond_52
    monitor-exit v0
    :try_end_53
    .catchall {:try_start_2f .. :try_end_53} :catchall_57

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 9330
    return-void

    .line 9329
    :catchall_57
    move-exception v1

    :try_start_58
    monitor-exit v0
    :try_end_59
    .catchall {:try_start_58 .. :try_end_59} :catchall_57

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;I)I
    .registers 9
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;
    .param p2, "displayId"    # I

    .line 4526
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v0

    :try_start_3
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4527
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4528
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    monitor-exit v0
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_5c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 4529
    if-eqz v1, :cond_45

    .line 4534
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4535
    .local v0, "watcherBinder":Landroid/os/IBinder;
    new-instance v2, Lcom/android/server/wm/WindowManagerService$11;

    invoke-direct {v2, p0, v0}, Lcom/android/server/wm/WindowManagerService$11;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    .line 4553
    .local v2, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    monitor-enter v3

    :try_start_1e
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 4555
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    const/4 v5, 0x0

    invoke-interface {v4, v2, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 4556
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    new-instance v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    invoke-direct {v5, p0, p1, v2, p2}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;I)V

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_33
    .catch Landroid/os/RemoteException; {:try_start_1e .. :try_end_33} :catch_36
    .catchall {:try_start_1e .. :try_end_33} :catchall_34

    .line 4559
    goto :goto_37

    .line 4562
    :catchall_34
    move-exception v4

    goto :goto_40

    .line 4557
    :catch_36
    move-exception v4

    .line 4561
    :goto_37
    :try_start_37
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getRotation()I

    move-result v4

    monitor-exit v3
    :try_end_3c
    .catchall {:try_start_37 .. :try_end_3c} :catchall_34

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    return v4

    .line 4562
    :goto_40
    :try_start_40
    monitor-exit v3
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_34

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v4

    .line 4530
    .end local v0    # "watcherBinder":Landroid/os/IBinder;
    .end local v2    # "dr":Landroid/os/IBinder$DeathRecipient;
    :cond_45
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Trying to register rotation event for invalid display: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4528
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_5c
    move-exception v1

    :try_start_5d
    monitor-exit v0
    :try_end_5e
    .catchall {:try_start_5d .. :try_end_5e} :catchall_5c

    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    throw v1
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 14
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    .line 6163
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v0, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 6164
    .local v0, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v1, Lcom/android/server/wm/WindowManagerDebugConfig;->DEBUG:Z

    if-eqz v1, :cond_2a

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Looking up client "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "WindowManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6165
    :cond_2a
    const/4 v1, 0x1

    const/4 v2, 0x2

    const-string v3, "Failed looking up window session=%s callers=%s"

    const v4, -0x7d49c1bb

    const/4 v5, 0x3

    const/4 v6, 0x0

    const-string v7, "Requested window "

    const/4 v8, 0x0

    if-nez v0, :cond_70

    .line 6166
    if-nez p3, :cond_56

    .line 6170
    sget-boolean v7, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_55

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .local v7, "protoLogParam0":Ljava/lang/String;
    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .local v5, "protoLogParam1":Ljava/lang/String;
    sget-object v9, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v7, v2, v8

    aput-object v5, v2, v1

    invoke-static {v9, v4, v8, v3, v2}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6172
    .end local v5    # "protoLogParam1":Ljava/lang/String;
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    :cond_55
    return-object v6

    .line 6167
    :cond_56
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " does not exist"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6174
    :cond_70
    if-eqz p1, :cond_bb

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    if-eq v9, p1, :cond_bb

    .line 6175
    if-nez p3, :cond_94

    .line 6179
    sget-boolean v7, Lcom/android/server/protolog/ProtoLog$Cache;->WM_ERROR_enabled:Z

    if-eqz v7, :cond_93

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    .restart local v7    # "protoLogParam0":Ljava/lang/String;
    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "protoLogParam1":Ljava/lang/String;
    sget-object v9, Lcom/android/server/wm/ProtoLogGroup;->WM_ERROR:Lcom/android/server/wm/ProtoLogGroup;

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v7, v2, v8

    aput-object v5, v2, v1

    invoke-static {v9, v4, v8, v3, v2}, Lcom/android/server/protolog/ProtoLogImpl;->w(Lcom/android/server/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    .line 6181
    .end local v5    # "protoLogParam1":Ljava/lang/String;
    .end local v7    # "protoLogParam0":Ljava/lang/String;
    :cond_93
    return-object v6

    .line 6176
    :cond_94
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " is in session "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, ", not "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6184
    :cond_bb
    return-object v0
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    .line 6159
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method
