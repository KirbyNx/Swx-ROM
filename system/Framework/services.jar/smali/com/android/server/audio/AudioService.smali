.class public Lcom/android/server/audio/AudioService;
.super Landroid/media/IAudioService$Stub;
.source "AudioService.java"

# interfaces
.implements Landroid/view/accessibility/AccessibilityManager$TouchExplorationStateChangeListener;
.implements Landroid/view/accessibility/AccessibilityManager$AccessibilityServicesStateChangeListener;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/audio/AudioService$SamsungSettingsObserver;,
        Lcom/android/server/audio/AudioService$MediaVolumeStreamState;,
        Lcom/android/server/audio/AudioService$MultiVolumeController;,
        Lcom/android/server/audio/AudioService$VolumeMap;,
        Lcom/android/server/audio/AudioService$SoundEventReceiver;,
        Lcom/android/server/audio/AudioService$BypassReason;,
        Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;,
        Lcom/android/server/audio/AudioService$AsdProxy;,
        Lcom/android/server/audio/AudioService$AudioPolicyProxy;,
        Lcom/android/server/audio/AudioService$AudioDeviceArray;,
        Lcom/android/server/audio/AudioService$AudioServiceInternal;,
        Lcom/android/server/audio/AudioService$VolumeController;,
        Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;,
        Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;,
        Lcom/android/server/audio/AudioService$AudioServiceUserRestrictionsListener;,
        Lcom/android/server/audio/AudioService$AudioServiceBroadcastReceiver;,
        Lcom/android/server/audio/AudioService$SettingsObserver;,
        Lcom/android/server/audio/AudioService$AudioHandler;,
        Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;,
        Lcom/android/server/audio/AudioService$AudioSystemThread;,
        Lcom/android/server/audio/AudioService$VolumeStreamState;,
        Lcom/android/server/audio/AudioService$VolumeGroupState;,
        Lcom/android/server/audio/AudioService$BtProfileConnectionState;,
        Lcom/android/server/audio/AudioService$ConnectionState;,
        Lcom/android/server/audio/AudioService$LoadSoundEffectReply;,
        Lcom/android/server/audio/AudioService$SetModeDeathHandler;,
        Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;,
        Lcom/android/server/audio/AudioService$ForceControlStreamClient;,
        Lcom/android/server/audio/AudioService$StreamVolumeCommand;,
        Lcom/android/server/audio/AudioService$RoleObserver;,
        Lcom/android/server/audio/AudioService$Lifecycle;
    }
.end annotation


# static fields
.field private static final ANDROID:Ljava/lang/String; = "android"

.field private static final AUDIO_HAL_SERVICE_PREFIX:Ljava/lang/String; = "android.hardware.audio"

.field public static final BECOMING_NOISY_DELAY_MS:I = 0x1f4

.field private static final CHECK_MODE_FOR_UID_PERIOD_MS:I = 0x1770

.field static final CONNECTION_STATE_CONNECTED:I = 0x1

.field static final CONNECTION_STATE_DISCONNECTED:I = 0x0

.field protected static final DEBUG_AP:Z = true

.field protected static final DEBUG_DEVICES:Z = true

.field protected static final DEBUG_MODE:Z = true

.field protected static final DEBUG_VOL:Z = true

.field private static final DEFAULT_STREAM_TYPE_OVERRIDE_DELAY_MS:I = 0x0

.field protected static final DEFAULT_VOL_STREAM_NO_PLAYBACK:I = 0x3

.field private static final DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private static final EMPTY:Ljava/lang/String; = ""

.field private static final EMPTY_PACKAGE:[Ljava/lang/String;

.field private static final FLAG_ADJUST_VOLUME:I = 0x1

.field private static final INDICATE_SYSTEM_READY_RETRY_DELAY_MS:I = 0x3e8

.field static final LOG_NB_EVENTS_APP_VOLUME:I = 0x28

.field static final LOG_NB_EVENTS_DEVICE_CONNECTION:I = 0x50

.field static final LOG_NB_EVENTS_DYN_POLICY:I = 0xa

.field static final LOG_NB_EVENTS_FORCE_USE:I = 0x14

.field static final LOG_NB_EVENTS_MASTER_MUTE:I = 0x1e

.field static final LOG_NB_EVENTS_MICROPHONE_MUTE:I = 0x1e

.field static final LOG_NB_EVENTS_PHONE_STATE:I = 0x14

.field static final LOG_NB_EVENTS_RINGERMODE:I = 0x14

.field static final LOG_NB_EVENTS_RINGTONE_CHANGE:I = 0x14

.field static final LOG_NB_EVENTS_USING_AUDIO:I = 0x1e

.field static final LOG_NB_EVENTS_VOLUME:I = 0x50

.field protected static MAX_STREAM_VOLUME:[I = null

.field protected static final MIN_ALARM_ATTENUATION_NON_PRIVILEGED_DB:F = -36.0f

.field protected static MIN_STREAM_VOLUME:[I = null

.field private static final MSG_ACCESSORY_PLUG_MEDIA_UNMUTE:I = 0x15

.field private static final MSG_AUDIO_SERVER_DIED:I = 0x4

.field private static final MSG_BROADCAST_MICROPHONE_MUTE:I = 0x1e

.field private static final MSG_BT_HEADSET_CNCT_FAILED:I = 0x9

.field private static final MSG_CHECK_MODE_FOR_UID:I = 0x1f

.field private static final MSG_CHECK_MUSIC_ACTIVE:I = 0xb

.field public static final MSG_CHECK_RECORDING_POPUP:I = 0x77

.field private static final MSG_CHECK_SAR_CONTROL:I = 0x70

.field private static final MSG_CONFIGURE_SAFE_MEDIA_VOLUME:I = 0xc

.field private static final MSG_CONFIGURE_SAFE_MEDIA_VOLUME_FORCED:I = 0xd

.field private static final MSG_DISABLE_AUDIO_FOR_UID:I = 0x64

.field private static final MSG_DISPATCH_AUDIO_SERVER_STATE:I = 0x17

.field private static final MSG_DYN_POLICY_MIX_STATE_UPDATE:I = 0x13

.field private static final MSG_ENABLE_SURROUND_FORMATS:I = 0x18

.field private static final MSG_FORCE_TURNOFF_SPK2:I = 0x74

.field private static final MSG_HDMI_VOLUME_CHECK:I = 0x1c

.field private static final MSG_INDICATE_SYSTEM_READY:I = 0x14

.field private static final MSG_LOAD_SOUND_EFFECTS:I = 0x7

.field private static final MSG_NOTIFY_VOL_EVENT:I = 0x16

.field private static final MSG_OBSERVE_DEVICES_FOR_ALL_STREAMS:I = 0x1b

.field private static final MSG_PERFORM_SOFT_RESET:I = 0x65

.field private static final MSG_PERSIST_MUSIC_ACTIVE_MS:I = 0x11

.field private static final MSG_PERSIST_RINGER_MODE:I = 0x3

.field private static final MSG_PERSIST_SAFE_VOLUME_STATE:I = 0xe

.field private static final MSG_PERSIST_VOLUME:I = 0x1

.field private static final MSG_PERSIST_VOLUME_GROUP:I = 0x2

.field private static final MSG_PLAYBACK_CONFIG_CHANGE:I = 0x1d

.field static final MSG_PLAYER_CHANGED_CALLBACK:I = 0x75

.field private static final MSG_PLAY_SOUND_EFFECT:I = 0x5

.field private static final MSG_PLAY_SOUND_MANNER_MODE:I = 0x66

.field private static final MSG_RUN_SOUNDASSISTANT:I = 0x6f

.field private static final MSG_SEC_BASE:I = 0x64

.field private static final MSG_SEND_SOUNDEVENT_TO_RECEIVER:I = 0x72

.field private static final MSG_SET_ALL_VOLUMES:I = 0xa

.field private static final MSG_SET_AVC_STATE_TO_AUDIO_SERVER:I = 0x78

.field private static final MSG_SET_DEVICE_STREAM_VOLUME:I = 0x1a

.field private static final MSG_SET_DEVICE_VOLUME:I = 0x0

.field static final MSG_SET_DVFS_FOR_SOUNDALIVE:I = 0x6a

.field private static final MSG_SET_FORCE_USE:I = 0x8

.field private static final MSG_SET_MULTI_DEVICE_SOUND_NOTIFICATION:I = 0x6d

.field private static final MSG_SET_MULTI_DEVICE_SOUND_ON:I = 0x6b

.field private static final MSG_SET_MULTI_DEVICE_SOUND_SETDEVICE:I = 0x6c

.field private static final MSG_SET_MULTI_DEVICE_SOUND_SETDEVICE_WITHOUT_NOTIFICATION:I = 0x79

.field private static final MSG_SET_MUTE_INTERVAL:I = 0x6e

.field private static final MSG_SET_SYSTEMPROPERTY:I = 0x69

.field private static final MSG_SOUND_ASSISTANT_INIT:I = 0x76

.field private static final MSG_START_SENSOR_FOR_DUALSPK:I = 0x73

.field private static final MSG_SYSTEM_READY:I = 0x10

.field private static final MSG_UNLOAD_SOUND_EFFECTS:I = 0xf

.field private static final MSG_UNMUTE_STREAM:I = 0x12

.field private static final MSG_UPDATE_MULTI_DEVICE_SOUND_AUDIOFOCUS:I = 0x71

.field private static final MSG_UPDATE_RINGER_MODE:I = 0x19

.field private static final MSG_VIBRATE_CALL:I = 0x68

.field private static final MSG_VIBRATE_MANNER_MODE:I = 0x67

.field private static final MUSIC_ACTIVE_POLL_PERIOD_MS:I = 0xea60

.field private static final PERSIST_DELAY:I = 0x1f4

.field private static final RINGER_MODE_NAMES:[Ljava/lang/String;

.field private static final SAFE_MEDIA_VOLUME_ACTIVE:I = 0x3

.field private static final SAFE_MEDIA_VOLUME_DISABLED:I = 0x1

.field private static final SAFE_MEDIA_VOLUME_INACTIVE:I = 0x2

.field private static final SAFE_MEDIA_VOLUME_NOT_CONFIGURED:I = 0x0

.field private static final SAFE_VOLUME_CONFIGURE_TIMEOUT_MS:I = 0x7530

.field private static final SENDMSG_NOOP:I = 0x1

.field private static final SENDMSG_QUEUE:I = 0x2

.field private static final SENDMSG_REPLACE:I = 0x0

.field private static final STREAM_VOLUME_OPS:[I

.field private static final SYSTEM_PACKAGE:[Ljava/lang/String;

.field private static final TAG:Ljava/lang/String; = "AS.AudioService"

.field private static final TOUCH_EXPLORE_STREAM_TYPE_OVERRIDE_DELAY_MS:I = 0x3e8

.field private static final UNMUTE_STREAM_DELAY:I = 0x15e

.field private static final UNSAFE_VOLUME_MUSIC_ACTIVE_MS_MAX:I = 0x44aa200

.field private static final VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

.field private static final VOL_ADJUST_END:I = 0x2

.field private static final VOL_ADJUST_NORMAL:I = 0x0

.field private static final VOL_ADJUST_START:I = 0x1

.field private static final mMetricsId:Ljava/lang/String; = "audio.service."

.field protected static mStreamVolumeAlias:[I

.field public static final sAppVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

.field static final sDeviceLogger:Lcom/android/server/audio/AudioEventLogger;

.field private static sDeviceVolumeBehaviorSupportedDeviceOutSet:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field static final sForceUseLogger:Lcom/android/server/audio/AudioEventLogger;

.field private static sIndependentA11yVolume:Z

.field private static final sMasterMuteLogger:Lcom/android/server/audio/AudioEventLogger;

.field private static final sMicrophoneLogger:Lcom/android/server/audio/AudioEventLogger;

.field private static final sRingermodeLogger:Lcom/android/server/audio/AudioEventLogger;

.field public static final sRingtoneChangeLogger:Lcom/android/server/audio/AudioEventLogger;

.field private static sStreamOverrideDelayMs:I

.field public static final sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

.field private static final sVolumeGroupStates:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/audio/AudioService$VolumeGroupState;",
            ">;"
        }
    .end annotation
.end field

.field static final sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;


# instance fields
.field final AVC_AFFECTED_STREAMS:[I

.field private final STREAM_VOLUME_ALIAS_DEFAULT:[I

.field private final STREAM_VOLUME_ALIAS_TELEVISION:[I

.field private final STREAM_VOLUME_ALIAS_VOICE:[I

.field mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mAccessibilityServiceUids:[I

.field private final mAccessibilityServiceUidsLock:Ljava/lang/Object;

.field private mActivityManager:Landroid/app/ActivityManager;

.field private final mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

.field private mAdaptSoundEnabled:I

.field private mAdjustMediaVolumeOnly:Z

.field mAlarmManager:Landroid/app/AlarmManager;

.field private mAllSoundMute:I

.field private mAppMode:Ljava/lang/String;

.field private final mAppOps:Landroid/app/AppOpsManager;

.field private mAppVolumeEnabled:Z

.field private mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

.field private mAssistantUid:I

.field private mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mAudioGameManager:Lcom/samsung/android/server/audio/AudioGameManager;

.field private mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

.field private mAudioHqmHelper:Lcom/samsung/android/server/audio/AudioHqmHelper;

.field private final mAudioPolicies:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/audio/AudioService$AudioPolicyProxy;",
            ">;"
        }
    .end annotation
.end field

.field private mAudioPolicyCounter:I

.field private mAudioServerStateListeners:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/audio/AudioService$AsdProxy;",
            ">;"
        }
    .end annotation
.end field

.field private final mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

.field private final mAudioSystemCallback:Landroid/media/AudioSystem$ErrorCallback;

.field private mAudioSystemThread:Lcom/android/server/audio/AudioService$AudioSystemThread;

.field private volatile mAvrcpAbsVolSupported:Z

.field private mBtDeviceForOffloadState:Landroid/bluetooth/BluetoothDevice;

.field private mBtNrec:Ljava/lang/String;

.field private mBtSampleRate:Ljava/lang/String;

.field private mCallForwardingEnable:Ljava/lang/String;

.field private mCallMemoState:Ljava/lang/String;

.field private mCameraSoundForced:Z

.field private final mContentResolver:Landroid/content/ContentResolver;

.field private final mContext:Landroid/content/Context;

.field private mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

.field private mCurRCVBackOffState:Z

.field private mCurrentImeUid:I

.field private mDesktopModeHelper:Lcom/samsung/android/server/audio/DesktopModeHelper;

.field private final mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

.field private mDhaParam:Ljava/lang/String;

.field private mDirectPowerEnabled:I

.field mDisplayManager:Landroid/hardware/display/DisplayManager;

.field private mDockAudioMediaEnabled:Z

.field private mDockState:I

.field private mDvDhaparam:Ljava/lang/String;

.field private mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

.field private final mDynPolicyCallback:Landroid/media/AudioSystem$DynamicPolicyCallback;

.field private final mDynPolicyLogger:Lcom/android/server/audio/AudioEventLogger;

.field private mEnableSoundAssistant:Z

.field private mEnabledSurroundFormats:Ljava/lang/String;

.field private mEncodedSurroundMode:I

.field mEventReceivers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/audio/AudioService$SoundEventReceiver;",
            ">;"
        }
    .end annotation
.end field

.field private mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

.field private final mExtVolumeControllerLock:Ljava/lang/Object;

.field public mExtraVolume:Z

.field public mFMRadioRecordingChecker:Lcom/samsung/android/server/audio/FrequentWorker;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/server/audio/FrequentWorker<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field mFixedVolumeDevices:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mFoldStateHelper:Lcom/samsung/android/server/audio/FoldStateHelper;

.field private mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

.field private final mForceControlStreamLock:Ljava/lang/Object;

.field private mForceControlStreamPid:I

.field private mForceControlStreamUid:I

.field private mForceSpeaker:I

.field private mForcedUseForFMRadio:I

.field private mForcedUseForMedia:I

.field private mForegroundUid:I

.field mFullVolumeDevices:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

.field private final mHasVibrator:Z

.field private mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

.field private mHdmiCecSink:Z

.field private mHdmiCecVolumeControlEnabled:Z

.field private final mHdmiClientLock:Ljava/lang/Object;

.field private mHdmiControlStatusChangeListenerCallback:Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

.field private mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

.field private mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

.field private mHdmiSystemAudioSupported:Z

.field private mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

.field private mHeadsetOnlyStream:I

.field protected mIgnoreAudioFocusUid:I

.field private mInputMethodServiceUid:I

.field private final mInputMethodServiceUidLock:Ljava/lang/Object;

.field private mIsBikeMode:Z

.field private mIsBluetoothCastState:Z

.field private mIsCallScreeningModeSupported:Z

.field private mIsPttCallVolumeEnabled:Z

.field private final mIsSingleVolume:Z

.field private mIsTalkBackEnabled:Z

.field private mIsVibrate:Z

.field private mKaraokeListenbackEnabled:I

.field private mKeyguardManager:Landroid/app/KeyguardManager;

.field private mLRSwitching:I

.field private mLastBluetoothA2dpDisconnectionTime:J

.field private mLateBootCompleted_WiredDevice:I

.field private mLoweredFromNormalToVibrateTime:J

.field private mMasterBalance:F

.field private mMasterMono:I

.field private mMcc:I

.field private final mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

.field private mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

.field private mMediaLastAudibleIndex:I

.field private mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

.field private mMediaVolumeStepIndex:I

.field private mMicMuteFromApi:Z

.field private mMicMuteFromRestrictions:Z

.field private mMicMuteFromSwitch:Z

.field private mMicMuteFromSystemCached:Z

.field private mMode:I

.field private final mModeLogger:Lcom/android/server/audio/AudioEventLogger;

.field private final mMonitorRotation:Z

.field private mMultiAudioFocusEnabled:Z

.field private mMultiSoundInterface:Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundInterface;

.field private mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

.field private mMultiWindowManager:Lcom/samsung/android/multiwindow/MultiWindowManager;

.field private mMusicActiveMs:I

.field private mMuteAffectedStreams:I

.field private mMuteIntervalMs:I

.field private mMuteMediaByVibrateOrSilentMode:Z

.field private mMuteTime:J

.field private mMyHdmiCecVolumeControlFeatureListener:Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

.field private mNbQualityMode:I

.field private mNm:Landroid/app/NotificationManager;

.field private mOmcRingtoneManager:Lcom/samsung/android/server/audio/OmcRingtoneManager;

.field private mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

.field private mPackageManager:Landroid/content/pm/PackageManager;

.field private mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

.field private mPhoneStateHelper:Lcom/samsung/android/server/audio/PhoneStateHelper;

.field private mPhoneType:Ljava/lang/String;

.field private mPlatformType:I

.field private final mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

.field private mPowerManager:Landroid/os/PowerManager;

.field private mPrescaleAbsoluteVolume:[F

.field private mPrevRingerMode:I

.field private mPrevVolDirection:I

.field private mProjectionService:Landroid/media/projection/IMediaProjectionManager;

.field private final mReceiver:Landroid/content/BroadcastReceiver;

.field private final mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

.field private mRemoteMic:Z

.field private mRingerAndZenModeMutedStreams:I

.field private mRingerMode:I

.field private mRingerModeAffectedStreams:I

.field private mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

.field private mRingerModeExternal:I

.field private volatile mRingtonePlayer:Landroid/media/IRingtonePlayer;

.field private mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;",
            ">;"
        }
    .end annotation
.end field

.field private mRmtSbmxFullVolRefCount:I

.field mRoleObserver:Lcom/android/server/audio/AudioService$RoleObserver;

.field private mRttEnabled:Z

.field final mSafeMediaVolumeBTDevices:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field final mSafeMediaVolumeDevices:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mSafeMediaVolumeIndex:I

.field private mSafeMediaVolumeState:I

.field private mSafeMediaVolumeStateForBlueTooth:I

.field private final mSafeMediaVolumeStateLock:Ljava/lang/Object;

.field private mSafeUsbMediaVolumeDbfs:F

.field private mSafeUsbMediaVolumeIndex:I

.field private final mSamsungReceiver:Landroid/content/BroadcastReceiver;

.field private mSamsungSettingsObserver:Lcom/android/server/audio/AudioService$SamsungSettingsObserver;

.field private mSarBackoffParam:Z

.field private mSavedSpeakerMediaIndex:I

.field private mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

.field private mSelfiestickIsConnected:Z

.field private mSensorThread:Lcom/samsung/android/server/audio/SensorHandleThread;

.field final mSetModeDeathHandlers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/audio/AudioService$SetModeDeathHandler;",
            ">;"
        }
    .end annotation
.end field

.field private mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

.field private final mSettingsLock:Ljava/lang/Object;

.field private mSettingsObserver:Lcom/android/server/audio/AudioService$SettingsObserver;

.field private mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

.field private mSoundAppPolicyManager:Lcom/samsung/android/server/audio/SoundAppPolicyManager;

.field private mSoundAssistantLock:Ljava/lang/Object;

.field private mStartingSoundAssistant:Z

.field private mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

.field private mSupportedSystemUsages:[I

.field private final mSupportedSystemUsagesLock:Ljava/lang/Object;

.field private mSurroundModeChanged:Z

.field private mSystemReady:Z

.field private final mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

.field private mUhqBtSampleRate:I

.field private final mUidObserver:Landroid/app/IUidObserver;

.field private mUpscalerEnabled:I

.field private final mUseFixedVolume:Z

.field private final mUserManagerInternal:Landroid/os/UserManagerInternal;

.field private final mUserRestrictionsListener:Landroid/os/UserManagerInternal$UserRestrictionsListener;

.field private mUserSelectedVolumeControlStream:Z

.field private mUserSwitchedReceived:Z

.field private mVibrateSetting:I

.field private mVibrator:Landroid/os/Vibrator;

.field private mVoiceActive:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private final mVoiceActivityMonitor:Landroid/media/IPlaybackConfigDispatcher;

.field private mVolumeControlStream:I

.field private mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

.field private mVolumeControllerStream:I

.field private mVolumeLimitOn:Z

.field private mVolumeLimitValue:I

.field private mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

.field private mVolumeMonitorValue:I

.field private mVolumePolicy:Landroid/media/VolumePolicy;

.field private mVolumeSteps:[I

.field private mZenModeAffectedStreams:I

.field private final reconnectDelay:I


# direct methods
.method static constructor <clinit>()V
    .registers 7

    .line 415
    const/16 v0, 0xc

    new-array v1, v0, [I

    fill-array-data v1, :array_114

    sput-object v1, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    .line 431
    new-array v1, v0, [I

    fill-array-data v1, :array_130

    sput-object v1, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    .line 503
    new-array v0, v0, [I

    fill-array-data v0, :array_14c

    sput-object v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_OPS:[I

    .line 518
    new-instance v0, Ljava/util/HashSet;

    const/4 v1, 0x4

    new-array v2, v1, [Ljava/lang/Integer;

    .line 520
    const/16 v3, 0x400

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const/4 v4, 0x0

    aput-object v3, v2, v4

    .line 521
    const/high16 v5, 0x40000

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    const/4 v6, 0x1

    aput-object v5, v2, v6

    .line 522
    const/high16 v5, 0x80000

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    const/4 v6, 0x2

    aput-object v5, v2, v6

    .line 523
    const/high16 v5, 0x20000

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    const/4 v6, 0x3

    aput-object v5, v2, v6

    .line 519
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sDeviceVolumeBehaviorSupportedDeviceOutSet:Ljava/util/Set;

    .line 592
    new-instance v0, Landroid/media/AudioAttributes$Builder;

    invoke-direct {v0}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 593
    invoke-virtual {v0, v1}, Landroid/media/AudioAttributes$Builder;->setContentType(I)Landroid/media/AudioAttributes$Builder;

    move-result-object v0

    .line 594
    const/16 v2, 0xd

    invoke-virtual {v0, v2}, Landroid/media/AudioAttributes$Builder;->setUsage(I)Landroid/media/AudioAttributes$Builder;

    move-result-object v0

    .line 595
    invoke-virtual {v0}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    move-result-object v0

    sput-object v0, Lcom/android/server/audio/AudioService;->VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

    .line 5817
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    sput-object v0, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    .line 5818
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 5819
    sget-object v0, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    const/16 v1, 0x8

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 5820
    sget-object v0, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    invoke-interface {v0, v5}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 5821
    sget-object v0, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-interface {v0, v1}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 5822
    sget-object v0, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_USB_SET:Ljava/util/Set;

    invoke-interface {v0, v1}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 5823
    sget-object v0, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 5880
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    sput-object v0, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 8287
    sput-boolean v4, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 8358
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const/16 v1, 0x50

    const-string/jumbo v2, "wired/A2DP/hearing aid device connection"

    invoke-direct {v0, v1, v2}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8361
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const/16 v2, 0x14

    const-string v3, "force use (logged before setForceUse() is executed)"

    invoke-direct {v0, v2, v3}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sForceUseLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8365
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const-string/jumbo v3, "volume changes (logged when command received by AudioService)"

    invoke-direct {v0, v1, v3}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8372
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const/16 v1, 0x1e

    const-string/jumbo v3, "setMicrophoneMute use (logged after setMicrophoneMute() is executed)"

    invoke-direct {v0, v1, v3}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sMicrophoneLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8376
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const-string/jumbo v3, "setMasterMute (logged when command received by AudioService)"

    invoke-direct {v0, v1, v3}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sMasterMuteLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8380
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const/16 v3, 0x28

    const-string v4, "App Volume"

    invoke-direct {v0, v3, v4}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8383
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const-string v3, "Using Audio"

    invoke-direct {v0, v1, v3}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8386
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const-string v1, "Ringtone Change history"

    invoke-direct {v0, v2, v1}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sRingtoneChangeLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8389
    new-instance v0, Lcom/android/server/audio/AudioEventLogger;

    const-string/jumbo v1, "ringermode changes"

    invoke-direct {v0, v2, v1}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    sput-object v0, Lcom/android/server/audio/AudioService;->sRingermodeLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8393
    const-string v0, "SILENT"

    const-string v1, "VIBRATE"

    const-string v2, "NORMAL"

    filled-new-array {v0, v1, v2}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/audio/AudioService;->RINGER_MODE_NAMES:[Ljava/lang/String;

    .line 11926
    const-string v0, "android"

    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/audio/AudioService;->SYSTEM_PACKAGE:[Ljava/lang/String;

    .line 11927
    const-string v0, ""

    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/audio/AudioService;->EMPTY_PACKAGE:[Ljava/lang/String;

    return-void

    nop

    :array_114
    .array-data 4
        0x5
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
    .end array-data

    :array_130
    .array-data 4
        0x1
        0x0
        0x0
        0x0
        0x1
        0x0
        0x0
        0x0
        0x0
        0x0
        0x1
        0x0
    .end array-data

    :array_14c
    .array-data 4
        0x22
        0x24
        0x23
        0x24
        0x25
        0x26
        0x27
        0x24
        0x24
        0x24
        0x40
        0x24
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .registers 4
    .param p1, "context"    # Landroid/content/Context;

    .line 773
    invoke-static {}, Lcom/android/server/audio/AudioSystemAdapter;->getDefaultAdapter()Lcom/android/server/audio/AudioSystemAdapter;

    move-result-object v0

    .line 774
    invoke-static {p1}, Lcom/android/server/audio/SystemServerAdapter;->getDefaultAdapter(Landroid/content/Context;)Lcom/android/server/audio/SystemServerAdapter;

    move-result-object v1

    .line 773
    invoke-direct {p0, p1, v0, v1}, Lcom/android/server/audio/AudioService;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioSystemAdapter;Lcom/android/server/audio/SystemServerAdapter;)V

    .line 775
    return-void
.end method

.method public constructor <init>(Landroid/content/Context;Lcom/android/server/audio/AudioSystemAdapter;Lcom/android/server/audio/SystemServerAdapter;)V
    .registers 27
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "audioSystem"    # Lcom/android/server/audio/AudioSystemAdapter;
    .param p3, "systemServer"    # Lcom/android/server/audio/SystemServerAdapter;

    .line 778
    move-object/from16 v0, p0

    move-object/from16 v7, p1

    invoke-direct/range {p0 .. p0}, Landroid/media/IAudioService$Stub;-><init>()V

    .line 322
    new-instance v1, Lcom/android/server/audio/AudioService$VolumeController;

    invoke-direct {v1}, Lcom/android/server/audio/AudioService$VolumeController;-><init>()V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 410
    const/4 v8, 0x0

    iput v8, v0, Lcom/android/server/audio/AudioService;->mMode:I

    .line 412
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 455
    const/16 v1, 0xc

    new-array v2, v1, [I

    fill-array-data v2, :array_494

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    .line 469
    new-array v2, v1, [I

    fill-array-data v2, :array_4b0

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_TELEVISION:[I

    .line 483
    new-array v1, v1, [I

    fill-array-data v1, :array_4cc

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    .line 528
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 537
    new-instance v1, Lcom/android/server/audio/AudioService$1;

    invoke-direct {v1, v0}, Lcom/android/server/audio/AudioService$1;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioSystemCallback:Landroid/media/AudioSystem$ErrorCallback;

    .line 563
    const/4 v1, -0x1

    iput v1, v0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 567
    iput v8, v0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 569
    iput v8, v0, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    .line 598
    new-instance v2, Lcom/android/server/audio/AudioService$AudioServiceBroadcastReceiver;

    const/4 v3, 0x0

    invoke-direct {v2, v0, v3}, Lcom/android/server/audio/AudioService$AudioServiceBroadcastReceiver;-><init>(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$1;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mReceiver:Landroid/content/BroadcastReceiver;

    .line 606
    new-instance v2, Lcom/android/server/audio/AudioService$AudioServiceUserRestrictionsListener;

    invoke-direct {v2, v0, v3}, Lcom/android/server/audio/AudioService$AudioServiceUserRestrictionsListener;-><init>(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$1;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mUserRestrictionsListener:Landroid/os/UserManagerInternal$UserRestrictionsListener;

    .line 613
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 622
    iput v8, v0, Lcom/android/server/audio/AudioService;->mPrevVolDirection:I

    .line 625
    iput v1, v0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    .line 629
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    .line 630
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    .line 634
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    .line 639
    new-instance v2, Ljava/util/HashSet;

    const/4 v4, 0x5

    new-array v5, v4, [Ljava/lang/Integer;

    .line 640
    const/16 v6, 0x1000

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v8

    .line 641
    const/16 v6, 0x800

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v9, 0x1

    aput-object v6, v5, v9

    .line 642
    const/high16 v6, 0x40000

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v10, 0x2

    aput-object v6, v5, v10

    .line 643
    const/high16 v6, 0x80000

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v11, 0x3

    aput-object v6, v5, v11

    .line 644
    const/high16 v6, 0x200000

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    const/4 v12, 0x4

    aput-object v6, v5, v12

    .line 639
    invoke-static {v5}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    invoke-direct {v2, v5}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 646
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 650
    new-instance v2, Ljava/util/HashSet;

    new-array v5, v9, [Ljava/lang/Integer;

    .line 651
    const/high16 v6, 0x8000000

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v8

    invoke-static {v5}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    invoke-direct {v2, v5}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;

    .line 655
    iput-boolean v9, v0, Lcom/android/server/audio/AudioService;->mDockAudioMediaEnabled:Z

    .line 657
    iput v8, v0, Lcom/android/server/audio/AudioService;->mDockState:I

    .line 669
    new-array v2, v11, [F

    fill-array-data v2, :array_4e8

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mPrescaleAbsoluteVolume:[F

    .line 677
    sget-object v2, Landroid/media/VolumePolicy;->DEFAULT:Landroid/media/VolumePolicy;

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 682
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    .line 685
    iput v1, v0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUid:I

    .line 686
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUidLock:Ljava/lang/Object;

    .line 704
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 705
    new-array v2, v9, [I

    const/16 v5, 0x11

    aput v5, v2, v8

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 737
    new-instance v2, Lcom/android/server/audio/AudioService$2;

    invoke-direct {v2, v0}, Lcom/android/server/audio/AudioService$2;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mUidObserver:Landroid/app/IUidObserver;

    .line 764
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    .line 2953
    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v2, v8}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mVoiceActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 2955
    new-instance v2, Lcom/android/server/audio/AudioService$3;

    invoke-direct {v2, v0}, Lcom/android/server/audio/AudioService$3;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mVoiceActivityMonitor:Landroid/media/IPlaybackConfigDispatcher;

    .line 3473
    iput v8, v0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 3474
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 4464
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 7967
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 7969
    iput v8, v0, Lcom/android/server/audio/AudioService;->mMcc:I

    .line 7985
    new-instance v2, Ljava/util/HashSet;

    new-array v5, v10, [Ljava/lang/Integer;

    .line 7986
    const/16 v6, 0x80

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v8

    const/16 v13, 0x100

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v5, v9

    invoke-static {v5}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    invoke-direct {v2, v5}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeBTDevices:Ljava/util/Set;

    .line 7988
    iput v9, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateForBlueTooth:I

    .line 7992
    new-instance v2, Ljava/util/HashSet;

    new-array v5, v4, [Ljava/lang/Integer;

    .line 7993
    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    aput-object v14, v5, v8

    .line 7994
    const/16 v14, 0x8

    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    aput-object v14, v5, v9

    const/high16 v14, 0x4000000

    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    aput-object v14, v5, v10

    .line 7996
    aput-object v6, v5, v11

    aput-object v13, v5, v12

    .line 7993
    invoke-static {v5}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    invoke-direct {v2, v5}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    .line 8182
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 8187
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 8208
    new-instance v2, Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

    invoke-direct {v2, v0, v3}, Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;-><init>(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$1;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mHdmiControlStatusChangeListenerCallback:Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

    .line 8211
    new-instance v2, Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

    invoke-direct {v2, v0, v3}, Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;-><init>(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$1;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mMyHdmiCecVolumeControlFeatureListener:Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

    .line 8352
    new-instance v2, Lcom/android/server/audio/AudioEventLogger;

    const/16 v5, 0x14

    const-string/jumbo v14, "phone state (logged after successful call to AudioSystem.setPhoneState(int, int))"

    invoke-direct {v2, v5, v14}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 8368
    new-instance v2, Lcom/android/server/audio/AudioEventLogger;

    const/16 v5, 0xa

    const-string v14, "dynamic policy events (logged when command received by AudioService)"

    invoke-direct {v2, v5, v14}, Lcom/android/server/audio/AudioEventLogger;-><init>(ILjava/lang/String;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/audio/AudioEventLogger;

    .line 9331
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mExtVolumeControllerLock:Ljava/lang/Object;

    .line 9360
    new-instance v2, Lcom/android/server/audio/AudioService$5;

    invoke-direct {v2, v0}, Lcom/android/server/audio/AudioService$5;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mDynPolicyCallback:Landroid/media/AudioSystem$DynamicPolicyCallback;

    .line 9964
    new-instance v2, Ljava/util/HashMap;

    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 10069
    new-instance v2, Ljava/util/HashMap;

    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 10071
    iput v8, v0, Lcom/android/server/audio/AudioService;->mAudioPolicyCounter:I

    .line 10186
    new-instance v2, Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    invoke-direct {v2, v0, v3}, Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;-><init>(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$1;)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Landroid/content/BroadcastReceiver;

    .line 10191
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mExtraVolume:Z

    .line 10194
    iput v10, v0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    .line 10202
    iput v8, v0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    .line 10214
    iput v8, v0, Lcom/android/server/audio/AudioService;->mVolumeMonitorValue:I

    .line 10217
    iput v1, v0, Lcom/android/server/audio/AudioService;->mForceControlStreamPid:I

    .line 10218
    iput v1, v0, Lcom/android/server/audio/AudioService;->mForceControlStreamUid:I

    .line 10219
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mKeyguardManager:Landroid/app/KeyguardManager;

    .line 10222
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 10230
    iput v1, v0, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    .line 10233
    iput v1, v0, Lcom/android/server/audio/AudioService;->mVolumeControllerStream:I

    .line 10242
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mCurRCVBackOffState:Z

    .line 10243
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mSarBackoffParam:Z

    .line 10246
    iput v8, v0, Lcom/android/server/audio/AudioService;->mMediaLastAudibleIndex:I

    .line 10247
    iput v1, v0, Lcom/android/server/audio/AudioService;->mLateBootCompleted_WiredDevice:I

    .line 10266
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mSensorThread:Lcom/samsung/android/server/audio/SensorHandleThread;

    .line 10270
    const-string v2, "NORMAL"

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mAppMode:Ljava/lang/String;

    .line 10329
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mIsVibrate:Z

    .line 10332
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 10335
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 10336
    const/16 v2, 0x9

    iput v2, v0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 10348
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 10351
    const-wide/16 v14, 0x0

    iput-wide v14, v0, Lcom/android/server/audio/AudioService;->mLastBluetoothA2dpDisconnectionTime:J

    .line 10352
    const/16 v2, 0x3e8

    iput v2, v0, Lcom/android/server/audio/AudioService;->reconnectDelay:I

    .line 10356
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mIsBluetoothCastState:Z

    .line 10364
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 10368
    iput-boolean v9, v0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 10369
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2, v4}, Landroid/util/SparseIntArray;-><init>(I)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 10370
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    .line 10371
    iput v1, v0, Lcom/android/server/audio/AudioService;->mIgnoreAudioFocusUid:I

    .line 10372
    iput v5, v0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 10373
    iput v8, v0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 10374
    iput v8, v0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    .line 10376
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2, v9}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 10377
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 10378
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 10383
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mMultiAudioFocusEnabled:Z

    .line 10384
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mAppVolumeEnabled:Z

    .line 10388
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mAlarmManager:Landroid/app/AlarmManager;

    .line 10389
    iput v8, v0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 10390
    iput-wide v14, v0, Lcom/android/server/audio/AudioService;->mMuteTime:J

    .line 10394
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mIsPttCallVolumeEnabled:Z

    .line 10398
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 10402
    iput v1, v0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 10403
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 10411
    new-array v1, v10, [I

    fill-array-data v1, :array_4f2

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->AVC_AFFECTED_STREAMS:[I

    .line 11516
    new-instance v1, Lcom/android/server/audio/AudioService$6;

    invoke-direct {v1, v0}, Lcom/android/server/audio/AudioService$6;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mFMRadioRecordingChecker:Lcom/samsung/android/server/audio/FrequentWorker;

    .line 12448
    iput-boolean v8, v0, Lcom/android/server/audio/AudioService;->mStartingSoundAssistant:Z

    .line 12449
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mSoundAssistantLock:Ljava/lang/Object;

    .line 14225
    new-instance v1, Lcom/android/server/audio/AudioService$7;

    invoke-direct {v1, v0}, Lcom/android/server/audio/AudioService$7;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mMultiSoundInterface:Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundInterface;

    .line 14743
    new-instance v1, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    invoke-direct {v1}, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;-><init>()V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    .line 779
    iput-object v7, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 780
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 781
    const-string v1, "appops"

    invoke-virtual {v7, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/AppOpsManager;

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    .line 783
    move-object/from16 v14, p2

    iput-object v14, v0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 784
    move-object/from16 v15, p3

    iput-object v15, v0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    .line 787
    invoke-static/range {p1 .. p1}, Lcom/samsung/android/server/audio/AudioHelper;->getPlatformType(Landroid/content/Context;)I

    move-result v1

    iput v1, v0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 788
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    iget v2, v0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    if-eq v2, v9, :cond_263

    move v2, v9

    goto :goto_264

    :cond_263
    move v2, v8

    :goto_264
    or-int/2addr v1, v2

    sput-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 789
    iget v1, v0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    if-ne v1, v9, :cond_26d

    .line 790
    sput-boolean v8, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 796
    :cond_26d
    invoke-static/range {p1 .. p1}, Landroid/media/AudioSystem;->isSingleVolume(Landroid/content/Context;)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 798
    const-class v1, Landroid/os/UserManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/UserManagerInternal;

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    .line 799
    const-class v1, Landroid/app/ActivityManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/ActivityManagerInternal;

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    .line 802
    const-string/jumbo v1, "power"

    invoke-virtual {v7, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManager;

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mPowerManager:Landroid/os/PowerManager;

    .line 803
    const-string v2, "AudioService:handleAudioEvent"

    invoke-virtual {v1, v9, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 805
    new-instance v1, Lcom/android/server/audio/SoundEffectsHelper;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v1, v2}, Lcom/android/server/audio/SoundEffectsHelper;-><init>(Landroid/content/Context;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    .line 807
    const-string/jumbo v1, "vibrator"

    invoke-virtual {v7, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/Vibrator;

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mVibrator:Landroid/os/Vibrator;

    .line 808
    if-nez v1, :cond_2b2

    move v1, v8

    goto :goto_2b6

    :cond_2b2
    invoke-virtual {v1}, Landroid/os/Vibrator;->hasVibrator()Z

    move-result v1

    :goto_2b6
    iput-boolean v1, v0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 810
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    .line 813
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->initializeVolumeSteps()V

    .line 904
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->createAudioSystemThread()V

    .line 906
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioSystemCallback:Landroid/media/AudioSystem$ErrorCallback;

    invoke-static {v1}, Landroid/media/AudioSystem;->setErrorCallback(Landroid/media/AudioSystem$ErrorCallback;)V

    .line 908
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->updateAudioHalPids()V

    .line 910
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readCameraSoundForced()Z

    move-result v3

    .line 911
    .local v3, "cameraSoundForced":Z
    new-instance v1, Ljava/lang/Boolean;

    invoke-direct {v1, v3}, Ljava/lang/Boolean;-><init>(Z)V

    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 912
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v17, 0x8

    const/16 v18, 0x2

    const/16 v19, 0x4

    .line 916
    if-eqz v3, :cond_2ec

    .line 917
    const/16 v2, 0xb

    move/from16 v20, v2

    goto :goto_2ee

    :cond_2ec
    move/from16 v20, v8

    :goto_2ee
    new-instance v2, Ljava/lang/String;

    const-string v12, "AudioService ctor"

    invoke-direct {v2, v12}, Ljava/lang/String;-><init>(Ljava/lang/String;)V

    const/16 v22, 0x0

    .line 912
    move-object/from16 v16, v1

    move-object/from16 v21, v2

    invoke-static/range {v16 .. v22}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 921
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string v2, "audio_safe_volume_state"

    invoke-static {v1, v2, v8}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    iput v1, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    .line 925
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v1, :cond_31d

    .line 926
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    new-array v2, v10, [Ljava/lang/Integer;

    aput-object v6, v2, v8

    .line 927
    aput-object v13, v2, v9

    .line 926
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 928
    iput v11, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateForBlueTooth:I

    .line 932
    :cond_31d
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e00d2

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    mul-int/2addr v1, v5

    iput v1, v0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeIndex:I

    .line 935
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110101

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 938
    new-instance v1, Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v1, v2, v0}, Lcom/android/server/audio/AudioDeviceBroker;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 940
    new-instance v1, Lcom/android/server/audio/RecordingActivityMonitor;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v1, v2}, Lcom/android/server/audio/RecordingActivityMonitor;-><init>(Landroid/content/Context;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 943
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/AudioSettingsHelper;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 946
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->clear()V

    .line 949
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    aput v4, v1, v4

    .line 951
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    aput v4, v1, v4

    .line 956
    new-instance v1, Lcom/samsung/android/server/audio/MultiSoundManager;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v4, v0, Lcom/android/server/audio/AudioService;->mMultiSoundInterface:Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundInterface;

    iget-object v5, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    invoke-direct {v1, v2, v4, v5}, Lcom/samsung/android/server/audio/MultiSoundManager;-><init>(Landroid/content/Context;Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundInterface;Landroid/os/Handler;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 961
    const-string v1, "AS.AudioService"

    invoke-direct {v0, v8, v1}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(ZLjava/lang/String;)V

    .line 962
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readPersistedSettings()V

    .line 963
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readUserRestrictions()V

    .line 964
    new-instance v1, Lcom/android/server/audio/AudioService$SettingsObserver;

    invoke-direct {v1, v0}, Lcom/android/server/audio/AudioService$SettingsObserver;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mSettingsObserver:Lcom/android/server/audio/AudioService$SettingsObserver;

    .line 966
    new-instance v1, Lcom/android/server/audio/AudioService$SamsungSettingsObserver;

    invoke-direct {v1, v0}, Lcom/android/server/audio/AudioService$SamsungSettingsObserver;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mSamsungSettingsObserver:Lcom/android/server/audio/AudioService$SamsungSettingsObserver;

    .line 968
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->createStreamStates()V

    .line 972
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->initVolumeGroupStates()V

    .line 976
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getSafeUsbMediaVolumeIndex()I

    move-result v1

    iput v1, v0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeIndex:I

    .line 978
    new-instance v1, Lcom/android/server/audio/PlaybackActivityMonitor;

    sget-object v2, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    const/4 v4, 0x4

    aget v2, v2, v4

    invoke-direct {v1, v7, v2}, Lcom/android/server/audio/PlaybackActivityMonitor;-><init>(Landroid/content/Context;I)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 982
    new-instance v1, Lcom/android/server/audio/MediaFocusControl;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v4, v0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-direct {v1, v2, v4, v0}, Lcom/android/server/audio/MediaFocusControl;-><init>(Landroid/content/Context;Lcom/android/server/audio/PlayerFocusEnforcer;Lcom/android/server/audio/AudioService;)V

    iput-object v1, v0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 988
    invoke-static {}, Lcom/android/server/audio/AudioService;->readAndSetLowRamDevice()V

    .line 990
    invoke-static {}, Landroid/media/AudioSystem;->isCallScreeningModeSupported()Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 994
    iput v8, v0, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    .line 995
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v1

    invoke-direct {v0, v1, v8}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 998
    new-instance v1, Landroid/content/IntentFilter;

    const-string v2, "android.bluetooth.headset.profile.action.AUDIO_STATE_CHANGED"

    invoke-direct {v1, v2}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    move-object v12, v1

    .line 1000
    .local v12, "intentFilter":Landroid/content/IntentFilter;
    const-string v1, "android.bluetooth.headset.profile.action.ACTIVE_DEVICE_CHANGED"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1001
    const-string v1, "android.intent.action.DOCK_EVENT"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1002
    const-string v1, "android.intent.action.SCREEN_ON"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1003
    const-string v1, "android.intent.action.SCREEN_OFF"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1004
    const-string v1, "android.intent.action.USER_SWITCHED"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1005
    const-string v1, "android.intent.action.USER_BACKGROUND"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1006
    const-string v1, "android.intent.action.USER_FOREGROUND"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1007
    const-string v1, "android.hardware.usb.action.USB_DEVICE_ATTACHED"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1008
    const-string v1, "android.bluetooth.adapter.action.STATE_CHANGED"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1009
    const-string v1, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1011
    const-string v1, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1012
    const-string/jumbo v1, "ro.audio.monitorRotation"

    invoke-static {v1, v8}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    .line 1013
    if-eqz v1, :cond_40f

    .line 1014
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    invoke-static {v1, v2}, Lcom/android/server/audio/RotationHelper;->init(Landroid/content/Context;Landroid/os/Handler;)V

    .line 1017
    :cond_40f
    const-string v1, "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1018
    const-string v1, "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION"

    invoke-virtual {v12, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1020
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mReceiver:Landroid/content/BroadcastReceiver;

    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object/from16 v1, p1

    move v13, v3

    .end local v3    # "cameraSoundForced":Z
    .local v13, "cameraSoundForced":Z
    move-object v3, v4

    move-object v4, v12

    invoke-virtual/range {v1 .. v6}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1022
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v1}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v1

    if-eqz v1, :cond_445

    .line 1023
    const-class v1, Landroid/media/AudioManagerInternal;

    new-instance v2, Lcom/android/server/audio/AudioService$AudioServiceInternal;

    invoke-direct {v2, v0}, Lcom/android/server/audio/AudioService$AudioServiceInternal;-><init>(Lcom/android/server/audio/AudioService;)V

    invoke-static {v1, v2}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1025
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mUserRestrictionsListener:Landroid/os/UserManagerInternal$UserRestrictionsListener;

    invoke-virtual {v1, v2}, Landroid/os/UserManagerInternal;->addUserRestrictionsListener(Landroid/os/UserManagerInternal$UserRestrictionsListener;)V

    .line 1027
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v1}, Lcom/android/server/audio/RecordingActivityMonitor;->initMonitor()V

    .line 1030
    :cond_445
    new-array v1, v11, [F

    .line 1031
    .local v1, "preScale":[F
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1130003

    invoke-virtual {v2, v3, v9, v9}, Landroid/content/res/Resources;->getFraction(III)F

    move-result v2

    aput v2, v1, v8

    .line 1034
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1130004

    invoke-virtual {v2, v3, v9, v9}, Landroid/content/res/Resources;->getFraction(III)F

    move-result v2

    aput v2, v1, v9

    .line 1037
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1130005

    invoke-virtual {v2, v3, v9, v9}, Landroid/content/res/Resources;->getFraction(III)F

    move-result v2

    aput v2, v1, v10

    .line 1040
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_475
    array-length v3, v1

    if-ge v2, v3, :cond_490

    .line 1041
    const/4 v3, 0x0

    aget v4, v1, v2

    cmpg-float v3, v3, v4

    if-gtz v3, :cond_48d

    aget v3, v1, v2

    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v3, v3, v4

    if-gtz v3, :cond_48d

    .line 1042
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mPrescaleAbsoluteVolume:[F

    aget v4, v1, v2

    aput v4, v3, v2

    .line 1040
    :cond_48d
    add-int/lit8 v2, v2, 0x1

    goto :goto_475

    .line 1050
    .end local v2    # "i":I
    :cond_490
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->setupCustomRoutine()V

    .line 1052
    return-void

    :array_494
    .array-data 4
        0x0
        0x1
        0x2
        0x3
        0x4
        0x2
        0x6
        0x7
        0x2
        0x3
        0x3
        0x3
    .end array-data

    :array_4b0
    .array-data 4
        0x3
        0x3
        0x3
        0x3
        0x3
        0x3
        0x6
        0x3
        0x3
        0x3
        0x3
        0x3
    .end array-data

    :array_4cc
    .array-data 4
        0x0
        0x1
        0x2
        0x3
        0x4
        0x2
        0x6
        0x7
        0x2
        0x3
        0x3
        0x3
    .end array-data

    :array_4e8
    .array-data 4
        0x3f000000    # 0.5f
        0x3f333333    # 0.7f
        0x3f59999a    # 0.85f
    .end array-data

    :array_4f2
    .array-data 4
        0x1
        0xb
    .end array-data
.end method

.method static synthetic access$000(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/RecordingActivityMonitor;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    return-object v0
.end method

.method static synthetic access$100(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/AudioService$AudioHandler;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    return-object v0
.end method

.method static synthetic access$10000(Lcom/android/server/audio/AudioService;IIILjava/lang/String;Ljava/lang/String;IZ)V
    .registers 8
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I
    .param p3, "x3"    # I
    .param p4, "x4"    # Ljava/lang/String;
    .param p5, "x5"    # Ljava/lang/String;
    .param p6, "x6"    # I
    .param p7, "x7"    # Z

    .line 258
    invoke-direct/range {p0 .. p7}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZ)V

    return-void
.end method

.method static synthetic access$10100(Lcom/android/server/audio/AudioService;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$102(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$AudioHandler;)Lcom/android/server/audio/AudioService$AudioHandler;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Lcom/android/server/audio/AudioService$AudioHandler;

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    return-object p1
.end method

.method static synthetic access$10200(Lcom/android/server/audio/AudioService;)[I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    return-object v0
.end method

.method static synthetic access$10202(Lcom/android/server/audio/AudioService;[I)[I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # [I

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    return-object p1
.end method

.method static synthetic access$10300(Lcom/android/server/audio/AudioService;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUidLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$10400(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUid:I

    return v0
.end method

.method static synthetic access$10402(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUid:I

    return p1
.end method

.method static synthetic access$10500(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/AudioSystemAdapter;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    return-object v0
.end method

.method static synthetic access$10608(Lcom/android/server/audio/AudioService;)I
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicyCounter:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicyCounter:I

    return v0
.end method

.method static synthetic access$10700(Lcom/android/server/audio/AudioService;Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setExtVolumeController(Landroid/media/audiopolicy/IAudioPolicyCallback;)V

    return-void
.end method

.method static synthetic access$10900(Lcom/android/server/audio/AudioService;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExtVolumeControllerLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$11002(Lcom/android/server/audio/AudioService;Landroid/media/audiopolicy/IAudioPolicyCallback;)Landroid/media/audiopolicy/IAudioPolicyCallback;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    return-object p1
.end method

.method static synthetic access$11100(Lcom/android/server/audio/AudioService;)Ljava/util/HashMap;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    return-object v0
.end method

.method static synthetic access$11200(Lcom/android/server/audio/AudioService;)Ljava/util/HashMap;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    return-object v0
.end method

.method static synthetic access$11400(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    return v0
.end method

.method static synthetic access$11402(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    return p1
.end method

.method static synthetic access$11500(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setNbQualityMode(I)V

    return-void
.end method

.method static synthetic access$11600(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/ScreenSharingHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    return-object v0
.end method

.method static synthetic access$11700(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->checkAllFixedVolumeDevices(I)V

    return-void
.end method

.method static synthetic access$11800(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/AudioHqmHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHqmHelper:Lcom/samsung/android/server/audio/AudioHqmHelper;

    return-object v0
.end method

.method static synthetic access$11900(Lcom/android/server/audio/AudioService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkMuteInterval()V

    return-void
.end method

.method static synthetic access$12002(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    return p1
.end method

.method static synthetic access$12100(Lcom/android/server/audio/AudioService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setAllSoundMute()V

    return-void
.end method

.method static synthetic access$12200(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/PhoneStateHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPhoneStateHelper:Lcom/samsung/android/server/audio/PhoneStateHelper;

    return-object v0
.end method

.method static synthetic access$12300(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/PackageListHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    return-object v0
.end method

.method static synthetic access$12400(Lcom/android/server/audio/AudioService;Ljava/lang/String;Z)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/lang/String;
    .param p2, "x2"    # Z

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->checkAndBroadcastKaraokeInstalled(Ljava/lang/String;Z)V

    return-void
.end method

.method static synthetic access$12500(Lcom/android/server/audio/AudioService;)Landroid/util/SparseIntArray;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    return-object v0
.end method

.method static synthetic access$12600(Lcom/android/server/audio/AudioService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->clearSoundAssistantSettings()V

    return-void
.end method

.method static synthetic access$12700(Lcom/android/server/audio/AudioService;Ljava/lang/String;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->unSetSoundSettingEventBroadcastIntent(Ljava/lang/String;)V

    return-void
.end method

.method static synthetic access$12800(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->registerBackgroundWhitelistForSoundAssistant(I)V

    return-void
.end method

.method static synthetic access$12900(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/SoundAppPolicyManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSoundAppPolicyManager:Lcom/samsung/android/server/audio/SoundAppPolicyManager;

    return-object v0
.end method

.method static synthetic access$13000(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/GoodCatchManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    return-object v0
.end method

.method static synthetic access$13002(Lcom/android/server/audio/AudioService;Lcom/samsung/android/server/audio/GoodCatchManager;)Lcom/samsung/android/server/audio/GoodCatchManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    return-object p1
.end method

.method static synthetic access$13200(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeIndex:I

    return v0
.end method

.method static synthetic access$13302(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateForBlueTooth:I

    return p1
.end method

.method static synthetic access$13400(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    return v0
.end method

.method static synthetic access$13500(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    return v0
.end method

.method static synthetic access$13600(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    return v0
.end method

.method static synthetic access$13602(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    return p1
.end method

.method static synthetic access$13700(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/AudioSettingsHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    return-object v0
.end method

.method static synthetic access$13800(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/VolumeMonitorService;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getVolumeMonitorService()Lcom/samsung/android/server/audio/VolumeMonitorService;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$13902(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    return p1
.end method

.method static synthetic access$14000(Lcom/android/server/audio/AudioService;I)[Ljava/lang/String;
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$14100(Lcom/android/server/audio/AudioService;)Landroid/content/pm/PackageManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    return-object v0
.end method

.method static synthetic access$14200(Lcom/android/server/audio/AudioService;I)I
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->sendBecomingNoisyIntent(I)I

    move-result v0

    return v0
.end method

.method static synthetic access$14400(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    return v0
.end method

.method static synthetic access$14402(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    return p1
.end method

.method static synthetic access$14500(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setAdaptSound(I)V

    return-void
.end method

.method static synthetic access$14600(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    return v0
.end method

.method static synthetic access$14602(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    return p1
.end method

.method static synthetic access$14700(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setUpscalerMode(I)V

    return-void
.end method

.method static synthetic access$14800(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    return v0
.end method

.method static synthetic access$14802(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    return p1
.end method

.method static synthetic access$14900(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setKaraokeListenback(I)V

    return-void
.end method

.method static synthetic access$15002(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mAppVolumeEnabled:Z

    return p1
.end method

.method static synthetic access$15100(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMultiAudioFocusEnabled:Z

    return v0
.end method

.method static synthetic access$15102(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMultiAudioFocusEnabled:Z

    return p1
.end method

.method static synthetic access$15202(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mIsBikeMode:Z

    return p1
.end method

.method static synthetic access$15300(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mVolumeMonitorValue:I

    return v0
.end method

.method static synthetic access$15302(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mVolumeMonitorValue:I

    return p1
.end method

.method static synthetic access$15400(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    return v0
.end method

.method static synthetic access$15402(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    return p1
.end method

.method static synthetic access$15500(Lcom/android/server/audio/AudioService;ZLjava/lang/String;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z
    .param p2, "x2"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(ZLjava/lang/String;)V

    return-void
.end method

.method static synthetic access$1600(Lcom/android/server/audio/AudioService;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$1700(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/AudioService$ForceControlStreamClient;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    return-object v0
.end method

.method static synthetic access$1702(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$ForceControlStreamClient;)Lcom/android/server/audio/AudioService$ForceControlStreamClient;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    return-object p1
.end method

.method static synthetic access$1802(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    return p1
.end method

.method static synthetic access$1902(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    return p1
.end method

.method static synthetic access$200(Landroid/os/Handler;IIIILjava/lang/Object;I)V
    .registers 7
    .param p0, "x0"    # Landroid/os/Handler;
    .param p1, "x1"    # I
    .param p2, "x2"    # I
    .param p3, "x3"    # I
    .param p4, "x4"    # I
    .param p5, "x5"    # Ljava/lang/Object;
    .param p6, "x6"    # I

    .line 258
    invoke-static/range {p0 .. p6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    return-void
.end method

.method static synthetic access$2100(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/AudioDeviceBroker;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    return-object v0
.end method

.method static synthetic access$2200(Lcom/android/server/audio/AudioService;ILandroid/os/IBinder;IIZLjava/lang/String;)I
    .registers 8
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Landroid/os/IBinder;
    .param p3, "x3"    # I
    .param p4, "x4"    # I
    .param p5, "x5"    # Z
    .param p6, "x6"    # Ljava/lang/String;

    .line 258
    invoke-direct/range {p0 .. p6}, Lcom/android/server/audio/AudioService;->setModeInt(ILandroid/os/IBinder;IIZLjava/lang/String;)I

    move-result v0

    return v0
.end method

.method static synthetic access$2300(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/AudioGameManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioGameManager:Lcom/samsung/android/server/audio/AudioGameManager;

    return-object v0
.end method

.method static synthetic access$2800(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    return v0
.end method

.method static synthetic access$2900(Lcom/android/server/audio/AudioService;)[Lcom/android/server/audio/AudioService$VolumeStreamState;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    return-object v0
.end method

.method static synthetic access$3000(Lcom/android/server/audio/AudioService;)Landroid/content/ContentResolver;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    return-object v0
.end method

.method static synthetic access$3100(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/SystemServerAdapter;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    return-object v0
.end method

.method static synthetic access$3200(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->observeDevicesForStreams(I)V

    return-void
.end method

.method static synthetic access$3300(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/MultiSoundManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    return-object v0
.end method

.method static synthetic access$3400(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMode:I

    return v0
.end method

.method static synthetic access$3500(Lcom/android/server/audio/AudioService;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$3600(Lcom/android/server/audio/AudioService;)[F
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPrescaleAbsoluteVolume:[F

    return-object v0
.end method

.method static synthetic access$3700(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    return v0
.end method

.method static synthetic access$3800(Lcom/android/server/audio/AudioService;I)Z
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$3900(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    return v0
.end method

.method static synthetic access$4000(Lcom/android/server/audio/AudioService;III)I
    .registers 5
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I
    .param p3, "x3"    # I

    .line 258
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/audio/AudioService;->rescaleIndex(III)I

    move-result v0

    return v0
.end method

.method static synthetic access$4100(Lcom/android/server/audio/AudioService;Landroid/content/Intent;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/Intent;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    return-void
.end method

.method static synthetic access$4200(Lcom/android/server/audio/AudioService;IILjava/lang/String;)V
    .registers 4
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I
    .param p3, "x3"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/audio/AudioService;->sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V

    return-void
.end method

.method static synthetic access$4300(Lcom/android/server/audio/AudioService;I)Z
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$4400(Lcom/android/server/audio/AudioService;I)I
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getDevicesForStream(I)I

    move-result v0

    return v0
.end method

.method static synthetic access$4600(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    return v0
.end method

.method static synthetic access$4900(Lcom/android/server/audio/AudioService;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->onDispatchAudioServerStateChange(Z)V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/audio/AudioService;Landroid/os/Handler;IIILjava/lang/Object;I)V
    .registers 7
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/os/Handler;
    .param p2, "x2"    # I
    .param p3, "x3"    # I
    .param p4, "x4"    # I
    .param p5, "x5"    # Ljava/lang/Object;
    .param p6, "x6"    # I

    .line 258
    invoke-direct/range {p0 .. p6}, Lcom/android/server/audio/AudioService;->queueMsgUnderWakeLock(Landroid/os/Handler;IIILjava/lang/Object;I)V

    return-void
.end method

.method static synthetic access$5000(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/SoundEffectsHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    return-object v0
.end method

.method static synthetic access$5100(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    return v0
.end method

.method static synthetic access$5200(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/PlaybackActivityMonitor;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    return-object v0
.end method

.method static synthetic access$5300(Lcom/android/server/audio/AudioService;)Landroid/os/PowerManager$WakeLock;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

    return-object v0
.end method

.method static synthetic access$5400(Lcom/android/server/audio/AudioService;Ljava/lang/String;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->onCheckMusicActive(Ljava/lang/String;)V

    return-void
.end method

.method static synthetic access$5500(Lcom/android/server/audio/AudioService;ZLjava/lang/String;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z
    .param p2, "x2"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->onConfigureSafeVolume(ZLjava/lang/String;)V

    return-void
.end method

.method static synthetic access$5600(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->onAccessoryPlugMediaUnmute(I)V

    return-void
.end method

.method static synthetic access$5700(Lcom/android/server/audio/AudioService;II)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->onUnmuteStream(II)V

    return-void
.end method

.method static synthetic access$5800(Lcom/android/server/audio/AudioService;Ljava/lang/String;I)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/lang/String;
    .param p2, "x2"    # I

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->onDynPolicyMixStateUpdate(Ljava/lang/String;I)V

    return-void
.end method

.method static synthetic access$5900(Lcom/android/server/audio/AudioService;Ljava/util/ArrayList;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/util/ArrayList;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->onEnableSurroundFormats(Ljava/util/ArrayList;)V

    return-void
.end method

.method static synthetic access$600(Lcom/android/server/audio/AudioService;)Landroid/content/Context;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    return-object v0
.end method

.method static synthetic access$6000(Lcom/android/server/audio/AudioService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->onUpdateRingerModeServiceInt()V

    return-void
.end method

.method static synthetic access$6100(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->onSetVolumeIndexOnDevice(Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;)V

    return-void
.end method

.method static synthetic access$6200(Lcom/android/server/audio/AudioService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->onObserveDevicesForAllStreams()V

    return-void
.end method

.method static synthetic access$6300(Lcom/android/server/audio/AudioService;ILjava/lang/String;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->onCheckVolumeCecOnHdmiConnection(ILjava/lang/String;)V

    return-void
.end method

.method static synthetic access$6400(Lcom/android/server/audio/AudioService;Ljava/util/List;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/util/List;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->onPlaybackConfigChange(Ljava/util/List;)V

    return-void
.end method

.method static synthetic access$6600(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/AudioEventLogger;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/audio/AudioEventLogger;

    return-object v0
.end method

.method static synthetic access$6700(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mEncodedSurroundMode:I

    return v0
.end method

.method static synthetic access$6702(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mEncodedSurroundMode:I

    return p1
.end method

.method static synthetic access$6802(Lcom/android/server/audio/AudioService;Ljava/lang/String;)Ljava/lang/String;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Ljava/lang/String;

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mEnabledSurroundFormats:Ljava/lang/String;

    return-object p1
.end method

.method static synthetic access$6900(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->updateRingerAndZenModeAffectedStreams()Z

    move-result v0

    return v0
.end method

.method static synthetic access$700(Lcom/android/server/audio/AudioService;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->updateAssistantUId(Z)V

    return-void
.end method

.method static synthetic access$7000(Lcom/android/server/audio/AudioService;IZ)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Z

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    return-void
.end method

.method static synthetic access$7100(Lcom/android/server/audio/AudioService;Landroid/content/ContentResolver;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/ContentResolver;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->readDockAudioSettings(Landroid/content/ContentResolver;)V

    return-void
.end method

.method static synthetic access$7200(Lcom/android/server/audio/AudioService;Landroid/content/ContentResolver;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/ContentResolver;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->updateMasterMono(Landroid/content/ContentResolver;)V

    return-void
.end method

.method static synthetic access$7300(Lcom/android/server/audio/AudioService;Landroid/content/ContentResolver;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/ContentResolver;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->updateMasterBalance(Landroid/content/ContentResolver;)V

    return-void
.end method

.method static synthetic access$7400(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSurroundModeChanged:Z

    return v0
.end method

.method static synthetic access$7402(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mSurroundModeChanged:Z

    return p1
.end method

.method static synthetic access$7500(Lcom/android/server/audio/AudioService;Landroid/content/ContentResolver;Z)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/ContentResolver;
    .param p2, "x2"    # Z

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    return-void
.end method

.method static synthetic access$7600(Lcom/android/server/audio/AudioService;ILjava/lang/String;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Ljava/lang/String;

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->sendEncodedSurroundMode(ILjava/lang/String;)V

    return-void
.end method

.method static synthetic access$7700(Lcom/android/server/audio/AudioService;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget v0, p0, Lcom/android/server/audio/AudioService;->mDockState:I

    return v0
.end method

.method static synthetic access$7702(Lcom/android/server/audio/AudioService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    iput p1, p0, Lcom/android/server/audio/AudioService;->mDockState:I

    return p1
.end method

.method static synthetic access$7800(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    return v0
.end method

.method static synthetic access$7900(Lcom/android/server/audio/AudioService;)Lcom/samsung/android/server/audio/DvfsHelper;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    return-object v0
.end method

.method static synthetic access$8000(Lcom/android/server/audio/AudioService;Landroid/content/Context;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/Context;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->handleConfigurationChanged(Landroid/content/Context;)V

    return-void
.end method

.method static synthetic access$8100(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUserSwitchedReceived:Z

    return v0
.end method

.method static synthetic access$8102(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mUserSwitchedReceived:Z

    return p1
.end method

.method static synthetic access$8200(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/MediaFocusControl;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    return-object v0
.end method

.method static synthetic access$8300(Lcom/android/server/audio/AudioService;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->readAudioSettings(Z)V

    return-void
.end method

.method static synthetic access$8400(Lcom/android/server/audio/AudioService;IZ)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Z

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->updateThemeSound(IZ)V

    return-void
.end method

.method static synthetic access$8500(Lcom/android/server/audio/AudioService;Landroid/content/pm/UserInfo;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/pm/UserInfo;

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->killBackgroundUserProcessesWithRecordAudioPermission(Landroid/content/pm/UserInfo;)V

    return-void
.end method

.method static synthetic access$8600(Lcom/android/server/audio/AudioService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsBluetoothCastState:Z

    return v0
.end method

.method static synthetic access$8602(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mIsBluetoothCastState:Z

    return p1
.end method

.method static synthetic access$8700(Lcom/android/server/audio/AudioService;Landroid/content/Context;Landroid/content/Intent;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/content/Context;
    .param p2, "x2"    # Landroid/content/Intent;

    .line 258
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->handleAudioEffectBroadcast(Landroid/content/Context;Landroid/content/Intent;)V

    return-void
.end method

.method static synthetic access$8802(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    return p1
.end method

.method static synthetic access$8900(Lcom/android/server/audio/AudioService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    return-void
.end method

.method static synthetic access$9000(Lcom/android/server/audio/AudioService;ZII)V
    .registers 4
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z
    .param p2, "x2"    # I
    .param p3, "x3"    # I

    .line 258
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/audio/AudioService;->setMasterMuteInternalNoCallerCheck(ZII)V

    return-void
.end method

.method static synthetic access$9100(Lcom/android/server/audio/AudioService;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$9200(Lcom/android/server/audio/AudioService;)Landroid/hardware/hdmi/HdmiControlManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    return-object v0
.end method

.method static synthetic access$9300(Lcom/android/server/audio/AudioService;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->updateHdmiCecSinkLocked(Z)V

    return-void
.end method

.method static synthetic access$9402(Lcom/android/server/audio/AudioService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Z

    .line 258
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    return p1
.end method

.method static synthetic access$9700(Lcom/android/server/audio/AudioService;)Lcom/android/server/audio/AudioService$VolumeController;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    return-object v0
.end method

.method static synthetic access$9800(Lcom/android/server/audio/AudioService;)Landroid/media/AudioManagerInternal$RingerModeDelegate;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;

    .line 258
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    return-object v0
.end method

.method static synthetic access$9802(Lcom/android/server/audio/AudioService;Landroid/media/AudioManagerInternal$RingerModeDelegate;)Landroid/media/AudioManagerInternal$RingerModeDelegate;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 258
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    return-object p1
.end method

.method static synthetic access$9900(Lcom/android/server/audio/AudioService;IIILjava/lang/String;Ljava/lang/String;IZI)V
    .registers 9
    .param p0, "x0"    # Lcom/android/server/audio/AudioService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I
    .param p3, "x3"    # I
    .param p4, "x4"    # Ljava/lang/String;
    .param p5, "x5"    # Ljava/lang/String;
    .param p6, "x6"    # I
    .param p7, "x7"    # Z
    .param p8, "x8"    # I

    .line 258
    invoke-direct/range {p0 .. p8}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    return-void
.end method

.method private addAudioSystemDeviceOutToFixedVolumeDevices(I)V
    .registers 4
    .param p1, "audioSystemDeviceOut"    # I

    .line 10150
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Adding DeviceType: 0x"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " to mFixedVolumeDevices"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10153
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 10154
    return-void
.end method

.method private addAudioSystemDeviceOutToFullVolumeDevices(I)V
    .registers 4
    .param p1, "audioSystemDeviceOut"    # I

    .line 10166
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Adding DeviceType: 0x"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " to mFullVolumeDevices"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10169
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 10170
    return-void
.end method

.method private adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V
    .registers 28
    .param p1, "direction"    # I
    .param p2, "suggestedStreamType"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "uid"    # I
    .param p7, "hasModifyAudioSettings"    # Z
    .param p8, "keyEventMode"    # I

    .line 2172
    move-object/from16 v10, p0

    move/from16 v11, p2

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "adjustSuggestedStreamVolume() stream="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", flags="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v14, p3

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", caller="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", volControlStream="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v10, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", userSelect="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v1, v10, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2176
    if-eqz p1, :cond_74

    .line 2177
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    const/4 v2, 0x0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2179
    const-string v3, "/"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " uid:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v15, p6

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object v1, v7

    move/from16 v3, p2

    move/from16 v4, p1

    move/from16 v5, p3

    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 2177
    invoke-virtual {v0, v7}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    goto :goto_76

    .line 2176
    :cond_74
    move/from16 v15, p6

    .line 2182
    :goto_76
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->notifyExternalVolumeController(I)Z

    move-result v16

    .line 2184
    .local v16, "hasExternalVolumeController":Z
    new-instance v0, Landroid/media/MediaMetrics$Item;

    const-string v1, "audio.service.adjustSuggestedStreamVolume"

    invoke-direct {v0, v1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 2185
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 2186
    invoke-virtual {v0, v1, v12}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 2187
    invoke-virtual {v0, v1, v13}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->DIRECTION:Landroid/media/MediaMetrics$Key;

    .line 2188
    if-lez p1, :cond_9d

    .line 2189
    const-string/jumbo v2, "up"

    goto :goto_9f

    :cond_9d
    const-string v2, "down"

    .line 2188
    :goto_9f
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->EXTERNAL:Landroid/media/MediaMetrics$Key;

    .line 2190
    if-eqz v16, :cond_ab

    .line 2191
    const-string/jumbo v2, "yes"

    goto :goto_ae

    :cond_ab
    const-string/jumbo v2, "no"

    .line 2190
    :goto_ae
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->FLAGS:Landroid/media/MediaMetrics$Key;

    .line 2192
    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    .line 2193
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 2195
    if-eqz v16, :cond_c2

    .line 2196
    return-void

    .line 2200
    :cond_c2
    iget-object v1, v10, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    monitor-enter v1

    .line 2202
    :try_start_c5
    iget-boolean v0, v10, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    if-eqz v0, :cond_cc

    .line 2203
    iget v0, v10, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    .local v0, "streamType":I
    goto :goto_ee

    .line 2205
    .end local v0    # "streamType":I
    :cond_cc
    invoke-direct {v10, v11}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    move-result v0

    .line 2207
    .local v0, "maybeActiveStreamType":I
    const/4 v2, 0x2

    const/4 v3, 0x0

    if-eq v0, v2, :cond_dd

    const/4 v2, 0x5

    if-ne v0, v2, :cond_d8

    goto :goto_dd

    .line 2211
    :cond_d8
    invoke-static {v0, v3}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v2

    .local v2, "activeForReal":Z
    goto :goto_e1

    .line 2209
    .end local v2    # "activeForReal":Z
    :cond_dd
    :goto_dd
    invoke-direct {v10, v0, v3}, Lcom/android/server/audio/AudioService;->wasStreamActiveRecently(II)Z

    move-result v2

    .line 2213
    .restart local v2    # "activeForReal":Z
    :goto_e1
    if-nez v2, :cond_ed

    iget v3, v10, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    const/4 v4, -0x1

    if-ne v3, v4, :cond_e9

    goto :goto_ed

    .line 2216
    :cond_e9
    iget v3, v10, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    move v0, v3

    .local v3, "streamType":I
    goto :goto_ee

    .line 2214
    .end local v3    # "streamType":I
    :cond_ed
    :goto_ed
    move v3, v0

    .line 2219
    .end local v2    # "activeForReal":Z
    .local v0, "streamType":I
    :goto_ee
    monitor-exit v1
    :try_end_ef
    .catchall {:try_start_c5 .. :try_end_ef} :catchall_10f

    .line 2221
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->isMuteAdjust(I)Z

    move-result v17

    .line 2223
    .local v17, "isMute":Z
    invoke-direct {v10, v0}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 2224
    sget-object v1, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v18, v1, v0

    .line 2246
    .local v18, "resolvedStream":I
    move-object/from16 v1, p0

    move v2, v0

    move/from16 v3, p1

    move/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/audio/AudioService;->adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 2248
    return-void

    .line 2219
    .end local v0    # "streamType":I
    .end local v17    # "isMute":Z
    .end local v18    # "resolvedStream":I
    :catchall_10f
    move-exception v0

    :try_start_110
    monitor-exit v1
    :try_end_111
    .catchall {:try_start_110 .. :try_end_111} :catchall_10f

    throw v0
.end method

.method private broadcastMasterMuteStatus(Z)V
    .registers 4
    .param p1, "muted"    # Z

    .line 3350
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.media.MASTER_MUTE_CHANGED_ACTION"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3351
    .local v0, "intent":Landroid/content/Intent;
    const-string v1, "android.media.EXTRA_MASTER_VOLUME_MUTED"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 3352
    const/high16 v1, 0x24000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 3354
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendStickyBroadcastToAll(Landroid/content/Intent;)V

    .line 3355
    return-void
.end method

.method private broadcastRingerMode(Ljava/lang/String;I)V
    .registers 5
    .param p1, "action"    # Ljava/lang/String;
    .param p2, "ringerMode"    # I

    .line 5406
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v0}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v0

    if-nez v0, :cond_9

    .line 5407
    return-void

    .line 5410
    :cond_9
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, p1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5411
    .local v0, "broadcast":Landroid/content/Intent;
    const-string v1, "android.media.EXTRA_RINGER_MODE"

    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5412
    const/high16 v1, 0x24000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5414
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendStickyBroadcastToAll(Landroid/content/Intent;)V

    .line 5415
    return-void
.end method

.method private broadcastVibrateSetting(I)V
    .registers 5
    .param p1, "vibrateType"    # I

    .line 5418
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v0}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v0

    if-nez v0, :cond_9

    .line 5419
    return-void

    .line 5422
    :cond_9
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v0}, Landroid/app/ActivityManagerInternal;->isSystemReady()Z

    move-result v0

    if-eqz v0, :cond_29

    .line 5423
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.media.VIBRATE_SETTING_CHANGED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5424
    .local v0, "broadcast":Landroid/content/Intent;
    const-string v1, "android.media.EXTRA_VIBRATE_TYPE"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5425
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getVibrateSetting(I)I

    move-result v1

    const-string v2, "android.media.EXTRA_VIBRATE_SETTING"

    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5426
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 5428
    .end local v0    # "broadcast":Landroid/content/Intent;
    :cond_29
    return-void
.end method

.method private bypassAdjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;II)Lcom/android/server/audio/AudioService$BypassReason;
    .registers 25
    .param p1, "streamType"    # I
    .param p2, "direction"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "uid"    # I
    .param p7, "device"    # I

    .line 13141
    move-object/from16 v9, p0

    move/from16 v10, p1

    move/from16 v11, p2

    move/from16 v12, p3

    move/from16 v13, p7

    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DISPLAY_VOLUME_CONTROL:Z

    if-eqz v0, :cond_29

    .line 13142
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    invoke-virtual {v0, v10, v12, v13}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->tvVolumeShouldBeAdjusted(III)Z

    move-result v0

    if-eqz v0, :cond_29

    .line 13143
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    const-string/jumbo v1, "vkev"

    invoke-virtual {v0, v1, v11}, Landroid/hardware/display/DisplayManager;->semSetWifiDisplayConfiguration(Ljava/lang/String;I)I

    .line 13144
    const/high16 v0, 0x800000

    or-int/2addr v0, v12

    .line 13145
    .end local p3    # "flags":I
    .local v0, "flags":I
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v1, v10, v0}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 13146
    sget-object v1, Lcom/android/server/audio/AudioService$BypassReason;->DISPLAY_VOLUME_CONTROL:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v1

    .line 13151
    .end local v0    # "flags":I
    .restart local p3    # "flags":I
    :cond_29
    const/4 v0, 0x2

    const/16 v1, 0x64

    const-string v2, "AS.AudioService"

    const/4 v3, 0x1

    if-ne v11, v1, :cond_5f

    if-eq v10, v3, :cond_36

    const/4 v4, 0x5

    if-ne v10, v4, :cond_5f

    .line 13154
    :cond_36
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v4

    if-eq v4, v0, :cond_5f

    .line 13155
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Couldn\'t unmute "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " in "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13156
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->CANNOT_UNMUTE_SILENT_VIBRATE:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13161
    :cond_5f
    iget v4, v9, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    if-ne v4, v3, :cond_73

    .line 13162
    iget v4, v9, Lcom/android/server/audio/AudioService;->mRingerMode:I

    if-nez v4, :cond_6b

    if-ne v10, v0, :cond_6b

    if-eq v11, v3, :cond_73

    .line 13165
    :cond_6b
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v10, v12}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 13166
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->ALL_SOUND_MUTE:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13170
    :cond_73
    iget v0, v9, Lcom/android/server/audio/AudioService;->mMode:I

    if-nez v0, :cond_9c

    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/high16 v4, 0x20000000

    invoke-virtual {v0, v4}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v0

    if-eqz v0, :cond_9c

    .line 13173
    if-ne v11, v1, :cond_99

    const-string/jumbo v0, "net.mirrorlink.on"

    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "0"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_99

    .line 13174
    const-string/jumbo v0, "not bypass adjustStreamVolume because mirrorlink is disconnected."

    invoke-static {v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9c

    .line 13176
    :cond_99
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->TMS_CONNECT:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13180
    :cond_9c
    :goto_9c
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v14, v0, v10

    .line 13184
    .local v14, "streamTypeAlias":I
    const/4 v0, 0x3

    const/16 v1, 0xa

    if-ne v10, v0, :cond_12c

    invoke-direct {v9, v11}, Lcom/android/server/audio/AudioService;->isRaiseOrLowerOrSame(I)Z

    move-result v4

    if-eqz v4, :cond_12c

    .line 13185
    move/from16 v4, p7

    .line 13187
    .local v4, "newDevice":I
    invoke-direct {v9, v13}, Lcom/android/server/audio/AudioService;->selectDevice(I)I

    move-result v15

    .line 13190
    .end local v4    # "newDevice":I
    .local v15, "newDevice":I
    const/high16 v4, 0x200000

    if-eq v13, v15, :cond_105

    .line 13191
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeController;->isVisible()Z

    move-result v2

    if-eqz v2, :cond_c6

    iget v2, v9, Lcom/android/server/audio/AudioService;->mVolumeControllerStream:I

    const/16 v3, 0x2713

    if-eq v2, v3, :cond_c6

    .line 13193
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13197
    :cond_c6
    if-nez v11, :cond_cb

    .line 13198
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->CONSUME_ADJUST_SAME:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13201
    :cond_cb
    iget v2, v9, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    if-ne v2, v1, :cond_eb

    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    if-eqz v1, :cond_eb

    .line 13203
    invoke-virtual {v9, v0, v15}, Lcom/android/server/audio/AudioService;->getStreamVolume(II)I

    move-result v16

    .line 13204
    .local v16, "index":I
    add-int v2, v16, v11

    const/4 v7, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p4

    move/from16 v6, p6

    move v8, v15

    invoke-direct/range {v0 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 13206
    .end local v16    # "index":I
    goto :goto_102

    .line 13207
    :cond_eb
    invoke-direct {v9, v15, v11}, Lcom/android/server/audio/AudioService;->getNextFineMediaVolume(II)I

    move-result v16

    .line 13208
    .restart local v16    # "index":I
    or-int v3, v12, v4

    const/4 v7, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, v16

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move/from16 v6, p6

    move v8, v15

    invoke-direct/range {v0 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 13211
    .end local v16    # "index":I
    :goto_102
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->MULTISOUND:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13212
    :cond_105
    iget v5, v9, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    if-ne v5, v1, :cond_10d

    iget-object v5, v9, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    if-eqz v5, :cond_12c

    .line 13214
    :cond_10d
    if-nez v11, :cond_112

    .line 13216
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->CONSUME_ADJUST_SAME:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13219
    :cond_112
    invoke-direct {v9, v13, v11}, Lcom/android/server/audio/AudioService;->getNextFineMediaVolume(II)I

    move-result v16

    .line 13220
    .restart local v16    # "index":I
    or-int v3, v12, v4

    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, v16

    move-object/from16 v4, p4

    move-object/from16 v5, p4

    move/from16 v6, p6

    invoke-direct/range {v0 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 13222
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->MEDIA_VOLUME_STEP_ON:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13227
    .end local v15    # "newDevice":I
    .end local v16    # "index":I
    :cond_12c
    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeController;->isSafeVolumeDialogShowing()Z

    move-result v4

    if-eqz v4, :cond_15a

    if-eq v11, v3, :cond_138

    if-nez v11, :cond_15a

    .line 13228
    :cond_138
    invoke-direct {v9, v14}, Lcom/android/server/audio/AudioService;->isMedia(I)Z

    move-result v4

    if-nez v4, :cond_15a

    .line 13229
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "bypassAdjustStreamVolume: stream("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") when ear safety pop-up is shown"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13231
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->SKIP_WARNING_POPUP_VISIBLE:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13235
    :cond_15a
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->isNotificationOrRinger(I)Z

    move-result v4

    if-eqz v4, :cond_1aa

    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeController;->isVisible()Z

    move-result v4

    if-nez v4, :cond_1aa

    and-int/lit8 v4, v12, 0x1

    if-eqz v4, :cond_1aa

    .line 13237
    invoke-static {}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getInstance()Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;

    move-result-object v6

    .line 13238
    .local v6, "customDeviceManager":Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;
    if-eqz v6, :cond_192

    .line 13239
    invoke-virtual {v6}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getVolumePanelEnabledState()Z

    move-result v4

    if-nez v4, :cond_192

    .line 13241
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Allow volume increase action for stream: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " when volume panel hidden by Knox Custom"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1aa

    .line 13245
    :cond_192
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v10

    invoke-virtual {v0, v13}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v7

    .line 13246
    .local v7, "index":I
    move-object/from16 v0, p0

    move/from16 v1, p1

    move v2, v7

    move v3, v7

    move/from16 v4, p3

    move/from16 v5, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 13247
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->SKIP_VOLUME_PANEL_NOT_VISIBLE:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13251
    .end local v6    # "customDeviceManager":Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;
    .end local v7    # "index":I
    :cond_1aa
    :goto_1aa
    iget-boolean v4, v9, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v4, :cond_1f9

    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v4, v10

    if-ne v4, v0, :cond_1f9

    .line 13253
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v10

    invoke-virtual {v0, v13}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v6

    .line 13254
    .local v6, "curIndex":I
    if-ne v11, v3, :cond_1f9

    iget v0, v9, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    mul-int/2addr v0, v1

    add-int/lit8 v3, v6, 0xa

    if-ge v0, v3, :cond_1f9

    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    .line 13256
    invoke-static/range {p7 .. p7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1f9

    .line 13257
    const/16 v0, 0x96

    if-eq v6, v0, :cond_1e0

    iget v0, v9, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    const/16 v3, 0xf

    if-eq v0, v3, :cond_1e0

    .line 13258
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeController;->displayVolumeLimiterToast()V

    .line 13261
    :cond_1e0
    const-string v0, "Volume index is already reached at volume limit value"

    invoke-static {v2, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13262
    iget v0, v9, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    mul-int/lit8 v2, v0, 0xa

    mul-int/lit8 v3, v0, 0xa

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v4, p3

    move/from16 v5, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 13263
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->VOLUME_LIMITER:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0

    .line 13267
    .end local v6    # "curIndex":I
    :cond_1f9
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    return-object v0
.end method

.method private callLcdOn()V
    .registers 4

    .line 13352
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPowerManager:Landroid/os/PowerManager;

    const v1, 0x3000000a

    const-string v2, "AS.AudioService"

    invoke-virtual {v0, v1, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v0

    .line 13355
    .local v0, "wl":Landroid/os/PowerManager$WakeLock;
    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v1

    if-nez v1, :cond_16

    .line 13356
    const-wide/16 v1, 0x1388

    invoke-virtual {v0, v1, v2}, Landroid/os/PowerManager$WakeLock;->acquire(J)V

    .line 13358
    :cond_16
    return-void
.end method

.method private callVibrateMsg()V
    .registers 10

    .line 13370
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsVibrate:Z

    const/4 v1, 0x1

    if-eq v0, v1, :cond_17

    .line 13371
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->vibrateCall()V

    .line 13372
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mIsVibrate:Z

    .line 13373
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v3, 0x68

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/16 v8, 0x258

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 13375
    :cond_17
    return-void
.end method

.method private callerHasPermission(Ljava/lang/String;)Z
    .registers 3
    .param p1, "permission"    # Ljava/lang/String;

    .line 9082
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_a

    const/4 v0, 0x1

    goto :goto_b

    :cond_a
    const/4 v0, 0x0

    :goto_b
    return v0
.end method

.method private canChangeAccessibilityVolume()Z
    .registers 6

    .line 2916
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2917
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.CHANGE_ACCESSIBILITY_VOLUME"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    const/4 v2, 0x1

    if-nez v1, :cond_10

    .line 2919
    monitor-exit v0

    return v2

    .line 2921
    :cond_10
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    if-eqz v1, :cond_29

    .line 2922
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 2923
    .local v1, "callingUid":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_19
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    array-length v4, v4

    if-ge v3, v4, :cond_29

    .line 2924
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    aget v4, v4, v3

    if-ne v4, v1, :cond_26

    .line 2925
    monitor-exit v0

    return v2

    .line 2923
    :cond_26
    add-int/lit8 v3, v3, 0x1

    goto :goto_19

    .line 2929
    .end local v1    # "callingUid":I
    .end local v3    # "i":I
    :cond_29
    const/4 v1, 0x0

    monitor-exit v0

    return v1

    .line 2930
    :catchall_2c
    move-exception v1

    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_3 .. :try_end_2e} :catchall_2c

    throw v1
.end method

.method private canProjectAudio(Landroid/media/projection/IMediaProjection;)Z
    .registers 8
    .param p1, "projection"    # Landroid/media/projection/IMediaProjection;

    .line 9087
    const/4 v0, 0x0

    const-string v1, "AS.AudioService"

    if-nez p1, :cond_b

    .line 9088
    const-string v2, "MediaProjection is null"

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9089
    return v0

    .line 9092
    :cond_b
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getProjectionService()Landroid/media/projection/IMediaProjectionManager;

    move-result-object v2

    .line 9093
    .local v2, "projectionService":Landroid/media/projection/IMediaProjectionManager;
    if-nez v2, :cond_17

    .line 9094
    const-string v3, "Can\'t get service IMediaProjectionManager"

    invoke-static {v1, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9095
    return v0

    .line 9099
    :cond_17
    :try_start_17
    invoke-interface {v2, p1}, Landroid/media/projection/IMediaProjectionManager;->isValidMediaProjection(Landroid/media/projection/IMediaProjection;)Z

    move-result v3

    if-nez v3, :cond_23

    .line 9100
    const-string v3, "App passed invalid MediaProjection token"

    invoke-static {v1, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_22
    .catch Landroid/os/RemoteException; {:try_start_17 .. :try_end_22} :catch_4d

    .line 9101
    return v0

    .line 9107
    :cond_23
    nop

    .line 9110
    :try_start_24
    invoke-interface {p1}, Landroid/media/projection/IMediaProjection;->canProjectAudio()Z

    move-result v3

    if-nez v3, :cond_30

    .line 9111
    const-string v3, "App passed MediaProjection that can not project audio"

    invoke-static {v1, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2f
    .catch Landroid/os/RemoteException; {:try_start_24 .. :try_end_2f} :catch_33

    .line 9112
    return v0

    .line 9118
    :cond_30
    nop

    .line 9120
    const/4 v0, 0x1

    return v0

    .line 9114
    :catch_33
    move-exception v3

    .line 9115
    .local v3, "e":Landroid/os/RemoteException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Can\'t call .canProjectAudio() on valid IMediaProjection"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9116
    invoke-interface {p1}, Landroid/media/projection/IMediaProjection;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 9115
    invoke-static {v1, v4, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9117
    return v0

    .line 9103
    .end local v3    # "e":Landroid/os/RemoteException;
    :catch_4d
    move-exception v3

    .line 9104
    .restart local v3    # "e":Landroid/os/RemoteException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Can\'t call .isValidMediaProjection() on IMediaProjectionManager"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9105
    invoke-interface {v2}, Landroid/media/projection/IMediaProjectionManager;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 9104
    invoke-static {v1, v4, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9106
    return v0
.end method

.method private checkAddAllFixedVolumeDevices(ILjava/lang/String;)V
    .registers 8
    .param p1, "device"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 1513
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v0

    .line 1514
    .local v0, "numStreamTypes":I
    const/4 v1, 0x0

    .local v1, "streamType":I
    :goto_5
    if-ge v1, v0, :cond_2f

    .line 1515
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    invoke-virtual {v2, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->hasIndexForDevice(I)Z

    move-result v2

    if-nez v2, :cond_25

    .line 1518
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v2, v1

    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v4, v1

    aget-object v2, v2, v4

    const/high16 v4, 0x40000000    # 2.0f

    .line 1520
    invoke-virtual {v2, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v2

    .line 1518
    const/4 v4, 0x1

    invoke-virtual {v3, v2, p1, p2, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 1523
    :cond_25
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 1514
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 1525
    .end local v1    # "streamType":I
    :cond_2f
    return-void
.end method

.method private checkAllAliasStreamVolumes()V
    .registers 9

    .line 1440
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 1443
    .local v0, "unMutedStreamStates":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$VolumeStreamState;>;"
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1444
    :try_start_8
    const-class v2, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v2
    :try_end_b
    .catchall {:try_start_8 .. :try_end_b} :catchall_42

    .line 1445
    :try_start_b
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v3

    .line 1446
    .local v3, "numStreamTypes":I
    const/4 v4, 0x0

    .local v4, "streamType":I
    :goto_10
    if-ge v4, v3, :cond_37

    .line 1447
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v4

    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    sget-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v7, v7, v4

    aget-object v6, v6, v7

    const-string v7, "AS.AudioService"

    .line 1448
    invoke-virtual {v5, v6, v7}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 1450
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v4

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v5

    if-nez v5, :cond_34

    .line 1453
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v4

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1446
    :cond_34
    add-int/lit8 v4, v4, 0x1

    goto :goto_10

    .line 1457
    .end local v3    # "numStreamTypes":I
    .end local v4    # "streamType":I
    :cond_37
    monitor-exit v2
    :try_end_38
    .catchall {:try_start_b .. :try_end_38} :catchall_3f

    .line 1462
    :try_start_38
    sget-object v2, Lcom/android/server/audio/-$$Lambda$Qz1TZ6WaK4F6PXK_1J75tfyIXHk;->INSTANCE:Lcom/android/server/audio/-$$Lambda$Qz1TZ6WaK4F6PXK_1J75tfyIXHk;

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->forEach(Ljava/util/function/Consumer;)V

    .line 1464
    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_38 .. :try_end_3e} :catchall_42

    .line 1465
    return-void

    .line 1457
    :catchall_3f
    move-exception v3

    :try_start_40
    monitor-exit v2
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_3f

    .end local v0    # "unMutedStreamStates":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$VolumeStreamState;>;"
    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    :try_start_41
    throw v3

    .line 1464
    .restart local v0    # "unMutedStreamStates":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$VolumeStreamState;>;"
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    :catchall_42
    move-exception v2

    monitor-exit v1
    :try_end_44
    .catchall {:try_start_41 .. :try_end_44} :catchall_42

    throw v2
.end method

.method private checkAllFixedVolumeDevices()V
    .registers 4

    .line 1529
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v0

    .line 1530
    .local v0, "numStreamTypes":I
    const/4 v1, 0x0

    .local v1, "streamType":I
    :goto_5
    if-ge v1, v0, :cond_11

    .line 1531
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 1530
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 1533
    .end local v1    # "streamType":I
    :cond_11
    return-void
.end method

.method private checkAllFixedVolumeDevices(I)V
    .registers 3
    .param p1, "streamType"    # I

    .line 1536
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, p1

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 1537
    return-void
.end method

.method private checkAndBroadcastKaraokeInstalled(Ljava/lang/String;Z)V
    .registers 6
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "installed"    # Z

    .line 13973
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v1, "karaoke_allow"

    invoke-virtual {v0, p1, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->checkAppCategory(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_c

    .line 13974
    return-void

    .line 13976
    :cond_c
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Karaoke app is "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string/jumbo v1, "installed"

    if-eqz p2, :cond_1d

    move-object v2, v1

    goto :goto_20

    :cond_1d
    const-string/jumbo v2, "removed"

    :goto_20
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v2, "AS.AudioService"

    invoke-static {v2, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13977
    new-instance v0, Landroid/content/Intent;

    const-string v2, "com.samsung.android.intent.karaoke"

    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 13978
    .local v0, "karaokeIntent":Landroid/content/Intent;
    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 13979
    const-string/jumbo v1, "package"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 13980
    const-string v1, "com.sec.android.app.soundalive"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 13981
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 13982
    return-void
.end method

.method private checkForRingerModeChange(IIIZLjava/lang/String;I)I
    .registers 15
    .param p1, "oldIndex"    # I
    .param p2, "direction"    # I
    .param p3, "step"    # I
    .param p4, "isMuted"    # Z
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "flags"    # I

    .line 4969
    const/4 v0, 0x1

    .line 4970
    .local v0, "result":I
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isPlatformTelevision()Z

    move-result v1

    if-nez v1, :cond_108

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v1, :cond_d

    goto/16 :goto_108

    .line 4974
    :cond_d
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v1

    .line 4976
    .local v1, "ringerMode":I
    const/16 v2, 0x64

    const/16 v3, 0x65

    const/4 v4, -0x1

    const/4 v5, 0x1

    if-eqz v1, :cond_b5

    const-string v6, "AS.AudioService"

    if-eq v1, v5, :cond_6b

    const/4 v2, 0x2

    if-eq v1, v2, :cond_36

    .line 5056
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "checkForRingerModeChange() wrong ringer mode: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v6, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_de

    .line 4978
    :cond_36
    if-ne p2, v4, :cond_56

    .line 4979
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-eqz v2, :cond_4b

    .line 4985
    if-gt p3, p1, :cond_de

    mul-int/lit8 v2, p3, 0x2

    if-ge p1, v2, :cond_de

    .line 4986
    const/4 v1, 0x1

    .line 4987
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, p0, Lcom/android/server/audio/AudioService;->mLoweredFromNormalToVibrateTime:J

    goto/16 :goto_de

    .line 4990
    :cond_4b
    if-ne p1, p3, :cond_de

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    iget-boolean v2, v2, Landroid/media/VolumePolicy;->volumeDownToEnterSilent:Z

    if-eqz v2, :cond_de

    .line 4991
    const/4 v1, 0x0

    goto/16 :goto_de

    .line 4994
    :cond_56
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v2, :cond_de

    if-eq p2, v3, :cond_60

    const/16 v2, -0x64

    if-ne p2, v2, :cond_de

    .line 4996
    :cond_60
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-eqz v2, :cond_66

    .line 4997
    const/4 v1, 0x1

    goto :goto_67

    .line 4999
    :cond_66
    const/4 v1, 0x0

    .line 5002
    :goto_67
    and-int/lit8 v0, v0, -0x2

    goto/16 :goto_de

    .line 5006
    :cond_6b
    iget-boolean v7, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-nez v7, :cond_76

    .line 5007
    const-string v2, "checkForRingerModeChange() current ringer mode is vibratebut no vibrator is present"

    invoke-static {v6, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5009
    goto/16 :goto_de

    .line 5011
    :cond_76
    if-ne p2, v4, :cond_ab

    .line 5013
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v2, :cond_84

    mul-int/lit8 v2, p3, 0x2

    if-lt p1, v2, :cond_84

    if-eqz p4, :cond_84

    .line 5014
    const/4 v1, 0x2

    goto :goto_b2

    .line 5015
    :cond_84
    iget v2, p0, Lcom/android/server/audio/AudioService;->mPrevVolDirection:I

    if-eq v2, v4, :cond_b2

    .line 5016
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    iget-boolean v2, v2, Landroid/media/VolumePolicy;->volumeDownToEnterSilent:Z

    if-eqz v2, :cond_a8

    .line 5017
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iget-wide v4, p0, Lcom/android/server/audio/AudioService;->mLoweredFromNormalToVibrateTime:J

    sub-long/2addr v2, v4

    .line 5019
    .local v2, "diff":J
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    iget v4, v4, Landroid/media/VolumePolicy;->vibrateToSilentDebounce:I

    int-to-long v4, v4

    cmp-long v4, v2, v4

    if-lez v4, :cond_a7

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 5020
    invoke-interface {v4}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->canVolumeDownEnterSilent()Z

    move-result v4

    if-eqz v4, :cond_a7

    .line 5021
    const/4 v1, 0x0

    .line 5023
    .end local v2    # "diff":J
    :cond_a7
    goto :goto_b2

    .line 5024
    :cond_a8
    or-int/lit16 v0, v0, 0x800

    goto :goto_b2

    .line 5027
    :cond_ab
    if-eq p2, v5, :cond_b1

    if-eq p2, v3, :cond_b1

    if-ne p2, v2, :cond_b2

    .line 5030
    :cond_b1
    const/4 v1, 0x2

    .line 5032
    :cond_b2
    :goto_b2
    and-int/lit8 v0, v0, -0x2

    .line 5033
    goto :goto_de

    .line 5035
    :cond_b5
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v6, :cond_c3

    if-ne p2, v4, :cond_c3

    mul-int/lit8 v4, p3, 0x2

    if-lt p1, v4, :cond_c3

    if-eqz p4, :cond_c3

    .line 5037
    const/4 v1, 0x2

    goto :goto_db

    .line 5038
    :cond_c3
    if-eq p2, v5, :cond_c9

    if-eq p2, v3, :cond_c9

    if-ne p2, v2, :cond_db

    .line 5041
    :cond_c9
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    iget-boolean v2, v2, Landroid/media/VolumePolicy;->volumeUpToExitSilent:Z

    if-nez v2, :cond_d2

    .line 5042
    or-int/lit16 v0, v0, 0x80

    goto :goto_db

    .line 5044
    :cond_d2
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-eqz v2, :cond_da

    if-ne p2, v5, :cond_da

    .line 5045
    const/4 v1, 0x1

    goto :goto_db

    .line 5049
    :cond_da
    const/4 v1, 0x2

    .line 5053
    :cond_db
    :goto_db
    and-int/lit8 v0, v0, -0x2

    .line 5054
    nop

    .line 5060
    :cond_de
    :goto_de
    invoke-direct {p0, p5}, Lcom/android/server/audio/AudioService;->isAndroidNPlus(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_ff

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->wouldToggleZenMode(I)Z

    move-result v2

    if-eqz v2, :cond_ff

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 5061
    invoke-virtual {v2, p5}, Landroid/app/NotificationManager;->isNotificationPolicyAccessGrantedForPackage(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_ff

    and-int/lit16 v2, p6, 0x1000

    if-eqz v2, :cond_f7

    goto :goto_ff

    .line 5063
    :cond_f7
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Not allowed to change Do Not Disturb state"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5066
    :cond_ff
    :goto_ff
    const/4 v2, 0x0

    const-string v3, "AS.AudioService.checkForRingerModeChange"

    invoke-direct {p0, v1, v3, v2}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 5068
    iput p2, p0, Lcom/android/server/audio/AudioService;->mPrevVolDirection:I

    .line 5070
    return v0

    .line 4971
    .end local v1    # "ringerMode":I
    :cond_108
    :goto_108
    return v0
.end method

.method private checkModifyPhoneStateOrRoutingPermission()V
    .registers 3

    .line 14072
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_27

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 14075
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_27

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 14078
    const-string v1, "com.sec.android.permission.IN_APP_SOUND"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1f

    goto :goto_27

    .line 14081
    :cond_1f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Not allowed to audio routing"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14083
    :cond_27
    :goto_27
    return-void
.end method

.method private checkMonitorAudioServerStatePermission()V
    .registers 3

    .line 9968
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_1d

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9971
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_15

    goto :goto_1d

    .line 9974
    :cond_15
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Not allowed to monitor audioserver state"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9976
    :cond_1d
    :goto_1d
    return-void
.end method

.method private checkMuteAffectedStreams()V
    .registers 6

    .line 1543
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v2, v1

    if-ge v0, v2, :cond_2b

    .line 1544
    aget-object v1, v1, v0

    .line 1545
    .local v1, "vss":Lcom/android/server/audio/AudioService$VolumeStreamState;
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$800(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v2

    if-lez v2, :cond_28

    .line 1546
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v2

    if-eqz v2, :cond_28

    .line 1547
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v2

    const/4 v3, 0x6

    if-eq v2, v3, :cond_28

    .line 1548
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v3

    const/4 v4, 0x1

    shl-int v3, v4, v3

    not-int v3, v3

    and-int/2addr v2, v3

    iput v2, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 1543
    .end local v1    # "vss":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :cond_28
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 1551
    .end local v0    # "i":I
    :cond_2b
    return-void
.end method

.method private checkMuteInterval()V
    .registers 4

    .line 11569
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->isMuteIntervalEnabled()Z

    move-result v0

    if-nez v0, :cond_7

    .line 11570
    return-void

    .line 11573
    :cond_7
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 11575
    iget v1, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    const-string v2, "checkMuteInterval"

    invoke-direct {p0, v1, v2, v0}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 11576
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "mode_ringer_time_on"

    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 11577
    return-void
.end method

.method private checkPlayRingerModeEffectSound(Ljava/lang/String;Z)Z
    .registers 4
    .param p1, "caller"    # Ljava/lang/String;
    .param p2, "external"    # Z

    .line 13605
    const-string v0, "com.samsung.accessibility"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1e

    .line 13606
    const-string v0, "com.samsung.android.app.routines"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    goto :goto_1e

    .line 13609
    :cond_11
    const-string v0, "checkForRingerModeChange"

    invoke-virtual {p1, v0}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1b

    .line 13612
    const/4 v0, 0x0

    return v0

    .line 13614
    :cond_1b
    xor-int/lit8 v0, p2, 0x1

    return v0

    .line 13607
    :cond_1e
    :goto_1e
    const/4 v0, 0x1

    return v0
.end method

.method private checkRCVStateForSARTest()V
    .registers 6

    .line 12803
    const v0, 0x400000c

    .line 12806
    .local v0, "HEADPHONE_DEVICE":I
    const/4 v1, 0x0

    .line 12810
    .local v1, "rcvSARValue":Z
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v2

    if-nez v2, :cond_e

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mSarBackoffParam:Z

    if-eqz v2, :cond_29

    .line 12811
    :cond_e
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const v3, 0x400000c

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v2

    .line 12814
    .local v2, "isCheckHeadPhoneConnected":Z
    if-nez v2, :cond_29

    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3}, Lcom/android/server/audio/AudioDeviceBroker;->isForcedUse()Z

    move-result v3

    if-nez v3, :cond_29

    .line 12815
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getCurOutDevice()I

    move-result v3

    const/4 v4, 0x1

    if-ne v3, v4, :cond_29

    .line 12816
    const/4 v1, 0x1

    .line 12822
    .end local v2    # "isCheckHeadPhoneConnected":Z
    :cond_29
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mCurRCVBackOffState:Z

    if-ne v2, v1, :cond_2e

    .line 12823
    return-void

    .line 12827
    :cond_2e
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.samsung.media.action.receiver_sar"

    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12828
    .local v2, "intent":Landroid/content/Intent;
    const-string v3, "android.samsung.media.extra.receiver"

    invoke-virtual {v2, v3, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 12829
    sget-object v3, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-direct {p0, v2, v3}, Lcom/android/server/audio/AudioService;->sendBroadcastToUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 12830
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mCurRCVBackOffState:Z

    .line 12831
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Send receiver_sar state "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "AS.AudioService"

    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12832
    return-void
.end method

.method private checkSafeMediaVolume(III)Z
    .registers 9
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "device"    # I

    .line 8063
    invoke-static {}, Lcom/samsung/android/server/audio/AudioHelper;->isFactoryMode()Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_8

    .line 8064
    return v1

    .line 8069
    :cond_8
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_BIKE_MODE:Z

    if-eqz v0, :cond_11

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsBikeMode:Z

    if-eqz v0, :cond_11

    .line 8070
    return v1

    .line 8073
    :cond_11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v0

    .line 8074
    :try_start_14
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    const/4 v3, 0x0

    const/4 v4, 0x3

    if-eqz v2, :cond_31

    .line 8075
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->isSafeMediaVolumeDevice(I)Z

    move-result v2

    if-eqz v2, :cond_4f

    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v2, p1

    if-ne v2, v4, :cond_4f

    .line 8077
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v2

    if-le p2, v2, :cond_4f

    .line 8078
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->notifyVibrationForSafeMediaPopup()V

    .line 8079
    monitor-exit v0

    return v3

    .line 8083
    :cond_31
    iget v2, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    if-ne v2, v4, :cond_4f

    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v2, p1

    if-ne v2, v4, :cond_4f

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    .line 8085
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v2, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4f

    .line 8086
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v2

    if-le p2, v2, :cond_4f

    .line 8087
    monitor-exit v0

    return v3

    .line 8090
    :cond_4f
    monitor-exit v0

    return v1

    .line 8091
    :catchall_51
    move-exception v1

    monitor-exit v0
    :try_end_53
    .catchall {:try_start_14 .. :try_end_53} :catchall_51

    throw v1
.end method

.method private checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    .registers 10
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p2, "errorMsg"    # Ljava/lang/String;

    .line 9177
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9178
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    .line 9180
    .local v0, "hasPermissionForPolicy":Z
    :goto_d
    const/4 v1, 0x0

    const-string v2, " / uid "

    const-string v3, " for pid "

    const-string v4, "AS.AudioService"

    if-nez v0, :cond_3f

    .line 9181
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9182
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9183
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", need MODIFY_AUDIO_ROUTING"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 9181
    invoke-static {v4, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9184
    return-object v1

    .line 9187
    :cond_3f
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 9188
    .local v5, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    if-nez v5, :cond_76

    .line 9189
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9190
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9191
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", unregistered policy"

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 9189
    invoke-static {v4, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9192
    return-object v1

    .line 9194
    :cond_76
    return-object v5
.end method

.method private clearSoundAssistantSettings()V
    .registers 8

    .line 12572
    const/16 v0, 0xa

    iput v0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 12573
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v1, "media_volume_step_index"

    invoke-virtual {v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12574
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    .line 12575
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string v2, "enable_floating_button"

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12577
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSelfiestickIsConnected:Z

    .line 12581
    const/16 v1, 0x20

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 12582
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "l_sound_assistant_ring_via_headset_enable="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 12583
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v2, "ring_through_headset"

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12587
    iget v1, p0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    const/4 v2, 0x1

    if-ne v1, v2, :cond_46

    .line 12588
    const-string/jumbo v1, "l_sound_assistant_lr_switch_enable=false"

    invoke-static {v1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 12590
    :cond_46
    iput v0, p0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    .line 12591
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v2, "sound_lr_switch"

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12593
    const/4 v1, 0x0

    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->setMediaVolumeSteps([I)Z

    .line 12594
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v2, "ignore_audio_focus"

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12595
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    const/4 v2, -0x1

    invoke-virtual {v1, v2, v0}, Lcom/android/server/audio/MediaFocusControl;->setIgnoreAudioFocus(IZ)V

    .line 12598
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_63
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v3}, Landroid/util/SparseIntArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_7b

    .line 12599
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v3

    .line 12600
    .local v3, "appUid":I
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    const/16 v5, 0x64

    invoke-virtual {v4, v3, v5}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolume(II)V

    .line 12598
    .end local v3    # "appUid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_63

    .line 12602
    .end local v1    # "i":I
    :cond_7b
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 12606
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v3, "mono_audio_db"

    invoke-virtual {v1, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    move-result v1

    .line 12607
    .local v1, "ret":I
    const/4 v3, -0x2

    if-lez v1, :cond_94

    .line 12608
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v5, "master_mono"

    invoke-static {v4, v5, v0, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 12613
    .end local v1    # "ret":I
    :cond_94
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v4, "sound_balance"

    invoke-virtual {v1, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    move-result v1

    .line 12614
    .restart local v1    # "ret":I
    if-lez v1, :cond_a9

    .line 12615
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    iget v5, p0, Lcom/android/server/audio/AudioService;->mMasterBalance:F

    const-string/jumbo v6, "master_balance"

    invoke-static {v4, v6, v5, v3}, Landroid/provider/Settings$System;->putFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)Z

    .line 12621
    .end local v1    # "ret":I
    :cond_a9
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->muteMediaStreamOfSpeaker(Z)V

    .line 12623
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v3, "speaker_media_index"

    invoke-virtual {v1, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12624
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v3, "mute_media_by_vibrate_or_silent_mode"

    invoke-virtual {v1, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 12625
    iput v2, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 12626
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 12628
    return-void
.end method

.method private createAudioSystemThread()V
    .registers 2

    .line 1366
    new-instance v0, Lcom/android/server/audio/AudioService$AudioSystemThread;

    invoke-direct {v0, p0}, Lcom/android/server/audio/AudioService$AudioSystemThread;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystemThread:Lcom/android/server/audio/AudioService$AudioSystemThread;

    .line 1367
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$AudioSystemThread;->start()V

    .line 1368
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->waitForAudioHandlerCreation()V

    .line 1369
    return-void
.end method

.method private createStreamStates()V
    .registers 8

    .line 1554
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v0

    .line 1555
    .local v0, "numStreamTypes":I
    new-array v1, v0, [Lcom/android/server/audio/AudioService$VolumeStreamState;

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 1557
    .local v1, "streams":[Lcom/android/server/audio/AudioService$VolumeStreamState;
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_9
    if-ge v2, v0, :cond_31

    .line 1558
    const/4 v3, 0x3

    const/4 v4, 0x0

    if-ne v2, v3, :cond_1f

    .line 1559
    new-instance v3, Lcom/android/server/audio/AudioService$MediaVolumeStreamState;

    sget-object v5, Landroid/provider/Settings$System;->VOLUME_SETTINGS_INT:[Ljava/lang/String;

    sget-object v6, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v6, v6, v2

    aget-object v5, v5, v6

    invoke-direct {v3, p0, v5, v2, v4}, Lcom/android/server/audio/AudioService$MediaVolumeStreamState;-><init>(Lcom/android/server/audio/AudioService;Ljava/lang/String;ILcom/android/server/audio/AudioService$1;)V

    aput-object v3, v1, v2

    .line 1561
    goto :goto_2e

    .line 1563
    :cond_1f
    new-instance v3, Lcom/android/server/audio/AudioService$VolumeStreamState;

    sget-object v5, Landroid/provider/Settings$System;->VOLUME_SETTINGS_INT:[Ljava/lang/String;

    sget-object v6, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v6, v6, v2

    aget-object v5, v5, v6

    invoke-direct {v3, p0, v5, v2, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;-><init>(Lcom/android/server/audio/AudioService;Ljava/lang/String;ILcom/android/server/audio/AudioService$1;)V

    aput-object v3, v1, v2

    .line 1557
    :goto_2e
    add-int/lit8 v2, v2, 0x1

    goto :goto_9

    .line 1567
    .end local v2    # "i":I
    :cond_31
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkAllFixedVolumeDevices()V

    .line 1568
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkAllAliasStreamVolumes()V

    .line 1569
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkMuteAffectedStreams()V

    .line 1570
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->updateDefaultVolumes()V

    .line 1571
    return-void
.end method

.method private createVariableMediaVolumeMap([I)V
    .registers 13
    .param p1, "volumeSteps"    # [I

    .line 12514
    sget-object v0, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    const/4 v1, 0x3

    aget v0, v0, v1

    .line 12515
    .local v0, "maxIndex":I
    mul-int/lit8 v1, v0, 0xa

    add-int/lit8 v1, v1, 0x1

    new-array v1, v1, [Lcom/android/server/audio/AudioService$VolumeMap;

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 12517
    const/4 v1, 0x0

    .line 12518
    .local v1, "beforeStep":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_f
    array-length v3, p1

    if-ge v2, v3, :cond_49

    .line 12520
    if-nez v2, :cond_16

    .line 12521
    const/4 v3, 0x0

    .local v3, "lower":I
    goto :goto_1a

    .line 12523
    .end local v3    # "lower":I
    :cond_16
    add-int/lit8 v3, v2, -0x1

    aget v3, p1, v3

    .line 12526
    .restart local v3    # "lower":I
    :goto_1a
    array-length v4, p1

    add-int/lit8 v4, v4, -0x1

    if-ne v2, v4, :cond_22

    .line 12527
    mul-int/lit8 v4, v0, 0xa

    .local v4, "raise":I
    goto :goto_26

    .line 12529
    .end local v4    # "raise":I
    :cond_22
    add-int/lit8 v4, v2, 0x1

    aget v4, p1, v4

    .line 12532
    .restart local v4    # "raise":I
    :goto_26
    aget v5, p1, v2

    .line 12536
    .local v5, "curStep":I
    move v6, v1

    .local v6, "index":I
    :goto_29
    if-ge v6, v5, :cond_39

    .line 12537
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    new-instance v8, Lcom/android/server/audio/AudioService$VolumeMap;

    int-to-short v9, v3

    int-to-short v10, v5

    invoke-direct {v8, v9, v10}, Lcom/android/server/audio/AudioService$VolumeMap;-><init>(SS)V

    aput-object v8, v7, v6

    .line 12536
    add-int/lit8 v6, v6, 0x1

    goto :goto_29

    .line 12540
    .end local v6    # "index":I
    :cond_39
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    new-instance v7, Lcom/android/server/audio/AudioService$VolumeMap;

    int-to-short v8, v3

    int-to-short v9, v4

    invoke-direct {v7, v8, v9}, Lcom/android/server/audio/AudioService$VolumeMap;-><init>(SS)V

    aput-object v7, v6, v5

    .line 12541
    add-int/lit8 v1, v5, 0x1

    .line 12518
    .end local v3    # "lower":I
    .end local v4    # "raise":I
    .end local v5    # "curStep":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 12544
    .end local v2    # "i":I
    :cond_49
    mul-int/lit8 v2, v0, 0xa

    .line 12545
    .local v2, "raise":I
    add-int/lit8 v3, v1, -0x1

    .line 12546
    .restart local v3    # "lower":I
    :goto_4d
    mul-int/lit8 v4, v0, 0xa

    if-gt v1, v4, :cond_60

    .line 12547
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    add-int/lit8 v5, v1, 0x1

    .end local v1    # "beforeStep":I
    .local v5, "beforeStep":I
    new-instance v6, Lcom/android/server/audio/AudioService$VolumeMap;

    int-to-short v7, v3

    int-to-short v8, v2

    invoke-direct {v6, v7, v8}, Lcom/android/server/audio/AudioService$VolumeMap;-><init>(SS)V

    aput-object v6, v4, v1

    move v1, v5

    goto :goto_4d

    .line 12549
    .end local v5    # "beforeStep":I
    .restart local v1    # "beforeStep":I
    :cond_60
    return-void
.end method

.method private discardRmtSbmxFullVolDeathHandlerFor(Landroid/os/IBinder;)Z
    .registers 5
    .param p1, "cb"    # Landroid/os/IBinder;

    .line 3450
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 3451
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;>;"
    :goto_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_23

    .line 3452
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;

    .line 3453
    .local v1, "handler":Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;
    invoke-virtual {v1, p1}, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;->isHandlerFor(Landroid/os/IBinder;)Z

    move-result v2

    if-eqz v2, :cond_22

    .line 3454
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;->forget()V

    .line 3455
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3456
    const/4 v2, 0x1

    return v2

    .line 3458
    .end local v1    # "handler":Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;
    :cond_22
    goto :goto_6

    .line 3459
    :cond_23
    const/4 v1, 0x0

    return v1
.end method

.method private dumpAudioPolicies(Ljava/io/PrintWriter;)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 9349
    const-string v0, "\nAudio policies:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9350
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9351
    :try_start_8
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_12
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_26

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 9352
    .local v2, "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->toLogFriendlyString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 9353
    .end local v2    # "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    goto :goto_12

    .line 9354
    :cond_26
    monitor-exit v0

    .line 9355
    return-void

    .line 9354
    :catchall_28
    move-exception v1

    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_8 .. :try_end_2a} :catchall_28

    throw v1
.end method

.method private dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;
    .registers 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/String;"
        }
    .end annotation

    .line 8434
    .local p1, "deviceTypes":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-interface {p1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 8435
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/Integer;>;"
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-nez v1, :cond_d

    .line 8436
    const-string v1, ""

    return-object v1

    .line 8438
    :cond_d
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 8439
    .local v1, "sb":Ljava/lang/StringBuilder;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "0x"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Integer;

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8440
    :goto_34
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_5d

    .line 8441
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, ",0x"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Integer;

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_34

    .line 8443
    :cond_5d
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    return-object v2
.end method

.method private dumpRingerMode(Ljava/io/PrintWriter;)V
    .registers 5
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 8400
    const-string v0, "\nRinger mode: "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8401
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "- mode (internal) = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/server/audio/AudioService;->RINGER_MODE_NAMES:[Ljava/lang/String;

    iget v2, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    aget-object v1, v1, v2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8402
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "- mode (external) = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lcom/android/server/audio/AudioService;->RINGER_MODE_NAMES:[Ljava/lang/String;

    iget v2, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    aget-object v1, v1, v2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8403
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "- zen mode:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v1}, Landroid/app/NotificationManager;->getZenMode()I

    move-result v1

    invoke-static {v1}, Landroid/provider/Settings$Global;->zenModeToString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8404
    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    const-string v1, "affected"

    invoke-direct {p0, p1, v1, v0}, Lcom/android/server/audio/AudioService;->dumpRingerModeStreams(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 8405
    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    const-string/jumbo v1, "muted"

    invoke-direct {p0, p1, v1, v0}, Lcom/android/server/audio/AudioService;->dumpRingerModeStreams(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 8406
    const-string v0, "- delegate = "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8407
    return-void
.end method

.method private dumpRingerModeStreams(Ljava/io/PrintWriter;Ljava/lang/String;I)V
    .registers 9
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "type"    # Ljava/lang/String;
    .param p3, "streams"    # I

    .line 8410
    const-string v0, "- ringer mode "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, " streams = 0x"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8411
    invoke-static {p3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8412
    if-eqz p3, :cond_4b

    .line 8413
    const-string v0, " ("

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8414
    const/4 v0, 0x1

    .line 8415
    .local v0, "first":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1d
    sget-object v2, Landroid/media/AudioSystem;->STREAM_NAMES:[Ljava/lang/String;

    array-length v2, v2

    const/16 v3, 0x2c

    if-ge v1, v2, :cond_3c

    .line 8416
    const/4 v2, 0x1

    shl-int/2addr v2, v1

    .line 8417
    .local v2, "stream":I
    and-int v4, p3, v2

    if-eqz v4, :cond_39

    .line 8418
    if-nez v0, :cond_2f

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(C)V

    .line 8419
    :cond_2f
    sget-object v3, Landroid/media/AudioSystem;->STREAM_NAMES:[Ljava/lang/String;

    aget-object v3, v3, v1

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8420
    not-int v3, v2

    and-int/2addr p3, v3

    .line 8421
    const/4 v0, 0x0

    .line 8415
    .end local v2    # "stream":I
    :cond_39
    add-int/lit8 v1, v1, 0x1

    goto :goto_1d

    .line 8424
    .end local v1    # "i":I
    :cond_3c
    if-eqz p3, :cond_46

    .line 8425
    if-nez v0, :cond_43

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(C)V

    .line 8426
    :cond_43
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->print(I)V

    .line 8428
    :cond_46
    const/16 v1, 0x29

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 8430
    .end local v0    # "first":Z
    :cond_4b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 8431
    return-void
.end method

.method private dumpStreamStates(Ljava/io/PrintWriter;)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 1586
    const-string v0, "\nStream volumes (device: index)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1587
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v0

    .line 1588
    .local v0, "numStreamTypes":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_a
    if-ge v1, v0, :cond_38

    .line 1589
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "- "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v3, Landroid/media/AudioSystem;->STREAM_NAMES:[Ljava/lang/String;

    aget-object v3, v3, v1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ":"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1590
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    # invokes: Lcom/android/server/audio/AudioService$VolumeStreamState;->dump(Ljava/io/PrintWriter;)V
    invoke-static {v2, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1400(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/io/PrintWriter;)V

    .line 1591
    const-string v2, ""

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1588
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 1593
    .end local v1    # "i":I
    :cond_38
    const-string v1, "\n- mute affected streams = 0x"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1594
    iget v1, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    invoke-static {v1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1595
    return-void
.end method

.method private dumpSupportedSystemUsage(Ljava/io/PrintWriter;)V
    .registers 8
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 8529
    const-string v0, "Supported System Usages:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8530
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    monitor-enter v0

    .line 8531
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_9
    :try_start_9
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    array-length v2, v2

    if-ge v1, v2, :cond_24

    .line 8532
    const-string v2, "\t%s\n"

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    aget v5, v5, v1

    invoke-static {v5}, Landroid/media/AudioAttributes;->usageToString(I)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v4

    invoke-virtual {p1, v2, v3}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    .line 8531
    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    .line 8534
    .end local v1    # "i":I
    :cond_24
    monitor-exit v0

    .line 8535
    return-void

    .line 8534
    :catchall_26
    move-exception v1

    monitor-exit v0
    :try_end_28
    .catchall {:try_start_9 .. :try_end_28} :catchall_26

    throw v1
.end method

.method private dumpVolumeGroups(Ljava/io/PrintWriter;)V
    .registers 5
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 5935
    const-string v0, "\nVolume Groups (device: index)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 5936
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_6
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_21

    .line 5937
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 5938
    .local v1, "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    # invokes: Lcom/android/server/audio/AudioService$VolumeGroupState;->dump(Ljava/io/PrintWriter;)V
    invoke-static {v1, p1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->access$2700(Lcom/android/server/audio/AudioService$VolumeGroupState;Ljava/io/PrintWriter;)V

    .line 5939
    const-string v2, ""

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 5936
    .end local v1    # "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    .line 5941
    .end local v0    # "i":I
    :cond_21
    return-void
.end method

.method private enforceModifyAudioRoutingPermission()V
    .registers 3

    .line 2807
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_b

    .line 2811
    return-void

    .line 2809
    :cond_b
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Missing MODIFY_AUDIO_ROUTING permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enforceSafeMediaVolume(Ljava/lang/String;)V
    .registers 14
    .param p1, "caller"    # Ljava/lang/String;

    .line 8043
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    const/4 v1, 0x3

    aget-object v0, v0, v1

    .line 8044
    .local v0, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    .line 8046
    .local v1, "devices":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :goto_b
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_39

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v10

    .line 8047
    .local v10, "device":I
    invoke-virtual {v0, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v11

    .line 8048
    .local v11, "index":I
    invoke-direct {p0, v10}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v2

    if-le v11, v2, :cond_38

    .line 8049
    invoke-direct {p0, v10}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v2

    const/4 v3, 0x1

    invoke-virtual {v0, v2, v10, p1, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 8051
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v3, 0x0

    const/4 v4, 0x2

    const/4 v6, 0x0

    const/4 v8, 0x0

    move v5, v10

    move-object v7, v0

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 8059
    .end local v10    # "device":I
    .end local v11    # "index":I
    :cond_38
    goto :goto_b

    .line 8060
    :cond_39
    return-void
.end method

.method private enforceVolumeController(Ljava/lang/String;)V
    .registers 5
    .param p1, "action"    # Ljava/lang/String;

    .line 8575
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Only SystemUI can "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "android.permission.STATUS_BAR_SERVICE"

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8577
    return-void
.end method

.method private ensureValidAttributes(Landroid/media/audiopolicy/AudioVolumeGroup;)V
    .registers 6
    .param p1, "avg"    # Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 5904
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioVolumeGroup;->getAudioAttributes()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    move-result-object v0

    sget-object v1, Lcom/android/server/audio/-$$Lambda$AudioService$eq0KnrBbF7KWNGmAJRjyeCTIdzQ;->INSTANCE:Lcom/android/server/audio/-$$Lambda$AudioService$eq0KnrBbF7KWNGmAJRjyeCTIdzQ;

    .line 5905
    invoke-interface {v0, v1}, Ljava/util/stream/Stream;->anyMatch(Ljava/util/function/Predicate;)Z

    move-result v0

    .line 5906
    .local v0, "hasAtLeastOneValidAudioAttributes":Z
    if-eqz v0, :cond_11

    .line 5910
    return-void

    .line 5907
    :cond_11
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Volume Group "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " has no valid audio attributes"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private ensureValidDirection(I)V
    .registers 5
    .param p1, "direction"    # I

    .line 5224
    const/16 v0, -0x64

    if-eq p1, v0, :cond_2c

    const/4 v0, -0x1

    if-eq p1, v0, :cond_2c

    if-eqz p1, :cond_2c

    const/4 v0, 0x1

    if-eq p1, v0, :cond_2c

    const/16 v0, 0x64

    if-eq p1, v0, :cond_2c

    const/16 v0, 0x65

    if-ne p1, v0, :cond_15

    goto :goto_2c

    .line 5233
    :cond_15
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad direction "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5231
    :cond_2c
    :goto_2c
    nop

    .line 5235
    return-void
.end method

.method private ensureValidRingerMode(I)V
    .registers 5
    .param p1, "ringerMode"    # I

    .line 3764
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->isValidRingerMode(I)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 3767
    return-void

    .line 3765
    :cond_7
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad ringer mode "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private ensureValidStreamType(I)V
    .registers 5
    .param p1, "streamType"    # I

    .line 5238
    if-ltz p1, :cond_8

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v0, v0

    if-ge p1, v0, :cond_8

    .line 5241
    return-void

    .line 5239
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad stream type "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private forceFocusDuckingForAccessibility(Landroid/media/AudioAttributes;II)Z
    .registers 11
    .param p1, "aa"    # Landroid/media/AudioAttributes;
    .param p2, "request"    # I
    .param p3, "uid"    # I

    .line 7690
    const/4 v0, 0x0

    if-eqz p1, :cond_44

    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getUsage()I

    move-result v1

    const/16 v2, 0xb

    if-ne v1, v2, :cond_44

    const/4 v1, 0x3

    if-eq p2, v1, :cond_f

    goto :goto_44

    .line 7694
    :cond_f
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getBundle()Landroid/os/Bundle;

    move-result-object v1

    .line 7695
    .local v1, "extraInfo":Landroid/os/Bundle;
    if-eqz v1, :cond_43

    .line 7696
    const-string v2, "a11y_force_ducking"

    invoke-virtual {v1, v2}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_1e

    goto :goto_43

    .line 7699
    :cond_1e
    const/4 v2, 0x1

    if-nez p3, :cond_22

    .line 7700
    return v2

    .line 7702
    :cond_22
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    monitor-enter v3

    .line 7703
    :try_start_25
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    if-eqz v4, :cond_3e

    .line 7704
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 7705
    .local v4, "callingUid":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_2e
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    array-length v6, v6

    if-ge v5, v6, :cond_3e

    .line 7706
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    aget v6, v6, v5

    if-ne v6, v4, :cond_3b

    .line 7707
    monitor-exit v3

    return v2

    .line 7705
    :cond_3b
    add-int/lit8 v5, v5, 0x1

    goto :goto_2e

    .line 7711
    .end local v4    # "callingUid":I
    .end local v5    # "i":I
    :cond_3e
    monitor-exit v3

    .line 7712
    return v0

    .line 7711
    :catchall_40
    move-exception v0

    monitor-exit v3
    :try_end_42
    .catchall {:try_start_25 .. :try_end_42} :catchall_40

    throw v0

    .line 7697
    :cond_43
    :goto_43
    return v0

    .line 7692
    .end local v1    # "extraInfo":Landroid/os/Bundle;
    :cond_44
    :goto_44
    return v0
.end method

.method private fromVolumeKey(Ljava/lang/String;)Z
    .registers 3
    .param p1, "caller"    # Ljava/lang/String;

    .line 12500
    const-string v0, "FINE_VOLUME"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b

    const-string v0, "com.android.settings"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b

    .line 12501
    const-string v0, "com.android.systemui"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_19

    goto :goto_1b

    .line 12504
    :cond_19
    const/4 v0, 0x1

    return v0

    .line 12502
    :cond_1b
    :goto_1b
    const/4 v0, 0x0

    return v0
.end method

.method private getActiveStreamType(I)I
    .registers 12
    .param p1, "suggestedStreamType"    # I

    .line 5284
    const/4 v0, 0x1

    const/high16 v1, -0x80000000

    const/4 v2, 0x5

    const/4 v3, 0x2

    const/4 v4, 0x3

    if-ne p1, v1, :cond_26

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v5

    if-nez v5, :cond_26

    .line 5285
    invoke-static {}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getInstance()Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;

    move-result-object v5

    .line 5286
    .local v5, "customDeviceManager":Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;
    if-eqz v5, :cond_26

    .line 5287
    invoke-virtual {v5}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getVolumeControlStream()I

    move-result v6

    if-eq v6, v0, :cond_25

    if-eq v6, v3, :cond_24

    if-eq v6, v4, :cond_23

    const/4 v7, 0x4

    if-eq v6, v7, :cond_22

    goto :goto_26

    .line 5295
    :cond_22
    return v2

    .line 5293
    :cond_23
    return v4

    .line 5291
    :cond_24
    return v3

    .line 5289
    :cond_25
    return v0

    .line 5302
    .end local v5    # "customDeviceManager":Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;
    :cond_26
    :goto_26
    iget-boolean v5, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v5, :cond_2d

    if-ne p1, v1, :cond_2d

    .line 5304
    return v4

    .line 5307
    :cond_2d
    iget v5, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    const-string/jumbo v6, "getActiveStreamType: Forcing STREAM_BLUETOOTH_SCO for remote mic"

    const/4 v7, 0x6

    const/4 v8, 0x0

    const-string v9, "AS.AudioService"

    if-eq v5, v0, :cond_39

    goto :goto_7e

    .line 5309
    :cond_39
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v0

    if-eqz v0, :cond_47

    .line 5310
    invoke-static {v8}, Landroid/media/AudioSystem;->getForceUse(I)I

    move-result v0

    if-ne v0, v4, :cond_46

    .line 5313
    return v7

    .line 5316
    :cond_46
    return v8

    .line 5318
    :cond_47
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRemoteMic()Z

    move-result v0

    if-eqz v0, :cond_57

    .line 5319
    invoke-static {v8}, Landroid/media/AudioSystem;->getForceUse(I)I

    move-result v0

    if-ne v0, v4, :cond_57

    .line 5320
    invoke-static {v9, v6}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5321
    return v7

    .line 5322
    :cond_57
    if-ne p1, v1, :cond_60

    .line 5324
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->getActiveStreamTypeInternal(I)I

    move-result v0

    return v0

    .line 5344
    :cond_60
    sget v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 5345
    invoke-direct {p0, v2, v0}, Lcom/android/server/audio/AudioService;->wasStreamActiveRecently(II)Z

    move-result v0

    if-eqz v0, :cond_6f

    .line 5347
    const-string/jumbo v0, "getActiveStreamType: Forcing STREAM_NOTIFICATION stream active"

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5348
    return v2

    .line 5349
    :cond_6f
    sget v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    invoke-direct {p0, v3, v0}, Lcom/android/server/audio/AudioService;->wasStreamActiveRecently(II)Z

    move-result v0

    if-eqz v0, :cond_7e

    .line 5351
    const-string/jumbo v0, "getActiveStreamType: Forcing STREAM_RING stream active"

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5352
    return v3

    .line 5355
    :cond_7e
    :goto_7e
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v0

    if-eqz v0, :cond_98

    .line 5356
    invoke-static {v8}, Landroid/media/AudioSystem;->getForceUse(I)I

    move-result v0

    if-ne v0, v4, :cond_91

    .line 5358
    const-string/jumbo v0, "getActiveStreamType: Forcing STREAM_BLUETOOTH_SCO"

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5359
    return v7

    .line 5361
    :cond_91
    const-string/jumbo v0, "getActiveStreamType: Forcing STREAM_VOICE_CALL"

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5362
    return v8

    .line 5364
    :cond_98
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRemoteMic()Z

    move-result v0

    if-eqz v0, :cond_a8

    .line 5365
    invoke-static {v8}, Landroid/media/AudioSystem;->getForceUse(I)I

    move-result v0

    if-ne v0, v4, :cond_a8

    .line 5366
    invoke-static {v9, v6}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5367
    return v7

    .line 5368
    :cond_a8
    sget v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    invoke-static {v2, v0}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v0

    if-eqz v0, :cond_b7

    .line 5370
    const-string/jumbo v0, "getActiveStreamType: Forcing STREAM_NOTIFICATION"

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5371
    return v2

    .line 5372
    :cond_b7
    sget v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    invoke-static {v3, v0}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v0

    if-eqz v0, :cond_c6

    .line 5374
    const-string/jumbo v0, "getActiveStreamType: Forcing STREAM_RING"

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5375
    return v3

    .line 5376
    :cond_c6
    if-ne p1, v1, :cond_cf

    .line 5378
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->getActiveStreamTypeInternal(I)I

    move-result v0

    return v0

    .line 5400
    :cond_cf
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "getActiveStreamType: Returning suggested type "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v9, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5402
    return p1
.end method

.method private getActiveStreamTypeInternal(I)I
    .registers 19
    .param p1, "platformType"    # I

    .line 13427
    move-object/from16 v0, p0

    const/4 v1, 0x1

    .line 13428
    .local v1, "FLAG_STREAM_VOICE_CALL":I
    const/4 v2, 0x2

    .line 13429
    .local v2, "FLAG_STREAM_SYSTEM":I
    const/4 v3, 0x4

    .line 13430
    .local v3, "FLAG_STREAM_RING":I
    const/16 v4, 0x8

    .line 13431
    .local v4, "FLAG_STREAM_MUSIC":I
    const/16 v5, 0x10

    .line 13432
    .local v5, "FLAG_STREAM_ALARM":I
    const/16 v6, 0x20

    .line 13433
    .local v6, "FLAG_STREAM_NOTIFICATION":I
    const/16 v7, 0x40

    .line 13434
    .local v7, "FLAG_STREAM_BLUETOOTH_SCO":I
    const/16 v8, 0x80

    .line 13435
    .local v8, "FLAG_STREAM_SYSTEM_ENFORCED":I
    const/16 v9, 0x100

    .line 13436
    .local v9, "FLAG_STREAM_DTMF":I
    const/16 v10, 0x200

    .line 13437
    .local v10, "FLAG_STREAM_TTS":I
    const/16 v11, 0x400

    .line 13438
    .local v11, "FLAG_STREAM_ACCESSIBILITY":I
    const/16 v12, 0x800

    .line 13440
    .local v12, "FLAG_STREAM_ASSISTANT":I
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getActiveStreams()I

    move-result v13

    .line 13441
    .local v13, "activeStream":I
    and-int/lit16 v14, v13, 0x400

    if-eqz v14, :cond_22

    .line 13442
    const/16 v14, 0xa

    return v14

    .line 13443
    :cond_22
    and-int/lit8 v14, v13, 0x1

    const/4 v15, 0x0

    if-eqz v14, :cond_28

    .line 13444
    return v15

    .line 13445
    :cond_28
    and-int/lit16 v14, v13, 0x208

    const-string v15, "AS.AudioService"

    if-nez v14, :cond_8a

    .line 13446
    move/from16 v16, v1

    const/4 v1, 0x3

    const/4 v14, 0x0

    .end local v1    # "FLAG_STREAM_VOICE_CALL":I
    .local v16, "FLAG_STREAM_VOICE_CALL":I
    invoke-static {v1, v14}, Landroid/media/AudioSystem;->isStreamActiveRemotely(II)Z

    move-result v14

    if-eqz v14, :cond_3c

    move/from16 v14, p1

    const/4 v1, 0x3

    goto :goto_8f

    .line 13449
    :cond_3c
    and-int/lit8 v1, v13, 0x10

    if-eqz v1, :cond_42

    .line 13450
    const/4 v1, 0x4

    return v1

    .line 13451
    :cond_42
    and-int/lit8 v1, v13, 0x20

    const/4 v14, 0x5

    if-eqz v1, :cond_48

    .line 13453
    return v14

    .line 13454
    :cond_48
    and-int/lit16 v1, v13, 0x800

    if-eqz v1, :cond_55

    .line 13455
    const-string/jumbo v1, "getActiveStreamTypeInternal: forcing STREAM_ASSISTANT..."

    invoke-static {v15, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13456
    const/16 v1, 0xb

    return v1

    .line 13458
    :cond_55
    const/4 v1, 0x1

    move/from16 v14, p1

    if-ne v14, v1, :cond_72

    .line 13459
    iget-boolean v1, v0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    if-eqz v1, :cond_6a

    and-int/lit8 v1, v13, 0x4

    if-nez v1, :cond_6a

    .line 13460
    const-string/jumbo v1, "getActiveStreamTypeInternal: only adjust media volume"

    invoke-static {v15, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13461
    const/4 v1, 0x3

    return v1

    .line 13463
    :cond_6a
    const-string/jumbo v1, "getActiveStreamTypeInternal: forcing STREAM_RING b/c default"

    invoke-static {v15, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13464
    const/4 v1, 0x2

    return v1

    .line 13466
    :cond_72
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eqz v1, :cond_82

    iget-boolean v1, v0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    if-nez v1, :cond_82

    .line 13468
    const-string/jumbo v1, "getActiveStreamTypeInternal: using STREAM_NOTIFICATION as default"

    invoke-static {v15, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13470
    const/4 v1, 0x5

    return v1

    .line 13473
    :cond_82
    const-string/jumbo v1, "getActiveStreamTypeInternal: using STREAM_MUSIC as default"

    invoke-static {v15, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13475
    const/4 v1, 0x3

    return v1

    .line 13445
    .end local v16    # "FLAG_STREAM_VOICE_CALL":I
    .restart local v1    # "FLAG_STREAM_VOICE_CALL":I
    :cond_8a
    move/from16 v14, p1

    move/from16 v16, v1

    const/4 v1, 0x3

    .line 13447
    .end local v1    # "FLAG_STREAM_VOICE_CALL":I
    .restart local v16    # "FLAG_STREAM_VOICE_CALL":I
    :goto_8f
    const-string/jumbo v1, "getActiveStreamTypeInternal: forcing STREAM_MUSIC"

    invoke-static {v15, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13448
    const/4 v1, 0x3

    return v1
.end method

.method private getActiveStreams()I
    .registers 5

    .line 13409
    const/4 v0, 0x0

    .line 13412
    .local v0, "activeStream":I
    :try_start_1
    const-string/jumbo v1, "l_stream_active"

    invoke-static {v1}, Lcom/samsung/android/media/SemAudioSystem;->getPolicyParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 13413
    .local v1, "result":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2
    :try_end_c
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_c} :catch_f

    move v0, v2

    .line 13417
    .end local v1    # "result":Ljava/lang/String;
    nop

    .line 13418
    return v0

    .line 13414
    :catch_f
    move-exception v1

    .line 13415
    .local v1, "e":Ljava/lang/NumberFormatException;
    const-string v2, "AS.AudioService"

    const-string v3, "Can\'t get active stream"

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13416
    const/4 v2, 0x0

    return v2
.end method

.method private getAudioHalPids()Ljava/util/Set;
    .registers 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .line 10022
    :try_start_0
    invoke-static {}, Landroid/hidl/manager/V1_0/IServiceManager;->getService()Landroid/hidl/manager/V1_0/IServiceManager;

    move-result-object v0

    .line 10023
    .local v0, "serviceManager":Landroid/hidl/manager/V1_0/IServiceManager;
    nop

    .line 10024
    invoke-interface {v0}, Landroid/hidl/manager/V1_0/IServiceManager;->debugDump()Ljava/util/ArrayList;

    move-result-object v1

    .line 10025
    .local v1, "dump":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;>;"
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 10026
    .local v2, "pids":Ljava/util/HashSet;, "Ljava/util/HashSet<Ljava/lang/Integer;>;"
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_12
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_3b

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;

    .line 10027
    .local v4, "info":Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;
    iget v5, v4, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->pid:I

    const/4 v6, -0x1

    if-eq v5, v6, :cond_3a

    iget-object v5, v4, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->interfaceName:Ljava/lang/String;

    if-eqz v5, :cond_3a

    iget-object v5, v4, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->interfaceName:Ljava/lang/String;

    const-string v6, "android.hardware.audio"

    .line 10029
    invoke-virtual {v5, v6}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_3a

    .line 10030
    iget v5, v4, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_3a
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_3a} :catch_3c

    .line 10032
    .end local v4    # "info":Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;
    :cond_3a
    goto :goto_12

    .line 10033
    :cond_3b
    return-object v2

    .line 10034
    .end local v0    # "serviceManager":Landroid/hidl/manager/V1_0/IServiceManager;
    .end local v1    # "dump":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;>;"
    .end local v2    # "pids":Ljava/util/HashSet;, "Ljava/util/HashSet<Ljava/lang/Integer;>;"
    :catch_3c
    move-exception v0

    .line 10035
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    return-object v1
.end method

.method private getAudioVolumeGroupById(I)Landroid/media/audiopolicy/AudioVolumeGroup;
    .registers 5
    .param p1, "volumeGroupId"    # I

    .line 2846
    invoke-static {}, Landroid/media/audiopolicy/AudioVolumeGroup;->getAudioVolumeGroups()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_8
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1c

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 2847
    .local v1, "avg":Landroid/media/audiopolicy/AudioVolumeGroup;
    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->getId()I

    move-result v2

    if-ne v2, p1, :cond_1b

    .line 2848
    return-object v1

    .line 2850
    .end local v1    # "avg":Landroid/media/audiopolicy/AudioVolumeGroup;
    :cond_1b
    goto :goto_8

    .line 2852
    :cond_1c
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, ": invalid volume group id: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requested"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2853
    const/4 v0, 0x0

    return-object v0
.end method

.method private getCurrentUserId()I
    .registers 5

    .line 3293
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3295
    .local v0, "ident":J
    :try_start_4
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v2

    invoke-interface {v2}, Landroid/app/IActivityManager;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v2

    .line 3296
    .local v2, "currentUser":Landroid/content/pm/UserInfo;
    iget v3, v2, Landroid/content/pm/UserInfo;->id:I
    :try_end_e
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_e} :catch_17
    .catchall {:try_start_4 .. :try_end_e} :catchall_12

    .line 3300
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3296
    return v3

    .line 3300
    .end local v2    # "currentUser":Landroid/content/pm/UserInfo;
    :catchall_12
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3301
    throw v2

    .line 3297
    :catch_17
    move-exception v2

    .line 3300
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3301
    nop

    .line 3302
    const/4 v2, 0x0

    return v2
.end method

.method private getDefaultVolumeOption()I
    .registers 2

    .line 12929
    invoke-static {}, Lcom/samsung/android/server/audio/AudioHelper;->isFactoryMode()Z

    move-result v0

    if-eqz v0, :cond_8

    .line 12930
    const/4 v0, 0x0

    return v0

    .line 12932
    :cond_8
    const/4 v0, 0x1

    return v0
.end method

.method private getDevicesForStream(I)I
    .registers 3
    .param p1, "stream"    # I

    .line 5546
    const/4 v0, 0x1

    invoke-direct {p0, p1, v0}, Lcom/android/server/audio/AudioService;->getDevicesForStream(IZ)I

    move-result v0

    return v0
.end method

.method private getDevicesForStream(IZ)I
    .registers 5
    .param p1, "stream"    # I
    .param p2, "checkOthers"    # Z

    .line 5550
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 5551
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 5552
    :try_start_6
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->observeDevicesForStream_syncVSS(Z)I

    move-result v1

    monitor-exit v0

    return v1

    .line 5553
    :catchall_10
    move-exception v1

    monitor-exit v0
    :try_end_12
    .catchall {:try_start_6 .. :try_end_12} :catchall_10

    throw v1
.end method

.method private getHearingAidStreamType(I)I
    .registers 5
    .param p1, "mode"    # I

    .line 2938
    const/4 v0, 0x2

    const/4 v1, 0x0

    if-eq p1, v0, :cond_11

    const/4 v0, 0x3

    if-eq p1, v0, :cond_11

    .line 2947
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVoiceActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v2

    if-eqz v2, :cond_10

    .line 2948
    return v1

    .line 2950
    :cond_10
    return v0

    .line 2941
    :cond_11
    return v1
.end method

.method private getIndexRange(I)I
    .registers 4
    .param p1, "streamType"    # I

    .line 1996
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, p1

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMaxIndex()I

    move-result v0

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMinIndex()I

    move-result v1

    sub-int/2addr v0, v1

    return v0
.end method

.method private getIntValueFromString(Ljava/lang/String;I)I
    .registers 6
    .param p1, "val"    # Ljava/lang/String;
    .param p2, "defaultVal"    # I

    .line 12440
    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_4
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_4} :catch_5

    .line 12444
    .local v0, "ret":I
    goto :goto_f

    .line 12441
    .end local v0    # "ret":I
    :catch_5
    move-exception v0

    .line 12442
    .local v0, "e":Ljava/lang/NumberFormatException;
    const-string v1, "AS.AudioService"

    const-string v2, "NumberFormatException"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12443
    move v1, p2

    move v0, v1

    .line 12445
    .local v0, "ret":I
    :goto_f
    return v0
.end method

.method private getMultiSoundConfig(Ljava/lang/String;)Ljava/lang/String;
    .registers 13
    .param p1, "keys"    # Ljava/lang/String;

    .line 12146
    const-string v0, ""

    .line 12147
    .local v0, "result":Ljava/lang/String;
    new-instance v1, Lcom/samsung/android/media/AudioParameter;

    invoke-direct {v1, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 12149
    .local v1, "audioParam":Lcom/samsung/android/media/AudioParameter;
    const-string/jumbo v2, "g_multi_sound_pin_app_name"

    invoke-virtual {v1, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    move-object v3, v2

    .local v3, "value":Ljava/lang/String;
    const-string/jumbo v4, "invalid value "

    const-string v5, "AS.AudioService"

    if-eqz v2, :cond_5e

    .line 12150
    const/4 v2, -0x1

    .line 12152
    .local v2, "device":I
    :try_start_17
    invoke-static {v3}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4
    :try_end_1b
    .catch Ljava/lang/NumberFormatException; {:try_start_17 .. :try_end_1b} :catch_1d

    move v2, v4

    .line 12155
    goto :goto_30

    .line 12153
    :catch_1d
    move-exception v6

    .line 12154
    .local v6, "e":Ljava/lang/NumberFormatException;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v5, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12156
    .end local v6    # "e":Ljava/lang/NumberFormatException;
    :goto_30
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->getPinAppInfo(I)Ljava/lang/String;

    move-result-object v0

    .line 12157
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v4}, Lcom/samsung/android/server/audio/MultiSoundManager;->isEnabled()Z

    move-result v4

    if-eqz v4, :cond_5c

    .line 12158
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "device=0x"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, ", pinappinfo="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12160
    .end local v2    # "device":I
    :cond_5c
    goto/16 :goto_17a

    :cond_5e
    const-string/jumbo v2, "g_multi_sound_priority_device"

    invoke-virtual {v1, v2}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_7d

    .line 12161
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/16 v4, 0x19

    .line 12162
    invoke-static {v4}, Landroid/media/AudioDeviceInfo;->convertDeviceTypeToInternalDevice(I)I

    move-result v4

    invoke-virtual {v2, v4}, Lcom/android/server/audio/AudioDeviceBroker;->getPriorityDevice(I)I

    move-result v2

    .line 12161
    invoke-static {v2}, Landroid/media/AudioDeviceInfo;->convertInternalDeviceToDeviceType(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    goto/16 :goto_17a

    .line 12164
    :cond_7d
    const-string/jumbo v2, "pin_device_name"

    invoke-virtual {v1, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    move-object v3, v2

    const/4 v6, 0x2

    const/16 v7, 0x8

    const/4 v8, 0x4

    if-eqz v2, :cond_12e

    .line 12165
    invoke-static {v3}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2

    if-eq v2, v8, :cond_124

    if-eq v2, v7, :cond_124

    const/16 v4, 0x80

    if-eq v2, v4, :cond_d1

    const/high16 v4, 0x4000000

    const/16 v5, 0x4000

    if-eq v2, v5, :cond_aa

    if-eq v2, v4, :cond_aa

    .line 12204
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const v4, 0x104038e

    invoke-virtual {v2, v4}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 12205
    goto/16 :goto_17a

    .line 12172
    :cond_aa
    invoke-static {v6}, Landroid/media/AudioManager;->getDevicesStatic(I)[Landroid/media/AudioDeviceInfo;

    move-result-object v2

    .line 12173
    .local v2, "list":[Landroid/media/AudioDeviceInfo;
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_af
    array-length v7, v2

    if-ge v6, v7, :cond_cf

    .line 12174
    aget-object v7, v2, v6

    invoke-virtual {v7}, Landroid/media/AudioDeviceInfo;->semGetInternalType()I

    move-result v7

    if-eq v7, v5, :cond_c2

    aget-object v7, v2, v6

    .line 12175
    invoke-virtual {v7}, Landroid/media/AudioDeviceInfo;->semGetInternalType()I

    move-result v7

    if-ne v7, v4, :cond_cc

    .line 12176
    :cond_c2
    aget-object v7, v2, v6

    invoke-virtual {v7}, Landroid/media/AudioDeviceInfo;->getProductName()Ljava/lang/CharSequence;

    move-result-object v7

    invoke-interface {v7}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12173
    :cond_cc
    add-int/lit8 v6, v6, 0x1

    goto :goto_af

    .line 12179
    .end local v6    # "i":I
    :cond_cf
    goto/16 :goto_17a

    .line 12181
    .end local v2    # "list":[Landroid/media/AudioDeviceInfo;
    :cond_d1
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v2}, Lcom/android/server/audio/AudioDeviceBroker;->getA2dp()Landroid/bluetooth/BluetoothA2dp;

    move-result-object v2

    .line 12182
    .local v2, "a2dp":Landroid/bluetooth/BluetoothA2dp;
    if-eqz v2, :cond_17a

    .line 12183
    invoke-virtual {v2}, Landroid/bluetooth/BluetoothA2dp;->semIsDualPlayMode()Z

    move-result v4

    if-eqz v4, :cond_119

    .line 12184
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 12185
    .local v4, "sb":Ljava/lang/StringBuilder;
    invoke-virtual {v2}, Landroid/bluetooth/BluetoothA2dp;->getConnectedDevices()Ljava/util/List;

    move-result-object v5

    .line 12186
    .local v5, "deviceList":Ljava/util/List;, "Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    if-eqz v5, :cond_114

    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v6

    const/4 v7, 0x1

    if-lt v6, v7, :cond_114

    .line 12187
    invoke-interface {v5}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_f5
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_114

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/bluetooth/BluetoothDevice;

    .line 12188
    .local v7, "bt_Device":Landroid/bluetooth/BluetoothDevice;
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->length()I

    move-result v8

    if-lez v8, :cond_10c

    .line 12189
    const-string v8, ","

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12191
    :cond_10c
    invoke-virtual {v7}, Landroid/bluetooth/BluetoothDevice;->semGetAliasName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12192
    .end local v7    # "bt_Device":Landroid/bluetooth/BluetoothDevice;
    goto :goto_f5

    .line 12194
    :cond_114
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12195
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    .end local v5    # "deviceList":Ljava/util/List;, "Ljava/util/List<Landroid/bluetooth/BluetoothDevice;>;"
    goto :goto_17a

    .line 12196
    :cond_119
    invoke-virtual {v2}, Landroid/bluetooth/BluetoothA2dp;->getActiveDevice()Landroid/bluetooth/BluetoothDevice;

    move-result-object v4

    .line 12197
    .local v4, "btDevice":Landroid/bluetooth/BluetoothDevice;
    if-eqz v4, :cond_123

    .line 12198
    invoke-virtual {v4}, Landroid/bluetooth/BluetoothDevice;->semGetAliasName()Ljava/lang/String;

    move-result-object v0

    .line 12200
    .end local v4    # "btDevice":Landroid/bluetooth/BluetoothDevice;
    :cond_123
    goto :goto_17a

    .line 12168
    .end local v2    # "a2dp":Landroid/bluetooth/BluetoothA2dp;
    :cond_124
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const v4, 0x1040391

    invoke-virtual {v2, v4}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 12169
    goto :goto_17a

    .line 12207
    :cond_12e
    const-string/jumbo v2, "l_safe_media_volume_enable"

    invoke-virtual {v1, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    move-object v3, v2

    if-eqz v2, :cond_17a

    .line 12208
    const/4 v2, 0x0

    .line 12210
    .local v2, "device":I
    :try_start_139
    invoke-static {v3}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4
    :try_end_13d
    .catch Ljava/lang/NumberFormatException; {:try_start_139 .. :try_end_13d} :catch_13f

    move v2, v4

    .line 12213
    goto :goto_152

    .line 12211
    :catch_13f
    move-exception v9

    .line 12212
    .local v9, "e":Ljava/lang/NumberFormatException;
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v5, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12214
    .end local v9    # "e":Ljava/lang/NumberFormatException;
    :goto_152
    if-ne v2, v6, :cond_168

    .line 12215
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v4, v8}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v4

    if-eqz v4, :cond_15e

    .line 12216
    const/4 v2, 0x4

    goto :goto_168

    .line 12217
    :cond_15e
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v4, v7}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v4

    if-eqz v4, :cond_168

    .line 12219
    const/16 v2, 0x8

    .line 12223
    :cond_168
    :goto_168
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_178

    .line 12224
    const-string/jumbo v0, "true"

    goto :goto_17a

    .line 12226
    :cond_178
    const-string v0, "false"

    .line 12229
    .end local v2    # "device":I
    :cond_17a
    :goto_17a
    return-object v0
.end method

.method private getNewRingerMode(III)I
    .registers 5
    .param p1, "stream"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I

    .line 2737
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v0, :cond_9

    .line 2738
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    return v0

    .line 2742
    :cond_9
    and-int/lit8 v0, p3, 0x2

    if-nez v0, :cond_19

    .line 2743
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getUiSoundsStreamType()I

    move-result v0

    if-ne p1, v0, :cond_14

    goto :goto_19

    .line 2754
    :cond_14
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    return v0

    .line 2745
    :cond_19
    :goto_19
    if-nez p2, :cond_2c

    .line 2746
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-eqz v0, :cond_21

    const/4 v0, 0x1

    goto :goto_2a

    .line 2747
    :cond_21
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    iget-boolean v0, v0, Landroid/media/VolumePolicy;->volumeDownToEnterSilent:Z

    if-eqz v0, :cond_29

    const/4 v0, 0x0

    goto :goto_2a

    .line 2748
    :cond_29
    const/4 v0, 0x2

    :goto_2a
    nop

    .local v0, "newRingerMode":I
    goto :goto_2d

    .line 2750
    .end local v0    # "newRingerMode":I
    :cond_2c
    const/4 v0, 0x2

    .line 2752
    .restart local v0    # "newRingerMode":I
    :goto_2d
    return v0
.end method

.method private getNextFineMediaVolume(II)I
    .registers 6
    .param p1, "device"    # I
    .param p2, "direction"    # I

    .line 14322
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    const/4 v1, 0x3

    aget-object v0, v0, v1

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0

    .line 14324
    .local v0, "index":I
    if-ltz v0, :cond_32

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v2, v1

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$900(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v1

    if-le v0, v1, :cond_16

    goto :goto_32

    .line 14329
    :cond_16
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    if-eqz v1, :cond_2a

    .line 14330
    if-lez p2, :cond_23

    .line 14331
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    aget-object v1, v1, v0

    iget-short v0, v1, Lcom/android/server/audio/AudioService$VolumeMap;->raiseStep:S

    goto :goto_29

    .line 14333
    :cond_23
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    aget-object v1, v1, v0

    iget-short v0, v1, Lcom/android/server/audio/AudioService$VolumeMap;->lowerStep:S

    .line 14335
    :goto_29
    return v0

    .line 14337
    :cond_2a
    iget v1, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    mul-int/2addr v1, p2

    add-int/2addr v0, v1

    .line 14342
    if-gez v0, :cond_31

    .line 14343
    const/4 v0, 0x0

    .line 14345
    :cond_31
    return v0

    .line 14325
    :cond_32
    :goto_32
    return v0
.end method

.method private getPackageName(I)[Ljava/lang/String;
    .registers 6
    .param p1, "uid"    # I

    .line 11932
    const/4 v0, 0x0

    const/16 v1, 0x3e8

    if-ne p1, v1, :cond_e

    .line 11933
    sget-object v1, Lcom/android/server/audio/AudioService;->SYSTEM_PACKAGE:[Ljava/lang/String;

    const-string v2, "android"

    aput-object v2, v1, v0

    .line 11934
    sget-object v1, Lcom/android/server/audio/AudioService;->SYSTEM_PACKAGE:[Ljava/lang/String;

    .local v1, "packageNames":[Ljava/lang/String;
    goto :goto_14

    .line 11936
    .end local v1    # "packageNames":[Ljava/lang/String;
    :cond_e
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    invoke-virtual {v1, p1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v1

    .line 11939
    .restart local v1    # "packageNames":[Ljava/lang/String;
    :goto_14
    if-nez v1, :cond_1e

    .line 11940
    sget-object v2, Lcom/android/server/audio/AudioService;->EMPTY_PACKAGE:[Ljava/lang/String;

    const-string v3, ""

    aput-object v3, v2, v0

    .line 11941
    sget-object v1, Lcom/android/server/audio/AudioService;->EMPTY_PACKAGE:[Ljava/lang/String;

    .line 11943
    :cond_1e
    return-object v1
.end method

.method private getProjectionService()Landroid/media/projection/IMediaProjectionManager;
    .registers 3

    .line 9124
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mProjectionService:Landroid/media/projection/IMediaProjectionManager;

    if-nez v0, :cond_11

    .line 9125
    const-string/jumbo v0, "media_projection"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 9126
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/media/projection/IMediaProjectionManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/media/projection/IMediaProjectionManager;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mProjectionService:Landroid/media/projection/IMediaProjectionManager;

    .line 9128
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mProjectionService:Landroid/media/projection/IMediaProjectionManager;

    return-object v0
.end method

.method private getSafeUsbMediaVolumeIndex()I
    .registers 8

    .line 4871
    sget-object v0, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    const/4 v1, 0x3

    aget v0, v0, v1

    .line 4872
    .local v0, "min":I
    sget-object v2, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    aget v2, v2, v1

    .line 4874
    .local v2, "max":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    const v4, 0x10e00d3

    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v3

    int-to-float v3, v3

    const/high16 v4, 0x42c80000    # 100.0f

    div-float/2addr v3, v4

    iput v3, p0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeDbfs:F

    .line 4877
    :goto_1c
    sub-int v3, v2, v0

    invoke-static {v3}, Ljava/lang/Math;->abs(I)I

    move-result v3

    const/4 v4, 0x1

    if-le v3, v4, :cond_46

    .line 4878
    add-int v3, v2, v0

    div-int/lit8 v3, v3, 0x2

    .line 4879
    .local v3, "index":I
    const/high16 v4, 0x4000000

    invoke-static {v1, v3, v4}, Landroid/media/AudioSystem;->getStreamVolumeDB(III)F

    move-result v4

    .line 4881
    .local v4, "gainDB":F
    invoke-static {v4}, Ljava/lang/Float;->isNaN(F)Z

    move-result v5

    if-eqz v5, :cond_36

    .line 4883
    goto :goto_46

    .line 4884
    :cond_36
    iget v5, p0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeDbfs:F

    cmpl-float v6, v4, v5

    if-nez v6, :cond_3e

    .line 4885
    move v0, v3

    .line 4886
    goto :goto_46

    .line 4887
    :cond_3e
    cmpg-float v5, v4, v5

    if-gez v5, :cond_44

    .line 4888
    move v0, v3

    goto :goto_45

    .line 4890
    :cond_44
    move v2, v3

    .line 4892
    .end local v3    # "index":I
    .end local v4    # "gainDB":F
    :goto_45
    goto :goto_1c

    .line 4893
    :cond_46
    :goto_46
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v1, :cond_57

    .line 4894
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v3, 0x10e00d2

    invoke-virtual {v1, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v0

    .line 4897
    :cond_57
    mul-int/lit8 v1, v0, 0xa

    return v1
.end method

.method private static getSettingsNameForDeviceVolumeBehavior(I)Ljava/lang/String;
    .registers 3
    .param p0, "deviceType"    # I

    .line 10097
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "AudioService_DeviceVolumeBehavior_"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p0}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private getVolumeGroupIdForAttributes(Landroid/media/AudioAttributes;)I
    .registers 4
    .param p1, "attributes"    # Landroid/media/AudioAttributes;

    .line 3148
    const-string v0, "attributes must not be null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 3149
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getVolumeGroupIdForAttributesInt(Landroid/media/AudioAttributes;)I

    move-result v0

    .line 3150
    .local v0, "volumeGroupId":I
    const/4 v1, -0x1

    if-eq v0, v1, :cond_d

    .line 3151
    return v0

    .line 3155
    :cond_d
    sget-object v1, Landroid/media/audiopolicy/AudioProductStrategy;->sDefaultAttributes:Landroid/media/AudioAttributes;

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->getVolumeGroupIdForAttributesInt(Landroid/media/AudioAttributes;)I

    move-result v1

    return v1
.end method

.method private getVolumeGroupIdForAttributesInt(Landroid/media/AudioAttributes;)I
    .registers 6
    .param p1, "attributes"    # Landroid/media/AudioAttributes;

    .line 3159
    const-string v0, "attributes must not be null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 3161
    invoke-static {}, Landroid/media/audiopolicy/AudioProductStrategy;->getAudioProductStrategies()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_d
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v2, -0x1

    if-eqz v1, :cond_22

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/media/audiopolicy/AudioProductStrategy;

    .line 3162
    .local v1, "productStrategy":Landroid/media/audiopolicy/AudioProductStrategy;
    invoke-virtual {v1, p1}, Landroid/media/audiopolicy/AudioProductStrategy;->getVolumeGroupIdForAudioAttributes(Landroid/media/AudioAttributes;)I

    move-result v3

    .line 3163
    .local v3, "volumeGroupId":I
    if-eq v3, v2, :cond_21

    .line 3164
    return v3

    .line 3166
    .end local v1    # "productStrategy":Landroid/media/audiopolicy/AudioProductStrategy;
    .end local v3    # "volumeGroupId":I
    :cond_21
    goto :goto_d

    .line 3167
    :cond_22
    return v2
.end method

.method private getVolumeMonitorService()Lcom/samsung/android/server/audio/VolumeMonitorService;
    .registers 2

    .line 14506
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/server/audio/VolumeMonitorService;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/VolumeMonitorService;

    move-result-object v0

    return-object v0
.end method

.method private handleAudioEffectBroadcast(Landroid/content/Context;Landroid/content/Intent;)V
    .registers 8
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "intent"    # Landroid/content/Intent;

    .line 7609
    invoke-virtual {p2}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v0

    .line 7610
    .local v0, "target":Ljava/lang/String;
    const-string v1, "AS.AudioService"

    if-eqz v0, :cond_1d

    .line 7611
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "effect broadcast already targeted to "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7612
    return-void

    .line 7614
    :cond_1d
    const/16 v2, 0x20

    invoke-virtual {p2, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 7616
    invoke-virtual {p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, p2, v3}, Landroid/content/pm/PackageManager;->queryBroadcastReceivers(Landroid/content/Intent;I)Ljava/util/List;

    move-result-object v2

    .line 7618
    .local v2, "ril":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v2, :cond_52

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v4

    if-eqz v4, :cond_52

    .line 7619
    invoke-interface {v2, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/ResolveInfo;

    .line 7620
    .local v3, "ri":Landroid/content/pm/ResolveInfo;
    if-eqz v3, :cond_52

    iget-object v4, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    if-eqz v4, :cond_52

    iget-object v4, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v4, v4, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    if-eqz v4, :cond_52

    .line 7621
    iget-object v1, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 7622
    sget-object v1, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    invoke-virtual {p1, p2, v1}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 7623
    return-void

    .line 7626
    .end local v3    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_52
    const-string v3, "couldn\'t find receiver package for effect intent"

    invoke-static {v1, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7627
    return-void
.end method

.method private handleConfigurationChanged(Landroid/content/Context;)V
    .registers 19
    .param p1, "context"    # Landroid/content/Context;

    move-object/from16 v1, p0

    .line 7875
    :try_start_2
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    move-object v2, v0

    .line 7876
    .local v2, "config":Landroid/content/res/Configuration;
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-nez v0, :cond_1c

    .line 7878
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v4, 0xc

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const-string v8, "AS.AudioService"

    const/4 v9, 0x0

    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 7886
    :cond_1c
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readCameraSoundForced()Z

    move-result v0

    move v3, v0

    .line 7887
    .local v3, "cameraSoundForced":Z
    iget-object v4, v1, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v4
    :try_end_24
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_24} :catch_8c

    .line 7888
    :try_start_24
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    const/4 v5, 0x1

    const/4 v6, 0x0

    if-eq v3, v0, :cond_2c

    move v0, v5

    goto :goto_2d

    :cond_2c
    move v0, v6

    :goto_2d
    move v7, v0

    .line 7889
    .local v7, "cameraSoundForcedChanged":Z
    iput-boolean v3, v1, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 7890
    if-eqz v7, :cond_7e

    .line 7891
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    const/4 v8, 0x7

    if-nez v0, :cond_5f

    .line 7892
    const-class v9, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v9
    :try_end_3a
    .catchall {:try_start_24 .. :try_end_3a} :catchall_89

    .line 7893
    :try_start_3a
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v8

    .line 7894
    .local v0, "s":Lcom/android/server/audio/AudioService$VolumeStreamState;
    if-eqz v3, :cond_4a

    .line 7895
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexesToMax()V

    .line 7896
    iget v5, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    and-int/lit16 v5, v5, -0x81

    iput v5, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    goto :goto_53

    .line 7899
    :cond_4a
    iget-object v10, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v10, v5

    const-string v10, "AS.AudioService"

    invoke-virtual {v0, v5, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 7906
    .end local v0    # "s":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :goto_53
    monitor-exit v9
    :try_end_54
    .catchall {:try_start_3a .. :try_end_54} :catchall_5c

    .line 7908
    :try_start_54
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v0

    invoke-direct {v1, v0, v6}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V
    :try_end_5b
    .catchall {:try_start_54 .. :try_end_5b} :catchall_89

    goto :goto_5f

    .line 7906
    :catchall_5c
    move-exception v0

    :try_start_5d
    monitor-exit v9
    :try_end_5e
    .catchall {:try_start_5d .. :try_end_5e} :catchall_5c

    .end local v2    # "config":Landroid/content/res/Configuration;
    .end local v3    # "cameraSoundForced":Z
    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "context":Landroid/content/Context;
    :try_start_5e
    throw v0

    .line 7910
    .restart local v2    # "config":Landroid/content/res/Configuration;
    .restart local v3    # "cameraSoundForced":Z
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "context":Landroid/content/Context;
    :cond_5f
    :goto_5f
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v5, 0x4

    .line 7911
    if-eqz v3, :cond_67

    .line 7912
    const/16 v6, 0xb

    goto :goto_68

    :cond_67
    nop

    :goto_68
    const-string/jumbo v9, "handleConfigurationChanged"

    .line 7910
    invoke-virtual {v0, v5, v6, v9}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 7914
    iget-object v10, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v11, 0xa

    const/4 v12, 0x2

    const/4 v13, 0x0

    const/4 v14, 0x0

    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v15, v0, v8

    const/16 v16, 0x0

    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 7922
    .end local v7    # "cameraSoundForcedChanged":Z
    :cond_7e
    monitor-exit v4
    :try_end_7f
    .catchall {:try_start_5e .. :try_end_7f} :catchall_89

    .line 7923
    :try_start_7f
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v2}, Landroid/content/res/Configuration;->getLayoutDirection()I

    move-result v4

    invoke-virtual {v0, v4}, Lcom/android/server/audio/AudioService$VolumeController;->setLayoutDirection(I)V
    :try_end_88
    .catch Ljava/lang/Exception; {:try_start_7f .. :try_end_88} :catch_8c

    .line 7926
    .end local v2    # "config":Landroid/content/res/Configuration;
    .end local v3    # "cameraSoundForced":Z
    goto :goto_94

    .line 7922
    .restart local v2    # "config":Landroid/content/res/Configuration;
    .restart local v3    # "cameraSoundForced":Z
    :catchall_89
    move-exception v0

    :try_start_8a
    monitor-exit v4
    :try_end_8b
    .catchall {:try_start_8a .. :try_end_8b} :catchall_89

    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "context":Landroid/content/Context;
    :try_start_8b
    throw v0
    :try_end_8c
    .catch Ljava/lang/Exception; {:try_start_8b .. :try_end_8c} :catch_8c

    .line 7924
    .end local v2    # "config":Landroid/content/res/Configuration;
    .end local v3    # "cameraSoundForced":Z
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "context":Landroid/content/Context;
    :catch_8c
    move-exception v0

    .line 7925
    .local v0, "e":Ljava/lang/Exception;
    const-string v2, "AS.AudioService"

    const-string v3, "Error handling configuration change: "

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7927
    .end local v0    # "e":Ljava/lang/Exception;
    :goto_94
    return-void
.end method

.method private handleCustomCommand(Ljava/io/PrintWriter;[Ljava/lang/String;)Z
    .registers 13
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;

    .line 14637
    array-length v0, p2

    const/4 v1, 0x0

    if-nez v0, :cond_5

    return v1

    .line 14640
    :cond_5
    :try_start_5
    const-string/jumbo v0, "safe-media"

    aget-object v2, p2, v1

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_e
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_5 .. :try_end_e} :catch_1a6
    .catch Ljava/lang/NumberFormatException; {:try_start_5 .. :try_end_e} :catch_1a6
    .catch Landroid/content/ActivityNotFoundException; {:try_start_5 .. :try_end_e} :catch_1a6

    const-string v2, "--set"

    const-string v3, "--get"

    const v4, 0x29052c2

    const v5, 0x29025b6

    const/4 v6, -0x1

    const/4 v7, 0x2

    const/4 v8, 0x1

    if-eqz v0, :cond_bf

    .line 14641
    :try_start_1d
    aget-object v0, p2, v8

    invoke-virtual {v0}, Ljava/lang/String;->hashCode()I

    move-result v9

    if-eq v9, v5, :cond_30

    if-eq v9, v4, :cond_28

    :cond_27
    goto :goto_38

    :cond_28
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_27

    move v0, v8

    goto :goto_39

    :cond_30
    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_27

    move v0, v1

    goto :goto_39

    :goto_38
    move v0, v6

    :goto_39
    if-eqz v0, :cond_a3

    if-eq v0, v8, :cond_3f

    goto/16 :goto_be

    .line 14646
    :cond_3f
    aget-object v0, p2, v7

    invoke-virtual {v0}, Ljava/lang/String;->hashCode()I

    move-result v2

    const/4 v3, 0x3

    packed-switch v2, :pswitch_data_1ae

    :cond_49
    goto :goto_71

    :pswitch_4a
    const-string v2, "3"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_49

    move v6, v3

    goto :goto_71

    :pswitch_54
    const-string v2, "2"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_49

    move v6, v7

    goto :goto_71

    :pswitch_5e
    const-string v2, "1"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_49

    move v6, v8

    goto :goto_71

    :pswitch_68
    const-string v2, "0"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_49

    move v6, v1

    :goto_71
    if-eqz v6, :cond_7f

    if-eq v6, v8, :cond_7f

    if-eq v6, v7, :cond_7f

    if-eq v6, v3, :cond_7f

    .line 14655
    const-string v0, "  Warning : Only numbers between 0 and 3 are allowed."

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_a2

    .line 14651
    :cond_7f
    aget-object v0, p2, v7

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    iput v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    .line 14652
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  Success to set "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    invoke-static {v2}, Lcom/android/server/audio/AudioService;->safeMediaVolumeStateToString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14653
    nop

    .line 14658
    :goto_a2
    goto :goto_be

    .line 14643
    :cond_a3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mSafeMediaVolumeState = "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    invoke-static {v2}, Lcom/android/server/audio/AudioService;->safeMediaVolumeStateToString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14644
    nop

    .line 14662
    :goto_be
    return v8

    .line 14663
    :cond_bf
    const-string v0, "acparam"

    aget-object v9, p2, v1

    invoke-virtual {v0, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_153

    .line 14664
    aget-object v0, p2, v8

    invoke-virtual {v0}, Ljava/lang/String;->hashCode()I

    move-result v9

    if-eq v9, v5, :cond_dc

    if-eq v9, v4, :cond_d4

    :cond_d3
    goto :goto_e3

    :cond_d4
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d3

    move v6, v8

    goto :goto_e3

    :cond_dc
    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d3

    move v6, v1

    :goto_e3
    if-eqz v6, :cond_109

    if-eq v6, v8, :cond_e8

    goto :goto_152

    .line 14674
    :cond_e8
    aget-object v0, p2, v7

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 14675
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  Success to set ["

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v2, p2, v7

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "]"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14676
    goto :goto_152

    .line 14666
    :cond_109
    aget-object v0, p2, v7

    invoke-static {v0}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 14667
    .local v0, "getValue":Ljava/lang/String;
    const-string v2, ""

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_133

    .line 14668
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Warning: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v3, p2, v7

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " is Unknown arguments"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_152

    .line 14670
    :cond_133
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "KEY : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v3, p2, v7

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "\nVALUE : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14672
    nop

    .line 14680
    .end local v0    # "getValue":Ljava/lang/String;
    :goto_152
    return v8

    .line 14681
    :cond_153
    const-string/jumbo v0, "mediapanel"

    aget-object v2, p2, v1

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_15c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1d .. :try_end_15c} :catch_1a6
    .catch Ljava/lang/NumberFormatException; {:try_start_1d .. :try_end_15c} :catch_1a6
    .catch Landroid/content/ActivityNotFoundException; {:try_start_1d .. :try_end_15c} :catch_1a6

    const-string v2, "com.android.settings.panel.SettingsPanelActivity"

    const-string v3, "com.android.settings"

    const/high16 v4, 0x10000000

    if-eqz v0, :cond_17f

    .line 14682
    :try_start_164
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 14683
    .local v0, "intent":Landroid/content/Intent;
    const-string v5, "com.android.settings.panel.action.MEDIA_OUTPUT"

    invoke-virtual {v0, v5}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 14684
    invoke-virtual {v0, v4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 14685
    new-instance v4, Landroid/content/ComponentName;

    invoke-direct {v4, v3, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v4}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 14687
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2, v0}, Landroid/content/Context;->startActivity(Landroid/content/Intent;)V

    .line 14688
    return v8

    .line 14689
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_17f
    const-string/jumbo v0, "volumepanel"

    aget-object v5, p2, v1

    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a5

    .line 14690
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 14691
    .restart local v0    # "intent":Landroid/content/Intent;
    const-string v5, "android.settings.panel.action.VOLUME"

    invoke-virtual {v0, v5}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 14692
    invoke-virtual {v0, v4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 14693
    new-instance v4, Landroid/content/ComponentName;

    invoke-direct {v4, v3, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v4}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 14695
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2, v0}, Landroid/content/Context;->startActivity(Landroid/content/Intent;)V
    :try_end_1a4
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_164 .. :try_end_1a4} :catch_1a6
    .catch Ljava/lang/NumberFormatException; {:try_start_164 .. :try_end_1a4} :catch_1a6
    .catch Landroid/content/ActivityNotFoundException; {:try_start_164 .. :try_end_1a4} :catch_1a6

    .line 14696
    return v8

    .line 14700
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_1a5
    goto :goto_1ac

    .line 14698
    :catch_1a6
    move-exception v0

    .line 14699
    .local v0, "e":Ljava/lang/RuntimeException;
    const-string v2, "  Warning : command requires the next arguments"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14701
    .end local v0    # "e":Ljava/lang/RuntimeException;
    :goto_1ac
    return v1

    nop

    :pswitch_data_1ae
    .packed-switch 0x30
        :pswitch_68
        :pswitch_5e
        :pswitch_54
        :pswitch_4a
    .end packed-switch
.end method

.method private handleSetRingerMode(ILjava/lang/String;Z)V
    .registers 24
    .param p1, "ringerMode"    # I
    .param p2, "caller"    # Ljava/lang/String;
    .param p3, "external"    # Z

    .line 13577
    move-object/from16 v0, p0

    move/from16 v8, p1

    move-object/from16 v9, p2

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "RingerMode="

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", caller="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13578
    const/4 v11, 0x1

    if-ne v8, v11, :cond_36

    .line 13579
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x67

    const/4 v3, 0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    move/from16 v12, p3

    goto :goto_54

    .line 13580
    :cond_36
    const/4 v1, 0x2

    if-ne v8, v1, :cond_52

    .line 13581
    move/from16 v12, p3

    invoke-direct {v0, v9, v12}, Lcom/android/server/audio/AudioService;->checkPlayRingerModeEffectSound(Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_54

    .line 13582
    iget-object v13, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v14, 0x66

    const/4 v15, 0x1

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    invoke-static/range {v13 .. v19}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    goto :goto_54

    .line 13580
    :cond_52
    move/from16 v12, p3

    .line 13585
    :cond_54
    :goto_54
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x69

    const/4 v3, 0x2

    const/4 v5, 0x0

    const/4 v7, 0x0

    const-string/jumbo v6, "persist.audio.ringermode"

    move/from16 v4, p1

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 13587
    if-eqz v8, :cond_7c

    if-ne v8, v11, :cond_68

    goto :goto_7c

    .line 13591
    :cond_68
    invoke-direct {v0, v11}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v16

    .line 13592
    .local v16, "isSystemStreamMuted":I
    iget-object v13, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v14, 0x69

    const/4 v15, 0x2

    const/16 v17, 0x0

    const/16 v19, 0x0

    const-string/jumbo v18, "persist.sys.silent"

    invoke-static/range {v13 .. v19}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    goto :goto_8a

    .line 13588
    .end local v16    # "isSystemStreamMuted":I
    :cond_7c
    :goto_7c
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x69

    const/4 v3, 0x2

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v7, 0x0

    const-string/jumbo v6, "persist.sys.silent"

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 13596
    :goto_8a
    sget-object v1, Lcom/android/server/audio/AudioService;->sRingermodeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v2, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " caller="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 13598
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    if-eqz v1, :cond_c0

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/GoodCatchManager;->isRingerModeCatchEnabled()Z

    move-result v1

    if-eqz v1, :cond_c0

    .line 13599
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v9, v8, v2}, Lcom/samsung/android/server/audio/GoodCatchManager;->updateRingerMode(Ljava/lang/String;ILjava/lang/String;)V

    .line 13602
    :cond_c0
    return-void
.end method

.method private hasDeviceVolumeBehavior(I)Z
    .registers 4
    .param p1, "audioSystemDeviceOut"    # I

    .line 10144
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveStoredDeviceVolumeBehavior(I)I

    move-result v0

    const/4 v1, -0x1

    if-eq v0, v1, :cond_9

    const/4 v0, 0x1

    goto :goto_a

    :cond_9
    const/4 v0, 0x0

    :goto_a
    return v0
.end method

.method private hasMediaControlPermission()Z
    .registers 5

    .line 14749
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 14750
    .local v0, "pid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 14751
    .local v1, "uid":I
    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_19

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v3, "android.permission.MEDIA_CONTENT_CONTROL"

    invoke-virtual {v2, v3, v0, v1}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    move-result v2

    if-nez v2, :cond_17

    goto :goto_19

    .line 14756
    :cond_17
    const/4 v2, 0x0

    return v2

    .line 14754
    :cond_19
    :goto_19
    const/4 v2, 0x1

    return v2
.end method

.method private hasRmtSbmxFullVolDeathHandlerFor(Landroid/os/IBinder;)Z
    .registers 4
    .param p1, "cb"    # Landroid/os/IBinder;

    .line 3464
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 3465
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;>;"
    :cond_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 3466
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;

    invoke-virtual {v1, p1}, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;->isHandlerFor(Landroid/os/IBinder;)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 3467
    const/4 v1, 0x1

    return v1

    .line 3470
    :cond_1a
    const/4 v1, 0x0

    return v1
.end method

.method private hasVibrator()Z
    .registers 2

    .line 13391
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    return v0
.end method

.method private initA11yMonitoring()V
    .registers 3

    .line 8246
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 8247
    const-string v1, "accessibility"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/accessibility/AccessibilityManager;

    .line 8248
    .local v0, "accessibilityManager":Landroid/view/accessibility/AccessibilityManager;
    invoke-virtual {v0}, Landroid/view/accessibility/AccessibilityManager;->isTouchExplorationEnabled()Z

    move-result v1

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->updateDefaultStreamOverrideDelay(Z)V

    .line 8249
    invoke-virtual {v0}, Landroid/view/accessibility/AccessibilityManager;->isAccessibilityVolumeStreamActive()Z

    move-result v1

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->updateA11yVolumeAlias(Z)V

    .line 8250
    const/4 v1, 0x0

    invoke-virtual {v0, p0, v1}, Landroid/view/accessibility/AccessibilityManager;->addTouchExplorationStateChangeListener(Landroid/view/accessibility/AccessibilityManager$TouchExplorationStateChangeListener;Landroid/os/Handler;)V

    .line 8251
    invoke-virtual {v0, p0, v1}, Landroid/view/accessibility/AccessibilityManager;->addAccessibilityServicesStateChangeListener(Landroid/view/accessibility/AccessibilityManager$AccessibilityServicesStateChangeListener;Landroid/os/Handler;)V

    .line 8252
    return-void
.end method

.method private initMultiAudioFocus()V
    .registers 5

    .line 14031
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "multi_audio_focus_enabled"

    const/4 v2, 0x0

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_f

    move v0, v1

    goto :goto_10

    :cond_f
    move v0, v2

    :goto_10
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMultiAudioFocusEnabled:Z

    .line 14032
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string v3, "app_volume_enabled"

    invoke-static {v0, v3, v1}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_1d

    move v2, v1

    :cond_1d
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mAppVolumeEnabled:Z

    .line 14033
    return-void
.end method

.method private initVolumeGroupStates()V
    .registers 7

    .line 5883
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getAudioVolumeGroups()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_8
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_4a

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 5886
    .local v1, "avg":Landroid/media/audiopolicy/AudioVolumeGroup;
    :try_start_14
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->ensureValidAttributes(Landroid/media/audiopolicy/AudioVolumeGroup;)V
    :try_end_17
    .catch Ljava/lang/IllegalArgumentException; {:try_start_14 .. :try_end_17} :catch_28

    .line 5894
    nop

    .line 5895
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->getId()I

    move-result v3

    new-instance v4, Lcom/android/server/audio/AudioService$VolumeGroupState;

    const/4 v5, 0x0

    invoke-direct {v4, p0, v1, v5}, Lcom/android/server/audio/AudioService$VolumeGroupState;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/audiopolicy/AudioVolumeGroup;Lcom/android/server/audio/AudioService$1;)V

    invoke-virtual {v2, v3, v4}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 5896
    .end local v1    # "avg":Landroid/media/audiopolicy/AudioVolumeGroup;
    goto :goto_8

    .line 5887
    .restart local v1    # "avg":Landroid/media/audiopolicy/AudioVolumeGroup;
    :catch_28
    move-exception v2

    .line 5891
    .local v2, "e":Ljava/lang/IllegalArgumentException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "volume group "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " for internal policy needs"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "AS.AudioService"

    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5893
    goto :goto_8

    .line 5897
    .end local v1    # "avg":Landroid/media/audiopolicy/AudioVolumeGroup;
    .end local v2    # "e":Ljava/lang/IllegalArgumentException;
    :cond_4a
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_4b
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_61

    .line 5898
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 5899
    .local v1, "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->applyAllVolumes()V

    .line 5897
    .end local v1    # "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    add-int/lit8 v0, v0, 0x1

    goto :goto_4b

    .line 5901
    .end local v0    # "i":I
    :cond_61
    return-void
.end method

.method private initializeVolumeSteps()V
    .registers 6

    .line 13722
    const-string/jumbo v0, "ro.config.vc_call_vol_steps"

    const/4 v1, -0x1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    .line 13723
    .local v0, "callVolStepsFromProperty":I
    sget-object v2, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    const/4 v3, 0x0

    aget v2, v2, v3

    .line 13725
    .local v2, "finalCallVolStep":I
    if-eq v0, v1, :cond_27

    .line 13726
    move v2, v0

    .line 13727
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "use default ro.config.vc_call_vol_steps "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v4, "AS.AudioService"

    invoke-static {v4, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13730
    :cond_27
    sget-object v1, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    aput v2, v1, v3

    .line 13731
    return-void
.end method

.method private isAlarm(I)Z
    .registers 3
    .param p1, "streamType"    # I

    .line 3997
    const/4 v0, 0x4

    if-ne p1, v0, :cond_5

    const/4 v0, 0x1

    goto :goto_6

    :cond_5
    const/4 v0, 0x0

    :goto_6
    return v0
.end method

.method private isAndroidNPlus(Ljava/lang/String;)Z
    .registers 7
    .param p1, "caller"    # Ljava/lang/String;

    .line 2759
    const/4 v0, 0x1

    :try_start_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2760
    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    .line 2761
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 2760
    const/4 v3, 0x0

    invoke-virtual {v1, p1, v3, v2}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    .line 2762
    .local v1, "applicationInfo":Landroid/content/pm/ApplicationInfo;
    iget v2, v1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
    :try_end_16
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_16} :catch_1c

    const/16 v4, 0x18

    if-lt v2, v4, :cond_1b

    .line 2763
    return v0

    .line 2765
    :cond_1b
    return v3

    .line 2766
    .end local v1    # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    :catch_1c
    move-exception v1

    .line 2767
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    return v0
.end method

.method private isFixedVolumeDevice(I)Z
    .registers 4
    .param p1, "deviceType"    # I

    .line 10078
    const v0, 0x8000

    if-ne p1, v0, :cond_f

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 10079
    invoke-virtual {v0}, Lcom/android/server/audio/RecordingActivityMonitor;->isLegacyRemoteSubmixActive()Z

    move-result v0

    if-eqz v0, :cond_f

    .line 10080
    const/4 v0, 0x0

    return v0

    .line 10082
    :cond_f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    return v0
.end method

.method private isFullVolumeDevice(I)Z
    .registers 4
    .param p1, "deviceType"    # I

    .line 10086
    const v0, 0x8000

    if-ne p1, v0, :cond_f

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 10087
    invoke-virtual {v0}, Lcom/android/server/audio/RecordingActivityMonitor;->isLegacyRemoteSubmixActive()Z

    move-result v0

    if-eqz v0, :cond_f

    .line 10088
    const/4 v0, 0x0

    return v0

    .line 10090
    :cond_f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    return v0
.end method

.method private isMedia(I)Z
    .registers 4
    .param p1, "streamType"    # I

    .line 4006
    const/4 v0, 0x1

    const/16 v1, 0xb

    if-ne p1, v1, :cond_6

    .line 4007
    return v0

    .line 4009
    :cond_6
    const/4 v1, 0x3

    if-ne p1, v1, :cond_a

    goto :goto_b

    :cond_a
    const/4 v0, 0x0

    :goto_b
    return v0
.end method

.method private isMicrophoneSupposedToBeMuted()Z
    .registers 2

    .line 3702
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    if-nez v0, :cond_f

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    if-nez v0, :cond_f

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    if-eqz v0, :cond_d

    goto :goto_f

    :cond_d
    const/4 v0, 0x0

    goto :goto_10

    :cond_f
    :goto_f
    const/4 v0, 0x1

    :goto_10
    return v0
.end method

.method private isMuteAdjust(I)Z
    .registers 3
    .param p1, "adjust"    # I

    .line 5244
    const/16 v0, -0x64

    if-eq p1, v0, :cond_f

    const/16 v0, 0x64

    if-eq p1, v0, :cond_f

    const/16 v0, 0x65

    if-ne p1, v0, :cond_d

    goto :goto_f

    :cond_d
    const/4 v0, 0x0

    goto :goto_10

    :cond_f
    :goto_f
    const/4 v0, 0x1

    :goto_10
    return v0
.end method

.method private isMuteIntervalEnabled()Z
    .registers 4

    .line 11534
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "mode_ringer_time_on"

    const/4 v2, 0x0

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_e

    move v2, v1

    :cond_e
    return v2
.end method

.method private isNotificationOrRinger(I)Z
    .registers 3
    .param p1, "streamType"    # I

    .line 4001
    const/4 v0, 0x5

    if-eq p1, v0, :cond_9

    const/4 v0, 0x2

    if-ne p1, v0, :cond_7

    goto :goto_9

    :cond_7
    const/4 v0, 0x0

    goto :goto_a

    :cond_9
    :goto_9
    const/4 v0, 0x1

    :goto_a
    return v0
.end method

.method private isPlatformVoice()Z
    .registers 3

    .line 309
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_6

    goto :goto_7

    :cond_6
    const/4 v1, 0x0

    :goto_7
    return v1
.end method

.method private isPolicyRegisterAllowed(Landroid/media/audiopolicy/AudioPolicyConfig;ZZLandroid/media/projection/IMediaProjection;)Z
    .registers 15
    .param p1, "policyConfig"    # Landroid/media/audiopolicy/AudioPolicyConfig;
    .param p2, "hasFocusAccess"    # Z
    .param p3, "isVolumeController"    # Z
    .param p4, "projection"    # Landroid/media/projection/IMediaProjection;

    .line 8999
    const/4 v0, 0x0

    .line 9000
    .local v0, "requireValidProjection":Z
    const/4 v1, 0x0

    .line 9001
    .local v1, "requireCaptureAudioOrMediaOutputPerm":Z
    const/4 v2, 0x0

    .line 9002
    .local v2, "requireModifyRouting":Z
    const/4 v3, 0x0

    .line 9005
    .local v3, "voiceCommunicationCaptureMixes":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/media/audiopolicy/AudioMix;>;"
    if-nez p2, :cond_16

    if-eqz p3, :cond_9

    goto :goto_16

    .line 9007
    :cond_9
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_18

    .line 9009
    or-int/lit8 v2, v2, 0x1

    goto :goto_18

    .line 9006
    :cond_16
    :goto_16
    or-int/lit8 v2, v2, 0x1

    .line 9011
    :cond_18
    :goto_18
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_20
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    const-string v6, "AS.AudioService"

    const/4 v7, 0x0

    if-eqz v5, :cond_6a

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/media/audiopolicy/AudioMix;

    .line 9013
    .local v5, "mix":Landroid/media/audiopolicy/AudioMix;
    invoke-virtual {v5}, Landroid/media/audiopolicy/AudioMix;->getRule()Landroid/media/audiopolicy/AudioMixingRule;

    move-result-object v8

    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMixingRule;->allowPrivilegedPlaybackCapture()Z

    move-result v8

    if-eqz v8, :cond_5b

    .line 9015
    or-int/lit8 v1, v1, 0x1

    .line 9018
    invoke-virtual {v5}, Landroid/media/audiopolicy/AudioMix;->getFormat()Landroid/media/AudioFormat;

    move-result-object v8

    invoke-static {v8}, Landroid/media/audiopolicy/AudioMix;->canBeUsedForPrivilegedCapture(Landroid/media/AudioFormat;)Ljava/lang/String;

    move-result-object v8

    .line 9019
    .local v8, "error":Ljava/lang/String;
    if-eqz v8, :cond_49

    .line 9020
    invoke-static {v6, v8}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9021
    return v7

    .line 9025
    :cond_49
    const/4 v6, 0x2

    invoke-virtual {v5, v6}, Landroid/media/audiopolicy/AudioMix;->containsMatchAttributeRuleForUsage(I)Z

    move-result v6

    if-eqz v6, :cond_5b

    .line 9030
    if-nez v3, :cond_58

    .line 9031
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    move-object v3, v6

    .line 9033
    :cond_58
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9039
    .end local v8    # "error":Ljava/lang/String;
    :cond_5b
    invoke-virtual {v5}, Landroid/media/audiopolicy/AudioMix;->getRouteFlags()I

    move-result v6

    const/4 v7, 0x3

    if-ne v6, v7, :cond_67

    if-eqz p4, :cond_67

    .line 9040
    or-int/lit8 v0, v0, 0x1

    goto :goto_69

    .line 9042
    :cond_67
    or-int/lit8 v2, v2, 0x1

    .line 9044
    .end local v5    # "mix":Landroid/media/audiopolicy/AudioMix;
    :goto_69
    goto :goto_20

    .line 9046
    :cond_6a
    if-eqz v1, :cond_82

    .line 9047
    const-string v4, "android.permission.CAPTURE_MEDIA_OUTPUT"

    invoke-direct {p0, v4}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_82

    .line 9048
    const-string v4, "android.permission.CAPTURE_AUDIO_OUTPUT"

    invoke-direct {p0, v4}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_82

    .line 9049
    const-string v4, "Privileged audio capture requires CAPTURE_MEDIA_OUTPUT or CAPTURE_AUDIO_OUTPUT system permission"

    invoke-static {v6, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9051
    return v7

    .line 9054
    :cond_82
    const/4 v4, 0x1

    if-eqz v3, :cond_b1

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_b1

    .line 9055
    const-string v5, "android.permission.CAPTURE_VOICE_COMMUNICATION_OUTPUT"

    invoke-direct {p0, v5}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_99

    .line 9057
    const-string v4, "Privileged audio capture for voice communication requires CAPTURE_VOICE_COMMUNICATION_OUTPUT system permission"

    invoke-static {v6, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9059
    return v7

    .line 9063
    :cond_99
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_9d
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_b1

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/media/audiopolicy/AudioMix;

    .line 9064
    .local v8, "mix":Landroid/media/audiopolicy/AudioMix;
    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMix;->getRule()Landroid/media/audiopolicy/AudioMixingRule;

    move-result-object v9

    invoke-virtual {v9, v4}, Landroid/media/audiopolicy/AudioMixingRule;->setVoiceCommunicationCaptureAllowed(Z)V

    .line 9065
    .end local v8    # "mix":Landroid/media/audiopolicy/AudioMix;
    goto :goto_9d

    .line 9068
    :cond_b1
    if-eqz v0, :cond_ba

    invoke-direct {p0, p4}, Lcom/android/server/audio/AudioService;->canProjectAudio(Landroid/media/projection/IMediaProjection;)Z

    move-result v5

    if-nez v5, :cond_ba

    .line 9069
    return v7

    .line 9072
    :cond_ba
    if-eqz v2, :cond_ca

    .line 9073
    const-string v5, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-direct {p0, v5}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_ca

    .line 9074
    const-string v4, "Can not capture audio without MODIFY_AUDIO_ROUTING"

    invoke-static {v6, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9075
    return v7

    .line 9078
    :cond_ca
    return v4
.end method

.method private isRaiseOrLowerOrSame(I)Z
    .registers 4
    .param p1, "direction"    # I

    .line 12918
    const/4 v0, -0x1

    const/4 v1, 0x1

    if-eq p1, v0, :cond_a

    if-eqz p1, :cond_a

    if-eq p1, v1, :cond_a

    .line 12924
    const/4 v0, 0x0

    return v0

    .line 12922
    :cond_a
    return v1
.end method

.method private isSafeMediaVolumeDevice(I)Z
    .registers 5
    .param p1, "device"    # I

    .line 13340
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_21

    .line 13341
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeBTDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 13342
    return v1

    .line 13343
    :cond_1a
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    const/4 v2, 0x3

    if-ne v0, v2, :cond_21

    .line 13344
    const/4 v0, 0x1

    return v0

    .line 13347
    :cond_21
    return v1
.end method

.method private isStreamMutedByRingerOrZenMode(I)Z
    .registers 5
    .param p1, "streamType"    # I

    .line 5113
    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    const/4 v1, 0x1

    shl-int v2, v1, p1

    and-int/2addr v0, v2

    if-eqz v0, :cond_9

    goto :goto_a

    :cond_9
    const/4 v1, 0x0

    :goto_a
    return v1
.end method

.method private isSupportedSystemUsage(I)Z
    .registers 5
    .param p1, "usage"    # I

    .line 7716
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    monitor-enter v0

    .line 7717
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_4
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    array-length v2, v2

    if-ge v1, v2, :cond_15

    .line 7718
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    aget v2, v2, v1

    if-ne v2, p1, :cond_12

    .line 7719
    monitor-exit v0

    const/4 v0, 0x1

    return v0

    .line 7717
    :cond_12
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 7722
    .end local v1    # "i":I
    :cond_15
    const/4 v1, 0x0

    monitor-exit v0

    return v1

    .line 7723
    :catchall_18
    move-exception v1

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_4 .. :try_end_1a} :catchall_18

    throw v1
.end method

.method private isSystem(I)Z
    .registers 3
    .param p1, "streamType"    # I

    .line 4014
    const/4 v0, 0x1

    if-ne p1, v0, :cond_4

    goto :goto_5

    :cond_4
    const/4 v0, 0x0

    :goto_5
    return v0
.end method

.method private isValidAudioAttributesUsage(Landroid/media/AudioAttributes;)Z
    .registers 5
    .param p1, "audioAttributes"    # Landroid/media/AudioAttributes;

    .line 7741
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getSystemUsage()I

    move-result v0

    .line 7742
    .local v0, "usage":I
    invoke-static {v0}, Landroid/media/AudioAttributes;->isSystemUsage(I)Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_1c

    .line 7743
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 7744
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->isSupportedSystemUsage(I)Z

    move-result v1

    if-eqz v1, :cond_1a

    goto :goto_1b

    :cond_1a
    const/4 v2, 0x0

    .line 7743
    :goto_1b
    return v2

    .line 7746
    :cond_1c
    return v2
.end method

.method private killBackgroundUserProcessesWithRecordAudioPermission(Landroid/content/pm/UserInfo;)V
    .registers 13
    .param p1, "oldUser"    # Landroid/content/pm/UserInfo;

    .line 7630
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    .line 7633
    .local v0, "pm":Landroid/content/pm/PackageManager;
    const/4 v1, 0x0

    .line 7634
    .local v1, "homeActivityName":Landroid/content/ComponentName;
    invoke-virtual {p1}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v2

    if-nez v2, :cond_1b

    .line 7635
    const-class v2, Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget v3, p1, Landroid/content/pm/UserInfo;->id:I

    .line 7636
    invoke-virtual {v2, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getHomeActivityForUser(I)Landroid/content/ComponentName;

    move-result-object v1

    .line 7638
    :cond_1b
    const-string v2, "android.permission.RECORD_AUDIO"

    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v2

    .line 7641
    .local v2, "permissions":[Ljava/lang/String;
    :try_start_21
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    const/4 v4, 0x0

    iget v5, p1, Landroid/content/pm/UserInfo;->id:I

    .line 7642
    invoke-interface {v3, v2, v4, v5}, Landroid/content/pm/IPackageManager;->getPackagesHoldingPermissions([Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v3
    :try_end_30
    .catch Landroid/os/RemoteException; {:try_start_21 .. :try_end_30} :catch_91

    .line 7645
    .local v3, "packages":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/PackageInfo;>;"
    nop

    .line 7646
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    .local v4, "j":I
    :goto_37
    if-ltz v4, :cond_90

    .line 7647
    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/PackageInfo;

    .line 7649
    .local v5, "pkg":Landroid/content/pm/PackageInfo;
    iget-object v6, v5, Landroid/content/pm/PackageInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v6

    const/16 v7, 0x2710

    if-ge v6, v7, :cond_4c

    .line 7650
    goto :goto_8d

    .line 7653
    :cond_4c
    iget-object v6, v5, Landroid/content/pm/PackageInfo;->packageName:Ljava/lang/String;

    const-string v7, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v0, v7, v6}, Landroid/content/pm/PackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;)I

    move-result v6

    if-nez v6, :cond_57

    .line 7655
    goto :goto_8d

    .line 7657
    :cond_57
    if-eqz v1, :cond_6e

    iget-object v6, v5, Landroid/content/pm/PackageInfo;->packageName:Ljava/lang/String;

    .line 7658
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6e

    iget-object v6, v5, Landroid/content/pm/PackageInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 7659
    invoke-virtual {v6}, Landroid/content/pm/ApplicationInfo;->isSystemApp()Z

    move-result v6

    if-eqz v6, :cond_6e

    .line 7660
    goto :goto_8d

    .line 7663
    :cond_6e
    :try_start_6e
    iget-object v6, v5, Landroid/content/pm/PackageInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 7664
    .local v6, "uid":I
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v7

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v8

    .line 7665
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    const-string/jumbo v10, "killBackgroundUserProcessesWithAudioRecordPermission"

    .line 7664
    invoke-interface {v7, v8, v9, v10}, Landroid/app/IActivityManager;->killUid(IILjava/lang/String;)V
    :try_end_84
    .catch Landroid/os/RemoteException; {:try_start_6e .. :try_end_84} :catch_85

    .line 7669
    .end local v6    # "uid":I
    goto :goto_8d

    .line 7667
    :catch_85
    move-exception v6

    .line 7668
    .local v6, "e":Landroid/os/RemoteException;
    const-string v7, "AS.AudioService"

    const-string v8, "Error calling killUid"

    invoke-static {v7, v8, v6}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7646
    .end local v5    # "pkg":Landroid/content/pm/PackageInfo;
    .end local v6    # "e":Landroid/os/RemoteException;
    :goto_8d
    add-int/lit8 v4, v4, -0x1

    goto :goto_37

    .line 7671
    .end local v4    # "j":I
    :cond_90
    return-void

    .line 7643
    .end local v3    # "packages":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/PackageInfo;>;"
    :catch_91
    move-exception v3

    .line 7644
    .local v3, "e":Landroid/os/RemoteException;
    new-instance v4, Landroid/util/AndroidRuntimeException;

    invoke-direct {v4, v3}, Landroid/util/AndroidRuntimeException;-><init>(Ljava/lang/Exception;)V

    throw v4
.end method

.method static synthetic lambda$ensureValidAttributes$0(Landroid/media/AudioAttributes;)Z
    .registers 2
    .param p0, "aa"    # Landroid/media/AudioAttributes;

    .line 5905
    sget-object v0, Landroid/media/audiopolicy/AudioProductStrategy;->sDefaultAttributes:Landroid/media/AudioAttributes;

    invoke-virtual {p0, v0}, Landroid/media/AudioAttributes;->equals(Ljava/lang/Object;)Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    return v0
.end method

.method public static makeAlsaAddressString(II)Ljava/lang/String;
    .registers 4
    .param p0, "card"    # I
    .param p1, "device"    # I

    .line 711
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "card="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ";device="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ";"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private maybeSendSystemAudioStatusCommand(Z)V
    .registers 8
    .param p1, "isMuteAdjust"    # Z

    .line 2677
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    if-eqz v0, :cond_27

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    if-eqz v0, :cond_27

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    if-nez v0, :cond_d

    goto :goto_27

    .line 2683
    :cond_d
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2684
    .local v0, "identity":J
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 2685
    const/4 v3, 0x3

    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    move-result v4

    .line 2686
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    move-result v5

    .line 2687
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    move-result v3

    .line 2684
    invoke-virtual {v2, p1, v4, v5, v3}, Landroid/hardware/hdmi/HdmiAudioSystemClient;->sendReportAudioStatusCecCommand(ZIIZ)V

    .line 2688
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2689
    return-void

    .line 2680
    .end local v0    # "identity":J
    :cond_27
    :goto_27
    return-void
.end method

.method private maybeVibrate(Landroid/os/VibrationEffect;Ljava/lang/String;)Z
    .registers 12
    .param p1, "effect"    # Landroid/os/VibrationEffect;
    .param p2, "reason"    # Ljava/lang/String;

    .line 3819
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 3820
    return v1

    .line 3822
    :cond_6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const/4 v2, -0x2

    const-string/jumbo v3, "haptic_feedback_enabled"

    invoke-static {v0, v3, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v0

    const/4 v2, 0x1

    if-nez v0, :cond_19

    move v0, v2

    goto :goto_1a

    :cond_19
    move v0, v1

    .line 3824
    .local v0, "hapticsDisabled":Z
    :goto_1a
    if-eqz v0, :cond_1d

    .line 3825
    return v1

    .line 3828
    :cond_1d
    if-nez p1, :cond_20

    .line 3829
    return v1

    .line 3831
    :cond_20
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mVibrator:Landroid/os/Vibrator;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    move-result-object v5

    sget-object v8, Lcom/android/server/audio/AudioService;->VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

    move-object v6, p1

    move-object v7, p2

    invoke-virtual/range {v3 .. v8}, Landroid/os/Vibrator;->vibrate(ILjava/lang/String;Landroid/os/VibrationEffect;Ljava/lang/String;Landroid/media/AudioAttributes;)V

    .line 3833
    return v2
.end method

.method private muteMediaStreamOfSpeaker(Z)V
    .registers 11
    .param p1, "shouldMute"    # Z

    .line 14707
    new-instance v5, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    .line 14709
    const/4 v0, 0x3

    if-eqz p1, :cond_a

    sget-object v1, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    aget v1, v1, v0

    goto :goto_c

    .line 14710
    :cond_a
    iget v1, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    :goto_c
    const/4 v2, 0x2

    const-string/jumbo v3, "muteMediaStreamOfSpeaker"

    invoke-direct {v5, v0, v1, v2, v3}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;-><init>(IIILjava/lang/String;)V

    .line 14715
    .local v5, "deviceVolumeUpdate":Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;
    const/4 v1, 0x0

    .line 14716
    .local v1, "change":Z
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v0

    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v7

    .line 14717
    .local v7, "currentSpeakerMediaIndex":I
    const-string/jumbo v2, "speaker_media_index"

    const/4 v3, -0x1

    if-eqz p1, :cond_36

    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    if-eqz v4, :cond_36

    .line 14718
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    if-ne v0, v3, :cond_34

    .line 14719
    const/4 v1, 0x1

    .line 14720
    iput v7, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 14721
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v0, v2, v7}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    move v8, v1

    goto :goto_4c

    .line 14718
    :cond_34
    move v8, v1

    goto :goto_4c

    .line 14724
    :cond_36
    iget v4, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    if-eq v4, v3, :cond_42

    sget-object v4, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    aget v0, v4, v0

    if-ne v7, v0, :cond_42

    const/4 v0, 0x1

    goto :goto_43

    :cond_42
    const/4 v0, 0x0

    :goto_43
    move v1, v0

    .line 14725
    iput v3, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 14726
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v0, v2, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    move v8, v1

    .line 14729
    .end local v1    # "change":Z
    .local v8, "change":Z
    :goto_4c
    if-eqz v8, :cond_5c

    .line 14730
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x1a

    const/4 v2, 0x2

    .line 14731
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->getVolumeIndex()I

    move-result v4

    const/4 v6, 0x0

    .line 14730
    move v3, v7

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 14733
    :cond_5c
    return-void
.end method

.method private muteRingerModeStreams()V
    .registers 30

    .line 3913
    move-object/from16 v1, p0

    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v2

    .line 3915
    .local v2, "numStreamTypes":I
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    if-nez v0, :cond_17

    .line 3916
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "notification"

    invoke-virtual {v0, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/NotificationManager;

    iput-object v0, v1, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 3919
    :cond_17
    iget v3, v1, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 3920
    .local v3, "ringerMode":I
    const/4 v4, 0x1

    if-eq v3, v4, :cond_21

    if-nez v3, :cond_1f

    goto :goto_21

    :cond_1f
    const/4 v5, 0x0

    goto :goto_22

    :cond_21
    :goto_21
    move v5, v4

    .line 3922
    .local v5, "ringerModeMute":Z
    :goto_22
    if-ne v3, v4, :cond_2c

    .line 3923
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    move-result v6

    if-eqz v6, :cond_2c

    move v6, v4

    goto :goto_2d

    :cond_2c
    const/4 v6, 0x0

    .line 3925
    .local v6, "shouldRingSco":Z
    :goto_2d
    iget-object v7, v1, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    invoke-virtual {v7, v8}, Landroid/content/pm/PackageManager;->getNameForUid(I)Ljava/lang/String;

    move-result-object v7

    .line 3926
    .local v7, "packageName":Ljava/lang/String;
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "muteRingerModeStreams() from u/pid:"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, "/"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3927
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, " "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 3928
    .local v8, "eventSource":Ljava/lang/String;
    iget-object v10, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v11, 0x8

    const/4 v12, 0x2

    const/4 v13, 0x7

    .line 3929
    if-eqz v6, :cond_6c

    const/4 v9, 0x3

    move v14, v9

    goto :goto_6d

    :cond_6c
    const/4 v14, 0x0

    :goto_6d
    const/16 v16, 0x0

    .line 3928
    move-object v15, v8

    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 3931
    add-int/lit8 v9, v2, -0x1

    .local v9, "streamType":I
    :goto_75
    if-ltz v9, :cond_18d

    .line 3932
    invoke-direct {v1, v9}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v10

    .line 3933
    .local v10, "isMuted":Z
    if-eqz v6, :cond_83

    const/4 v11, 0x2

    if-eq v9, v11, :cond_81

    goto :goto_83

    :cond_81
    const/4 v11, 0x0

    goto :goto_84

    :cond_83
    :goto_83
    move v11, v4

    .line 3935
    .local v11, "muteAllowedBySco":Z
    :goto_84
    invoke-direct {v1, v9}, Lcom/android/server/audio/AudioService;->shouldZenMuteStream(I)Z

    move-result v12

    .line 3936
    .local v12, "shouldZenMute":Z
    if-nez v12, :cond_97

    if-eqz v5, :cond_95

    .line 3937
    invoke-virtual {v1, v9}, Lcom/android/server/audio/AudioService;->isStreamAffectedByRingerMode(I)Z

    move-result v13

    if-eqz v13, :cond_95

    if-eqz v11, :cond_95

    goto :goto_97

    :cond_95
    const/4 v13, 0x0

    goto :goto_98

    :cond_97
    :goto_97
    move v13, v4

    .line 3938
    .local v13, "shouldMute":Z
    :goto_98
    if-ne v10, v13, :cond_bb

    .line 3945
    if-eqz v12, :cond_af

    .line 3946
    iget-object v14, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v14, v14, v9

    invoke-virtual {v14, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    move/from16 v18, v2

    move/from16 v17, v3

    move v3, v4

    move/from16 v21, v5

    move/from16 v20, v6

    const/4 v2, 0x0

    goto/16 :goto_180

    .line 3945
    :cond_af
    move/from16 v18, v2

    move/from16 v17, v3

    move v3, v4

    move/from16 v21, v5

    move/from16 v20, v6

    const/4 v2, 0x0

    goto/16 :goto_180

    .line 3951
    :cond_bb
    if-nez v13, :cond_168

    .line 3954
    const/4 v14, 0x2

    .line 3955
    .local v14, "checkStream":I
    sget-boolean v15, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eqz v15, :cond_c3

    .line 3956
    const/4 v14, 0x5

    .line 3959
    :cond_c3
    sget-object v15, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v15, v15, v9

    if-ne v15, v14, :cond_14e

    .line 3960
    const-class v15, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v15

    .line 3961
    :try_start_cc
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    .line 3962
    .local v0, "vss":Lcom/android/server/audio/AudioService$VolumeStreamState;
    const/16 v17, 0x0

    move/from16 v4, v17

    .local v4, "i":I
    :goto_d4
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Landroid/util/SparseIntArray;
    invoke-static {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$2000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Landroid/util/SparseIntArray;

    move-result-object v17
    :try_end_d8
    .catchall {:try_start_cc .. :try_end_d8} :catchall_141

    move/from16 v18, v2

    .end local v2    # "numStreamTypes":I
    .local v18, "numStreamTypes":I
    :try_start_da
    invoke-virtual/range {v17 .. v17}, Landroid/util/SparseIntArray;->size()I

    move-result v2

    if-ge v4, v2, :cond_11a

    .line 3963
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Landroid/util/SparseIntArray;
    invoke-static {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$2000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Landroid/util/SparseIntArray;

    move-result-object v2

    invoke-virtual {v2, v4}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2
    :try_end_e8
    .catchall {:try_start_da .. :try_end_e8} :catchall_139

    .line 3964
    .local v2, "device":I
    move/from16 v17, v3

    .end local v3    # "ringerMode":I
    .local v17, "ringerMode":I
    :try_start_ea
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Landroid/util/SparseIntArray;
    invoke-static {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$2000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Landroid/util/SparseIntArray;

    move-result-object v3

    invoke-virtual {v3, v4}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    .line 3965
    .local v3, "value":I
    if-nez v3, :cond_103

    .line 3966
    move/from16 v19, v3

    .end local v3    # "value":I
    .local v19, "value":I
    const-string v3, "AS.AudioService"
    :try_end_f8
    .catchall {:try_start_ea .. :try_end_f8} :catchall_114

    move/from16 v21, v5

    move/from16 v20, v6

    const/16 v5, 0xa

    const/4 v6, 0x1

    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .local v20, "shouldRingSco":Z
    .local v21, "ringerModeMute":Z
    :try_start_ff
    invoke-virtual {v0, v5, v2, v3, v6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    goto :goto_109

    .line 3965
    .end local v19    # "value":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v3    # "value":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :cond_103
    move/from16 v19, v3

    move/from16 v21, v5

    move/from16 v20, v6

    .line 3962
    .end local v2    # "device":I
    .end local v3    # "value":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    :goto_109
    add-int/lit8 v4, v4, 0x1

    move/from16 v3, v17

    move/from16 v2, v18

    move/from16 v6, v20

    move/from16 v5, v21

    goto :goto_d4

    .line 3978
    .end local v0    # "vss":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v4    # "i":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :catchall_114
    move-exception v0

    move/from16 v21, v5

    move/from16 v20, v6

    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    goto :goto_14a

    .line 3962
    .end local v17    # "ringerMode":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v0    # "vss":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v3, "ringerMode":I
    .restart local v4    # "i":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :cond_11a
    move/from16 v17, v3

    move/from16 v21, v5

    move/from16 v20, v6

    .line 3970
    .end local v3    # "ringerMode":I
    .end local v4    # "i":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v17    # "ringerMode":I
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    invoke-virtual {v1, v9}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v25

    .line 3971
    .local v25, "device":I
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v23, 0x1

    const/16 v24, 0x2

    const/16 v26, 0x0

    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v27, v3, v9

    const/16 v28, 0x1f4

    move-object/from16 v22, v2

    invoke-static/range {v22 .. v28}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 3978
    .end local v0    # "vss":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v25    # "device":I
    monitor-exit v15

    goto :goto_156

    .end local v17    # "ringerMode":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v3    # "ringerMode":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :catchall_139
    move-exception v0

    move/from16 v17, v3

    move/from16 v21, v5

    move/from16 v20, v6

    .end local v3    # "ringerMode":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v17    # "ringerMode":I
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    goto :goto_14a

    .end local v17    # "ringerMode":I
    .end local v18    # "numStreamTypes":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .local v2, "numStreamTypes":I
    .restart local v3    # "ringerMode":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :catchall_141
    move-exception v0

    move/from16 v18, v2

    move/from16 v17, v3

    move/from16 v21, v5

    move/from16 v20, v6

    .end local v2    # "numStreamTypes":I
    .end local v3    # "ringerMode":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v17    # "ringerMode":I
    .restart local v18    # "numStreamTypes":I
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    :goto_14a
    monitor-exit v15
    :try_end_14b
    .catchall {:try_start_ff .. :try_end_14b} :catchall_14c

    throw v0

    :catchall_14c
    move-exception v0

    goto :goto_14a

    .line 3959
    .end local v17    # "ringerMode":I
    .end local v18    # "numStreamTypes":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v2    # "numStreamTypes":I
    .restart local v3    # "ringerMode":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :cond_14e
    move/from16 v18, v2

    move/from16 v17, v3

    move/from16 v21, v5

    move/from16 v20, v6

    .line 3980
    .end local v2    # "numStreamTypes":I
    .end local v3    # "ringerMode":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v17    # "ringerMode":I
    .restart local v18    # "numStreamTypes":I
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    :goto_156
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 3981
    iget v0, v1, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    const/4 v3, 0x1

    shl-int v4, v3, v9

    not-int v4, v4

    and-int/2addr v0, v4

    iput v0, v1, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    .line 3982
    .end local v14    # "checkStream":I
    goto :goto_180

    .line 3984
    .end local v17    # "ringerMode":I
    .end local v18    # "numStreamTypes":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v2    # "numStreamTypes":I
    .restart local v3    # "ringerMode":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :cond_168
    move/from16 v18, v2

    move/from16 v17, v3

    move v3, v4

    move/from16 v21, v5

    move/from16 v20, v6

    const/4 v2, 0x0

    .end local v2    # "numStreamTypes":I
    .end local v3    # "ringerMode":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .restart local v17    # "ringerMode":I
    .restart local v18    # "numStreamTypes":I
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    invoke-virtual {v0, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 3985
    iget v0, v1, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    shl-int v4, v3, v9

    or-int/2addr v0, v4

    iput v0, v1, Lcom/android/server/audio/AudioService;->mRingerAndZenModeMutedStreams:I

    .line 3931
    .end local v10    # "isMuted":Z
    .end local v11    # "muteAllowedBySco":Z
    .end local v12    # "shouldZenMute":Z
    .end local v13    # "shouldMute":Z
    :goto_180
    add-int/lit8 v9, v9, -0x1

    move v4, v3

    move/from16 v3, v17

    move/from16 v2, v18

    move/from16 v6, v20

    move/from16 v5, v21

    goto/16 :goto_75

    .end local v17    # "ringerMode":I
    .end local v18    # "numStreamTypes":I
    .end local v20    # "shouldRingSco":Z
    .end local v21    # "ringerModeMute":Z
    .restart local v2    # "numStreamTypes":I
    .restart local v3    # "ringerMode":I
    .restart local v5    # "ringerModeMute":Z
    .restart local v6    # "shouldRingSco":Z
    :cond_18d
    move/from16 v18, v2

    move/from16 v17, v3

    move v3, v4

    move/from16 v21, v5

    move/from16 v20, v6

    .line 3989
    .end local v2    # "numStreamTypes":I
    .end local v3    # "ringerMode":I
    .end local v5    # "ringerModeMute":Z
    .end local v6    # "shouldRingSco":Z
    .end local v9    # "streamType":I
    .restart local v17    # "ringerMode":I
    .restart local v18    # "numStreamTypes":I
    .restart local v20    # "shouldRingSco":Z
    .restart local v21    # "ringerModeMute":Z
    invoke-direct {v1, v3}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v13

    .line 3990
    .local v13, "isSystemStreamMuted":I
    iget-object v10, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v11, 0x69

    const/4 v12, 0x2

    const/4 v14, 0x0

    const/16 v16, 0x0

    const-string/jumbo v15, "persist.sys.silent"

    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 3994
    .end local v13    # "isSystemStreamMuted":I
    return-void
.end method

.method private notifyExternalVolumeController(I)Z
    .registers 11
    .param p1, "direction"    # I

    .line 2252
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExtVolumeControllerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2253
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 2254
    .local v1, "externalVolumeController":Landroid/media/audiopolicy/IAudioPolicyCallback;
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_18

    .line 2255
    if-nez v1, :cond_a

    .line 2256
    const/4 v0, 0x0

    return v0

    .line 2259
    :cond_a
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v3, 0x16

    const/4 v4, 0x2

    const/4 v6, 0x0

    const/4 v8, 0x0

    move v5, p1

    move-object v7, v1

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 2262
    const/4 v0, 0x1

    return v0

    .line 2254
    .end local v1    # "externalVolumeController":Landroid/media/audiopolicy/IAudioPolicyCallback;
    :catchall_18
    move-exception v1

    :try_start_19
    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_18

    throw v1
.end method

.method private notifyVibrationForSafeMediaPopup()V
    .registers 2

    .line 13361
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v0}, Landroid/os/PowerManager;->isScreenOn()Z

    move-result v0

    if-nez v0, :cond_e

    .line 13362
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->callLcdOn()V

    .line 13363
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->callVibrateMsg()V

    .line 13365
    :cond_e
    return-void
.end method

.method private observeDevicesForStreams(I)V
    .registers 6
    .param p1, "skipStream"    # I

    .line 5557
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 5558
    const/4 v1, 0x0

    .local v1, "stream":I
    :goto_4
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v2, v2

    if-ge v1, v2, :cond_16

    .line 5559
    if-eq v1, p1, :cond_13

    .line 5560
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->observeDevicesForStream_syncVSS(Z)I

    .line 5558
    :cond_13
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 5563
    .end local v1    # "stream":I
    :cond_16
    monitor-exit v0

    .line 5564
    return-void

    .line 5563
    :catchall_18
    move-exception v1

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_4 .. :try_end_1a} :catchall_18

    throw v1
.end method

.method private onAccessoryPlugMediaUnmute(I)V
    .registers 9
    .param p1, "newDevice"    # I

    .line 5835
    const/4 v0, 0x2

    new-array v1, v0, [Ljava/lang/Object;

    .line 5836
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-static {p1}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    move-result-object v2

    const/4 v4, 0x1

    aput-object v2, v1, v4

    .line 5835
    const-string/jumbo v2, "onAccessoryPlugMediaUnmute newDevice=%d [%s]"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5839
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v1}, Landroid/app/NotificationManager;->getZenMode()I

    move-result v1

    if-eq v1, v0, :cond_72

    .line 5840
    const/4 v1, 0x3

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v5

    if-nez v5, :cond_72

    sget-object v5, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    .line 5841
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-interface {v5, v6}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_72

    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v1

    .line 5842
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v5

    if-eqz v5, :cond_72

    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v1

    .line 5843
    invoke-virtual {v5, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v5

    if-eqz v5, :cond_72

    .line 5844
    invoke-static {v1}, Landroid/media/AudioSystem;->getDevicesForStream(I)I

    move-result v5

    and-int/2addr v5, p1

    if-eqz v5, :cond_72

    .line 5846
    new-array v0, v0, [Ljava/lang/Object;

    .line 5847
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v0, v3

    invoke-static {p1}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v0, v4

    .line 5846
    const-string/jumbo v4, "onAccessoryPlugMediaUnmute unmuting device=%d [%s]"

    invoke-static {v4, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5849
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v1

    invoke-virtual {v0, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 5851
    :cond_72
    return-void
.end method

.method private onAvrcpSupportsAbsoluteVolumeToAudioServer(Ljava/lang/String;Z)V
    .registers 6
    .param p1, "address"    # Ljava/lang/String;
    .param p2, "support"    # Z

    .line 14541
    if-eqz p2, :cond_6

    const-string/jumbo v0, "true"

    goto :goto_8

    :cond_6
    const-string v0, "false"

    .line 14542
    .local v0, "value":Ljava/lang/String;
    :goto_8
    new-instance v1, Lcom/samsung/android/media/AudioParameter$Builder;

    invoke-direct {v1}, Lcom/samsung/android/media/AudioParameter$Builder;-><init>()V

    .line 14543
    const-string/jumbo v2, "l_support_absolute_volume"

    invoke-virtual {v1, v2, v0}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;Ljava/lang/String;)Lcom/samsung/android/media/AudioParameter$Builder;

    move-result-object v1

    .line 14544
    const-string v2, "address"

    invoke-virtual {v1, v2, p1}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;Ljava/lang/String;)Lcom/samsung/android/media/AudioParameter$Builder;

    move-result-object v1

    .line 14545
    invoke-virtual {v1}, Lcom/samsung/android/media/AudioParameter$Builder;->build()Lcom/samsung/android/media/AudioParameter;

    move-result-object v1

    .line 14546
    .local v1, "param":Lcom/samsung/android/media/AudioParameter;
    invoke-virtual {v1}, Lcom/samsung/android/media/AudioParameter;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 14547
    return-void
.end method

.method private onCheckMusicActive(Ljava/lang/String;)V
    .registers 13
    .param p1, "caller"    # Ljava/lang/String;

    .line 4837
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v0

    .line 4838
    :try_start_3
    iget v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    const/4 v2, 0x2

    if-ne v1, v2, :cond_52

    .line 4839
    const/4 v1, 0x3

    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v2

    .line 4841
    .local v2, "device":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_52

    .line 4842
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v5, 0xb

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const v10, 0xea60

    move-object v9, p1

    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4849
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v1

    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v3

    .line 4850
    .local v3, "index":I
    const/4 v4, 0x0

    invoke-static {v1, v4}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v1

    if-eqz v1, :cond_52

    .line 4851
    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v1

    if-le v3, v1, :cond_52

    .line 4853
    iget v1, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    const v5, 0xea60

    add-int/2addr v1, v5

    iput v1, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    .line 4854
    const v5, 0x44aa200

    if-le v1, v5, :cond_4f

    .line 4855
    const/4 v1, 0x1

    invoke-direct {p0, v1, p1}, Lcom/android/server/audio/AudioService;->setSafeMediaVolumeEnabled(ZLjava/lang/String;)V

    .line 4856
    iput v4, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    .line 4858
    :cond_4f
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->saveMusicActiveMs()V

    .line 4862
    .end local v2    # "device":I
    .end local v3    # "index":I
    :cond_52
    monitor-exit v0

    .line 4863
    return-void

    .line 4862
    :catchall_54
    move-exception v1

    monitor-exit v0
    :try_end_56
    .catchall {:try_start_3 .. :try_end_56} :catchall_54

    throw v1
.end method

.method private onCheckVolumeCecOnHdmiConnection(ILjava/lang/String;)V
    .registers 13
    .param p1, "state"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 1479
    const/4 v0, 0x1

    if-ne p1, v0, :cond_45

    .line 1481
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    const/16 v2, 0x400

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v1, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 1482
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v4, 0xb

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const v9, 0xea60

    move-object v8, p2

    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1491
    :cond_1f
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isPlatformTelevision()Z

    move-result v1

    if-eqz v1, :cond_3f

    .line 1492
    invoke-direct {p0, v2, p2}, Lcom/android/server/audio/AudioService;->checkAddAllFixedVolumeDevices(ILjava/lang/String;)V

    .line 1493
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1494
    :try_start_2b
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v2, :cond_3a

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    if-eqz v2, :cond_3a

    .line 1495
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    or-int/lit8 v2, v2, 0x0

    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->updateHdmiCecSinkLocked(Z)V

    .line 1497
    :cond_3a
    monitor-exit v1

    goto :goto_3f

    :catchall_3c
    move-exception v0

    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_2b .. :try_end_3e} :catchall_3c

    throw v0

    .line 1499
    :cond_3f
    :goto_3f
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-direct {p0, v1, v0}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    goto :goto_5e

    .line 1502
    :cond_45
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isPlatformTelevision()Z

    move-result v0

    if-eqz v0, :cond_5e

    .line 1503
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v0

    .line 1504
    :try_start_4e
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v1, :cond_59

    .line 1505
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    or-int/lit8 v1, v1, 0x0

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->updateHdmiCecSinkLocked(Z)V

    .line 1507
    :cond_59
    monitor-exit v0

    goto :goto_5e

    :catchall_5b
    move-exception v1

    monitor-exit v0
    :try_end_5d
    .catchall {:try_start_4e .. :try_end_5d} :catchall_5b

    throw v1

    .line 1510
    :cond_5e
    :goto_5e
    return-void
.end method

.method private onConfigureSafeVolume(ZLjava/lang/String;)V
    .registers 16
    .param p1, "force"    # Z
    .param p2, "caller"    # Ljava/lang/String;

    .line 4901
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v0

    .line 4902
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v1

    iget v1, v1, Landroid/content/res/Configuration;->mcc:I

    .line 4903
    .local v1, "mcc":I
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMcc:I

    if-ne v2, v1, :cond_19

    iget v2, p0, Lcom/android/server/audio/AudioService;->mMcc:I

    if-nez v2, :cond_7e

    if-eqz p1, :cond_7e

    .line 4904
    :cond_19
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e00d2

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    mul-int/lit8 v2, v2, 0xa

    iput v2, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeIndex:I

    .line 4907
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getSafeUsbMediaVolumeIndex()I

    move-result v2

    iput v2, p0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeIndex:I

    .line 4910
    const-string v2, "audio.safemedia.force"

    .line 4911
    const/4 v3, 0x0

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v2

    const/4 v4, 0x1

    if-nez v2, :cond_41

    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v2, :cond_3f

    goto :goto_41

    :cond_3f
    move v2, v3

    goto :goto_42

    :cond_41
    :goto_41
    move v2, v4

    .line 4914
    .local v2, "safeMediaVolumeEnabled":Z
    :goto_42
    const-string v5, "audio.safemedia.bypass"

    .line 4915
    invoke-static {v5, v3}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v3

    .line 4917
    .local v3, "safeMediaVolumeBypass":Z
    sget-boolean v5, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-nez v5, :cond_4d

    .line 4918
    const/4 v3, 0x1

    .line 4921
    :cond_4d
    invoke-static {}, Lcom/samsung/android/server/audio/AudioHelper;->isFactoryMode()Z

    move-result v5

    if-eqz v5, :cond_54

    .line 4922
    const/4 v3, 0x1

    .line 4928
    :cond_54
    if-eqz v2, :cond_6c

    if-nez v3, :cond_6c

    .line 4929
    const/4 v4, 0x3

    .line 4933
    .local v4, "persistedState":I
    iget v5, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    const/4 v6, 0x2

    if-eq v5, v6, :cond_70

    .line 4934
    iget v5, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    if-nez v5, :cond_69

    .line 4935
    const/4 v5, 0x3

    iput v5, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    .line 4936
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->enforceSafeMediaVolume(Ljava/lang/String;)V

    goto :goto_70

    .line 4939
    :cond_69
    iput v6, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    goto :goto_70

    .line 4943
    .end local v4    # "persistedState":I
    :cond_6c
    const/4 v5, 0x1

    .line 4944
    .local v5, "persistedState":I
    iput v4, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    move v4, v5

    .line 4946
    .end local v5    # "persistedState":I
    .restart local v4    # "persistedState":I
    :cond_70
    :goto_70
    iput v1, p0, Lcom/android/server/audio/AudioService;->mMcc:I

    .line 4947
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v7, 0xe

    const/4 v8, 0x2

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    move v9, v4

    invoke-static/range {v6 .. v12}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4955
    .end local v1    # "mcc":I
    .end local v2    # "safeMediaVolumeEnabled":Z
    .end local v3    # "safeMediaVolumeBypass":Z
    .end local v4    # "persistedState":I
    :cond_7e
    monitor-exit v0

    .line 4956
    return-void

    .line 4955
    :catchall_80
    move-exception v1

    monitor-exit v0
    :try_end_82
    .catchall {:try_start_3 .. :try_end_82} :catchall_80

    throw v1
.end method

.method private onCustomSystemReady()V
    .registers 9

    .line 11025
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "start - onCustomSystemReady"

    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11026
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string/jumbo v2, "keyguard"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/KeyguardManager;

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mKeyguardManager:Landroid/app/KeyguardManager;

    .line 11029
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;->addOnMediaKeyEventSessionChangedListener(Landroid/content/Context;)V

    .line 11032
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/AudioHelper;->setFactoryMode(Landroid/content/Context;)V

    .line 11035
    const-class v1, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 11038
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/DvfsHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/DvfsHelper;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 11041
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/AudioHqmHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/AudioHqmHelper;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHqmHelper:Lcom/samsung/android/server/audio/AudioHqmHelper;

    .line 11042
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/AudioHqmHelper;->startLogging(Landroid/content/Context;)V

    .line 11048
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/PackageListHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/PackageListHelper;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    .line 11049
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/PackageListHelper;->initPackageList(Landroid/content/Context;)V

    .line 11052
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 11053
    .local v1, "cr":Landroid/content/ContentResolver;
    const-string/jumbo v2, "multisound_state"

    const/4 v3, 0x0

    invoke-static {v1, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    const/4 v4, 0x1

    if-eqz v2, :cond_5b

    move v3, v4

    :cond_5b
    move v2, v3

    .line 11054
    .local v2, "multiSoundState":Z
    const-string/jumbo v3, "multisound_app"

    invoke-static {v1, v3}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 11055
    .local v3, "multiSoundPackage":Ljava/lang/String;
    const-string/jumbo v5, "multisound_devicetype"

    const/4 v6, -0x1

    invoke-static {v1, v5, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v5

    .line 11057
    .local v5, "multiSoundDevice":I
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v7}, Lcom/samsung/android/server/audio/MultiSoundManager;->updateAudioServiceNotificationChannel()V

    .line 11059
    invoke-virtual {p0, v2, v4}, Lcom/android/server/audio/AudioService;->setMultiSoundOn(ZZ)V

    .line 11061
    if-eqz v3, :cond_91

    if-eq v5, v6, :cond_91

    .line 11062
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v6, v3}, Lcom/samsung/android/server/audio/AudioHelper;->getUidForPackage(Landroid/content/Context;Ljava/lang/String;)I

    move-result v6

    .line 11063
    .local v6, "uid":I
    if-eqz v6, :cond_91

    .line 11065
    if-ne v5, v4, :cond_84

    const/16 v7, 0x8

    goto :goto_85

    .line 11066
    :cond_84
    const/4 v7, 0x2

    :goto_85
    nop

    .line 11065
    :try_start_86
    invoke-virtual {p0, v6, v7, v4}, Lcom/android/server/audio/AudioService;->setAppDevice(IIZ)V
    :try_end_89
    .catch Ljava/lang/IllegalArgumentException; {:try_start_86 .. :try_end_89} :catch_8a

    .line 11069
    goto :goto_91

    .line 11067
    :catch_8a
    move-exception v4

    .line 11068
    .local v4, "e":Ljava/lang/IllegalArgumentException;
    const-string/jumbo v7, "set app device failed"

    invoke-static {v0, v7, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 11078
    .end local v1    # "cr":Landroid/content/ContentResolver;
    .end local v2    # "multiSoundState":Z
    .end local v3    # "multiSoundPackage":Ljava/lang/String;
    .end local v4    # "e":Ljava/lang/IllegalArgumentException;
    .end local v5    # "multiSoundDevice":I
    .end local v6    # "uid":I
    :cond_91
    :goto_91
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/server/audio/PhoneStateHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/PhoneStateHelper;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mPhoneStateHelper:Lcom/samsung/android/server/audio/PhoneStateHelper;

    .line 11079
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/PhoneStateHelper;->registerPhoneStateListener()V

    .line 11082
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-static {v0, v1}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->getInstance(Landroid/content/Context;Lcom/android/server/audio/MediaFocusControl;)Lcom/samsung/android/server/audio/ScreenSharingHelper;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 11086
    new-instance v0, Lcom/android/server/audio/-$$Lambda$AudioService$s6TGIITk0rq-QLribrV6-Wd3Qrc;

    invoke-direct {v0, p0}, Lcom/android/server/audio/-$$Lambda$AudioService$s6TGIITk0rq-QLribrV6-Wd3Qrc;-><init>(Lcom/android/server/audio/AudioService;)V

    invoke-static {v0}, Lcom/samsung/android/server/audio/AudioExecutor;->execute(Ljava/lang/Runnable;)V

    .line 11093
    return-void
.end method

.method private onDispatchAudioServerStateChange(Z)V
    .registers 8
    .param p1, "state"    # Z

    .line 1354
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    monitor-enter v0

    .line 1355
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_d
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2a

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/audio/AudioService$AsdProxy;
    :try_end_19
    .catchall {:try_start_3 .. :try_end_19} :catchall_2c

    .line 1357
    .local v2, "asdp":Lcom/android/server/audio/AudioService$AsdProxy;
    :try_start_19
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$AsdProxy;->callback()Landroid/media/IAudioServerStateDispatcher;

    move-result-object v3

    invoke-interface {v3, p1}, Landroid/media/IAudioServerStateDispatcher;->dispatchAudioServerStateChange(Z)V
    :try_end_20
    .catch Landroid/os/RemoteException; {:try_start_19 .. :try_end_20} :catch_21
    .catchall {:try_start_19 .. :try_end_20} :catchall_2c

    .line 1360
    goto :goto_29

    .line 1358
    :catch_21
    move-exception v3

    .line 1359
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_22
    const-string v4, "AS.AudioService"

    const-string v5, "Could not call dispatchAudioServerStateChange()"

    invoke-static {v4, v5, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 1361
    .end local v2    # "asdp":Lcom/android/server/audio/AudioService$AsdProxy;
    .end local v3    # "e":Landroid/os/RemoteException;
    :goto_29
    goto :goto_d

    .line 1362
    :cond_2a
    monitor-exit v0

    .line 1363
    return-void

    .line 1362
    :catchall_2c
    move-exception v1

    monitor-exit v0
    :try_end_2e
    .catchall {:try_start_22 .. :try_end_2e} :catchall_2c

    throw v1
.end method

.method private onDynPolicyMixStateUpdate(Ljava/lang/String;I)V
    .registers 10
    .param p1, "regId"    # Ljava/lang/String;
    .param p2, "state"    # I

    .line 9371
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "onDynamicPolicyMixStateUpdate("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ", "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9372
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9373
    :try_start_27
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_31
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_82

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 9374
    .local v2, "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->getMixes()Ljava/util/ArrayList;

    move-result-object v3

    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_45
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_81

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/media/audiopolicy/AudioMix;

    .line 9375
    .local v4, "mix":Landroid/media/audiopolicy/AudioMix;
    invoke-virtual {v4}, Landroid/media/audiopolicy/AudioMix;->getRegistration()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5
    :try_end_59
    .catchall {:try_start_27 .. :try_end_59} :catchall_84

    if-eqz v5, :cond_80

    .line 9377
    :try_start_5b
    iget-object v1, v2, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mPolicyCallback:Landroid/media/audiopolicy/IAudioPolicyCallback;

    invoke-interface {v1, p1, p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->notifyMixStateUpdate(Ljava/lang/String;I)V
    :try_end_60
    .catch Landroid/os/RemoteException; {:try_start_5b .. :try_end_60} :catch_61
    .catchall {:try_start_5b .. :try_end_60} :catchall_84

    .line 9381
    goto :goto_7e

    .line 9378
    :catch_61
    move-exception v1

    .line 9379
    .local v1, "e":Landroid/os/RemoteException;
    :try_start_62
    const-string v3, "AS.AudioService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Can\'t call notifyMixStateUpdate() on IAudioPolicyCallback "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v2, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mPolicyCallback:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9380
    invoke-interface {v6}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    .line 9379
    invoke-static {v3, v5, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9382
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_7e
    monitor-exit v0

    return-void

    .line 9384
    .end local v4    # "mix":Landroid/media/audiopolicy/AudioMix;
    :cond_80
    goto :goto_45

    .line 9385
    .end local v2    # "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :cond_81
    goto :goto_31

    .line 9386
    :cond_82
    monitor-exit v0

    .line 9387
    return-void

    .line 9386
    :catchall_84
    move-exception v1

    monitor-exit v0
    :try_end_86
    .catchall {:try_start_62 .. :try_end_86} :catchall_84

    throw v1
.end method

.method private onEnableSurroundFormats(Ljava/util/ArrayList;)V
    .registers 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;)V"
        }
    .end annotation

    .line 1807
    .local p1, "enabledSurroundFormats":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    sget-object v0, Landroid/media/AudioFormat;->SURROUND_SOUND_ENCODING:[I

    array-length v1, v0

    const/4 v2, 0x0

    :goto_4
    if-ge v2, v1, :cond_3b

    aget v3, v0, v2

    .line 1808
    .local v3, "surroundFormat":I
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {p1, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    .line 1809
    .local v4, "enabled":Z
    invoke-static {v3, v4}, Landroid/media/AudioSystem;->setSurroundFormatEnabled(IZ)I

    move-result v5

    .line 1810
    .local v5, "ret":I
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "enable surround format:"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, " "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const-string v7, "AS.AudioService"

    invoke-static {v7, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1807
    .end local v3    # "surroundFormat":I
    .end local v4    # "enabled":Z
    .end local v5    # "ret":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_4

    .line 1812
    :cond_3b
    return-void
.end method

.method private onInitSoundAssistant()V
    .registers 3

    .line 13937
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "com.samsung.android.soundassistant"

    invoke-static {v0, v1}, Lcom/samsung/android/server/audio/AudioHelper;->getUidForPackage(Landroid/content/Context;Ljava/lang/String;)I

    move-result v0

    .line 13938
    .local v0, "uid":I
    const/16 v1, 0x2710

    if-ge v0, v1, :cond_d

    .line 13940
    return-void

    .line 13943
    :cond_d
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->registerBackgroundWhitelistForSoundAssistant(I)V

    .line 13944
    const/16 v1, 0x3eb

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->startSoundAssistantService(I)V

    .line 13945
    return-void
.end method

.method private onObserveDevicesForAllStreams()V
    .registers 2

    .line 5576
    const/4 v0, -0x1

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->observeDevicesForStreams(I)V

    .line 5577
    return-void
.end method

.method private onPlaybackConfigChange(Ljava/util/List;)V
    .registers 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Landroid/media/AudioPlaybackConfiguration;",
            ">;)V"
        }
    .end annotation

    .line 2967
    .local p1, "configs":Ljava/util/List;, "Ljava/util/List<Landroid/media/AudioPlaybackConfiguration;>;"
    const/4 v0, 0x0

    .line 2968
    .local v0, "voiceActive":Z
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_5
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_28

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/media/AudioPlaybackConfiguration;

    .line 2969
    .local v2, "config":Landroid/media/AudioPlaybackConfiguration;
    invoke-virtual {v2}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    move-result-object v3

    invoke-virtual {v3}, Landroid/media/AudioAttributes;->getUsage()I

    move-result v3

    .line 2970
    .local v3, "usage":I
    const/4 v4, 0x2

    if-eq v3, v4, :cond_1f

    const/4 v5, 0x3

    if-ne v3, v5, :cond_27

    .line 2972
    :cond_1f
    invoke-virtual {v2}, Landroid/media/AudioPlaybackConfiguration;->getPlayerState()I

    move-result v5

    if-ne v5, v4, :cond_27

    .line 2973
    const/4 v0, 0x1

    .line 2974
    goto :goto_28

    .line 2976
    .end local v2    # "config":Landroid/media/AudioPlaybackConfiguration;
    .end local v3    # "usage":I
    :cond_27
    goto :goto_5

    .line 2977
    :cond_28
    :goto_28
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVoiceActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v1, v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->getAndSet(Z)Z

    move-result v1

    if-eq v1, v0, :cond_33

    .line 2978
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->updateHearingAidVolumeOnVoiceActivityUpdate()V

    .line 2980
    :cond_33
    return-void
.end method

.method private onRunSoundAssistant()V
    .registers 4

    .line 12467
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSoundAssistantLock:Ljava/lang/Object;

    monitor-enter v0

    .line 12468
    :try_start_3
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mStartingSoundAssistant:Z

    if-eqz v1, :cond_9

    .line 12469
    monitor-exit v0

    return-void

    .line 12472
    :cond_9
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mStartingSoundAssistant:Z

    .line 12473
    new-instance v1, Ljava/lang/Thread;

    new-instance v2, Lcom/android/server/audio/-$$Lambda$AudioService$8HPm-jp0FScvfGk7CHPPU1kXppw;

    invoke-direct {v2, p0}, Lcom/android/server/audio/-$$Lambda$AudioService$8HPm-jp0FScvfGk7CHPPU1kXppw;-><init>(Lcom/android/server/audio/AudioService;)V

    invoke-direct {v1, v2}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;)V

    .line 12494
    invoke-virtual {v1}, Ljava/lang/Thread;->start()V

    .line 12495
    monitor-exit v0

    .line 12496
    return-void

    .line 12495
    :catchall_1b
    move-exception v1

    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_3 .. :try_end_1d} :catchall_1b

    throw v1
.end method

.method private onSetStreamVolume(IIIILjava/lang/String;Z)V
    .registers 15
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "device"    # I
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "hasModifyAudioSettings"    # Z

    .line 2784
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v0, v0, p1

    .line 2785
    .local v0, "stream":I
    const/4 v5, 0x0

    move-object v1, p0

    move v2, v0

    move v3, p2

    move v4, p4

    move-object v6, p5

    move v7, p6

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->setStreamVolumeInt(IIIZLjava/lang/String;Z)V

    .line 2787
    and-int/lit8 v1, p3, 0x2

    const/4 v2, 0x0

    if-nez v1, :cond_19

    .line 2788
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getUiSoundsStreamType()I

    move-result v1

    if-ne v0, v1, :cond_22

    .line 2789
    :cond_19
    invoke-direct {p0, v0, p2, p3}, Lcom/android/server/audio/AudioService;->getNewRingerMode(III)I

    move-result v1

    const-string v3, "AS.AudioService.onSetStreamVolume"

    invoke-direct {p0, v1, v3, v2}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 2795
    :cond_22
    if-eqz p2, :cond_2b

    .line 2796
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, v0

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 2804
    :cond_2b
    return-void
.end method

.method private onSetVolumeIndexOnDevice(Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;)V
    .registers 8
    .param p1, "update"    # Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    .line 6940
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    iget v1, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mStreamType:I

    aget-object v0, v0, v1

    .line 6941
    .local v0, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    invoke-virtual {p1}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->hasVolumeIndex()Z

    move-result v1

    if-eqz v1, :cond_47

    .line 6942
    invoke-virtual {p1}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->getVolumeIndex()I

    move-result v1

    .line 6943
    .local v1, "index":I
    iget v2, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mDevice:I

    iget-object v3, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mCaller:Ljava/lang/String;

    const/4 v4, 0x1

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 6946
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v3, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v5, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mCaller:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " dev:0x"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mDevice:I

    .line 6947
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " volIdx:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 6946
    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 6948
    .end local v1    # "index":I
    goto :goto_6d

    .line 6949
    :cond_47
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v2, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v4, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mCaller:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " update vol on dev:0x"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mDevice:I

    .line 6950
    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 6949
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 6952
    :goto_6d
    iget v1, p1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mDevice:I

    invoke-virtual {p0, v0, v1}, Lcom/android/server/audio/AudioService;->setDeviceVolume(Lcom/android/server/audio/AudioService$VolumeStreamState;I)V

    .line 6953
    return-void
.end method

.method private onUnmuteStream(II)V
    .registers 13
    .param p1, "stream"    # I
    .param p2, "flags"    # I

    .line 2660
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 2661
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    .line 2662
    .local v1, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    move-result v2

    .line 2664
    .local v2, "wasMuted":Z
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v3

    .line 2665
    .local v3, "device":I
    invoke-virtual {v1, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v6

    .line 2666
    .local v6, "index":I
    move-object v4, p0

    move v5, p1

    move v7, v6

    move v8, p2

    move v9, v3

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 2667
    .end local v1    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v3    # "device":I
    .end local v6    # "index":I
    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_3 .. :try_end_1d} :catchall_2f

    .line 2668
    const/4 v0, 0x3

    if-ne p1, v0, :cond_2e

    if-eqz v2, :cond_2e

    .line 2669
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2670
    const/4 v1, 0x1

    :try_start_26
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->maybeSendSystemAudioStatusCommand(Z)V

    .line 2671
    monitor-exit v0

    goto :goto_2e

    :catchall_2b
    move-exception v1

    monitor-exit v0
    :try_end_2d
    .catchall {:try_start_26 .. :try_end_2d} :catchall_2b

    throw v1

    .line 2673
    :cond_2e
    :goto_2e
    return-void

    .line 2667
    .end local v2    # "wasMuted":Z
    :catchall_2f
    move-exception v1

    :try_start_30
    monitor-exit v0
    :try_end_31
    .catchall {:try_start_30 .. :try_end_31} :catchall_2f

    throw v1
.end method

.method private onUpdateRingerModeServiceInt()V
    .registers 3

    .line 4052
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v0

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 4053
    return-void
.end method

.method private performSoftReset()V
    .registers 15

    .line 11268
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "performSoftReset start"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11271
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "master_mono"

    const/4 v2, 0x0

    const/4 v3, -0x2

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11275
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    iget v1, p0, Lcom/android/server/audio/AudioService;->mMasterBalance:F

    const-string/jumbo v4, "master_balance"

    invoke-static {v0, v4, v1, v3}, Landroid/provider/Settings$System;->putFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)Z

    .line 11279
    iput v2, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    .line 11280
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "hearing_musiccheck"

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11283
    iget v0, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setAdaptSound(I)V

    .line 11284
    iput v2, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    .line 11285
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "k2hd_effect"

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11287
    iget v0, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setUpscalerMode(I)V

    .line 11288
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "sound_alive_effect"

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11291
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "tube_amp_effect"

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11295
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_KARAOKE_LISTENBACK:Z

    if-eqz v0, :cond_5d

    .line 11296
    iput v2, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    .line 11297
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "headphone_monitoring"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 11298
    iget v0, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setKaraokeListenback(I)V

    .line 11306
    :cond_5d
    iput v2, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    .line 11307
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string v1, "all_sound_off"

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11309
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setAllSoundMute()V

    .line 11312
    iput v2, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    .line 11313
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "personalise_call_sound_soft"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 11314
    iget v0, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setNbQualityMode(I)V

    .line 11316
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->resetTable()V

    .line 11319
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 11320
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getDefaultVolumeOption()I

    move-result v1

    .line 11319
    const-string v4, "adjust_media_volume_only"

    invoke-static {v0, v4, v1, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11322
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    if-eqz v0, :cond_96

    .line 11323
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "sec_volume_steps"

    const-string v3, ""

    invoke-static {v0, v1, v3}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 11329
    :cond_96
    const/4 v0, 0x2

    const-string v1, "AS.AudioService.performSoftReset"

    invoke-direct {p0, v0, v1, v2}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 11331
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "multisound_state"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 11332
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const/4 v1, 0x0

    const-string/jumbo v2, "multisound_app"

    invoke-static {v0, v2, v1}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 11333
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "multisound_devicetype"

    const/4 v2, -0x1

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 11335
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v0

    .line 11336
    .local v0, "numStreamTypes":I
    const/4 v1, 0x0

    .local v1, "streamType":I
    :goto_bb
    if-ge v1, v0, :cond_142

    .line 11337
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    .line 11338
    .local v2, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v1

    const/4 v10, 0x3

    if-ne v3, v10, :cond_cc

    if-eq v1, v10, :cond_cc

    .line 11340
    goto/16 :goto_13b

    .line 11342
    :cond_cc
    monitor-enter v2

    .line 11343
    const/4 v3, 0x0

    move v11, v3

    .local v11, "i":I
    :goto_cf
    :try_start_cf
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Landroid/util/SparseIntArray;
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$2000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Landroid/util/SparseIntArray;

    move-result-object v3

    invoke-virtual {v3}, Landroid/util/SparseIntArray;->size()I

    move-result v3

    if-ge v11, v3, :cond_13a

    .line 11344
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Landroid/util/SparseIntArray;
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$2000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Landroid/util/SparseIntArray;

    move-result-object v3

    invoke-virtual {v3, v11}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v3

    move v12, v3

    .line 11345
    .local v12, "device":I
    sget-object v3, Landroid/media/AudioSystem;->DEFAULT_STREAM_VOLUME:[I

    aget v3, v3, v1

    .line 11349
    .local v3, "index":I
    if-ne v1, v10, :cond_f0

    const v4, 0x400008c

    and-int/2addr v4, v12

    if-eqz v4, :cond_f0

    .line 11354
    const/16 v3, 0x8

    .line 11358
    :cond_f0
    if-ne v1, v10, :cond_fc

    const v4, 0x8000

    and-int/2addr v4, v12

    if-eqz v4, :cond_fc

    .line 11360
    const/16 v3, 0xf

    move v13, v3

    goto :goto_fd

    .line 11363
    :cond_fc
    move v13, v3

    .end local v3    # "index":I
    .local v13, "index":I
    :goto_fd
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Landroid/util/SparseIntArray;
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$2000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Landroid/util/SparseIntArray;

    move-result-object v3

    mul-int/lit8 v4, v13, 0xa

    invoke-virtual {v3, v12, v4}, Landroid/util/SparseIntArray;->put(II)V

    .line 11365
    invoke-virtual {v2, v12}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 11367
    add-int/lit8 v3, v0, -0x1

    .local v3, "streamType2":I
    :goto_10b
    if-ltz v3, :cond_12b

    .line 11368
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v4

    if-eq v3, v4, :cond_128

    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v4, v3

    .line 11369
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v5

    if-ne v4, v5, :cond_128

    .line 11370
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v3

    .line 11371
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v5

    .line 11370
    invoke-virtual {v4, v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 11367
    :cond_128
    add-int/lit8 v3, v3, -0x1

    goto :goto_10b

    .line 11375
    .end local v3    # "streamType2":I
    :cond_12b
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v4, 0x1

    const/4 v5, 0x2

    const/4 v7, 0x0

    const/16 v9, 0x1f4

    move v6, v12

    move-object v8, v2

    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 11343
    .end local v12    # "device":I
    .end local v13    # "index":I
    add-int/lit8 v11, v11, 0x1

    goto :goto_cf

    .line 11378
    .end local v11    # "i":I
    :cond_13a
    monitor-exit v2

    .line 11336
    .end local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :goto_13b
    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_bb

    .line 11378
    .restart local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :catchall_13f
    move-exception v3

    monitor-exit v2
    :try_end_141
    .catchall {:try_start_cf .. :try_end_141} :catchall_13f

    throw v3

    .line 11380
    .end local v1    # "streamType":I
    .end local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :cond_142
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "performSoftReset end"

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11381
    return-void
.end method

.method private persistDeviceVolumeBehavior(II)V
    .registers 6
    .param p1, "deviceType"    # I
    .param p2, "deviceVolumeBehavior"    # I

    .line 10103
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Persisting Volume Behavior for DeviceType: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10105
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 10106
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->getSettingsNameForDeviceVolumeBehavior(I)Ljava/lang/String;

    move-result-object v1

    .line 10105
    const/4 v2, -0x2

    invoke-static {v0, v1, p2, v2}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 10109
    return-void
.end method

.method private playSilentModeSound()V
    .registers 4

    .line 13618
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v0

    const-string v1, "AS.AudioService"

    const/4 v2, 0x3

    if-ne v0, v2, :cond_10

    .line 13619
    const-string/jumbo v0, "playSilentModeSound: skipping playSilentModeSound"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13620
    return-void

    .line 13623
    :cond_10
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_24

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    move-result v0

    if-eqz v0, :cond_24

    .line 13624
    const-string/jumbo v0, "playSilentModeSound: skipping while inband ringtone is playing"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13625
    return-void

    .line 13627
    :cond_24
    const/16 v0, 0x65

    invoke-static {v0}, Landroid/media/AudioManager;->getPlaySoundTypeForSEP(I)I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->playSoundEffect(I)V

    .line 13628
    return-void
.end method

.method private queueMsgUnderWakeLock(Landroid/os/Handler;IIILjava/lang/Object;I)V
    .registers 18
    .param p1, "handler"    # Landroid/os/Handler;
    .param p2, "msg"    # I
    .param p3, "arg1"    # I
    .param p4, "arg2"    # I
    .param p5, "obj"    # Ljava/lang/Object;
    .param p6, "delay"    # I

    .line 5437
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5440
    .local v0, "ident":J
    move-object v2, p0

    iget-object v3, v2, Lcom/android/server/audio/AudioService;->mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 5441
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5442
    const/4 v6, 0x2

    move-object v4, p1

    move v5, p2

    move v7, p3

    move v8, p4

    move-object/from16 v9, p5

    move/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 5443
    return-void
.end method

.method private static readAndSetLowRamDevice()V
    .registers 7

    .line 8556
    const-string v0, "AS.AudioService"

    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v1

    .line 8557
    .local v1, "isLowRamDevice":Z
    const-wide/32 v2, 0x40000000

    .line 8560
    .local v2, "totalMemory":J
    :try_start_9
    new-instance v4, Landroid/app/ActivityManager$MemoryInfo;

    invoke-direct {v4}, Landroid/app/ActivityManager$MemoryInfo;-><init>()V

    .line 8561
    .local v4, "info":Landroid/app/ActivityManager$MemoryInfo;
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v5

    invoke-interface {v5, v4}, Landroid/app/IActivityManager;->getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V

    .line 8562
    iget-wide v5, v4, Landroid/app/ActivityManager$MemoryInfo;->totalMem:J
    :try_end_17
    .catch Landroid/os/RemoteException; {:try_start_9 .. :try_end_17} :catch_19

    move-wide v2, v5

    .line 8566
    .end local v4    # "info":Landroid/app/ActivityManager$MemoryInfo;
    goto :goto_20

    .line 8563
    :catch_19
    move-exception v4

    .line 8564
    .local v4, "e":Landroid/os/RemoteException;
    const-string v5, "Cannot obtain MemoryInfo from ActivityManager, assume low memory device"

    invoke-static {v0, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8565
    const/4 v1, 0x1

    .line 8568
    .end local v4    # "e":Landroid/os/RemoteException;
    :goto_20
    invoke-static {v1, v2, v3}, Landroid/media/AudioSystem;->setLowRamDevice(ZJ)I

    move-result v4

    .line 8569
    .local v4, "status":I
    if-eqz v4, :cond_3a

    .line 8570
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "AudioFlinger informed of device\'s low RAM attribute; status "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v0, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8572
    :cond_3a
    return-void
.end method

.method private readAudioSettings(Z)V
    .registers 9
    .param p1, "userSwitch"    # Z

    .line 4577
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->readPersistedSettings()V

    .line 4578
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->readUserRestrictions()V

    .line 4581
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v0

    .line 4582
    .local v0, "numStreamTypes":I
    const/4 v1, 0x0

    .local v1, "streamType":I
    :goto_b
    const/4 v2, 0x3

    const/4 v3, 0x0

    if-ge v1, v0, :cond_42

    .line 4583
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v1

    .line 4585
    .local v4, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    if-eqz p1, :cond_1c

    sget-object v5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v5, v5, v1

    if-ne v5, v2, :cond_1c

    .line 4586
    goto :goto_3c

    .line 4589
    :cond_1c
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->readSettings()V

    .line 4590
    const-class v5, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v5

    .line 4592
    :try_start_22
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v2

    if-eqz v2, :cond_3b

    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->isStreamAffectedByMute(I)Z

    move-result v2

    if-nez v2, :cond_34

    .line 4593
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v2

    if-eqz v2, :cond_38

    :cond_34
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v2, :cond_3b

    .line 4594
    :cond_38
    # setter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v4, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1002(Lcom/android/server/audio/AudioService$VolumeStreamState;Z)Z

    .line 4596
    :cond_3b
    monitor-exit v5

    .line 4582
    .end local v4    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :goto_3c
    add-int/lit8 v1, v1, 0x1

    goto :goto_b

    .line 4596
    .restart local v4    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :catchall_3f
    move-exception v2

    monitor-exit v5
    :try_end_41
    .catchall {:try_start_22 .. :try_end_41} :catchall_3f

    throw v2

    .line 4601
    .end local v1    # "streamType":I
    .end local v4    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :cond_42
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v1

    invoke-direct {p0, v1, v3}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 4603
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkAllFixedVolumeDevices()V

    .line 4604
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkAllAliasStreamVolumes()V

    .line 4605
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkMuteAffectedStreams()V

    .line 4607
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v1

    .line 4608
    :try_start_55
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v5, "unsafe_volume_music_active_ms"

    const/4 v6, -0x2

    invoke-static {v4, v5, v3, v6}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v4

    const v5, 0x44aa200

    invoke-static {v4, v3, v5}, Landroid/util/MathUtils;->constrain(III)I

    move-result v3

    iput v3, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    .line 4611
    iget v3, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    if-ne v3, v2, :cond_71

    .line 4612
    const-string v2, "AS.AudioService"

    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->enforceSafeMediaVolume(Ljava/lang/String;)V

    .line 4614
    :cond_71
    monitor-exit v1
    :try_end_72
    .catchall {:try_start_55 .. :try_end_72} :catchall_80

    .line 4616
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->readVolumeGroupsSettings()V

    .line 4619
    const-string v1, "AS.AudioService"

    const-string v2, "Restoring device volume behavior"

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4621
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->restoreDeviceVolumeBehavior()V

    .line 4622
    return-void

    .line 4614
    :catchall_80
    move-exception v2

    :try_start_81
    monitor-exit v1
    :try_end_82
    .catchall {:try_start_81 .. :try_end_82} :catchall_80

    throw v2
.end method

.method private readCameraSoundForced()Z
    .registers 4

    .line 7858
    const-string v0, "audio.camerasound.force"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-nez v0, :cond_18

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 7859
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v2, 0x1110041

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_19

    :cond_18
    const/4 v1, 0x1

    .line 7858
    :cond_19
    return v1
.end method

.method private readDockAudioSettings(Landroid/content/ContentResolver;)V
    .registers 12
    .param p1, "cr"    # Landroid/content/ContentResolver;

    .line 1676
    const-string v0, "dock_audio_media_enabled"

    const/4 v1, 0x0

    invoke-static {p1, v0, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_b

    goto :goto_c

    :cond_b
    move v2, v1

    :goto_c
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mDockAudioMediaEnabled:Z

    .line 1679
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v4, 0x8

    const/4 v5, 0x2

    const/4 v6, 0x3

    .line 1683
    if-eqz v2, :cond_19

    .line 1684
    const/16 v1, 0x8

    goto :goto_1a

    :cond_19
    nop

    :goto_1a
    move v7, v1

    new-instance v8, Ljava/lang/String;

    const-string/jumbo v0, "readDockAudioSettings"

    invoke-direct {v8, v0}, Ljava/lang/String;-><init>(Ljava/lang/String;)V

    const/4 v9, 0x0

    .line 1679
    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1687
    return-void
.end method

.method private readPersistedCustomSettings()V
    .registers 7

    .line 13736
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 13739
    .local v0, "cr":Landroid/content/ContentResolver;
    const-string/jumbo v1, "personalise_call_sound_soft"

    const/4 v2, 0x0

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    .line 13742
    const-string/jumbo v1, "hearing_musiccheck"

    const/4 v3, -0x2

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    .line 13744
    const-string/jumbo v1, "k2hd_effect"

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    .line 13747
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_KARAOKE_LISTENBACK:Z

    if-eqz v1, :cond_2c

    .line 13748
    const-string/jumbo v1, "headphone_monitoring"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    .line 13754
    :cond_2c
    nop

    .line 13755
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getDefaultVolumeOption()I

    move-result v1

    .line 13754
    const-string v4, "adjust_media_volume_only"

    invoke-static {v0, v4, v1, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    const/4 v3, 0x1

    if-lez v1, :cond_3c

    move v1, v3

    goto :goto_3d

    :cond_3c
    move v1, v2

    :goto_3d
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 13758
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const/16 v4, 0x20

    const-string/jumbo v5, "ring_through_headset"

    invoke-virtual {v1, v5, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 13761
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->setHeadsetOnlyStream(I)V

    .line 13763
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v4, "sound_lr_switch"

    invoke-virtual {v1, v4, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    .line 13764
    if-ne v1, v3, :cond_62

    .line 13765
    const-string/jumbo v1, "l_sound_assistant_lr_switch_enable=true"

    invoke-static {v1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 13768
    :cond_62
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string v4, "enable_floating_button"

    invoke-virtual {v1, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getBooleanValue(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    .line 13771
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const/16 v4, 0xa

    const-string/jumbo v5, "media_volume_step_index"

    invoke-virtual {v1, v5, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 13776
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const/4 v4, -0x1

    const-string/jumbo v5, "ignore_audio_focus"

    invoke-virtual {v1, v5, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mIgnoreAudioFocusUid:I

    .line 13780
    const-string/jumbo v1, "volumelimit_on"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-eqz v1, :cond_90

    move v1, v3

    goto :goto_91

    :cond_90
    move v1, v2

    :goto_91
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 13781
    iget v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    const-string/jumbo v4, "volume_limiter_value"

    invoke-static {v0, v4, v1}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 13783
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_BIKE_MODE:Z

    if-eqz v1, :cond_b0

    .line 13784
    const-string/jumbo v1, "isBikeMode"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-ne v1, v3, :cond_ad

    move v1, v3

    goto :goto_ae

    :cond_ad
    move v1, v2

    :goto_ae
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mIsBikeMode:Z

    .line 13786
    :cond_b0
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    if-eqz v1, :cond_c9

    .line 13787
    const-string/jumbo v1, "volume_monitor"

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMonitorValue:I

    .line 13788
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getVolumeMonitorService()Lcom/samsung/android/server/audio/VolumeMonitorService;

    move-result-object v1

    iget v4, p0, Lcom/android/server/audio/AudioService;->mVolumeMonitorValue:I

    if-ne v4, v3, :cond_c6

    move v2, v3

    :cond_c6
    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/VolumeMonitorService;->setVolumeMonitorOnOff(Z)V

    .line 13790
    :cond_c9
    return-void
.end method

.method private readPersistedSettings()V
    .registers 10

    .line 1869
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v0}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v0

    if-nez v0, :cond_9

    .line 1870
    return-void

    .line 1872
    :cond_9
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 1874
    .local v0, "cr":Landroid/content/ContentResolver;
    nop

    .line 1875
    const-string/jumbo v1, "mode_ringer"

    const/4 v2, 0x2

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    .line 1877
    .local v1, "ringerModeFromSettings":I
    move v3, v1

    .line 1880
    .local v3, "ringerMode":I
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->isValidRingerMode(I)Z

    move-result v4

    if-nez v4, :cond_1c

    .line 1881
    const/4 v3, 0x2

    .line 1883
    :cond_1c
    const/4 v4, 0x1

    if-ne v3, v4, :cond_24

    iget-boolean v5, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-nez v5, :cond_24

    .line 1884
    const/4 v3, 0x0

    .line 1886
    :cond_24
    if-eq v3, v1, :cond_2c

    .line 1887
    const-string/jumbo v5, "mode_ringer"

    invoke-static {v0, v5, v3}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 1889
    :cond_2c
    iget-boolean v5, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-nez v5, :cond_34

    iget-boolean v5, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v5, :cond_35

    .line 1890
    :cond_34
    const/4 v3, 0x2

    .line 1892
    :cond_35
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v5

    .line 1893
    :try_start_38
    iput v3, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 1894
    iget v6, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    const/4 v7, -0x1

    if-ne v6, v7, :cond_41

    .line 1895
    iput v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 1901
    :cond_41
    nop

    .line 1903
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    const/4 v7, 0x0

    if-eqz v6, :cond_49

    move v6, v2

    goto :goto_4a

    .line 1904
    :cond_49
    move v6, v7

    .line 1901
    :goto_4a
    invoke-static {v7, v4, v6}, Landroid/media/AudioSystem;->getValueForVibrateSetting(III)I

    move-result v6

    iput v6, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 1905
    nop

    .line 1907
    iget-boolean v8, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-eqz v8, :cond_57

    move v8, v2

    goto :goto_58

    .line 1908
    :cond_57
    move v8, v7

    .line 1905
    :goto_58
    invoke-static {v6, v7, v8}, Landroid/media/AudioSystem;->getValueForVibrateSetting(III)I

    move-result v6

    iput v6, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 1910
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->updateRingerAndZenModeAffectedStreams()Z

    .line 1911
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->readDockAudioSettings(Landroid/content/ContentResolver;)V

    .line 1912
    const-string/jumbo v6, "readPersistedSettings"

    invoke-direct {p0, v0, v6}, Lcom/android/server/audio/AudioService;->sendEncodedSurroundMode(Landroid/content/ContentResolver;Ljava/lang/String;)V

    .line 1913
    invoke-direct {p0, v0, v4}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    .line 1914
    invoke-direct {p0, v4}, Lcom/android/server/audio/AudioService;->updateAssistantUId(Z)V

    .line 1915
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    invoke-static {v6}, Landroid/media/AudioSystem;->setRttEnabled(Z)I

    .line 1916
    monitor-exit v5
    :try_end_76
    .catchall {:try_start_38 .. :try_end_76} :catchall_b0

    .line 1918
    const/16 v5, 0x6f

    const/4 v6, -0x2

    const-string/jumbo v8, "mute_streams_affected"

    invoke-static {v0, v8, v5, v6}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v5

    iput v5, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 1925
    sget-boolean v5, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eqz v5, :cond_8d

    .line 1926
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    const/4 v6, 0x5

    aput v6, v5, v2

    .line 1927
    aput v6, v5, v6

    .line 1931
    :cond_8d
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->updateMasterMono(Landroid/content/ContentResolver;)V

    .line 1933
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->updateMasterBalance(Landroid/content/ContentResolver;)V

    .line 1938
    iget v2, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    const-string v5, "android.media.RINGER_MODE_CHANGED"

    invoke-direct {p0, v5, v2}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(Ljava/lang/String;I)V

    .line 1939
    iget v2, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    const-string v5, "android.media.INTERNAL_RINGER_MODE_CHANGED_ACTION"

    invoke-direct {p0, v5, v2}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(Ljava/lang/String;I)V

    .line 1942
    invoke-direct {p0, v7}, Lcom/android/server/audio/AudioService;->broadcastVibrateSetting(I)V

    .line 1943
    invoke-direct {p0, v4}, Lcom/android/server/audio/AudioService;->broadcastVibrateSetting(I)V

    .line 1946
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v2, v0}, Lcom/android/server/audio/AudioService$VolumeController;->loadSettings(Landroid/content/ContentResolver;)V

    .line 1950
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->readPersistedCustomSettings()V

    .line 1952
    return-void

    .line 1916
    :catchall_b0
    move-exception v2

    :try_start_b1
    monitor-exit v5
    :try_end_b2
    .catchall {:try_start_b1 .. :try_end_b2} :catchall_b0

    throw v2
.end method

.method private readUserRestrictions()V
    .registers 9

    .line 1955
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v0}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v0

    if-nez v0, :cond_9

    .line 1956
    return-void

    .line 1958
    :cond_9
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v0

    .line 1961
    .local v0, "currentUser":I
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    .line 1962
    const-string v2, "disallow_unmute_device"

    invoke-virtual {v1, v0, v2}, Landroid/os/UserManagerInternal;->getUserRestriction(ILjava/lang/String;)Z

    move-result v1

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez v1, :cond_27

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    .line 1964
    const-string/jumbo v4, "no_adjust_volume"

    invoke-virtual {v1, v0, v4}, Landroid/os/UserManagerInternal;->getUserRestriction(ILjava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_25

    goto :goto_27

    :cond_25
    move v1, v3

    goto :goto_28

    :cond_27
    :goto_27
    move v1, v2

    .line 1966
    .local v1, "masterMute":Z
    :goto_28
    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v4, :cond_32

    .line 1967
    const/4 v1, 0x0

    .line 1968
    const/high16 v4, 0x3f800000    # 1.0f

    invoke-static {v4}, Landroid/media/AudioSystem;->setMasterVolume(F)I

    .line 1972
    :cond_32
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const/4 v5, -0x2

    const-string v6, "all_sound_off"

    invoke-static {v4, v6, v3, v5}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v4

    iput v4, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    .line 1975
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "readUserRestrictions mAllSoundMute = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "AS.AudioService"

    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1980
    const/4 v4, 0x2

    new-array v6, v4, [Ljava/lang/Object;

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v7

    aput-object v7, v6, v3

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v2

    const-string v7, "Master mute %s, user=%d"

    invoke-static {v7, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1982
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->setSystemAudioMute(Z)V

    .line 1983
    invoke-static {v1}, Landroid/media/AudioSystem;->setMasterMute(Z)I

    .line 1984
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->broadcastMasterMuteStatus(Z)V

    .line 1986
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    const-string/jumbo v7, "no_unmute_microphone"

    invoke-virtual {v6, v0, v7}, Landroid/os/UserManagerInternal;->getUserRestriction(ILjava/lang/String;)Z

    move-result v6

    iput-boolean v6, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    .line 1989
    new-array v4, v4, [Ljava/lang/Object;

    invoke-static {v6}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v6

    aput-object v6, v4, v3

    .line 1990
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v4, v2

    .line 1989
    const-string v2, "Mic mute %b, user=%d"

    invoke-static {v2, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v5, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1992
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 1993
    return-void
.end method

.method private readVolumeGroupsSettings()V
    .registers 3

    .line 5914
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "readVolumeGroupsSettings"

    invoke-static {v0, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5916
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_9
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_22

    .line 5917
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 5918
    .local v1, "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->readSettings()V

    .line 5919
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->applyAllVolumes()V

    .line 5916
    .end local v1    # "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    add-int/lit8 v0, v0, 0x1

    goto :goto_9

    .line 5921
    .end local v0    # "i":I
    :cond_22
    return-void
.end method

.method private registerBackgroundWhitelistForSoundAssistant(I)V
    .registers 5
    .param p1, "uid"    # I

    .line 13948
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    const-string v2, "com.samsung.android.soundassistant"

    invoke-virtual {v0, v1, v2}, Landroid/content/pm/PackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_d

    .line 13950
    return-void

    .line 13953
    :cond_d
    :try_start_d
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v0

    invoke-interface {v0, p1}, Landroid/app/IActivityManager;->backgroundWhitelistUid(I)V
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_14} :catch_15

    .line 13956
    goto :goto_1d

    .line 13954
    :catch_15
    move-exception v0

    .line 13955
    .local v0, "e":Ljava/lang/Exception;
    const-string v1, "AS.AudioService"

    const-string v2, "Failed register background white"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13957
    .end local v0    # "e":Ljava/lang/Exception;
    :goto_1d
    return-void
.end method

.method private reloadVariableMediaVolumeSteps()V
    .registers 6

    .line 12552
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "sec_volume_steps"

    invoke-static {v0, v1}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 12554
    .local v0, "strSteps":Ljava/lang/String;
    if-eqz v0, :cond_3e

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_12

    goto :goto_3e

    .line 12559
    :cond_12
    :try_start_12
    const-string v1, ","

    invoke-virtual {v0, v1}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 12560
    .local v1, "temp":[Ljava/lang/String;
    array-length v2, v1

    new-array v2, v2, [I

    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 12561
    const/4 v2, 0x0

    .local v2, "cur":I
    :goto_1e
    array-length v3, v1

    if-ge v2, v3, :cond_2e

    .line 12562
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    aget-object v4, v1, v2

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4

    aput v4, v3, v2

    .line 12561
    add-int/lit8 v2, v2, 0x1

    goto :goto_1e

    .line 12564
    .end local v2    # "cur":I
    :cond_2e
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->createVariableMediaVolumeMap([I)V
    :try_end_33
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_33} :catch_34

    .line 12567
    .end local v1    # "temp":[Ljava/lang/String;
    goto :goto_3d

    .line 12565
    :catch_34
    move-exception v1

    .line 12566
    .local v1, "e":Ljava/lang/Exception;
    const-string v2, "AS.AudioService"

    const-string/jumbo v3, "reloadVariableMediaVolumeSteps"

    invoke-static {v2, v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12568
    .end local v1    # "e":Ljava/lang/Exception;
    :goto_3d
    return-void

    .line 12555
    :cond_3e
    :goto_3e
    return-void
.end method

.method private removeAudioSystemDeviceOutFromFixedVolumeDevices(I)V
    .registers 4
    .param p1, "audioSystemDeviceOut"    # I

    .line 10158
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Removing DeviceType: 0x"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from mFixedVolumeDevices"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10161
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 10162
    return-void
.end method

.method private removeAudioSystemDeviceOutFromFullVolumeDevices(I)V
    .registers 4
    .param p1, "audioSystemDeviceOut"    # I

    .line 10174
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Removing DeviceType: 0x"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from mFullVolumeDevices"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10177
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 10178
    return-void
.end method

.method private rescaleIndex(III)I
    .registers 9
    .param p1, "index"    # I
    .param p2, "srcStream"    # I
    .param p3, "dstStream"    # I

    .line 2000
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->getIndexRange(I)I

    move-result v0

    .line 2001
    .local v0, "srcRange":I
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->getIndexRange(I)I

    move-result v1

    .line 2002
    .local v1, "dstRange":I
    if-nez v0, :cond_1b

    .line 2003
    const-string v2, "AS.AudioService"

    const-string/jumbo v3, "rescaleIndex : index range should not be zero"

    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2004
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, p3

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMinIndex()I

    move-result v2

    return v2

    .line 2007
    :cond_1b
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, p3

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMinIndex()I

    move-result v2

    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, p2

    .line 2008
    invoke-virtual {v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMinIndex()I

    move-result v3

    sub-int v3, p1, v3

    mul-int/2addr v3, v1

    div-int/lit8 v4, v0, 0x2

    add-int/2addr v3, v4

    div-int/2addr v3, v0

    add-int/2addr v2, v3

    .line 2007
    return v2
.end method

.method private rescaleStep(III)I
    .registers 8
    .param p1, "step"    # I
    .param p2, "srcStream"    # I
    .param p3, "dstStream"    # I

    .line 2013
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->getIndexRange(I)I

    move-result v0

    .line 2014
    .local v0, "srcRange":I
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->getIndexRange(I)I

    move-result v1

    .line 2015
    .local v1, "dstRange":I
    if-nez v0, :cond_14

    .line 2016
    const-string v2, "AS.AudioService"

    const-string/jumbo v3, "rescaleStep : index range should not be zero"

    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2017
    const/4 v2, 0x0

    return v2

    .line 2020
    :cond_14
    mul-int v2, p1, v1

    div-int/lit8 v3, v0, 0x2

    add-int/2addr v2, v3

    div-int/2addr v2, v0

    return v2
.end method

.method private restoreDeviceVolumeBehavior()V
    .registers 7

    .line 10120
    sget-object v0, Lcom/android/server/audio/AudioService;->sDeviceVolumeBehaviorSupportedDeviceOutSet:Ljava/util/Set;

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_4e

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Integer;

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    .line 10122
    .local v1, "deviceType":I
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Retrieving Volume Behavior for DeviceType: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "AS.AudioService"

    invoke-static {v3, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10124
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->retrieveStoredDeviceVolumeBehavior(I)I

    move-result v2

    .line 10125
    .local v2, "deviceVolumeBehavior":I
    const/4 v4, -0x1

    if-ne v2, v4, :cond_48

    .line 10127
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Skipping Setting Volume Behavior for DeviceType: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10129
    goto :goto_6

    .line 10132
    :cond_48
    const-string v3, "AudioService.restoreDeviceVolumeBehavior()"

    invoke-direct {p0, v1, v2, v3}, Lcom/android/server/audio/AudioService;->setDeviceVolumeBehaviorInternal(IILjava/lang/String;)V

    .line 10134
    .end local v1    # "deviceType":I
    .end local v2    # "deviceVolumeBehavior":I
    goto :goto_6

    .line 10135
    :cond_4e
    return-void
.end method

.method private restoreVolumeGroups()V
    .registers 3

    .line 5926
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "restoreVolumeGroups"

    invoke-static {v0, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5928
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_9
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_1f

    .line 5929
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 5930
    .local v1, "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->applyAllVolumes()V

    .line 5928
    .end local v1    # "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    add-int/lit8 v0, v0, 0x1

    goto :goto_9

    .line 5932
    .end local v0    # "i":I
    :cond_1f
    return-void
.end method

.method private retrieveStoredDeviceVolumeBehavior(I)I
    .registers 6
    .param p1, "deviceType"    # I

    .line 10113
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 10114
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->getSettingsNameForDeviceVolumeBehavior(I)Ljava/lang/String;

    move-result-object v1

    .line 10113
    const/4 v2, -0x1

    const/4 v3, -0x2

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v0

    return v0
.end method

.method private runSoundAssistant(ILjava/lang/String;)V
    .registers 11
    .param p1, "direction"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 12456
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    if-eqz v0, :cond_1c

    const/4 v0, -0x1

    if-eq p1, v0, :cond_a

    const/4 v0, 0x1

    if-ne p1, v0, :cond_1c

    .line 12457
    :cond_a
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->fromVolumeKey(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 12458
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x6f

    const/4 v3, 0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 12460
    :cond_1c
    return-void
.end method

.method private safeMediaVolumeIndex(I)I
    .registers 4
    .param p1, "device"    # I

    .line 8009
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 8010
    sget-object v0, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    const/4 v1, 0x3

    aget v0, v0, v1

    return v0

    .line 8012
    :cond_12
    const/high16 v0, 0x4000000

    if-ne p1, v0, :cond_19

    .line 8013
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeIndex:I

    return v0

    .line 8015
    :cond_19
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeIndex:I

    return v0
.end method

.method private static safeMediaVolumeStateToString(I)Ljava/lang/String;
    .registers 2
    .param p0, "state"    # I

    .line 8544
    if-eqz p0, :cond_16

    const/4 v0, 0x1

    if-eq p0, v0, :cond_13

    const/4 v0, 0x2

    if-eq p0, v0, :cond_10

    const/4 v0, 0x3

    if-eq p0, v0, :cond_d

    .line 8550
    const/4 v0, 0x0

    return-object v0

    .line 8548
    :cond_d
    const-string v0, "SAFE_MEDIA_VOLUME_ACTIVE"

    return-object v0

    .line 8547
    :cond_10
    const-string v0, "SAFE_MEDIA_VOLUME_INACTIVE"

    return-object v0

    .line 8546
    :cond_13
    const-string v0, "SAFE_MEDIA_VOLUME_DISABLED"

    return-object v0

    .line 8545
    :cond_16
    const-string v0, "SAFE_MEDIA_VOLUME_NOT_CONFIGURED"

    return-object v0
.end method

.method private saveMusicActiveMs()V
    .registers 5

    .line 4866
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    iget v1, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    const/16 v2, 0x11

    const/4 v3, 0x0

    invoke-virtual {v0, v2, v1, v3}, Lcom/android/server/audio/AudioService$AudioHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 4867
    return-void
.end method

.method private selectDevice(I)I
    .registers 5
    .param p1, "device"    # I

    .line 11895
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v0

    if-nez v0, :cond_7

    .line 11896
    return p1

    .line 11898
    :cond_7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    iget v1, p0, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    invoke-virtual {v0, v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    move-result v0

    .line 11900
    .local v0, "foregroundDevice":I
    if-eqz v0, :cond_22

    .line 11901
    iget v1, p0, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    invoke-static {v1}, Lcom/samsung/android/server/audio/AudioHelper;->isUsingAudioForUid(I)Z

    move-result v1

    if-nez v1, :cond_21

    const/4 v1, 0x3

    const/4 v2, 0x0

    .line 11902
    invoke-static {v1, v2}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v1

    if-nez v1, :cond_22

    .line 11903
    :cond_21
    return v0

    .line 11908
    :cond_22
    invoke-static {p1}, Lcom/samsung/android/server/audio/AudioHelper;->isUsingAudioUponDevice(I)Z

    move-result v1

    if-eqz v1, :cond_29

    .line 11909
    return p1

    .line 11912
    :cond_29
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getDeviceMultiSoundUsingActually()I

    move-result v1

    .line 11913
    .local v1, "multiSoundDevice":I
    if-eqz v1, :cond_32

    .line 11914
    move p1, v1

    .line 11917
    :cond_32
    return p1
.end method

.method private sendBecomingNoisyIntent(I)I
    .registers 4
    .param p1, "uid"    # I

    .line 12894
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v0

    .line 12895
    .local v0, "packageNames":[Ljava/lang/String;
    invoke-direct {p0, v0, p1}, Lcom/android/server/audio/AudioService;->sendBecomingNoisyIntent([Ljava/lang/String;I)I

    move-result v1

    return v1
.end method

.method private sendBecomingNoisyIntent([Ljava/lang/String;I)I
    .registers 9
    .param p1, "packageNames"    # [Ljava/lang/String;
    .param p2, "uid"    # I

    .line 12899
    const/4 v0, 0x0

    if-eqz p1, :cond_40

    aget-object v1, p1, v0

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_c

    goto :goto_40

    .line 12903
    :cond_c
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.media.AUDIO_BECOMING_NOISY"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12904
    .local v1, "noisyIntent":Landroid/content/Intent;
    array-length v2, p1

    :goto_14
    if-ge v0, v2, :cond_38

    aget-object v3, p1, v0

    .line 12905
    .local v3, "name":Ljava/lang/String;
    invoke-virtual {v1, v3}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 12906
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 12907
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "sendBecomingNoisyIntent to "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "AS.AudioService"

    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12904
    .end local v3    # "name":Ljava/lang/String;
    add-int/lit8 v0, v0, 0x1

    goto :goto_14

    .line 12909
    :cond_38
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/MediaFocusControl;->handleExternalFocusGain(I)V

    .line 12910
    const/16 v0, 0xc8

    return v0

    .line 12900
    .end local v1    # "noisyIntent":Landroid/content/Intent;
    :cond_40
    :goto_40
    return v0
.end method

.method private sendBroadcastNoisyIntent(IIII)V
    .registers 15
    .param p1, "streamType"    # I
    .param p2, "oldIndex"    # I
    .param p3, "index"    # I
    .param p4, "flags"    # I

    .line 14552
    and-int/lit8 v0, p4, 0x20

    if-nez v0, :cond_1c

    .line 14553
    invoke-virtual {p0, p2, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result v0

    .line 14554
    .local v0, "oldIdx":I
    invoke-virtual {p0, p3, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result v7

    .line 14556
    .local v7, "idx":I
    iget-object v8, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    new-instance v9, Lcom/android/server/audio/-$$Lambda$AudioService$NjAdVXAzfPM5pCyZrDtOA3V00ew;

    move-object v1, v9

    move-object v2, p0

    move v3, p1

    move v4, v7

    move v5, v0

    move v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/-$$Lambda$AudioService$NjAdVXAzfPM5pCyZrDtOA3V00ew;-><init>(Lcom/android/server/audio/AudioService;IIII)V

    invoke-virtual {v8, v9}, Lcom/android/server/audio/AudioService$AudioHandler;->post(Ljava/lang/Runnable;)Z

    .line 14574
    .end local v0    # "oldIdx":I
    .end local v7    # "idx":I
    :cond_1c
    return-void
.end method

.method private sendBroadcastToAll(Landroid/content/Intent;)V
    .registers 6
    .param p1, "intent"    # Landroid/content/Intent;

    .line 3269
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v0}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v0

    if-nez v0, :cond_9

    .line 3270
    return-void

    .line 3272
    :cond_9
    const/high16 v0, 0x4000000

    invoke-virtual {p1, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 3273
    const/high16 v0, 0x10000000

    invoke-virtual {p1, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 3274
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3276
    .local v0, "ident":J
    :try_start_17
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    invoke-virtual {v2, p1, v3}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_1e
    .catchall {:try_start_17 .. :try_end_1e} :catchall_23

    .line 3278
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3279
    nop

    .line 3280
    return-void

    .line 3278
    :catchall_23
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3279
    throw v2
.end method

.method private sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V
    .registers 20
    .param p1, "eventType"    # I
    .param p2, "value"    # I
    .param p3, "callingPackage"    # Ljava/lang/String;

    .line 12936
    move-object/from16 v1, p0

    move/from16 v2, p1

    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    monitor-enter v3

    .line 12937
    :try_start_7
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 12938
    .local v0, "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_79

    if-nez v2, :cond_14

    move/from16 v15, p2

    goto :goto_7b

    .line 12940
    :cond_14
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_18
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_75

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    .line 12941
    .local v5, "receiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    invoke-virtual {v5, v2}, Lcom/android/server/audio/AudioService$SoundEventReceiver;->hasEventType(I)Z

    move-result v6

    if-eqz v6, :cond_72

    .line 12942
    const-string v6, "AS.AudioService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Send broadcast to "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v5, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventReceiver:Landroid/content/ComponentName;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12944
    new-instance v6, Landroid/content/Intent;

    const-string v7, "com.samsung.android.intent.action.SOUND_EVENT"

    invoke-direct {v6, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12945
    .local v6, "intent":Landroid/content/Intent;
    const-string/jumbo v7, "type"

    invoke-virtual {v6, v7, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12946
    const-string/jumbo v7, "value"
    :try_end_52
    .catchall {:try_start_7 .. :try_end_52} :catchall_7d

    move/from16 v15, p2

    :try_start_54
    invoke-virtual {v6, v7, v15}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12947
    const-string/jumbo v7, "package"

    move-object/from16 v14, p3

    invoke-virtual {v6, v7, v14}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 12948
    iget-object v7, v5, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventReceiver:Landroid/content/ComponentName;

    invoke-virtual {v6, v7}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 12949
    iget-object v8, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v9, 0x72

    const/4 v10, 0x2

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v7, 0x0

    move-object v13, v6

    move v14, v7

    invoke-static/range {v8 .. v14}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    goto :goto_74

    .line 12941
    .end local v6    # "intent":Landroid/content/Intent;
    :cond_72
    move/from16 v15, p2

    .line 12951
    .end local v5    # "receiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    :goto_74
    goto :goto_18

    .line 12940
    :cond_75
    move/from16 v15, p2

    .line 12952
    .end local v0    # "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    monitor-exit v3

    .line 12953
    return-void

    .line 12938
    .restart local v0    # "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    :cond_79
    move/from16 v15, p2

    :goto_7b
    monitor-exit v3

    return-void

    .line 12952
    .end local v0    # "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    :catchall_7d
    move-exception v0

    move/from16 v15, p2

    :goto_80
    monitor-exit v3
    :try_end_81
    .catchall {:try_start_54 .. :try_end_81} :catchall_82

    throw v0

    :catchall_82
    move-exception v0

    goto :goto_80
.end method

.method private sendBroadcastToUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    .registers 6
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "handle"    # Landroid/os/UserHandle;

    .line 11385
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11387
    .local v0, "ident":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2, p1, p2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_9
    .catchall {:try_start_4 .. :try_end_9} :catchall_e

    .line 11389
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11390
    nop

    .line 11391
    return-void

    .line 11389
    :catchall_e
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11390
    throw v2
.end method

.method private sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V
    .registers 21
    .param p1, "cr"    # Landroid/content/ContentResolver;
    .param p2, "forceUpdate"    # Z

    .line 1760
    move-object/from16 v1, p0

    iget v0, v1, Lcom/android/server/audio/AudioService;->mEncodedSurroundMode:I

    const/4 v2, 0x3

    if-eq v0, v2, :cond_8

    .line 1762
    return-void

    .line 1764
    :cond_8
    const-string v2, "encoded_surround_output_enabled_formats"

    move-object/from16 v3, p1

    invoke-static {v3, v2}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 1766
    .local v0, "enabledSurroundFormats":Ljava/lang/String;
    if-nez v0, :cond_16

    .line 1769
    const-string v0, ""

    move-object v4, v0

    goto :goto_17

    .line 1766
    :cond_16
    move-object v4, v0

    .line 1771
    .end local v0    # "enabledSurroundFormats":Ljava/lang/String;
    .local v4, "enabledSurroundFormats":Ljava/lang/String;
    :goto_17
    if-nez p2, :cond_22

    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mEnabledSurroundFormats:Ljava/lang/String;

    invoke-static {v4, v0}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_22

    .line 1774
    return-void

    .line 1777
    :cond_22
    iput-object v4, v1, Lcom/android/server/audio/AudioService;->mEnabledSurroundFormats:Ljava/lang/String;

    .line 1778
    const-string v5, ","

    invoke-static {v4, v5}, Landroid/text/TextUtils;->split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v6

    .line 1779
    .local v6, "surroundFormats":[Ljava/lang/String;
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    move-object v14, v0

    .line 1780
    .local v14, "formats":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    array-length v7, v6

    const/4 v9, 0x0

    :goto_32
    if-ge v9, v7, :cond_80

    aget-object v10, v6, v9

    .line 1782
    .local v10, "format":Ljava/lang/String;
    :try_start_36
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    .line 1783
    .local v0, "audioFormat":I
    const/4 v11, 0x0

    .line 1784
    .local v11, "isSurroundFormat":Z
    sget-object v12, Landroid/media/AudioFormat;->SURROUND_SOUND_ENCODING:[I

    array-length v13, v12

    const/4 v15, 0x0

    :goto_43
    if-ge v15, v13, :cond_52

    aget v16, v12, v15

    move/from16 v17, v16

    .line 1785
    .local v17, "sf":I
    move/from16 v8, v17

    .end local v17    # "sf":I
    .local v8, "sf":I
    if-ne v8, v0, :cond_4f

    .line 1786
    const/4 v11, 0x1

    .line 1787
    goto :goto_52

    .line 1784
    .end local v8    # "sf":I
    :cond_4f
    add-int/lit8 v15, v15, 0x1

    goto :goto_43

    .line 1790
    :cond_52
    :goto_52
    if-eqz v11, :cond_65

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    invoke-virtual {v14, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_65

    .line 1791
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    invoke-virtual {v14, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_65
    .catch Ljava/lang/Exception; {:try_start_36 .. :try_end_65} :catch_66

    .line 1795
    .end local v0    # "audioFormat":I
    .end local v11    # "isSurroundFormat":Z
    :cond_65
    goto :goto_7d

    .line 1793
    :catch_66
    move-exception v0

    .line 1794
    .local v0, "e":Ljava/lang/Exception;
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Invalid enabled surround format:"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    const-string v11, "AS.AudioService"

    invoke-static {v11, v8}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1780
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v10    # "format":Ljava/lang/String;
    :goto_7d
    add-int/lit8 v9, v9, 0x1

    goto :goto_32

    .line 1799
    :cond_80
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 1801
    invoke-static {v5, v14}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;

    move-result-object v5

    .line 1799
    invoke-static {v0, v2, v5}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 1802
    iget-object v7, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v8, 0x18

    const/4 v9, 0x2

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v13, 0x0

    move-object v12, v14

    invoke-static/range {v7 .. v13}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1803
    return-void
.end method

.method private sendEncodedSurroundMode(ILjava/lang/String;)V
    .registers 6
    .param p1, "encodedSurroundMode"    # I
    .param p2, "eventSource"    # Ljava/lang/String;

    .line 1734
    const/16 v0, 0x10

    .line 1735
    .local v0, "forceSetting":I
    if-eqz p1, :cond_2e

    const/4 v1, 0x1

    if-eq p1, v1, :cond_2b

    const/4 v1, 0x2

    if-eq p1, v1, :cond_28

    const/4 v1, 0x3

    if-eq p1, v1, :cond_25

    .line 1749
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "updateSurroundSoundSettings: illegal value "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_30

    .line 1746
    :cond_25
    const/16 v0, 0xf

    .line 1747
    goto :goto_30

    .line 1743
    :cond_28
    const/16 v0, 0xe

    .line 1744
    goto :goto_30

    .line 1740
    :cond_2b
    const/16 v0, 0xd

    .line 1741
    goto :goto_30

    .line 1737
    :cond_2e
    const/4 v0, 0x0

    .line 1738
    nop

    .line 1753
    :goto_30
    const/16 v1, 0x10

    if-eq v0, v1, :cond_3a

    .line 1754
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v2, 0x6

    invoke-virtual {v1, v2, v0, p2}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 1757
    :cond_3a
    return-void
.end method

.method private sendEncodedSurroundMode(Landroid/content/ContentResolver;Ljava/lang/String;)V
    .registers 5
    .param p1, "cr"    # Landroid/content/ContentResolver;
    .param p2, "eventSource"    # Ljava/lang/String;

    .line 1725
    const-string v0, "encoded_surround_output"

    const/4 v1, 0x0

    invoke-static {p1, v0, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    .line 1728
    .local v0, "encodedSurroundMode":I
    invoke-direct {p0, v0, p2}, Lcom/android/server/audio/AudioService;->sendEncodedSurroundMode(ILjava/lang/String;)V

    .line 1729
    return-void
.end method

.method private sendMasterMuteUpdate(ZI)V
    .registers 5
    .param p1, "muted"    # Z
    .param p2, "flags"    # I

    .line 3345
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->updateFlagsForTvPlatform(I)I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService$VolumeController;->postMasterMuteChanged(I)V

    .line 3346
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->broadcastMasterMuteStatus(Z)V

    .line 3347
    return-void
.end method

.method private static sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V
    .registers 11
    .param p0, "handler"    # Landroid/os/Handler;
    .param p1, "msg"    # I
    .param p2, "existingMsgPolicy"    # I
    .param p3, "arg1"    # I
    .param p4, "arg2"    # I
    .param p5, "obj"    # Ljava/lang/Object;
    .param p6, "delay"    # I

    .line 5447
    if-nez p2, :cond_6

    .line 5448
    invoke-virtual {p0, p1}, Landroid/os/Handler;->removeMessages(I)V

    goto :goto_10

    .line 5449
    :cond_6
    const/4 v0, 0x1

    if-ne p2, v0, :cond_10

    invoke-virtual {p0, p1}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v0

    if-eqz v0, :cond_10

    .line 5450
    return-void

    .line 5453
    :cond_10
    :goto_10
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    int-to-long v2, p6

    add-long/2addr v0, v2

    .line 5454
    .local v0, "time":J
    invoke-virtual {p0, p1, p3, p4, p5}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {p0, v2, v0, v1}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 5455
    return-void
.end method

.method private sendStickyBroadcastToAll(Landroid/content/Intent;)V
    .registers 6
    .param p1, "intent"    # Landroid/content/Intent;

    .line 3283
    const/high16 v0, 0x10000000

    invoke-virtual {p1, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 3284
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3286
    .local v0, "ident":J
    :try_start_9
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    invoke-virtual {v2, p1, v3}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_10
    .catchall {:try_start_9 .. :try_end_10} :catchall_15

    .line 3288
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3289
    nop

    .line 3290
    return-void

    .line 3288
    :catchall_15
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3289
    throw v2
.end method

.method private setAdaptSound(I)V
    .registers 10
    .param p1, "isAdaptSoundEnabled"    # I

    .line 12741
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 12742
    .local v0, "cr":Landroid/content/ContentResolver;
    const-string v1, "0,0,0,0,0,0,0,0,0,0,0,0,0,0"

    .line 12743
    .local v1, "dhaParam":Ljava/lang/String;
    const-string/jumbo v2, "hearing_diagnosis"

    const/4 v3, 0x0

    invoke-static {v0, v2, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    .line 12745
    .local v2, "hearing_diagnosis":I
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "adapt_sound_enable="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x1

    if-ne p1, v5, :cond_1d

    .line 12746
    const-string/jumbo v6, "true"

    goto :goto_1f

    :cond_1d
    const-string v6, "false"

    :goto_1f
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 12745
    invoke-static {v4}, Lcom/samsung/android/media/SemAudioSystem;->setEffectParameters(Ljava/lang/String;)I

    .line 12748
    if-ne v2, v5, :cond_5a

    .line 12749
    const-string/jumbo v4, "hearing_revision"

    invoke-static {v0, v4, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    .line 12750
    .local v4, "state":I
    const-string/jumbo v5, "hearing_direction"

    invoke-static {v0, v5, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    .line 12751
    .local v3, "direction":I
    const-string/jumbo v5, "hearing_parameters"

    invoke-static {v0, v5}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 12752
    .local v5, "param":Ljava/lang/String;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, ","

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 12754
    .end local v3    # "direction":I
    .end local v4    # "state":I
    .end local v5    # "param":Ljava/lang/String;
    :cond_5a
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mDhaParam:Ljava/lang/String;

    .line 12755
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "adapt_sound="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/samsung/android/media/SemAudioSystem;->setEffectParameters(Ljava/lang/String;)I

    .line 12756
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAdaptSound: gain dha Parameter : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "AS.AudioService"

    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12757
    return-void
.end method

.method private setAllSoundMute()V
    .registers 8

    .line 12782
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setAllSoundMuteToNative()V

    .line 12783
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    iget v3, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    const/16 v1, 0x69

    const/4 v2, 0x2

    const/4 v4, 0x0

    const-string/jumbo v5, "persist.audio.allsoundmute"

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 12785
    return-void
.end method

.method private setAllSoundMuteToNative()V
    .registers 4

    .line 12776
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "l_all_sound_mute_enable="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12777
    iget v1, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    const/4 v2, 0x1

    if-ne v1, v2, :cond_14

    .line 12778
    const-string/jumbo v1, "true"

    goto :goto_16

    :cond_14
    const-string v1, "false"

    :goto_16
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12776
    invoke-static {v0}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 12779
    return-void
.end method

.method private setDeviceVolumeBehaviorInternal(IILjava/lang/String;)V
    .registers 8
    .param p1, "audioSystemDeviceOut"    # I
    .param p2, "deviceVolumeBehavior"    # I
    .param p3, "caller"    # Ljava/lang/String;

    .line 5604
    sget-object v0, Lcom/android/server/audio/AudioService;->sDeviceVolumeBehaviorSupportedDeviceOutSet:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_7d

    .line 5610
    if-eqz p2, :cond_31

    const/4 v0, 0x1

    if-eq p2, v0, :cond_2a

    const/4 v0, 0x2

    if-eq p2, v0, :cond_23

    const/4 v0, 0x3

    if-eq p2, v0, :cond_1b

    const/4 v0, 0x4

    if-eq p2, v0, :cond_1b

    goto :goto_38

    .line 5625
    :cond_1b
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Absolute volume unsupported for now"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5616
    :cond_23
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFullVolumeDevices(I)V

    .line 5617
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->addAudioSystemDeviceOutToFixedVolumeDevices(I)V

    .line 5618
    goto :goto_38

    .line 5620
    :cond_2a
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->addAudioSystemDeviceOutToFullVolumeDevices(I)V

    .line 5621
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFixedVolumeDevices(I)V

    .line 5622
    goto :goto_38

    .line 5612
    :cond_31
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFullVolumeDevices(I)V

    .line 5613
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFixedVolumeDevices(I)V

    .line 5614
    nop

    .line 5629
    :goto_38
    sget-object v0, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Volume behavior "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " for dev=0x"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5631
    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " from:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 5629
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 5634
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setDeviceVolumeBehavior:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lcom/android/server/audio/AudioService;->checkAddAllFixedVolumeDevices(ILjava/lang/String;)V

    .line 5635
    return-void

    .line 5606
    :cond_7d
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unsupported device type "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private setDirectPowerMode(I)V
    .registers 4
    .param p1, "directPowerEnabled"    # I

    .line 13992
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "l_direct_power_enable="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13993
    const/4 v1, 0x1

    if-ne p1, v1, :cond_12

    const-string/jumbo v1, "true"

    goto :goto_14

    :cond_12
    const-string v1, "false"

    :goto_14
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 13992
    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 13994
    return-void
.end method

.method private setExtVolumeController(Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .registers 5
    .param p1, "apc"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9334
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x1110096

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-nez v0, :cond_17

    .line 9336
    const-string v0, "AS.AudioService"

    const-string v1, "Cannot set external volume controller: device not set for volume keys handled in PhoneWindowManager"

    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9338
    return-void

    .line 9340
    :cond_17
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExtVolumeControllerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 9341
    :try_start_1a
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    if-eqz v1, :cond_31

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    invoke-interface {v1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface {v1}, Landroid/os/IBinder;->pingBinder()Z

    move-result v1

    if-nez v1, :cond_31

    .line 9342
    const-string v1, "AS.AudioService"

    const-string v2, "Cannot set external volume controller: existing controller"

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9344
    :cond_31
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9345
    monitor-exit v0

    .line 9346
    return-void

    .line 9345
    :catchall_35
    move-exception v1

    monitor-exit v0
    :try_end_37
    .catchall {:try_start_1a .. :try_end_37} :catchall_35

    throw v1
.end method

.method private setHeadsetOnlyStream(I)V
    .registers 5
    .param p1, "streams"    # I

    .line 14473
    const/4 v0, 0x0

    .line 14474
    .local v0, "internalStream":I
    and-int/lit8 v1, p1, 0x4

    const-string/jumbo v2, "l_sound_assistant_ring_via_headset_enable="

    if-eqz v1, :cond_21

    .line 14475
    const/16 v0, 0x34

    .line 14479
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 14480
    const/16 v1, 0x31

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 14484
    return-void

    .line 14487
    :cond_21
    and-int/lit8 v1, p1, 0x1

    if-eqz v1, :cond_2d

    .line 14488
    or-int/lit8 v0, v0, 0x4

    .line 14489
    iget v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    or-int/lit8 v1, v1, 0x1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 14491
    :cond_2d
    and-int/lit8 v1, p1, 0x20

    if-eqz v1, :cond_39

    .line 14492
    or-int/lit8 v0, v0, 0x20

    .line 14493
    iget v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    or-int/lit8 v1, v1, 0x20

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 14495
    :cond_39
    and-int/lit8 v1, p1, 0x10

    if-eqz v1, :cond_45

    .line 14496
    or-int/lit8 v0, v0, 0x10

    .line 14497
    iget v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    or-int/lit8 v1, v1, 0x10

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 14500
    :cond_45
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 14501
    return-void
.end method

.method private setKaraokeListenback(I)V
    .registers 4
    .param p1, "karaokeListenbackEnabled"    # I

    .line 13985
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "l_effect_listenback_key;state="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 13987
    return-void
.end method

.method private setMasterMuteInternal(ZILjava/lang/String;II)V
    .registers 8
    .param p1, "mute"    # Z
    .param p2, "flags"    # I
    .param p3, "callingPackage"    # Ljava/lang/String;
    .param p4, "uid"    # I
    .param p5, "userId"    # I

    .line 3522
    const/16 v0, 0x3e8

    if-ne p4, v0, :cond_c

    .line 3523
    invoke-static {p4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    invoke-static {p5, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result p4

    .line 3526
    :cond_c
    if-nez p1, :cond_19

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v1, 0x21

    invoke-virtual {v0, v1, p4, p3}, Landroid/app/AppOpsManager;->noteOp(IILjava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_19

    .line 3528
    return-void

    .line 3530
    :cond_19
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    if-eq p5, v0, :cond_2a

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3531
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_2a

    .line 3534
    return-void

    .line 3537
    :cond_2a
    sget-object v0, Lcom/android/server/audio/AudioService;->sMasterMuteLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioServiceEvents$MasterMuteEvent;

    invoke-direct {v1, p1, p2, p3}, Lcom/android/server/audio/AudioServiceEvents$MasterMuteEvent;-><init>(IILjava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 3539
    invoke-direct {p0, p1, p2, p5}, Lcom/android/server/audio/AudioService;->setMasterMuteInternalNoCallerCheck(ZII)V

    .line 3540
    return-void
.end method

.method private setMasterMuteInternalNoCallerCheck(ZII)V
    .registers 7
    .param p1, "mute"    # Z
    .param p2, "flags"    # I
    .param p3, "userId"    # I

    .line 3544
    const/4 v0, 0x3

    new-array v0, v0, [Ljava/lang/Object;

    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    const/4 v2, 0x0

    aput-object v1, v0, v2

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const/4 v2, 0x1

    aput-object v1, v0, v2

    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const/4 v2, 0x2

    aput-object v1, v0, v2

    const-string v1, "Master mute %s, %d, user=%d"

    invoke-static {v1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3546
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isPlatformAutomotive()Z

    move-result v0

    if-nez v0, :cond_2e

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v0, :cond_2e

    .line 3550
    return-void

    .line 3557
    :cond_2e
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isPlatformAutomotive()Z

    move-result v0

    if-eqz v0, :cond_36

    if-eqz p3, :cond_3c

    .line 3558
    :cond_36
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v0

    if-ne v0, p3, :cond_4b

    .line 3559
    :cond_3c
    invoke-static {}, Landroid/media/AudioSystem;->getMasterMute()Z

    move-result v0

    if-eq p1, v0, :cond_4b

    .line 3560
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->setSystemAudioMute(Z)V

    .line 3561
    invoke-static {p1}, Landroid/media/AudioSystem;->setMasterMute(Z)I

    .line 3562
    invoke-direct {p0, p1, p2}, Lcom/android/server/audio/AudioService;->sendMasterMuteUpdate(ZI)V

    .line 3565
    :cond_4b
    return-void
.end method

.method private setMicMuteFromSwitchInput()V
    .registers 4

    .line 3686
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-class v1, Landroid/hardware/input/InputManager;

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/hardware/input/InputManager;

    .line 3687
    .local v0, "im":Landroid/hardware/input/InputManager;
    invoke-virtual {v0}, Landroid/hardware/input/InputManager;->isMicMuted()I

    move-result v1

    .line 3688
    .local v1, "isMicMuted":I
    const/4 v2, -0x1

    if-eq v1, v2, :cond_1d

    .line 3689
    invoke-virtual {v0}, Landroid/hardware/input/InputManager;->isMicMuted()I

    move-result v2

    if-eqz v2, :cond_19

    const/4 v2, 0x1

    goto :goto_1a

    :cond_19
    const/4 v2, 0x0

    :goto_1a
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteFromSwitch(Z)V

    .line 3691
    :cond_1d
    return-void
.end method

.method private setMicrophoneMuteNoCallerCheck(I)V
    .registers 15
    .param p1, "userId"    # I

    .line 3706
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->isMicrophoneSupposedToBeMuted()Z

    move-result v0

    .line 3708
    .local v0, "muted":Z
    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x1

    aput-object v2, v1, v3

    const-string v2, "Mic mute %b, user=%d"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3711
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v1

    if-eq v1, p1, :cond_2a

    const/16 v1, 0x3e8

    if-ne p1, v1, :cond_bb

    .line 3712
    :cond_2a
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    invoke-virtual {v1}, Lcom/android/server/audio/AudioSystemAdapter;->isMicrophoneMuted()Z

    move-result v1

    .line 3713
    .local v1, "currentMute":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 3714
    .local v3, "identity":J
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    invoke-virtual {v5, v0}, Lcom/android/server/audio/AudioSystemAdapter;->muteMicrophone(Z)I

    move-result v5

    .line 3717
    .local v5, "ret":I
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    invoke-virtual {v6}, Lcom/android/server/audio/AudioSystemAdapter;->isMicrophoneMuted()Z

    move-result v6

    iput-boolean v6, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 3718
    if-eqz v5, :cond_62

    .line 3719
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Error changing mic mute state to "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v7, " current:"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v7, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v2, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3723
    :cond_62
    new-instance v2, Landroid/media/MediaMetrics$Item;

    const-string v6, "audio.mic"

    invoke-direct {v2, v6}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 3724
    invoke-virtual {v2, p1}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v6, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 3725
    const-string/jumbo v7, "setMicrophoneMuteNoCallerCheck"

    invoke-virtual {v2, v6, v7}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v6, Landroid/media/MediaMetrics$Property;->MUTE:Landroid/media/MediaMetrics$Key;

    .line 3726
    iget-boolean v7, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    if-eqz v7, :cond_80

    .line 3727
    const-string/jumbo v7, "on"

    goto :goto_83

    :cond_80
    const-string/jumbo v7, "off"

    .line 3726
    :goto_83
    invoke-virtual {v2, v6, v7}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v6, Landroid/media/MediaMetrics$Property;->REQUEST:Landroid/media/MediaMetrics$Key;

    .line 3728
    if-eqz v0, :cond_8f

    .line 3729
    const-string/jumbo v7, "mute"

    goto :goto_92

    :cond_8f
    const-string/jumbo v7, "unmute"

    .line 3728
    :goto_92
    invoke-virtual {v2, v6, v7}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v6, Landroid/media/MediaMetrics$Property;->STATUS:Landroid/media/MediaMetrics$Key;

    .line 3730
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-virtual {v2, v6, v7}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    .line 3731
    invoke-virtual {v2}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 3739
    if-eq v0, v1, :cond_b7

    .line 3740
    :try_start_a5
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v7, 0x1e

    const/4 v8, 0x1

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    invoke-static/range {v6 .. v12}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V
    :try_end_b1
    .catchall {:try_start_a5 .. :try_end_b1} :catchall_b2

    goto :goto_b7

    .line 3744
    :catchall_b2
    move-exception v2

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3745
    throw v2

    .line 3744
    :cond_b7
    :goto_b7
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3745
    nop

    .line 3747
    .end local v1    # "currentMute":Z
    .end local v3    # "identity":J
    .end local v5    # "ret":I
    :cond_bb
    return-void
.end method

.method private setModeInt(ILandroid/os/IBinder;IIZLjava/lang/String;)I
    .registers 34
    .param p1, "mode"    # I
    .param p2, "cb"    # Landroid/os/IBinder;
    .param p3, "pid"    # I
    .param p4, "uid"    # I
    .param p5, "isPrivileged"    # Z
    .param p6, "caller"    # Ljava/lang/String;

    .line 4267
    move-object/from16 v8, p0

    move-object/from16 v1, p2

    move/from16 v9, p3

    move-object/from16 v10, p6

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setModeInt(mode="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, p1

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", pid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v11, p4

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", caller="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ")"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v12, "AS.AudioService"

    invoke-static {v12, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4270
    const/4 v13, 0x0

    .line 4271
    .local v13, "newModeOwnerPid":I
    if-nez v1, :cond_4a

    .line 4272
    const-string/jumbo v0, "setModeInt() called with null binder"

    invoke-static {v12, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4273
    return v13

    .line 4276
    :cond_4a
    const/4 v0, 0x0

    .line 4277
    .local v0, "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v14

    .line 4278
    .local v14, "iter":Ljava/util/Iterator;
    :goto_51
    invoke-interface {v14}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    const/4 v15, 0x3

    const/4 v7, 0x0

    if-eqz v3, :cond_92

    .line 4279
    invoke-interface {v14}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 4280
    .local v3, "h":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    invoke-virtual {v3}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getPid()I

    move-result v4

    if-ne v4, v9, :cond_91

    .line 4281
    move-object v4, v3

    .line 4283
    .end local v0    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .local v4, "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    invoke-interface {v14}, Ljava/util/Iterator;->remove()V

    .line 4284
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getMode()I

    move-result v0

    if-ne v0, v15, :cond_76

    .line 4285
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v5, 0x1f

    invoke-virtual {v0, v5, v4}, Lcom/android/server/audio/AudioService$AudioHandler;->removeEqualMessages(ILjava/lang/Object;)V

    .line 4288
    :cond_76
    :try_start_76
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-interface {v0, v4, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4289
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getBinder()Landroid/os/IBinder;

    move-result-object v0
    :try_end_81
    .catch Ljava/util/NoSuchElementException; {:try_start_76 .. :try_end_81} :catch_87

    if-eq v1, v0, :cond_85

    .line 4290
    const/4 v0, 0x0

    .end local v4    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .restart local v0    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    goto :goto_86

    .line 4289
    .end local v0    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .restart local v4    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    :cond_85
    move-object v0, v4

    .line 4295
    .end local v4    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .restart local v0    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    :goto_86
    goto :goto_92

    .line 4292
    .end local v0    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .restart local v4    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    :catch_87
    move-exception v0

    .line 4293
    .local v0, "e":Ljava/util/NoSuchElementException;
    const/4 v4, 0x0

    .line 4294
    const-string/jumbo v5, "link does not exist ..."

    invoke-static {v12, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4296
    .end local v0    # "e":Ljava/util/NoSuchElementException;
    move-object v0, v4

    goto :goto_92

    .line 4298
    .end local v3    # "h":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .end local v4    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .local v0, "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    :cond_91
    goto :goto_51

    .line 4299
    :cond_92
    :goto_92
    iget v6, v8, Lcom/android/server/audio/AudioService;->mMode:I

    .line 4300
    .local v6, "oldMode":I
    const/4 v3, 0x0

    move-object v4, v1

    move v5, v2

    move/from16 v16, v3

    .line 4303
    .end local p1    # "mode":I
    .end local p2    # "cb":Landroid/os/IBinder;
    .local v4, "cb":Landroid/os/IBinder;
    .local v5, "mode":I
    .local v16, "status":I
    :goto_99
    move/from16 v17, v5

    .line 4304
    .local v17, "actualMode":I
    if-nez v5, :cond_e9

    .line 4306
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_e0

    .line 4307
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v1, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v0, v1

    check-cast v0, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 4308
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getBinder()Landroid/os/IBinder;

    move-result-object v1

    .line 4309
    .end local v4    # "cb":Landroid/os/IBinder;
    .local v1, "cb":Landroid/os/IBinder;
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getMode()I

    move-result v17

    .line 4316
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, " using mode="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " instead due to death hdlr at pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4317
    # getter for: Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPid:I
    invoke-static {v0}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->access$2400(Lcom/android/server/audio/AudioService$SetModeDeathHandler;)I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4316
    invoke-static {v12, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    move-object v15, v1

    move v9, v5

    move v11, v6

    move/from16 v19, v13

    move v13, v7

    move/from16 v7, v17

    goto/16 :goto_13a

    .line 4306
    .end local v1    # "cb":Landroid/os/IBinder;
    .restart local v4    # "cb":Landroid/os/IBinder;
    :cond_e0
    move-object v15, v4

    move v9, v5

    move v11, v6

    move/from16 v19, v13

    move v13, v7

    move/from16 v7, v17

    goto :goto_13a

    .line 4321
    :cond_e9
    if-nez v0, :cond_107

    .line 4322
    new-instance v18, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    move-object/from16 v1, v18

    move-object/from16 v2, p0

    move-object v3, v4

    move-object v15, v4

    .end local v4    # "cb":Landroid/os/IBinder;
    .local v15, "cb":Landroid/os/IBinder;
    move/from16 v4, p3

    move v9, v5

    .end local v5    # "mode":I
    .local v9, "mode":I
    move/from16 v5, p4

    move v11, v6

    .end local v6    # "oldMode":I
    .local v11, "oldMode":I
    move/from16 v6, p5

    move/from16 v19, v13

    move v13, v7

    .end local v13    # "newModeOwnerPid":I
    .local v19, "newModeOwnerPid":I
    move-object/from16 v7, p6

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;IIZLjava/lang/String;)V

    move-object/from16 v0, v18

    move-object v1, v0

    goto :goto_10e

    .line 4321
    .end local v9    # "mode":I
    .end local v11    # "oldMode":I
    .end local v15    # "cb":Landroid/os/IBinder;
    .end local v19    # "newModeOwnerPid":I
    .restart local v4    # "cb":Landroid/os/IBinder;
    .restart local v5    # "mode":I
    .restart local v6    # "oldMode":I
    .restart local v13    # "newModeOwnerPid":I
    :cond_107
    move-object v15, v4

    move v9, v5

    move v11, v6

    move/from16 v19, v13

    move v13, v7

    .end local v4    # "cb":Landroid/os/IBinder;
    .end local v5    # "mode":I
    .end local v6    # "oldMode":I
    .end local v13    # "newModeOwnerPid":I
    .restart local v9    # "mode":I
    .restart local v11    # "oldMode":I
    .restart local v15    # "cb":Landroid/os/IBinder;
    .restart local v19    # "newModeOwnerPid":I
    move-object v1, v0

    .line 4326
    .end local v0    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .local v1, "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    :goto_10e
    :try_start_10e
    invoke-interface {v15, v1, v13}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_111
    .catch Landroid/os/RemoteException; {:try_start_10e .. :try_end_111} :catch_112

    .line 4330
    goto :goto_12f

    .line 4327
    :catch_112
    move-exception v0

    move-object v2, v0

    move-object v0, v2

    .line 4329
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setMode() could not link to "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " binder death"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v12, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4334
    .end local v0    # "e":Landroid/os/RemoteException;
    :goto_12f
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v0, v13, v1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4335
    invoke-virtual {v1, v9}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->setMode(I)V

    move-object v0, v1

    move/from16 v7, v17

    .line 4369
    .end local v1    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .end local v17    # "actualMode":I
    .local v0, "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .local v7, "actualMode":I
    :goto_13a
    iget v1, v8, Lcom/android/server/audio/AudioService;->mMode:I

    if-eq v7, v1, :cond_1b6

    .line 4370
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 4371
    .local v1, "identity":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getModeOwnerUid()I

    move-result v3

    invoke-static {v7, v3}, Landroid/media/AudioSystem;->setPhoneState(II)I

    move-result v3

    .line 4372
    .end local v16    # "status":I
    .local v3, "status":I
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4373
    if-nez v3, :cond_1a2

    .line 4374
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, " mode successfully set to "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v12, v4}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4375
    iput v7, v8, Lcom/android/server/audio/AudioService;->mMode:I

    .line 4378
    iget-object v4, v8, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    if-eqz v4, :cond_17a

    .line 4379
    invoke-virtual {v4}, Lcom/samsung/android/server/audio/GoodCatchManager;->isCallModeCatchEnabled()Z

    move-result v4

    if-eqz v4, :cond_17a

    .line 4380
    iget-object v4, v8, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    iget-object v5, v8, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 4381
    invoke-virtual {v5}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v5

    .line 4380
    invoke-virtual {v4, v10, v7, v5}, Lcom/samsung/android/server/audio/GoodCatchManager;->updateCallMode(Ljava/lang/String;ILjava/lang/String;)V

    .line 4385
    :cond_17a
    iget v4, v8, Lcom/android/server/audio/AudioService;->mMode:I

    const/4 v5, 0x3

    if-ne v4, v5, :cond_187

    .line 4386
    iget-object v4, v8, Lcom/android/server/audio/AudioService;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    iget-object v5, v8, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v4, v5}, Lcom/samsung/android/server/audio/DvfsHelper;->startCPUBoostForVoIP(Landroid/content/Context;)V

    goto :goto_18c

    .line 4388
    :cond_187
    iget-object v4, v8, Lcom/android/server/audio/AudioService;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    invoke-virtual {v4}, Lcom/samsung/android/server/audio/DvfsHelper;->stopCPUBoostForVoIP()V

    .line 4392
    :goto_18c
    new-instance v4, Landroid/content/Intent;

    const-string v5, "android.samsung.media.action.AUDIO_MODE"

    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4393
    .local v4, "intent":Landroid/content/Intent;
    iget v5, v8, Lcom/android/server/audio/AudioService;->mMode:I

    const-string v6, "android.samsung.media.extra.AUDIO_MODE"

    invoke-virtual {v4, v6, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 4394
    invoke-direct {v8, v4}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 4397
    .end local v4    # "intent":Landroid/content/Intent;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->postSarControl()V

    move v5, v9

    goto :goto_1b2

    .line 4409
    :cond_1a2
    if-eqz v0, :cond_1ac

    .line 4410
    iget-object v4, v8, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4411
    invoke-interface {v15, v0, v13}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4414
    :cond_1ac
    const-string v4, " mode set to MODE_NORMAL after phoneState pb"

    invoke-static {v12, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4415
    const/4 v5, 0x0

    .line 4417
    .end local v1    # "identity":J
    .end local v9    # "mode":I
    .restart local v5    # "mode":I
    :goto_1b2
    move/from16 v16, v3

    move v9, v5

    goto :goto_1b9

    .line 4418
    .end local v3    # "status":I
    .end local v5    # "mode":I
    .restart local v9    # "mode":I
    .restart local v16    # "status":I
    :cond_1b6
    const/4 v1, 0x0

    move/from16 v16, v1

    .line 4420
    :goto_1b9
    if-eqz v16, :cond_1d1

    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_1c4

    goto :goto_1d1

    :cond_1c4
    move v5, v9

    move v6, v11

    move v7, v13

    move-object v4, v15

    move/from16 v13, v19

    const/4 v15, 0x3

    move/from16 v9, p3

    move/from16 v11, p4

    goto/16 :goto_99

    .line 4422
    :cond_1d1
    :goto_1d1
    if-nez v16, :cond_24b

    .line 4423
    if-eqz v7, :cond_1e2

    .line 4424
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getModeOwnerPid()I

    move-result v13

    .line 4425
    .end local v19    # "newModeOwnerPid":I
    .restart local v13    # "newModeOwnerPid":I
    if-nez v13, :cond_1e4

    .line 4426
    const-string/jumbo v1, "setMode() different from MODE_NORMAL with empty mode client stack"

    invoke-static {v12, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1e4

    .line 4423
    .end local v13    # "newModeOwnerPid":I
    .restart local v19    # "newModeOwnerPid":I
    :cond_1e2
    move/from16 v13, v19

    .line 4430
    .end local v19    # "newModeOwnerPid":I
    .restart local v13    # "newModeOwnerPid":I
    :cond_1e4
    :goto_1e4
    iget-object v12, v8, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v6, Lcom/android/server/audio/AudioServiceEvents$PhoneStateEvent;

    move-object v1, v6

    move-object/from16 v2, p6

    move/from16 v3, p3

    move v4, v9

    move v5, v13

    move/from16 p1, v13

    move-object v13, v6

    .end local v13    # "newModeOwnerPid":I
    .local p1, "newModeOwnerPid":I
    move v6, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$PhoneStateEvent;-><init>(Ljava/lang/String;IIII)V

    invoke-virtual {v12, v13}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 4433
    const/high16 v1, -0x80000000

    invoke-direct {v8, v1}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    move-result v12

    .line 4434
    .local v12, "streamType":I
    invoke-virtual {v8, v12}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v13

    .line 4435
    .local v13, "device":I
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v2, v12

    aget-object v1, v1, v2

    invoke-virtual {v1, v13}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v17

    .line 4436
    .local v17, "index":I
    sget-object v1, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v1, v12

    const/4 v5, 0x1

    const/16 v18, 0x1

    move-object/from16 v1, p0

    move/from16 v3, v17

    move v4, v13

    move-object/from16 v6, p6

    move/from16 p2, v12

    move v12, v7

    .end local v7    # "actualMode":I
    .local v12, "actualMode":I
    .local p2, "streamType":I
    move/from16 v7, v18

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->setStreamVolumeInt(IIIZLjava/lang/String;Z)V

    .line 4439
    const/4 v1, 0x1

    invoke-direct {v8, v1, v10}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(ZLjava/lang/String;)V

    .line 4442
    invoke-virtual {v8, v11, v12}, Lcom/android/server/audio/AudioService;->updateAbsVolumeMultiModeDevices(II)V

    .line 4444
    const/4 v1, 0x3

    if-ne v9, v1, :cond_248

    .line 4445
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->isPrivileged()Z

    move-result v1

    if-nez v1, :cond_248

    .line 4446
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v21, 0x1f

    const/16 v22, 0x2

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v26, 0x1770

    move-object/from16 v20, v1

    move-object/from16 v25, v0

    invoke-static/range {v20 .. v26}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4455
    .end local v13    # "device":I
    .end local v17    # "index":I
    .end local p2    # "streamType":I
    :cond_248
    move/from16 v13, p1

    goto :goto_24e

    .line 4422
    .end local v12    # "actualMode":I
    .end local p1    # "newModeOwnerPid":I
    .restart local v7    # "actualMode":I
    .restart local v19    # "newModeOwnerPid":I
    :cond_24b
    move v12, v7

    .end local v7    # "actualMode":I
    .restart local v12    # "actualMode":I
    move/from16 v13, v19

    .line 4455
    .end local v19    # "newModeOwnerPid":I
    .local v13, "newModeOwnerPid":I
    :goto_24e
    return v13
.end method

.method private setNbQualityMode(I)V
    .registers 3
    .param p1, "nbQualityMode"    # I

    .line 12766
    if-lez p1, :cond_9

    .line 12767
    const-string/jumbo v0, "l_call_nb_quality_enable=true"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    goto :goto_f

    .line 12769
    :cond_9
    const-string/jumbo v0, "l_call_nb_quality_enable=false"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 12771
    :goto_f
    return-void
.end method

.method private setPlayerChangedCallbackLocked()V
    .registers 5

    .line 13054
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 13055
    .local v0, "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_6
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_22

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    .line 13056
    .local v2, "receiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    const/16 v3, 0x10

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioService$SoundEventReceiver;->hasEventType(I)Z

    move-result v3

    if-eqz v3, :cond_21

    .line 13058
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    const/4 v3, 0x1

    invoke-virtual {v1, v3}, Lcom/android/server/audio/PlaybackActivityMonitor;->setPlayerChangeObserver(Z)V

    .line 13059
    return-void

    .line 13061
    .end local v2    # "receiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    :cond_21
    goto :goto_6

    .line 13062
    :cond_22
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/audio/PlaybackActivityMonitor;->setPlayerChangeObserver(Z)V

    .line 13063
    return-void
.end method

.method private setPreventOverheatForGame(Lcom/samsung/android/media/AudioParameter;)V
    .registers 6
    .param p1, "parameter"    # Lcom/samsung/android/media/AudioParameter;

    .line 14592
    :try_start_0
    const-string/jumbo v0, "uid"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_b
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_b} :catch_2c

    .line 14593
    .local v0, "uid":I
    const/4 v1, -0x1

    if-ne v0, v1, :cond_f

    return-void

    .line 14597
    :cond_f
    nop

    .line 14600
    const-string/jumbo v1, "state"

    invoke-virtual {p1, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    .local v2, "value":Ljava/lang/String;
    if-eqz v1, :cond_2b

    .line 14601
    const-string/jumbo v1, "true"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 14602
    .local v1, "state":Z
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v3, v0, v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->setPreventOverheatState(IZ)V

    .line 14603
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v3}, Lcom/samsung/android/server/audio/MultiSoundManager;->setLimitedVolumeForOverheat()V

    .line 14605
    .end local v1    # "state":Z
    :cond_2b
    return-void

    .line 14594
    .end local v0    # "uid":I
    .end local v2    # "value":Ljava/lang/String;
    :catch_2c
    move-exception v0

    .line 14595
    .local v0, "e":Ljava/lang/NumberFormatException;
    const-string v1, "AS.AudioService"

    const-string v2, "NumberFormatException"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 14596
    return-void
.end method

.method private setRingerMode(ILjava/lang/String;Z)V
    .registers 20
    .param p1, "ringerMode"    # I
    .param p2, "caller"    # Ljava/lang/String;
    .param p3, "external"    # Z

    .line 3837
    move-object/from16 v1, p0

    move-object/from16 v10, p2

    move/from16 v11, p3

    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-nez v0, :cond_b3

    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v0, :cond_12

    move/from16 v2, p1

    goto/16 :goto_b5

    .line 3840
    :cond_12
    if-eqz v10, :cond_9a

    invoke-virtual/range {p2 .. p2}, Ljava/lang/String;->length()I

    move-result v0

    if-eqz v0, :cond_9a

    .line 3843
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->ensureValidRingerMode(I)V

    .line 3844
    const/4 v0, 0x1

    move/from16 v2, p1

    if-ne v2, v0, :cond_29

    iget-boolean v3, v1, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-nez v3, :cond_29

    .line 3845
    const/4 v2, 0x0

    move v12, v2

    .end local p1    # "ringerMode":I
    .local v2, "ringerMode":I
    goto :goto_2a

    .line 3849
    .end local v2    # "ringerMode":I
    .restart local p1    # "ringerMode":I
    :cond_29
    move v12, v2

    .end local p1    # "ringerMode":I
    .local v12, "ringerMode":I
    :goto_2a
    iget v2, v1, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    if-eqz v2, :cond_33

    if-eqz v12, :cond_33

    .line 3850
    const/4 v2, 0x0

    iput v2, v1, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 3852
    :cond_33
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v2

    if-eq v12, v2, :cond_3c

    .line 3854
    invoke-direct {v1, v0, v12, v10}, Lcom/android/server/audio/AudioService;->sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V

    .line 3862
    :cond_3c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v13

    .line 3864
    .local v13, "identity":J
    :try_start_40
    iget-object v15, v1, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v15
    :try_end_43
    .catchall {:try_start_40 .. :try_end_43} :catchall_95

    .line 3865
    :try_start_43
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v2

    move v9, v2

    .line 3866
    .local v9, "ringerModeInternal":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v3

    .line 3867
    .local v3, "ringerModeExternal":I
    if-eqz v11, :cond_6b

    .line 3868
    invoke-direct {v1, v12}, Lcom/android/server/audio/AudioService;->setRingerModeExt(I)V

    .line 3869
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    if-eqz v2, :cond_62

    .line 3870
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    iget-object v7, v1, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    move v4, v12

    move-object/from16 v5, p2

    move v6, v9

    invoke-interface/range {v2 .. v7}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->onSetRingerModeExternal(IILjava/lang/String;ILandroid/media/VolumePolicy;)I

    move-result v2

    move v12, v2

    .line 3873
    :cond_62
    if-eq v12, v9, :cond_8c

    .line 3874
    invoke-direct {v1, v12, v0}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 3876
    invoke-direct {v1, v12, v10, v11}, Lcom/android/server/audio/AudioService;->handleSetRingerMode(ILjava/lang/String;Z)V

    goto :goto_8c

    .line 3880
    :cond_6b
    if-eq v12, v9, :cond_73

    .line 3881
    invoke-direct {v1, v12, v0}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 3883
    invoke-direct {v1, v12, v10, v11}, Lcom/android/server/audio/AudioService;->handleSetRingerMode(ILjava/lang/String;Z)V

    .line 3886
    :cond_73
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    if-eqz v0, :cond_88

    .line 3887
    iget-object v4, v1, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    move v5, v9

    move v6, v12

    move-object/from16 v7, p2

    move v8, v3

    move v2, v9

    .end local v9    # "ringerModeInternal":I
    .local v2, "ringerModeInternal":I
    move-object v9, v0

    invoke-interface/range {v4 .. v9}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->onSetRingerModeInternal(IILjava/lang/String;ILandroid/media/VolumePolicy;)I

    move-result v0

    move v12, v0

    goto :goto_89

    .line 3886
    .end local v2    # "ringerModeInternal":I
    .restart local v9    # "ringerModeInternal":I
    :cond_88
    move v2, v9

    .line 3890
    .end local v9    # "ringerModeInternal":I
    .restart local v2    # "ringerModeInternal":I
    :goto_89
    invoke-direct {v1, v12}, Lcom/android/server/audio/AudioService;->setRingerModeExt(I)V

    .line 3892
    .end local v2    # "ringerModeInternal":I
    .end local v3    # "ringerModeExternal":I
    :cond_8c
    :goto_8c
    monitor-exit v15
    :try_end_8d
    .catchall {:try_start_43 .. :try_end_8d} :catchall_92

    .line 3894
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3895
    nop

    .line 3896
    return-void

    .line 3892
    :catchall_92
    move-exception v0

    :try_start_93
    monitor-exit v15
    :try_end_94
    .catchall {:try_start_93 .. :try_end_94} :catchall_92

    .end local v12    # "ringerMode":I
    .end local v13    # "identity":J
    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p2    # "caller":Ljava/lang/String;
    .end local p3    # "external":Z
    :try_start_94
    throw v0
    :try_end_95
    .catchall {:try_start_94 .. :try_end_95} :catchall_95

    .line 3894
    .restart local v12    # "ringerMode":I
    .restart local v13    # "identity":J
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p2    # "caller":Ljava/lang/String;
    .restart local p3    # "external":Z
    :catchall_95
    move-exception v0

    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3895
    throw v0

    .line 3840
    .end local v12    # "ringerMode":I
    .end local v13    # "identity":J
    .restart local p1    # "ringerMode":I
    :cond_9a
    move/from16 v2, p1

    .line 3841
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Bad caller: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3837
    :cond_b3
    move/from16 v2, p1

    .line 3838
    :goto_b5
    return-void
.end method

.method private setRingerModeExt(I)V
    .registers 4
    .param p1, "ringerMode"    # I

    .line 3899
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3900
    :try_start_3
    iget v1, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    if-ne p1, v1, :cond_9

    monitor-exit v0

    return-void

    .line 3901
    :cond_9
    iput p1, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 3902
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_12

    .line 3904
    const-string v0, "android.media.RINGER_MODE_CHANGED"

    invoke-direct {p0, v0, p1}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(Ljava/lang/String;I)V

    .line 3905
    return-void

    .line 3902
    :catchall_12
    move-exception v1

    :try_start_13
    monitor-exit v0
    :try_end_14
    .catchall {:try_start_13 .. :try_end_14} :catchall_12

    throw v1
.end method

.method private setRingerModeInt(IZ)V
    .registers 15
    .param p1, "ringerMode"    # I
    .param p2, "persist"    # Z

    .line 4019
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 4020
    :try_start_3
    iget v1, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-eq v1, p1, :cond_b

    move v1, v2

    goto :goto_c

    :cond_b
    move v1, v3

    .line 4021
    .local v1, "change":Z
    :goto_c
    if-eqz v1, :cond_21

    .line 4022
    iget v4, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    iput v4, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    .line 4023
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v6, 0x6e

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    const/4 v11, 0x0

    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4025
    :cond_21
    iput p1, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 4026
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->muteRingerModeStreams()V

    .line 4027
    monitor-exit v0
    :try_end_27
    .catchall {:try_start_3 .. :try_end_27} :catchall_54

    .line 4030
    if-eqz p2, :cond_35

    .line 4031
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v5, 0x3

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/16 v10, 0x1f4

    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4034
    :cond_35
    if-eqz v1, :cond_53

    .line 4036
    const-string v0, "android.media.INTERNAL_RINGER_MODE_CHANGED_ACTION"

    invoke-direct {p0, v0, p1}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(Ljava/lang/String;I)V

    .line 4038
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    if-eqz v0, :cond_53

    .line 4039
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    const/4 v4, 0x2

    if-eq v0, v4, :cond_49

    if-eq p1, v4, :cond_49

    move v0, v2

    goto :goto_4a

    :cond_49
    move v0, v3

    .line 4040
    .local v0, "ignored":Z
    :goto_4a
    if-nez v0, :cond_53

    .line 4041
    if-eq p1, v4, :cond_4f

    goto :goto_50

    :cond_4f
    move v2, v3

    :goto_50
    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->muteMediaStreamOfSpeaker(Z)V

    .line 4045
    .end local v0    # "ignored":Z
    :cond_53
    return-void

    .line 4027
    .end local v1    # "change":Z
    :catchall_54
    move-exception v1

    :try_start_55
    monitor-exit v0
    :try_end_56
    .catchall {:try_start_55 .. :try_end_56} :catchall_54

    throw v1
.end method

.method private setSafeMediaVolumeEnabled(ZLjava/lang/String;)V
    .registers 15
    .param p1, "on"    # Z
    .param p2, "caller"    # Ljava/lang/String;

    .line 8020
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v0

    .line 8021
    :try_start_3
    iget v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    if-eqz v1, :cond_35

    iget v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_35

    .line 8023
    const/4 v1, 0x3

    const/4 v3, 0x2

    if-eqz p1, :cond_1a

    iget v4, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    if-ne v4, v3, :cond_1a

    .line 8024
    iput v1, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    .line 8025
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->enforceSafeMediaVolume(Ljava/lang/String;)V

    goto :goto_35

    .line 8026
    :cond_1a
    if-nez p1, :cond_35

    iget v4, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    if-ne v4, v1, :cond_35

    .line 8027
    iput v3, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    .line 8028
    iput v2, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    .line 8029
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->saveMusicActiveMs()V

    .line 8030
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v6, 0xb

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const v11, 0xea60

    move-object v10, p2

    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 8039
    :cond_35
    :goto_35
    monitor-exit v0

    .line 8040
    return-void

    .line 8039
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_3 .. :try_end_39} :catchall_37

    throw v1
.end method

.method private setSoundAssistant(Lcom/samsung/android/media/AudioParameter;)V
    .registers 14
    .param p1, "param"    # Lcom/samsung/android/media/AudioParameter;

    .line 12317
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12320
    const-string v0, "adjust_media_volume_only"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    .local v2, "value":Ljava/lang/String;
    const/4 v3, 0x1

    const/4 v4, 0x0

    if-eqz v1, :cond_1d

    .line 12321
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12322
    .local v1, "onOff":I
    if-ne v1, v3, :cond_15

    goto :goto_16

    :cond_15
    move v3, v4

    :goto_16
    iput-boolean v3, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 12323
    invoke-direct {p0, v0, v1}, Lcom/android/server/audio/AudioService;->setSystemSettingForSoundAssistant(Ljava/lang/String;I)V

    .line 12324
    .end local v1    # "onOff":I
    goto/16 :goto_1f0

    :cond_1d
    const-string/jumbo v0, "mute_media_by_vibrate_or_silent_mode"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_47

    .line 12325
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12326
    .restart local v1    # "onOff":I
    if-ne v1, v3, :cond_2f

    move v5, v3

    goto :goto_30

    :cond_2f
    move v5, v4

    :goto_30
    iput-boolean v5, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 12327
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v6, v0, v5}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setBooleanValue(Ljava/lang/String;Z)V

    .line 12328
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    if-eqz v0, :cond_41

    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    const/4 v5, 0x2

    if-eq v0, v5, :cond_41

    goto :goto_42

    :cond_41
    move v3, v4

    :goto_42
    invoke-direct {p0, v3}, Lcom/android/server/audio/AudioService;->muteMediaStreamOfSpeaker(Z)V

    .line 12329
    .end local v1    # "onOff":I
    goto/16 :goto_1f0

    :cond_47
    const-string/jumbo v0, "remove_app_volume"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v2, v0

    const/16 v1, 0x64

    const-string v5, ""

    const-string v6, "AS.AudioService"

    const/4 v7, -0x1

    if-eqz v0, :cond_7d

    .line 12330
    invoke-direct {p0, v2, v7}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v0

    .line 12331
    .local v0, "uid":I
    if-eq v0, v7, :cond_77

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v3

    aget-object v3, v3, v4

    invoke-virtual {v5, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_6b

    goto :goto_77

    .line 12335
    :cond_6b
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseIntArray;->delete(I)V

    .line 12336
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v3, v0, v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolume(II)V

    .line 12337
    .end local v0    # "uid":I
    goto/16 :goto_1f0

    .line 12332
    .restart local v0    # "uid":I
    :cond_77
    :goto_77
    const-string v1, "Invalid uid from SoundAssistant"

    invoke-static {v6, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12333
    return-void

    .line 12337
    .end local v0    # "uid":I
    :cond_7d
    const-string/jumbo v0, "sound_balance"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    move-object v2, v8

    const-string v9, "Invalid balance"

    if-eqz v8, :cond_9e

    .line 12339
    const/16 v3, 0x32

    invoke-direct {p0, v2, v3}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v3

    .line 12340
    .local v3, "balance":I
    if-ltz v3, :cond_98

    if-gt v3, v1, :cond_98

    .line 12343
    invoke-direct {p0, v0, v3}, Lcom/android/server/audio/AudioService;->setSystemSettingForSoundAssistant(Ljava/lang/String;I)V

    .line 12344
    .end local v3    # "balance":I
    goto/16 :goto_1f0

    .line 12341
    .restart local v3    # "balance":I
    :cond_98
    new-instance v0, Ljava/lang/IllegalArgumentException;

    invoke-direct {v0, v9}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12344
    .end local v3    # "balance":I
    :cond_9e
    const-string/jumbo v0, "mono_sound"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v2, v0

    if-eqz v0, :cond_bf

    .line 12346
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v0

    .line 12347
    .local v0, "onOff":I
    if-eqz v0, :cond_b7

    if-ne v0, v3, :cond_b1

    goto :goto_b7

    .line 12348
    :cond_b1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1, v9}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12350
    :cond_b7
    :goto_b7
    const-string/jumbo v1, "mono_audio_db"

    invoke-direct {p0, v1, v0}, Lcom/android/server/audio/AudioService;->setSystemSettingForSoundAssistant(Ljava/lang/String;I)V

    .line 12351
    .end local v0    # "onOff":I
    goto/16 :goto_1f0

    :cond_bf
    const-string v0, "enable_floating_button"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_d9

    .line 12352
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12353
    .restart local v1    # "onOff":I
    if-ne v1, v3, :cond_cf

    goto :goto_d0

    :cond_cf
    move v3, v4

    :goto_d0
    iput-boolean v3, p0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    .line 12354
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v4, v0, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setBooleanValue(Ljava/lang/String;Z)V

    .line 12355
    .end local v1    # "onOff":I
    goto/16 :goto_1f0

    :cond_d9
    const-string/jumbo v0, "ignore_audio_focus"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_158

    .line 12361
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12362
    .restart local v1    # "onOff":I
    const-string/jumbo v8, "uid_for_soundassistant"

    invoke-virtual {p1, v8}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    .line 12363
    .local v8, "strUid":Ljava/lang/String;
    invoke-direct {p0, v8, v7}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v9

    .line 12364
    .local v9, "uid":I
    if-ne v9, v7, :cond_fb

    .line 12365
    const-string/jumbo v0, "invalid arguments"

    invoke-static {v6, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12366
    return-void

    .line 12369
    :cond_fb
    invoke-direct {p0, v9}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v10

    aget-object v10, v10, v4

    .line 12370
    .local v10, "packageName":Ljava/lang/String;
    if-eqz v10, :cond_143

    invoke-virtual {v5, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_10a

    goto :goto_143

    .line 12375
    :cond_10a
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Set ignore audiofocus : "

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v11, ", uid : "

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, ", enabled:"

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12376
    if-ne v1, v3, :cond_131

    move v7, v9

    :cond_131
    iput v7, p0, Lcom/android/server/audio/AudioService;->mIgnoreAudioFocusUid:I

    .line 12377
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v5, v0, v7}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    .line 12378
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    if-ne v1, v3, :cond_13d

    goto :goto_13e

    :cond_13d
    move v3, v4

    :goto_13e
    invoke-virtual {v0, v9, v3}, Lcom/android/server/audio/MediaFocusControl;->setIgnoreAudioFocus(IZ)V

    .line 12379
    .end local v1    # "onOff":I
    .end local v8    # "strUid":Ljava/lang/String;
    .end local v9    # "uid":I
    .end local v10    # "packageName":Ljava/lang/String;
    goto/16 :goto_1f0

    .line 12371
    .restart local v1    # "onOff":I
    .restart local v8    # "strUid":Ljava/lang/String;
    .restart local v9    # "uid":I
    .restart local v10    # "packageName":Ljava/lang/String;
    :cond_143
    :goto_143
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid uid for ignoring audiofocus. uid : "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v6, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12372
    return-void

    .line 12379
    .end local v1    # "onOff":I
    .end local v8    # "strUid":Ljava/lang/String;
    .end local v9    # "uid":I
    .end local v10    # "packageName":Ljava/lang/String;
    :cond_158
    const-string/jumbo v0, "media_volume_step_index"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_175

    .line 12380
    const/16 v1, 0xa

    invoke-direct {p0, v2, v1}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12381
    .local v1, "index":I
    iput v1, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 12382
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v3, v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    .line 12383
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setMediaVolumeSteps([I)Z

    .line 12384
    .end local v1    # "index":I
    goto/16 :goto_1f0

    :cond_175
    const-string/jumbo v0, "selfiestick"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v6, v0

    .end local v2    # "value":Ljava/lang/String;
    .local v6, "value":Ljava/lang/String;
    if-eqz v0, :cond_1b1

    .line 12385
    const-string/jumbo v0, "true"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1af

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v0

    if-eqz v0, :cond_1af

    .line 12386
    iput-boolean v3, p0, Lcom/android/server/audio/AudioService;->mSelfiestickIsConnected:Z

    .line 12387
    const/4 v1, 0x4

    const/4 v2, 0x0

    const-string v3, ""

    const-string/jumbo v4, "h2w"

    const-string/jumbo v5, "selfiestick"

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->setWiredDeviceConnectionState(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 12389
    const v1, -0x7ffffff0

    const-string v3, ""

    const-string/jumbo v4, "h2w"

    const-string/jumbo v5, "selfiestick"

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->setWiredDeviceConnectionState(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 12409
    :cond_1af
    move-object v2, v6

    goto :goto_1f0

    .line 12392
    :cond_1b1
    const-string/jumbo v0, "ring_through_headset"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    .end local v6    # "value":Ljava/lang/String;
    .restart local v2    # "value":Ljava/lang/String;
    if-eqz v1, :cond_1cc

    .line 12393
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12395
    .local v1, "streams":I
    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 12396
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v3, v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    .line 12398
    iget v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setHeadsetOnlyStream(I)V

    .line 12399
    .end local v1    # "streams":I
    :cond_1cb
    goto :goto_1f0

    :cond_1cc
    const-string/jumbo v0, "sound_lr_switch"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_1cb

    .line 12400
    invoke-direct {p0, v2, v4}, Lcom/android/server/audio/AudioService;->getIntValueFromString(Ljava/lang/String;I)I

    move-result v1

    .line 12401
    .local v1, "lr_onOff":I
    iput v1, p0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    .line 12402
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v4, v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    .line 12403
    if-ne v1, v3, :cond_1ea

    .line 12404
    const-string/jumbo v0, "l_sound_assistant_lr_switch_enable=true"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    goto :goto_1f0

    .line 12406
    :cond_1ea
    const-string/jumbo v0, "l_sound_assistant_lr_switch_enable=false"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 12409
    .end local v1    # "lr_onOff":I
    :goto_1f0
    return-void
.end method

.method private setSoundEffectVolume()V
    .registers 4

    .line 14610
    new-instance v0, Lcom/samsung/android/media/AudioParameter$Builder;

    invoke-direct {v0}, Lcom/samsung/android/media/AudioParameter$Builder;-><init>()V

    .line 14611
    const-string/jumbo v1, "g_volume_situation_key"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;)Lcom/samsung/android/media/AudioParameter$Builder;

    move-result-object v0

    .line 14612
    const-string/jumbo v1, "type"

    const/4 v2, 0x1

    invoke-virtual {v0, v1, v2}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;I)Lcom/samsung/android/media/AudioParameter$Builder;

    move-result-object v0

    .line 14613
    const-string v1, "device"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;I)Lcom/samsung/android/media/AudioParameter$Builder;

    move-result-object v0

    .line 14614
    invoke-virtual {v0}, Lcom/samsung/android/media/AudioParameter$Builder;->build()Lcom/samsung/android/media/AudioParameter;

    move-result-object v0

    .line 14616
    .local v0, "parameter":Lcom/samsung/android/media/AudioParameter;
    nop

    .line 14617
    :try_start_20
    invoke-virtual {v0}, Lcom/samsung/android/media/AudioParameter;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Ljava/lang/Float;->parseFloat(Ljava/lang/String;)F

    move-result v1

    .line 14616
    invoke-static {v1}, Lcom/android/server/audio/SoundEffectsHelper;->setSoundFxVolume(F)V
    :try_end_2f
    .catch Ljava/lang/NumberFormatException; {:try_start_20 .. :try_end_2f} :catch_30

    goto :goto_31

    .line 14618
    :catch_30
    move-exception v1

    :goto_31
    nop

    .line 14619
    return-void
.end method

.method private setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZ)V
    .registers 17
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "uid"    # I
    .param p7, "hasModifyAudioSettings"    # Z

    .line 3038
    const/4 v8, 0x0

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    move v6, p6

    move/from16 v7, p7

    invoke-direct/range {v0 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 3040
    return-void
.end method

.method private setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V
    .registers 29
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "uid"    # I
    .param p7, "hasModifyAudioSettings"    # Z
    .param p8, "device"    # I

    .line 11594
    move-object/from16 v8, p0

    move/from16 v9, p1

    move/from16 v0, p2

    move-object/from16 v10, p4

    move/from16 v1, p6

    move/from16 v2, p8

    const/4 v3, 0x1

    invoke-direct {v8, v3, v10}, Lcom/android/server/audio/AudioService;->runSoundAssistant(ILjava/lang/String;)V

    .line 11596
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setStreamVolume(stream="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ", index="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ", calling="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, ", device="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "AS.AudioService"

    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11599
    iget-boolean v4, v8, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v4, :cond_49

    .line 11600
    return-void

    .line 11603
    :cond_49
    const/4 v4, 0x0

    .line 11605
    .local v4, "fineIndex":I
    const/4 v5, 0x0

    .line 11606
    .local v5, "calledByFineVolume":Z
    const/high16 v6, 0x200000

    and-int v6, p3, v6

    if-eqz v6, :cond_58

    .line 11607
    const v6, -0x200001

    and-int v6, p3, v6

    .line 11608
    .end local p3    # "flags":I
    .local v6, "flags":I
    const/4 v5, 0x1

    goto :goto_5a

    .line 11606
    .end local v6    # "flags":I
    .restart local p3    # "flags":I
    :cond_58
    move/from16 v6, p3

    .line 11610
    .end local p3    # "flags":I
    .restart local v6    # "flags":I
    :goto_5a
    const/4 v11, 0x3

    if-ne v9, v11, :cond_72

    if-eqz v5, :cond_72

    .line 11611
    iget-object v7, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v7, v7, v9

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I
    invoke-static {v7}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$900(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v7

    if-le v0, v7, :cond_6b

    .line 11612
    const/4 v4, 0x0

    goto :goto_6d

    .line 11614
    :cond_6b
    rem-int/lit8 v4, v0, 0xa

    .line 11616
    :goto_6d
    div-int/lit8 v0, v0, 0xa

    move v12, v4

    move v4, v0

    .end local p2    # "index":I
    .local v0, "index":I
    goto :goto_74

    .line 11620
    .end local v0    # "index":I
    .end local v5    # "calledByFineVolume":Z
    .restart local p2    # "index":I
    :cond_72
    move v12, v4

    move v4, v0

    .end local p2    # "index":I
    .local v4, "index":I
    .local v12, "fineIndex":I
    :goto_74
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 11621
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v13, v0, v9

    .line 11622
    .local v13, "streamTypeAlias":I
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v14, v0, v13

    .line 11626
    .local v14, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v0

    .line 11627
    .local v0, "defaultDevice":I
    const/high16 v5, 0x1000000

    if-nez v2, :cond_a9

    .line 11628
    move v2, v0

    .line 11629
    .end local p8    # "device":I
    .local v2, "device":I
    if-ne v9, v11, :cond_d1

    .line 11630
    invoke-virtual {v8, v1}, Lcom/android/server/audio/AudioService;->getAppDevice(I)I

    move-result v7

    .line 11631
    .local v7, "appDevice":I
    if-eqz v7, :cond_a8

    .line 11632
    or-int/2addr v6, v5

    .line 11633
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "add FLAG_MULTI_SOUND device="

    invoke-virtual {v5, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v15, "AS.AudioService"

    invoke-static {v15, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11634
    move v2, v7

    .line 11636
    .end local v7    # "appDevice":I
    :cond_a8
    goto :goto_d1

    .line 11637
    .end local v2    # "device":I
    .restart local p8    # "device":I
    :cond_a9
    iget-object v7, v8, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v7}, Lcom/samsung/android/server/audio/MultiSoundManager;->isEnabled()Z

    move-result v7

    if-eqz v7, :cond_d1

    if-eq v0, v2, :cond_d1

    if-ne v9, v11, :cond_d1

    .line 11640
    or-int/2addr v6, v5

    .line 11641
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "device="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, " add FLAG_MULTI_SOUND "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v7, "AS.AudioService"

    invoke-static {v7, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11647
    .end local v0    # "defaultDevice":I
    .end local p8    # "device":I
    .restart local v2    # "device":I
    :cond_d1
    :goto_d1
    const-string v0, "com.sec.android.app.voicenote"

    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_da

    .line 11648
    const/4 v2, 0x2

    .line 11651
    :cond_da
    iget-boolean v0, v8, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v0, :cond_125

    .line 11652
    move v0, v2

    .line 11653
    .local v0, "volumeLimitDevice":I
    sget-object v5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v5, v5, v9

    if-ne v5, v11, :cond_125

    mul-int/lit8 v5, v4, 0xa

    add-int/2addr v5, v12

    iget v7, v8, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    mul-int/lit8 v7, v7, 0xa

    if-le v5, v7, :cond_125

    iget-object v5, v8, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    .line 11654
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-interface {v5, v7}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_125

    .line 11655
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v3}, Lcom/android/server/audio/AudioService$VolumeController;->displayVolumeLimiterToast()V

    .line 11657
    const-string v3, "AS.AudioService"

    const-string v5, "SetStreamVolume : already reached at volume limit value"

    invoke-static {v3, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11659
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v11

    invoke-virtual {v3, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v3

    .line 11662
    .local v3, "indexTemp":I
    invoke-direct {v8, v9, v3, v3, v6}, Lcom/android/server/audio/AudioService;->sendBroadcastNoisyIntent(IIII)V

    .line 11665
    sget-object v5, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-interface {v5, v7}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_124

    .line 11666
    iget-object v5, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    mul-int/lit8 v7, v3, 0xa

    invoke-virtual {v5, v7}, Lcom/android/server/audio/AudioDeviceBroker;->postSetAvrcpAbsoluteVolumeIndex(I)V

    .line 11668
    :cond_124
    return-void

    .line 11672
    .end local v0    # "volumeLimitDevice":I
    .end local v3    # "indexTemp":I
    :cond_125
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mFMRadioRecordingChecker:Lcom/samsung/android/server/audio/FrequentWorker;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/FrequentWorker;->runOrSkip()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v15

    .line 11674
    .local v15, "isFMRadioRecording":Z
    const/4 v0, 0x4

    if-eqz v15, :cond_150

    .line 11675
    sget-boolean v5, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO_BT:Z

    if-eqz v5, :cond_141

    .line 11678
    and-int/lit8 v5, v6, 0x1

    if-eqz v5, :cond_141

    iget v5, v8, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    if-ne v5, v0, :cond_141

    .line 11680
    return-void

    .line 11684
    :cond_141
    const/high16 v5, 0x2000000

    if-eq v6, v5, :cond_14f

    const/16 v5, 0x11

    if-ne v6, v5, :cond_14a

    goto :goto_14f

    .line 11690
    :cond_14a
    if-nez v6, :cond_150

    if-eq v9, v11, :cond_150

    .line 11691
    return-void

    .line 11687
    :cond_14f
    :goto_14f
    return-void

    .line 11696
    :cond_150
    if-ne v13, v11, :cond_194

    .line 11697
    const-string v5, "com.sec.android.app.fm"

    invoke-virtual {v5, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_194

    .line 11698
    move v5, v2

    .line 11699
    .local v5, "fmRadioDevice":I
    iget v7, v8, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    if-ne v7, v3, :cond_161

    .line 11700
    const/4 v5, 0x2

    goto :goto_16b

    .line 11701
    :cond_161
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO_BT:Z

    if-eqz v3, :cond_16b

    iget v3, v8, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    if-ne v3, v0, :cond_16b

    .line 11703
    const/16 v5, 0x80

    .line 11704
    :cond_16b
    :goto_16b
    if-eq v5, v2, :cond_194

    .line 11705
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setStreamVolume : correct device ("

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " -> "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ") because fm radio application calls"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v3, "AS.AudioService"

    invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11707
    move v2, v5

    move v7, v2

    goto :goto_195

    .line 11714
    .end local v5    # "fmRadioDevice":I
    :cond_194
    move v7, v2

    .end local v2    # "device":I
    .local v7, "device":I
    :goto_195
    sget-object v0, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1a6

    and-int/lit8 v0, v6, 0x40

    if-eqz v0, :cond_1a6

    .line 11716
    return-void

    .line 11720
    :cond_1a6
    const/16 v0, 0x3e8

    if-ne v1, v0, :cond_1b8

    .line 11721
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v0

    invoke-static/range {p6 .. p6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    invoke-static {v0, v2}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    move v5, v0

    .end local p6    # "uid":I
    .local v0, "uid":I
    goto :goto_1b9

    .line 11720
    .end local v0    # "uid":I
    .restart local p6    # "uid":I
    :cond_1b8
    move v5, v1

    .line 11723
    .end local p6    # "uid":I
    .local v5, "uid":I
    :goto_1b9
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    sget-object v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_OPS:[I

    aget v1, v1, v13

    invoke-virtual {v0, v1, v5, v10}, Landroid/app/AppOpsManager;->noteOp(IILjava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_1c6

    .line 11725
    return-void

    .line 11728
    :cond_1c6
    invoke-direct {v8, v10}, Lcom/android/server/audio/AudioService;->isAndroidNPlus(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1e7

    .line 11729
    invoke-direct {v8, v13, v4, v6}, Lcom/android/server/audio/AudioService;->getNewRingerMode(III)I

    move-result v0

    invoke-direct {v8, v0}, Lcom/android/server/audio/AudioService;->wouldToggleZenMode(I)Z

    move-result v0

    if-eqz v0, :cond_1e7

    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 11730
    invoke-virtual {v0, v10}, Landroid/app/NotificationManager;->isNotificationPolicyAccessGrantedForPackage(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1df

    goto :goto_1e7

    .line 11731
    :cond_1df
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Not allowed to change Do Not Disturb state"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11734
    :cond_1e7
    :goto_1e7
    invoke-direct {v8, v13, v6}, Lcom/android/server/audio/AudioService;->volumeAdjustmentAllowedByDnd(II)Z

    move-result v0

    if-nez v0, :cond_1f7

    .line 11735
    and-int/lit8 v0, v6, 0x1

    if-eqz v0, :cond_1f6

    .line 11736
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v9, v6}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 11738
    :cond_1f6
    return-void

    .line 11741
    :cond_1f7
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v3

    .line 11743
    const/4 v0, 0x0

    :try_start_1fb
    iput-object v0, v8, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    .line 11745
    invoke-virtual {v14, v7}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0

    move v2, v0

    .line 11747
    .local v2, "oldIndex":I
    mul-int/lit8 v0, v4, 0xa

    invoke-direct {v8, v0, v9, v13}, Lcom/android/server/audio/AudioService;->rescaleIndex(III)I

    move-result v0
    :try_end_208
    .catchall {:try_start_1fb .. :try_end_208} :catchall_42f

    .line 11749
    .end local v4    # "index":I
    .local v0, "index":I
    if-ne v9, v11, :cond_20d

    .line 11750
    add-int/2addr v0, v12

    move v4, v0

    goto :goto_20e

    .line 11749
    :cond_20d
    move v4, v0

    .line 11753
    .end local v0    # "index":I
    .restart local v4    # "index":I
    :goto_20e
    if-ne v13, v11, :cond_276

    :try_start_210
    sget-object v0, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 11754
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_269

    and-int/lit8 v0, v6, 0x40

    if-nez v0, :cond_269

    .line 11757
    const-string v0, "AS.AudioService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "setStreamVolume postSetAvrcpAbsoluteVolumeIndex index="

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v11, "stream="

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_240
    .catchall {:try_start_210 .. :try_end_240} :catchall_26c

    .line 11762
    if-nez v15, :cond_254

    .line 11763
    :try_start_242
    invoke-direct {v8, v13, v4, v7}, Lcom/android/server/audio/AudioService;->checkSafeMediaVolume(III)Z

    move-result v0
    :try_end_246
    .catchall {:try_start_242 .. :try_end_246} :catchall_24c

    if-eqz v0, :cond_249

    goto :goto_254

    :cond_249
    move-object/from16 v11, p5

    goto :goto_278

    .line 11825
    .end local v2    # "oldIndex":I
    :catchall_24c
    move-exception v0

    move-object/from16 v16, v3

    move/from16 v17, v5

    move v11, v7

    goto/16 :goto_435

    .line 11764
    .restart local v2    # "oldIndex":I
    :cond_254
    :goto_254
    :try_start_254
    const-string v0, ".setA2dpDeviceVolume"
    :try_end_256
    .catchall {:try_start_254 .. :try_end_256} :catchall_26c

    move-object/from16 v11, p5

    :try_start_258
    invoke-virtual {v11, v0}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_263

    .line 11765
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, v4}, Lcom/android/server/audio/AudioDeviceBroker;->updateIndividualA2dpVolumes(I)V

    .line 11767
    :cond_263
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, v4}, Lcom/android/server/audio/AudioDeviceBroker;->postSetAvrcpAbsoluteVolumeIndex(I)V
    :try_end_268
    .catchall {:try_start_258 .. :try_end_268} :catchall_24c

    goto :goto_278

    .line 11754
    :cond_269
    move-object/from16 v11, p5

    goto :goto_278

    .line 11825
    .end local v2    # "oldIndex":I
    :catchall_26c
    move-exception v0

    move-object/from16 v11, p5

    move-object/from16 v16, v3

    move/from16 v17, v5

    move v11, v7

    goto/16 :goto_435

    .line 11753
    .restart local v2    # "oldIndex":I
    :cond_276
    move-object/from16 v11, p5

    .line 11774
    :goto_278
    const/high16 v0, 0x8000000

    if-ne v7, v0, :cond_2b4

    .line 11775
    :try_start_27c
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getHearingAidStreamType()I

    move-result v0

    if-ne v9, v0, :cond_2a9

    .line 11776
    const-string v0, "AS.AudioService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
    :try_end_289
    .catchall {:try_start_27c .. :try_end_289} :catchall_2ac

    move/from16 p2, v5

    .end local v5    # "uid":I
    .local p2, "uid":I
    :try_start_28b
    const-string/jumbo v5, "setStreamVolume postSetHearingAidVolumeIndex index="

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " stream="

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11778
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, v4, v9}, Lcom/android/server/audio/AudioDeviceBroker;->postSetHearingAidVolumeIndex(II)V

    goto :goto_2b6

    .line 11775
    .end local p2    # "uid":I
    .restart local v5    # "uid":I
    :cond_2a9
    move/from16 p2, v5

    .end local v5    # "uid":I
    .restart local p2    # "uid":I
    goto :goto_2b6

    .line 11825
    .end local v2    # "oldIndex":I
    .end local p2    # "uid":I
    .restart local v5    # "uid":I
    :catchall_2ac
    move-exception v0

    move-object/from16 v16, v3

    move/from16 v17, v5

    move v11, v7

    .end local v5    # "uid":I
    .restart local p2    # "uid":I
    goto/16 :goto_435

    .line 11774
    .end local p2    # "uid":I
    .restart local v2    # "oldIndex":I
    .restart local v5    # "uid":I
    :cond_2b4
    move/from16 p2, v5

    .line 11781
    .end local v5    # "uid":I
    .restart local p2    # "uid":I
    :goto_2b6
    const/4 v0, 0x3

    if-ne v13, v0, :cond_2c9

    .line 11782
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    move-result v0

    invoke-direct {v8, v2, v4, v0, v6}, Lcom/android/server/audio/AudioService;->setSystemAudioVolume(IIII)V

    goto :goto_2c9

    .line 11825
    .end local v2    # "oldIndex":I
    :catchall_2c1
    move-exception v0

    move/from16 v17, p2

    move-object/from16 v16, v3

    move v11, v7

    goto/16 :goto_435

    .line 11785
    .restart local v2    # "oldIndex":I
    :cond_2c9
    :goto_2c9
    and-int/lit8 v6, v6, -0x21

    .line 11786
    const/4 v0, 0x3

    if-ne v13, v0, :cond_2fa

    invoke-direct {v8, v7}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result v0

    if-eqz v0, :cond_2fa

    .line 11787
    or-int/lit8 v6, v6, 0x20

    .line 11790
    if-eqz v4, :cond_2f7

    .line 11791
    iget v0, v8, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_2f0

    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2f0

    .line 11792
    invoke-direct {v8, v7}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v0

    move v5, v6

    move v6, v0

    .end local v4    # "index":I
    .restart local v0    # "index":I
    goto :goto_2fc

    .line 11794
    .end local v0    # "index":I
    .restart local v4    # "index":I
    :cond_2f0
    invoke-virtual {v14}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMaxIndex()I

    move-result v0
    :try_end_2f4
    .catchall {:try_start_28b .. :try_end_2f4} :catchall_2c1

    move v5, v6

    move v6, v0

    .end local v4    # "index":I
    .restart local v0    # "index":I
    goto :goto_2fc

    .line 11790
    .end local v0    # "index":I
    .restart local v4    # "index":I
    :cond_2f7
    move v5, v6

    move v6, v4

    goto :goto_2fc

    .line 11799
    :cond_2fa
    move v5, v6

    move v6, v4

    .end local v4    # "index":I
    .local v5, "flags":I
    .local v6, "index":I
    :goto_2fc
    :try_start_2fc
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z
    :try_end_2fe
    .catchall {:try_start_2fc .. :try_end_2fe} :catchall_420

    if-eqz v0, :cond_3a4

    .line 11800
    if-nez v15, :cond_34e

    .line 11801
    :try_start_302
    invoke-direct {v8, v13, v6, v7}, Lcom/android/server/audio/AudioService;->checkSafeMediaVolume(III)Z

    move-result v0

    if-nez v0, :cond_334

    .line 11802
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v5}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 11803
    new-instance v0, Lcom/android/server/audio/AudioService$StreamVolumeCommand;
    :try_end_30f
    .catchall {:try_start_302 .. :try_end_30f} :catchall_33e

    move-object v1, v0

    move v4, v2

    .end local v2    # "oldIndex":I
    .local v4, "oldIndex":I
    move-object/from16 v2, p0

    move-object/from16 v16, v3

    move/from16 v3, p1

    move v10, v4

    .end local v4    # "oldIndex":I
    .local v10, "oldIndex":I
    move v4, v6

    move/from16 v17, p2

    move/from16 p2, v5

    .end local v5    # "flags":I
    .local v17, "uid":I
    .local p2, "flags":I
    move/from16 p6, v6

    .end local v6    # "index":I
    .local p6, "index":I
    move v6, v7

    :try_start_320
    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioService$StreamVolumeCommand;-><init>(Lcom/android/server/audio/AudioService;IIII)V

    iput-object v0, v8, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;
    :try_end_325
    .catchall {:try_start_320 .. :try_end_325} :catchall_32c

    move/from16 v18, p2

    move v11, v7

    move/from16 v7, p6

    goto/16 :goto_3f4

    .line 11825
    .end local v10    # "oldIndex":I
    :catchall_32c
    move-exception v0

    move/from16 v6, p2

    move/from16 v4, p6

    move v11, v7

    goto/16 :goto_435

    .line 11801
    .end local v17    # "uid":I
    .end local p6    # "index":I
    .restart local v2    # "oldIndex":I
    .restart local v5    # "flags":I
    .restart local v6    # "index":I
    .local p2, "uid":I
    :cond_334
    move/from16 v17, p2

    move v10, v2

    move-object/from16 v16, v3

    move/from16 p2, v5

    move/from16 p6, v6

    .end local v2    # "oldIndex":I
    .end local v5    # "flags":I
    .end local v6    # "index":I
    .restart local v10    # "oldIndex":I
    .restart local v17    # "uid":I
    .local p2, "flags":I
    .restart local p6    # "index":I
    goto :goto_357

    .line 11825
    .end local v10    # "oldIndex":I
    .end local v17    # "uid":I
    .end local p6    # "index":I
    .restart local v5    # "flags":I
    .restart local v6    # "index":I
    .local p2, "uid":I
    :catchall_33e
    move-exception v0

    move/from16 v17, p2

    move-object/from16 v16, v3

    move/from16 p2, v5

    move/from16 p6, v6

    move/from16 v6, p2

    move/from16 v4, p6

    move v11, v7

    .end local v5    # "flags":I
    .end local v6    # "index":I
    .restart local v17    # "uid":I
    .local p2, "flags":I
    .restart local p6    # "index":I
    goto/16 :goto_435

    .line 11800
    .end local v17    # "uid":I
    .end local p6    # "index":I
    .restart local v2    # "oldIndex":I
    .restart local v5    # "flags":I
    .restart local v6    # "index":I
    .local p2, "uid":I
    :cond_34e
    move/from16 v17, p2

    move v10, v2

    move-object/from16 v16, v3

    move/from16 p2, v5

    move/from16 p6, v6

    .line 11807
    .end local v2    # "oldIndex":I
    .end local v5    # "flags":I
    .end local v6    # "index":I
    .restart local v10    # "oldIndex":I
    .restart local v17    # "uid":I
    .local p2, "flags":I
    .restart local p6    # "index":I
    :goto_357
    :try_start_357
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeController;->isSafeVolumeDialogShowing()Z

    move-result v0
    :try_end_35d
    .catchall {:try_start_357 .. :try_end_35d} :catchall_39c

    if-eqz v0, :cond_375

    .line 11808
    :try_start_35f
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    const/high16 v1, 0x10000000

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V
    :try_end_366
    .catchall {:try_start_35f .. :try_end_366} :catchall_36d

    .line 11809
    move/from16 v6, p2

    .end local p2    # "flags":I
    .local v6, "flags":I
    and-int/lit8 v0, v6, -0x2

    move/from16 v18, v0

    .end local v6    # "flags":I
    .local v0, "flags":I
    goto :goto_379

    .line 11825
    .end local v0    # "flags":I
    .end local v10    # "oldIndex":I
    .restart local p2    # "flags":I
    :catchall_36d
    move-exception v0

    move/from16 v6, p2

    move/from16 v4, p6

    move v11, v7

    .end local p2    # "flags":I
    .restart local v6    # "flags":I
    goto/16 :goto_435

    .line 11807
    .end local v6    # "flags":I
    .restart local v10    # "oldIndex":I
    .restart local p2    # "flags":I
    :cond_375
    move/from16 v6, p2

    .end local p2    # "flags":I
    .restart local v6    # "flags":I
    move/from16 v18, v6

    .line 11811
    .end local v6    # "flags":I
    .local v18, "flags":I
    :goto_379
    move-object/from16 v1, p0

    move/from16 v2, p1

    move/from16 v3, p6

    move/from16 v4, v18

    move v5, v7

    move-object/from16 v6, p5

    move v11, v7

    .end local v7    # "device":I
    .local v11, "device":I
    move/from16 v7, p7

    :try_start_387
    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->onSetStreamVolume(IIIILjava/lang/String;Z)V

    .line 11812
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    invoke-virtual {v0, v11}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0
    :try_end_392
    .catchall {:try_start_387 .. :try_end_392} :catchall_395

    move v7, v0

    .end local p6    # "index":I
    .local v0, "index":I
    goto/16 :goto_3f4

    .line 11825
    .end local v0    # "index":I
    .end local v10    # "oldIndex":I
    .restart local p6    # "index":I
    :catchall_395
    move-exception v0

    move/from16 v4, p6

    move/from16 v6, v18

    goto/16 :goto_435

    .end local v11    # "device":I
    .end local v18    # "flags":I
    .restart local v7    # "device":I
    .restart local p2    # "flags":I
    :catchall_39c
    move-exception v0

    move/from16 v6, p2

    move v11, v7

    move/from16 v4, p6

    .end local v7    # "device":I
    .end local p2    # "flags":I
    .restart local v6    # "flags":I
    .restart local v11    # "device":I
    goto/16 :goto_435

    .line 11816
    .end local v11    # "device":I
    .end local v17    # "uid":I
    .end local p6    # "index":I
    .restart local v2    # "oldIndex":I
    .restart local v5    # "flags":I
    .local v6, "index":I
    .restart local v7    # "device":I
    .local p2, "uid":I
    :cond_3a4
    move/from16 v17, p2

    move v10, v2

    move-object/from16 v16, v3

    move/from16 p6, v6

    move v11, v7

    move v6, v5

    .end local v2    # "oldIndex":I
    .end local v5    # "flags":I
    .end local v7    # "device":I
    .end local p2    # "uid":I
    .local v6, "flags":I
    .restart local v10    # "oldIndex":I
    .restart local v11    # "device":I
    .restart local v17    # "uid":I
    .restart local p6    # "index":I
    move/from16 v7, p6

    .end local p6    # "index":I
    .local v7, "index":I
    :try_start_3af
    invoke-direct {v8, v13, v7, v11}, Lcom/android/server/audio/AudioService;->checkSafeMediaVolume(III)Z

    move-result v0
    :try_end_3b3
    .catchall {:try_start_3af .. :try_end_3b3} :catchall_418

    if-nez v0, :cond_3d8

    .line 11817
    :try_start_3b5
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v6}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 11818
    new-instance v0, Lcom/android/server/audio/AudioService$StreamVolumeCommand;
    :try_end_3bc
    .catchall {:try_start_3b5 .. :try_end_3bc} :catchall_3d2

    move-object v1, v0

    move-object/from16 v2, p0

    move/from16 v3, p1

    move v4, v7

    move v5, v6

    move/from16 v18, v6

    .end local v6    # "flags":I
    .restart local v18    # "flags":I
    move v6, v11

    :try_start_3c6
    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioService$StreamVolumeCommand;-><init>(Lcom/android/server/audio/AudioService;IIII)V

    iput-object v0, v8, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;
    :try_end_3cb
    .catchall {:try_start_3c6 .. :try_end_3cb} :catchall_3cc

    goto :goto_3f4

    .line 11825
    .end local v10    # "oldIndex":I
    :catchall_3cc
    move-exception v0

    move v4, v7

    move/from16 v6, v18

    goto/16 :goto_435

    .end local v18    # "flags":I
    .restart local v6    # "flags":I
    :catchall_3d2
    move-exception v0

    move/from16 v18, v6

    move v4, v7

    .end local v6    # "flags":I
    .restart local v18    # "flags":I
    goto/16 :goto_435

    .line 11821
    .end local v18    # "flags":I
    .restart local v6    # "flags":I
    .restart local v10    # "oldIndex":I
    :cond_3d8
    move/from16 v18, v6

    .end local v6    # "flags":I
    .restart local v18    # "flags":I
    move-object/from16 v1, p0

    move/from16 v2, p1

    move v3, v7

    move/from16 v4, v18

    move v5, v11

    move-object/from16 v6, p5

    move/from16 v19, v7

    .end local v7    # "index":I
    .local v19, "index":I
    move/from16 v7, p7

    :try_start_3e8
    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->onSetStreamVolume(IIIILjava/lang/String;Z)V

    .line 11822
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    invoke-virtual {v0, v11}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0
    :try_end_3f3
    .catchall {:try_start_3e8 .. :try_end_3f3} :catchall_412

    .end local v19    # "index":I
    .restart local v0    # "index":I
    move v7, v0

    .line 11825
    .end local v0    # "index":I
    .restart local v7    # "index":I
    :goto_3f4
    :try_start_3f4
    monitor-exit v16
    :try_end_3f5
    .catchall {:try_start_3f4 .. :try_end_3f5} :catchall_3cc

    .line 11826
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    .line 11827
    const/4 v0, 0x3

    if-ne v13, v0, :cond_401

    if-eq v10, v7, :cond_401

    .line 11829
    const/4 v0, 0x0

    :try_start_3fe
    invoke-direct {v8, v0}, Lcom/android/server/audio/AudioService;->maybeSendSystemAudioStatusCommand(Z)V

    .line 11831
    :cond_401
    monitor-exit v1
    :try_end_402
    .catchall {:try_start_3fe .. :try_end_402} :catchall_40f

    .line 11832
    move-object/from16 v1, p0

    move/from16 v2, p1

    move v3, v10

    move v4, v7

    move/from16 v5, v18

    move v6, v11

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 11833
    return-void

    .line 11831
    :catchall_40f
    move-exception v0

    :try_start_410
    monitor-exit v1
    :try_end_411
    .catchall {:try_start_410 .. :try_end_411} :catchall_40f

    throw v0

    .line 11825
    .end local v7    # "index":I
    .end local v10    # "oldIndex":I
    .restart local v19    # "index":I
    :catchall_412
    move-exception v0

    move/from16 v6, v18

    move/from16 v4, v19

    goto :goto_435

    .end local v18    # "flags":I
    .end local v19    # "index":I
    .restart local v6    # "flags":I
    .restart local v7    # "index":I
    :catchall_418
    move-exception v0

    move/from16 v18, v6

    move/from16 v19, v7

    move/from16 v4, v19

    .end local v6    # "flags":I
    .end local v7    # "index":I
    .restart local v18    # "flags":I
    .restart local v19    # "index":I
    goto :goto_435

    .end local v11    # "device":I
    .end local v17    # "uid":I
    .end local v18    # "flags":I
    .end local v19    # "index":I
    .restart local v5    # "flags":I
    .local v6, "index":I
    .local v7, "device":I
    .restart local p2    # "uid":I
    :catchall_420
    move-exception v0

    move/from16 v17, p2

    move-object/from16 v16, v3

    move/from16 v18, v5

    move/from16 v19, v6

    move v11, v7

    move/from16 v6, v18

    move/from16 v4, v19

    .end local v5    # "flags":I
    .end local v6    # "index":I
    .end local v7    # "device":I
    .end local p2    # "uid":I
    .restart local v11    # "device":I
    .restart local v17    # "uid":I
    .restart local v18    # "flags":I
    .restart local v19    # "index":I
    goto :goto_435

    .end local v11    # "device":I
    .end local v17    # "uid":I
    .end local v18    # "flags":I
    .end local v19    # "index":I
    .local v4, "index":I
    .local v5, "uid":I
    .local v6, "flags":I
    .restart local v7    # "device":I
    :catchall_42f
    move-exception v0

    move-object/from16 v16, v3

    move/from16 v17, v5

    move v11, v7

    .end local v5    # "uid":I
    .end local v7    # "device":I
    .restart local v11    # "device":I
    .restart local v17    # "uid":I
    :goto_435
    :try_start_435
    monitor-exit v16
    :try_end_436
    .catchall {:try_start_435 .. :try_end_436} :catchall_437

    throw v0

    :catchall_437
    move-exception v0

    goto :goto_435
.end method

.method private setStreamVolumeInt(IIIZLjava/lang/String;Z)V
    .registers 15
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "device"    # I
    .param p4, "force"    # Z
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "hasModifyAudioSettings"    # Z

    .line 3375
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 3376
    return-void

    .line 3378
    :cond_7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, p1

    .line 3380
    .local v0, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    invoke-virtual {v0, p2, p3, p5, p6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    move-result v1

    if-nez v1, :cond_13

    if-eqz p4, :cond_1e

    .line 3383
    :cond_13
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v2, 0x0

    const/4 v3, 0x2

    const/4 v5, 0x0

    const/4 v7, 0x0

    move v4, p3

    move-object v6, v0

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 3391
    :cond_1e
    return-void
.end method

.method private setSystemAudioMute(Z)V
    .registers 6
    .param p1, "state"    # Z

    .line 3394
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3395
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v1, :cond_25

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-eqz v1, :cond_25

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    if-nez v1, :cond_10

    goto :goto_25

    .line 3396
    :cond_10
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_27

    .line 3398
    .local v1, "token":J
    :try_start_14
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    invoke-virtual {v3, p1}, Landroid/hardware/hdmi/HdmiTvClient;->setSystemAudioMute(Z)V
    :try_end_19
    .catchall {:try_start_14 .. :try_end_19} :catchall_1f

    .line 3400
    :try_start_19
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3401
    nop

    .line 3402
    .end local v1    # "token":J
    monitor-exit v0

    .line 3403
    return-void

    .line 3400
    .restart local v1    # "token":J
    :catchall_1f
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3401
    nop

    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "state":Z
    throw v3

    .line 3395
    .end local v1    # "token":J
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "state":Z
    :cond_25
    :goto_25
    monitor-exit v0

    return-void

    .line 3402
    :catchall_27
    move-exception v1

    monitor-exit v0
    :try_end_29
    .catchall {:try_start_19 .. :try_end_29} :catchall_27

    throw v1
.end method

.method private setSystemAudioVolume(IIII)V
    .registers 9
    .param p1, "oldVolume"    # I
    .param p2, "newVolume"    # I
    .param p3, "maxVolume"    # I
    .param p4, "flags"    # I

    .line 2694
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v0

    .line 2695
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v1, :cond_2f

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-eqz v1, :cond_2f

    if-eq p1, p2, :cond_2f

    and-int/lit16 v1, p4, 0x100

    if-nez v1, :cond_2f

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    if-eqz v1, :cond_2f

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    if-nez v1, :cond_1a

    goto :goto_2f

    .line 2703
    :cond_1a
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_31

    .line 2705
    .local v1, "token":J
    :try_start_1e
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    invoke-virtual {v3, p1, p2, p3}, Landroid/hardware/hdmi/HdmiTvClient;->setSystemAudioVolume(III)V
    :try_end_23
    .catchall {:try_start_1e .. :try_end_23} :catchall_29

    .line 2707
    :try_start_23
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2708
    nop

    .line 2709
    .end local v1    # "token":J
    monitor-exit v0

    .line 2710
    return-void

    .line 2707
    .restart local v1    # "token":J
    :catchall_29
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2708
    nop

    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "oldVolume":I
    .end local p2    # "newVolume":I
    .end local p3    # "maxVolume":I
    .end local p4    # "flags":I
    throw v3

    .line 2701
    .end local v1    # "token":J
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "oldVolume":I
    .restart local p2    # "newVolume":I
    .restart local p3    # "maxVolume":I
    .restart local p4    # "flags":I
    :cond_2f
    :goto_2f
    monitor-exit v0

    return-void

    .line 2709
    :catchall_31
    move-exception v1

    monitor-exit v0
    :try_end_33
    .catchall {:try_start_23 .. :try_end_33} :catchall_31

    throw v1
.end method

.method private setSystemSettingForSoundAssistant(Ljava/lang/String;I)V
    .registers 9
    .param p1, "key"    # Ljava/lang/String;
    .param p2, "value"    # I

    .line 12412
    const-string/jumbo v0, "sound_balance"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const-string/jumbo v2, "mono_audio_db"

    if-nez v1, :cond_1b

    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1b

    .line 12413
    const-string v1, "adjust_media_volume_only"

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1b

    .line 12414
    return-void

    .line 12418
    :cond_1b
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 12420
    .local v3, "ident":J
    :try_start_1f
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, -0x2

    if-eqz v0, :cond_36

    .line 12422
    add-int/lit8 v0, p2, -0x32

    int-to-float v0, v0

    const/high16 v2, 0x42480000    # 50.0f

    div-float/2addr v0, v2

    .line 12423
    .local v0, "balance":F
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v5, "master_balance"

    invoke-static {v2, v5, v0, v1}, Landroid/provider/Settings$System;->putFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)Z

    .line 12426
    nop

    .end local v0    # "balance":F
    goto :goto_44

    :cond_36
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_44

    .line 12427
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "master_mono"

    invoke-static {v0, v2, p2, v1}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 12430
    :cond_44
    :goto_44
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-static {v0, p1, p2, v1}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z
    :try_end_49
    .catchall {:try_start_1f .. :try_end_49} :catchall_53

    .line 12432
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12433
    nop

    .line 12434
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v0, p1, p2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(Ljava/lang/String;I)V

    .line 12435
    return-void

    .line 12432
    :catchall_53
    move-exception v0

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12433
    throw v0
.end method

.method private setUpscalerMode(I)V
    .registers 4
    .param p1, "mode"    # I

    .line 12760
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "l_effect_upscaler_mode="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 12761
    return-void
.end method

.method private setVolumeLimiter(Lcom/samsung/android/media/AudioParameter;)V
    .registers 9
    .param p1, "audioParameter"    # Lcom/samsung/android/media/AudioParameter;

    .line 14039
    const-string v0, "enable"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v1, v0

    .local v1, "strVal":Ljava/lang/String;
    if-eqz v0, :cond_13

    .line 14040
    const-string/jumbo v0, "true"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 14041
    return-void

    .line 14044
    :cond_13
    const-string/jumbo v0, "level"

    invoke-virtual {p1, v0}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    move-object v1, v0

    if-eqz v0, :cond_57

    .line 14045
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    iput v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 14046
    const/4 v0, 0x3

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v2

    .line 14047
    .local v2, "device":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v0

    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v3

    .line 14048
    .local v3, "curVolume":I
    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v4, :cond_56

    iget v4, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    mul-int/lit8 v4, v4, 0xa

    if-le v3, v4, :cond_56

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_56

    .line 14049
    const-string/jumbo v4, "package"

    invoke-virtual {p1, v4}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 14050
    .local v4, "caller":Ljava/lang/String;
    iget v5, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    mul-int/lit8 v5, v5, 0xa

    const/high16 v6, 0x200000

    invoke-virtual {p0, v0, v5, v6, v4}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;)V

    .line 14053
    .end local v4    # "caller":Ljava/lang/String;
    :cond_56
    return-void

    .line 14055
    .end local v2    # "device":I
    .end local v3    # "curVolume":I
    :cond_57
    return-void
.end method

.method private setupCustomRoutine()V
    .registers 11

    .line 10908
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "activity"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager;

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mActivityManager:Landroid/app/ActivityManager;

    .line 10909
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "alarm"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/AlarmManager;

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mAlarmManager:Landroid/app/AlarmManager;

    .line 10910
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "display"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/hardware/display/DisplayManager;

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 10913
    const-string/jumbo v0, "l_set_from_audioservice"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 10916
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_KEY_SUPPORT_SILENT:Z

    const/16 v1, 0x190

    const/4 v2, 0x1

    if-eqz v0, :cond_39

    .line 10917
    new-instance v0, Landroid/media/VolumePolicy;

    invoke-direct {v0, v2, v2, v2, v1}, Landroid/media/VolumePolicy;-><init>(ZZZI)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    goto :goto_43

    .line 10919
    :cond_39
    new-instance v0, Landroid/media/VolumePolicy;

    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    xor-int/2addr v3, v2

    invoke-direct {v0, v3, v2, v2, v1}, Landroid/media/VolumePolicy;-><init>(ZZZI)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 10928
    :goto_43
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->setAudioHandler(Landroid/os/Handler;)V

    .line 10931
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_RECORDING_POPUP:Z

    if-eqz v0, :cond_55

    .line 10932
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/audio/RecordingActivityMonitor;->setAudioHandler(Landroid/os/Handler;)V

    .line 10942
    :cond_55
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 10943
    .local v0, "intentFilterForSamsung":Landroid/content/IntentFilter;
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->addSamsungIntentFilter(Landroid/content/IntentFilter;)V

    .line 10944
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Landroid/content/BroadcastReceiver;

    sget-object v5, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v6, v0

    invoke-virtual/range {v3 .. v8}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 10949
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    .line 10950
    .local v1, "intentForMultiSound":Landroid/content/IntentFilter;
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->addMultiSoundIntentFilter(Landroid/content/IntentFilter;)V

    .line 10951
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Landroid/content/BroadcastReceiver;

    sget-object v5, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    move-object v6, v1

    invoke-virtual/range {v3 .. v8}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 10954
    new-instance v3, Landroid/content/IntentFilter;

    invoke-direct {v3}, Landroid/content/IntentFilter;-><init>()V

    .line 10955
    .local v3, "intentForMultiSoundNoti":Landroid/content/IntentFilter;
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->addMultiSoundNotificationIntentFilter(Landroid/content/IntentFilter;)V

    .line 10956
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Landroid/content/BroadcastReceiver;

    sget-object v6, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v9, 0x0

    move-object v7, v3

    invoke-virtual/range {v4 .. v9}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 10961
    .end local v1    # "intentForMultiSound":Landroid/content/IntentFilter;
    .end local v3    # "intentForMultiSoundNoti":Landroid/content/IntentFilter;
    iget v1, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->setNbQualityMode(I)V

    .line 10964
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mBtDeviceForOffloadState:Landroid/bluetooth/BluetoothDevice;

    .line 10967
    iget v3, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    invoke-direct {p0, v3}, Lcom/android/server/audio/AudioService;->setAdaptSound(I)V

    .line 10968
    iget v3, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    invoke-direct {p0, v3}, Lcom/android/server/audio/AudioService;->setUpscalerMode(I)V

    .line 10970
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_KARAOKE_LISTENBACK:Z

    if-eqz v3, :cond_a9

    .line 10971
    iget v3, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    invoke-direct {p0, v3}, Lcom/android/server/audio/AudioService;->setKaraokeListenback(I)V

    .line 10977
    :cond_a9
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 10978
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mBtSampleRate:Ljava/lang/String;

    .line 10979
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mBtNrec:Ljava/lang/String;

    .line 10980
    const-string v1, "false"

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    .line 10981
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    .line 10984
    const/4 v1, 0x0

    iput v1, p0, Lcom/android/server/audio/AudioService;->mUhqBtSampleRate:I

    .line 10987
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v4, 0x1

    const/4 v5, 0x2

    const/4 v8, 0x0

    const-string v6, ""

    const-string/jumbo v7, "speaker"

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/audio/AudioDeviceBroker;->updateDeviceQuickConnection(ZILjava/lang/String;Ljava/lang/String;I)V

    .line 10991
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-static {v3}, Lcom/samsung/android/server/audio/SoundAppPolicyManager;->getInstance(Lcom/samsung/android/server/audio/AudioSettingsHelper;)Lcom/samsung/android/server/audio/SoundAppPolicyManager;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mSoundAppPolicyManager:Lcom/samsung/android/server/audio/SoundAppPolicyManager;

    .line 10992
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string v4, "APP_LIST_VERSION"

    invoke-virtual {v3, v4, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v3

    .line 10993
    .local v3, "curVersion":I
    const v5, 0x78776398

    if-le v5, v3, :cond_df

    .line 10994
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mSoundAppPolicyManager:Lcom/samsung/android/server/audio/SoundAppPolicyManager;

    invoke-virtual {v5}, Lcom/samsung/android/server/audio/SoundAppPolicyManager;->setDefaultAllowList()V

    .line 10996
    :cond_df
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "SoundAppPolicy APP_LIST_VERSION ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v6, v4, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v4, "AS.AudioService"

    invoke-static {v4, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10998
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->setBtGameLatencyList()V

    .line 11000
    .end local v3    # "curVersion":I
    iget v1, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    if-ne v1, v2, :cond_105

    .line 11001
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setAllSoundMute()V

    .line 11004
    :cond_105
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->reloadVariableMediaVolumeSteps()V

    .line 11007
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->initMultiAudioFocus()V

    .line 11009
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    if-eqz v1, :cond_118

    .line 11010
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getVolumeMonitorService()Lcom/samsung/android/server/audio/VolumeMonitorService;

    move-result-object v1

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/VolumeMonitorService;->setPlaybackActivityMonitor(Lcom/android/server/audio/PlaybackActivityMonitor;)V

    .line 11012
    :cond_118
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v1}, Lcom/android/server/audio/SystemServerAdapter;->isPrivileged()Z

    move-result v1

    if-eqz v1, :cond_12a

    .line 11013
    const-class v1, Lcom/samsung/android/server/audio/SemAudioServiceInternal;

    new-instance v2, Lcom/samsung/android/server/audio/SemAudioServiceInternal;

    invoke-direct {v2, p0}, Lcom/samsung/android/server/audio/SemAudioServiceInternal;-><init>(Lcom/android/server/audio/AudioService;)V

    invoke-static {v1, v2}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 11016
    :cond_12a
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const/4 v2, -0x1

    const-string/jumbo v3, "speaker_media_index"

    invoke-virtual {v1, v3, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 11017
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v2, "mute_media_by_vibrate_or_silent_mode"

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getBooleanValue(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 11020
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/OmcRingtoneManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/OmcRingtoneManager;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mOmcRingtoneManager:Lcom/samsung/android/server/audio/OmcRingtoneManager;

    .line 11022
    return-void
.end method

.method private shouldZenMuteStream(I)Z
    .registers 10
    .param p1, "streamType"    # I

    .line 5079
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 5080
    invoke-virtual {v0}, Landroid/app/NotificationManager;->getZenMode()I

    move-result v0

    const/4 v1, 0x1

    const/4 v2, 0x2

    if-ne v0, v2, :cond_15

    .line 5086
    const/4 v0, 0x4

    if-eq p1, v0, :cond_14

    const/4 v0, 0x3

    if-eq p1, v0, :cond_14

    const/16 v0, 0xb

    if-ne p1, v0, :cond_15

    .line 5089
    :cond_14
    return v1

    .line 5093
    :cond_15
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v0}, Landroid/app/NotificationManager;->getZenMode()I

    move-result v0

    const/4 v2, 0x0

    if-eq v0, v1, :cond_1f

    .line 5094
    return v2

    .line 5097
    :cond_1f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v0}, Landroid/app/NotificationManager;->getConsolidatedNotificationPolicy()Landroid/app/NotificationManager$Policy;

    move-result-object v0

    .line 5098
    .local v0, "zenPolicy":Landroid/app/NotificationManager$Policy;
    iget v3, v0, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    and-int/lit8 v3, v3, 0x20

    if-nez v3, :cond_2d

    move v3, v1

    goto :goto_2e

    :cond_2d
    move v3, v2

    .line 5100
    .local v3, "muteAlarms":Z
    :goto_2e
    iget v4, v0, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    and-int/lit8 v4, v4, 0x40

    if-nez v4, :cond_36

    move v4, v1

    goto :goto_37

    :cond_36
    move v4, v2

    .line 5102
    .local v4, "muteMedia":Z
    :goto_37
    iget v5, v0, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    and-int/lit16 v5, v5, 0x80

    if-nez v5, :cond_3f

    move v5, v1

    goto :goto_40

    :cond_3f
    move v5, v2

    .line 5104
    .local v5, "muteSystem":Z
    :goto_40
    nop

    .line 5105
    invoke-static {v0}, Landroid/service/notification/ZenModeConfig;->areAllPriorityOnlyRingerSoundsMuted(Landroid/app/NotificationManager$Policy;)Z

    move-result v6

    .line 5106
    .local v6, "muteNotificationAndRing":Z
    if-eqz v3, :cond_4d

    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isAlarm(I)Z

    move-result v7

    if-nez v7, :cond_65

    :cond_4d
    if-eqz v4, :cond_55

    .line 5107
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isMedia(I)Z

    move-result v7

    if-nez v7, :cond_65

    :cond_55
    if-eqz v5, :cond_5d

    .line 5108
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isSystem(I)Z

    move-result v7

    if-nez v7, :cond_65

    :cond_5d
    if-eqz v6, :cond_66

    .line 5109
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isNotificationOrRinger(I)Z

    move-result v7

    if-eqz v7, :cond_66

    :cond_65
    goto :goto_67

    :cond_66
    move v1, v2

    .line 5106
    :goto_67
    return v1
.end method

.method private skipAdjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;II)Z
    .registers 12
    .param p1, "streamType"    # I
    .param p2, "direction"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "uid"    # I
    .param p7, "device"    # I

    .line 13632
    invoke-direct/range {p0 .. p7}, Lcom/android/server/audio/AudioService;->bypassAdjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;II)Lcom/android/server/audio/AudioService$BypassReason;

    move-result-object v0

    .line 13633
    .local v0, "reason":Lcom/android/server/audio/AudioService$BypassReason;
    sget-object v1, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    const/4 v2, 0x0

    if-eq v0, v1, :cond_36

    .line 13634
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "bypass adjustStreamVolume:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$BypassReason;->name()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v3, "AS.AudioService"

    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13635
    sget-object v1, Lcom/android/server/audio/AudioService$BypassReason;->CONSUME_ADJUST_SAME:Lcom/android/server/audio/AudioService$BypassReason;

    if-ne v0, v1, :cond_34

    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_34

    .line 13637
    invoke-direct {p0, p1, p3, v2, p7}, Lcom/android/server/audio/AudioService;->updateFlagsForSamsungVolume(IIII)I

    move-result p3

    .line 13638
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v1, p1, p3}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 13640
    :cond_34
    const/4 v1, 0x1

    return v1

    .line 13643
    :cond_36
    return v2
.end method

.method private startSoundAssistantService(I)V
    .registers 5
    .param p1, "type"    # I

    .line 13960
    new-instance v0, Landroid/content/Intent;

    const-string v1, "com.sec.android.soundassistant.SOUNDASSIST_INTENT_SERVICE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 13962
    .local v0, "serviceIntent":Landroid/content/Intent;
    const-string v1, "com.samsung.android.soundassistant"

    const-string v2, "com.sec.android.soundassistant.services.SoundAssistIntentService"

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 13963
    const-string/jumbo v1, "type"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 13966
    :try_start_14
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->startForegroundServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;
    :try_end_1b
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_1b} :catch_1c

    goto :goto_1d

    .line 13967
    :catch_1c
    move-exception v1

    :goto_1d
    nop

    .line 13968
    return-void
.end method

.method private unSetSoundSettingEventBroadcastIntent(Ljava/lang/String;)V
    .registers 8
    .param p1, "packageName"    # Ljava/lang/String;

    .line 13017
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    monitor-enter v0

    .line 13018
    const/4 v1, 0x0

    .line 13019
    .local v1, "removeReceiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_a
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1f

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    .line 13020
    .local v3, "receiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    invoke-virtual {v3, p1}, Lcom/android/server/audio/AudioService$SoundEventReceiver;->samePackageName(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1e

    .line 13021
    move-object v1, v3

    .line 13022
    goto :goto_1f

    .line 13024
    .end local v3    # "receiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    :cond_1e
    goto :goto_a

    .line 13025
    :cond_1f
    :goto_1f
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 13026
    invoke-virtual {v2}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->getVolumeLongPressReceiver()Landroid/content/ComponentName;

    move-result-object v2

    .line 13027
    .local v2, "longPressReceiver":Landroid/content/ComponentName;
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 13028
    invoke-virtual {v3}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->getMediaKeyEventReceiver()Landroid/content/ComponentName;

    move-result-object v3

    .line 13029
    .local v3, "mediaKeyEventReceiver":Landroid/content/ComponentName;
    const/4 v4, 0x0

    if-eqz v1, :cond_59

    .line 13030
    if-eqz v2, :cond_3f

    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3f

    .line 13032
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v5, v4}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 13034
    :cond_3f
    if-eqz v3, :cond_50

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_50

    .line 13036
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v5, v4}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 13038
    :cond_50
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 13039
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setPlayerChangedCallbackLocked()V

    goto :goto_77

    .line 13040
    :cond_59
    const-string v5, "com.samsung.android.soundassistant"

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_77

    .line 13041
    if-eqz v2, :cond_68

    .line 13042
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v5, v4}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 13044
    :cond_68
    if-eqz v3, :cond_6f

    .line 13045
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v5, v4}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 13047
    :cond_6f
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 13048
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setPlayerChangedCallbackLocked()V

    .line 13050
    .end local v1    # "removeReceiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    .end local v2    # "longPressReceiver":Landroid/content/ComponentName;
    .end local v3    # "mediaKeyEventReceiver":Landroid/content/ComponentName;
    :cond_77
    :goto_77
    monitor-exit v0

    .line 13051
    return-void

    .line 13050
    :catchall_79
    move-exception v1

    monitor-exit v0
    :try_end_7b
    .catchall {:try_start_4 .. :try_end_7b} :catchall_79

    throw v1
.end method

.method private unregisterAudioPolicyInt(Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .registers 7
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9153
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "unregisterAudioPolicyAsync for "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9154
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    const-string v2, "AS.AudioService"

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v1

    .line 9153
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 9155
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9156
    :try_start_29
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 9157
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    if-nez v1, :cond_5f

    .line 9158
    const-string v2, "AS.AudioService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to unregister unknown audio policy for pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9159
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " / uid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 9158
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9160
    monitor-exit v0

    return-void

    .line 9162
    :cond_5f
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v3, 0x0

    invoke-interface {v2, v1, v3}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 9164
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->release()V

    .line 9165
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    monitor-exit v0

    .line 9167
    return-void

    .line 9165
    :catchall_6c
    move-exception v1

    monitor-exit v0
    :try_end_6e
    .catchall {:try_start_29 .. :try_end_6e} :catchall_6c

    throw v1
.end method

.method private updateA11yVolumeAlias(Z)V
    .registers 6
    .param p1, "a11VolEnabled"    # Z

    .line 8303
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Accessibility volume enabled = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8304
    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    if-eq v0, p1, :cond_33

    .line 8305
    sput-boolean p1, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 8307
    const/4 v0, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(ZLjava/lang/String;)V

    .line 8309
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    sget-boolean v2, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_28

    .line 8310
    goto :goto_29

    .line 8311
    :cond_28
    move v0, v3

    .line 8309
    :goto_29
    invoke-virtual {v1, v0}, Lcom/android/server/audio/AudioService$VolumeController;->setA11yMode(I)V

    .line 8312
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    const/16 v1, 0xa

    invoke-virtual {v0, v1, v3}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 8314
    :cond_33
    return-void
.end method

.method private updateAssistantUId(Z)V
    .registers 10
    .param p1, "forceUpdate"    # Z

    .line 1816
    const/4 v0, 0x0

    .line 1823
    .local v0, "assistantUid":I
    const-string v1, ""

    .line 1824
    .local v1, "packageName":Ljava/lang/String;
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mRoleObserver:Lcom/android/server/audio/AudioService$RoleObserver;

    if-eqz v2, :cond_b

    .line 1825
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$RoleObserver;->getAssistantRoleHolder()Ljava/lang/String;

    move-result-object v1

    .line 1827
    :cond_b
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    const-string v3, "AS.AudioService"

    if-eqz v2, :cond_50

    .line 1828
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v4, "voice_interaction_service"

    const/4 v5, -0x2

    invoke-static {v2, v4, v5}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v2

    .line 1831
    .local v2, "assistantName":Ljava/lang/String;
    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-eqz v4, :cond_2b

    .line 1832
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string v6, "assistant"

    invoke-static {v4, v6, v5}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v2

    .line 1836
    :cond_2b
    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_50

    .line 1837
    invoke-static {v2}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v4

    .line 1838
    .local v4, "componentName":Landroid/content/ComponentName;
    if-nez v4, :cond_4c

    .line 1839
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Invalid service name for voice_interaction_service: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1841
    return-void

    .line 1843
    :cond_4c
    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 1846
    .end local v2    # "assistantName":Ljava/lang/String;
    .end local v4    # "componentName":Landroid/content/ComponentName;
    :cond_50
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_8e

    .line 1847
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    .line 1848
    .local v2, "pm":Landroid/content/pm/PackageManager;
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 1849
    const-string v5, "activity"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/app/ActivityManager;

    .line 1851
    .local v4, "am":Landroid/app/ActivityManager;
    const-string v5, "android.permission.CAPTURE_AUDIO_HOTWORD"

    invoke-virtual {v2, v5, v1}, Landroid/content/pm/PackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;)I

    move-result v5

    if-nez v5, :cond_8e

    .line 1854
    :try_start_6e
    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v5

    invoke-virtual {v2, v1, v5}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v3
    :try_end_76
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_6e .. :try_end_76} :catch_78

    move v0, v3

    .line 1858
    goto :goto_8e

    .line 1855
    :catch_78
    move-exception v5

    .line 1856
    .local v5, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "updateAssistantUId() could not find UID for package: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1862
    .end local v2    # "pm":Landroid/content/pm/PackageManager;
    .end local v4    # "am":Landroid/app/ActivityManager;
    .end local v5    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :cond_8e
    :goto_8e
    iget v2, p0, Lcom/android/server/audio/AudioService;->mAssistantUid:I

    if-ne v0, v2, :cond_94

    if-eqz p1, :cond_99

    .line 1863
    :cond_94
    invoke-static {v0}, Landroid/media/AudioSystem;->setAssistantUid(I)I

    .line 1864
    iput v0, p0, Lcom/android/server/audio/AudioService;->mAssistantUid:I

    .line 1866
    :cond_99
    return-void
.end method

.method private updateAudioHalPids()V
    .registers 4

    .line 10040
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getAudioHalPids()Ljava/util/Set;

    move-result-object v0

    .line 10041
    .local v0, "pidsSet":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-interface {v0}, Ljava/util/Set;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_12

    .line 10042
    const-string v1, "AS.AudioService"

    const-string v2, "Could not retrieve audio HAL service pids"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10043
    return-void

    .line 10045
    :cond_12
    invoke-interface {v0}, Ljava/util/Set;->stream()Ljava/util/stream/Stream;

    move-result-object v1

    sget-object v2, Lcom/android/server/audio/-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw;->INSTANCE:Lcom/android/server/audio/-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw;

    invoke-interface {v1, v2}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/stream/IntStream;->toArray()[I

    move-result-object v1

    .line 10046
    .local v1, "pidsArray":[I
    invoke-static {v1}, Landroid/media/AudioSystem;->setAudioHalPids([I)I

    .line 10047
    return-void
.end method

.method private updateDefaultStreamOverrideDelay(Z)V
    .registers 4
    .param p1, "touchExploreEnabled"    # Z

    .line 8274
    if-eqz p1, :cond_7

    .line 8275
    const/16 v0, 0x3e8

    sput v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    goto :goto_a

    .line 8277
    :cond_7
    const/4 v0, 0x0

    sput v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 8279
    :goto_a
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Touch exploration enabled="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v1, " stream override delay is now "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " ms"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8281
    return-void
.end method

.method private updateDefaultVolumes()V
    .registers 6

    .line 1575
    const/4 v0, 0x0

    .local v0, "stream":I
    :goto_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v1, v1

    if-ge v0, v1, :cond_27

    .line 1576
    sget-object v1, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v1, v1, v0

    if-eq v0, v1, :cond_24

    .line 1577
    sget-object v1, Landroid/media/AudioSystem;->DEFAULT_STREAM_VOLUME:[I

    sget-object v2, Landroid/media/AudioSystem;->DEFAULT_STREAM_VOLUME:[I

    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v3, v0

    aget v2, v2, v4

    mul-int/lit8 v2, v2, 0xa

    aget v3, v3, v0

    invoke-direct {p0, v2, v3, v0}, Lcom/android/server/audio/AudioService;->rescaleIndex(III)I

    move-result v2

    add-int/lit8 v2, v2, 0x5

    div-int/lit8 v2, v2, 0xa

    aput v2, v1, v0

    .line 1575
    :cond_24
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 1583
    .end local v0    # "stream":I
    :cond_27
    return-void
.end method

.method private updateFlagsForSamsungVolume(IIII)I
    .registers 8
    .param p1, "streamType"    # I
    .param p2, "flags"    # I
    .param p3, "index"    # I
    .param p4, "device"    # I

    .line 13677
    invoke-static {}, Lcom/samsung/android/server/audio/AudioHelper;->isFactoryMode()Z

    move-result v0

    const-string v1, "AS.AudioService"

    if-eqz v0, :cond_26

    .line 13678
    const/4 v0, 0x2

    if-ne v0, p1, :cond_26

    if-nez p2, :cond_26

    if-lez p3, :cond_26

    .line 13679
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "sendVolumeUpdate: enforce to FLAG_PLAY_SOUND volume index = "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13680
    or-int/lit8 p2, p2, 0x4

    .line 13684
    :cond_26
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isDualA2dpMode()Z

    move-result v0

    if-eqz v0, :cond_36

    .line 13685
    const/high16 v0, 0x80000

    or-int/2addr p2, v0

    .line 13686
    const-string v0, "Add isDualA2dpMode"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13689
    :cond_36
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    move-result v0

    if-eqz v0, :cond_4d

    .line 13690
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isRemoteVolumeControlSupported()Z

    move-result v0

    if-nez v0, :cond_4d

    .line 13691
    const/high16 v0, 0x40000

    or-int/2addr p2, v0

    .line 13692
    const-string/jumbo v0, "this BT doesn\'t support Remote volume control. hence, SCO volume fixed"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13696
    :cond_4d
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_REMOTE_MIC:Z

    if-eqz v0, :cond_5d

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    if-eqz v0, :cond_5d

    .line 13697
    const/high16 v0, 0x8000000

    or-int/2addr p2, v0

    .line 13698
    const-string v0, "Add FLAG_REMOTE_MIC"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13701
    :cond_5d
    const/4 v0, 0x3

    if-ne p1, v0, :cond_7d

    sget-object v0, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {p4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_7d

    and-int/lit8 v0, p2, 0x40

    if-eqz v0, :cond_7d

    .line 13702
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v0

    if-eqz v0, :cond_7d

    .line 13703
    and-int/lit8 p2, p2, -0x2

    .line 13704
    const-string v0, "The show UI flag is off in the incall state and A2DP BT Connection"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13706
    :cond_7d
    return p2
.end method

.method private updateFlagsForTvPlatform(I)I
    .registers 4
    .param p1, "flags"    # I

    .line 3335
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3336
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-eqz v1, :cond_f

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    if-eqz v1, :cond_f

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    if-nez v1, :cond_17

    :cond_f
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    if-eqz v1, :cond_19

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    if-eqz v1, :cond_19

    .line 3338
    :cond_17
    and-int/lit8 p1, p1, -0x2

    .line 3340
    :cond_19
    monitor-exit v0

    .line 3341
    return p1

    .line 3340
    :catchall_1b
    move-exception v1

    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_3 .. :try_end_1d} :catchall_1b

    throw v1
.end method

.method private updateHdmiCecSinkLocked(Z)V
    .registers 5
    .param p1, "hdmiCecSink"    # Z

    .line 8141
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    .line 8142
    const/16 v0, 0x400

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->hasDeviceVolumeBehavior(I)Z

    move-result v1

    if-nez v1, :cond_21

    .line 8143
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    const-string v2, "AS.AudioService"

    if-eqz v1, :cond_19

    .line 8145
    const-string v1, "CEC sink: setting HDMI as full vol device"

    invoke-static {v2, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8147
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->addAudioSystemDeviceOutToFullVolumeDevices(I)V

    goto :goto_21

    .line 8150
    :cond_19
    const-string v1, "TV, no CEC: setting HDMI as regular vol device"

    invoke-static {v2, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8154
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFullVolumeDevices(I)V

    .line 8158
    :cond_21
    :goto_21
    const-string v1, "HdmiPlaybackClient.DisplayStatusCallback"

    invoke-direct {p0, v0, v1}, Lcom/android/server/audio/AudioService;->checkAddAllFixedVolumeDevices(ILjava/lang/String;)V

    .line 8160
    return-void
.end method

.method private updateHearingAidVolumeOnVoiceActivityUpdate()V
    .registers 7

    .line 2983
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getHearingAidStreamType()I

    move-result v0

    .line 2984
    .local v0, "streamType":I
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    move-result v1

    .line 2985
    .local v1, "index":I
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v3, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mVoiceActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 2986
    invoke-virtual {v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v4

    const/4 v5, 0x6

    invoke-direct {v3, v5, v4, v0, v1}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IZII)V

    .line 2985
    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 2987
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    mul-int/lit8 v3, v1, 0xa

    invoke-virtual {v2, v3, v0}, Lcom/android/server/audio/AudioDeviceBroker;->postSetHearingAidVolumeIndex(II)V

    .line 2989
    return-void
.end method

.method private updateMasterBalance(Landroid/content/ContentResolver;)V
    .registers 7
    .param p1, "cr"    # Landroid/content/ContentResolver;

    .line 1706
    const-string/jumbo v0, "master_balance"

    const/4 v1, 0x0

    const/4 v2, -0x2

    invoke-static {p1, v0, v1, v2}, Landroid/provider/Settings$System;->getFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)F

    move-result v0

    .line 1709
    .local v0, "masterBalance":F
    const/4 v1, 0x1

    new-array v2, v1, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v3

    const/4 v4, 0x0

    aput-object v3, v2, v4

    const-string v3, "Master balance %f"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    const-string v3, "AS.AudioService"

    invoke-static {v3, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1711
    invoke-static {v0}, Landroid/media/AudioSystem;->setMasterBalance(F)I

    move-result v2

    if-eqz v2, :cond_36

    .line 1712
    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    aput-object v2, v1, v4

    const-string/jumbo v2, "setMasterBalance failed for %f"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-static {v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1715
    :cond_36
    iput v0, p0, Lcom/android/server/audio/AudioService;->mMasterBalance:F

    .line 1716
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v2, "sound_balance"

    const/16 v3, 0x32

    invoke-virtual {v1, v2, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    sub-int/2addr v1, v3

    int-to-float v1, v1

    const/high16 v3, 0x42480000    # 50.0f

    div-float/2addr v1, v3

    .line 1717
    .local v1, "balance":F
    iget v3, p0, Lcom/android/server/audio/AudioService;->mMasterBalance:F

    cmpl-float v3, v3, v1

    if-eqz v3, :cond_53

    .line 1718
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v3, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 1721
    .end local v1    # "balance":F
    :cond_53
    return-void
.end method

.method private updateMasterMono(Landroid/content/ContentResolver;)V
    .registers 7
    .param p1, "cr"    # Landroid/content/ContentResolver;

    .line 1691
    const-string/jumbo v0, "master_mono"

    const/4 v1, 0x0

    const/4 v2, -0x2

    invoke-static {p1, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_e

    move v0, v2

    goto :goto_f

    :cond_e
    move v0, v1

    .line 1694
    .local v0, "masterMono":Z
    :goto_f
    new-array v3, v2, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v4

    aput-object v4, v3, v1

    const-string v4, "Master mono %b"

    invoke-static {v4, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    const-string v4, "AS.AudioService"

    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1696
    invoke-static {v0}, Landroid/media/AudioSystem;->setMasterMono(Z)I

    .line 1698
    if-eqz v0, :cond_28

    goto :goto_29

    :cond_28
    move v2, v1

    :goto_29
    iput v2, p0, Lcom/android/server/audio/AudioService;->mMasterMono:I

    .line 1699
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v4, "mono_audio_db"

    invoke-virtual {v3, v4, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    if-eq v2, v1, :cond_3b

    .line 1700
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v1, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 1703
    :cond_3b
    return-void
.end method

.method private updateRingerAndZenModeAffectedStreams()Z
    .registers 7

    .line 5172
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->updateZenModeAffectedStreams()Z

    move-result v0

    .line 5173
    .local v0, "updatedZenModeAffectedStreams":Z
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "mode_ringer_streams_affected"

    const/16 v3, 0xa6

    const/4 v4, -0x2

    invoke-static {v1, v2, v3, v4}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    .line 5179
    .local v1, "ringerModeAffectedStreams":I
    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v3, :cond_16

    .line 5180
    const/4 v1, 0x0

    goto :goto_1f

    .line 5181
    :cond_16
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    if-eqz v3, :cond_1f

    .line 5182
    nop

    .line 5183
    invoke-interface {v3, v1}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->getRingerModeAffectedStreams(I)I

    move-result v1

    .line 5185
    :cond_1f
    :goto_1f
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-nez v3, :cond_2d

    sget-object v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_MDMN_TYPE:Ljava/lang/String;

    .line 5186
    const-string v5, "Softphone"

    invoke-virtual {v5, v3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_2f

    .line 5187
    :cond_2d
    and-int/lit8 v1, v1, -0x9

    .line 5192
    :cond_2f
    and-int/lit16 v1, v1, -0x81

    .line 5201
    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    const/16 v5, 0x8

    aget v3, v3, v5

    const/4 v5, 0x2

    if-ne v3, v5, :cond_3d

    .line 5202
    or-int/lit16 v1, v1, 0x100

    goto :goto_3f

    .line 5204
    :cond_3d
    and-int/lit16 v1, v1, -0x101

    .line 5207
    :goto_3f
    iget v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    if-eq v1, v3, :cond_4c

    .line 5208
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-static {v3, v2, v1, v4}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 5212
    iput v1, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 5213
    const/4 v2, 0x1

    return v2

    .line 5215
    :cond_4c
    return v0
.end method

.method private updateStreamVolumeAlias(ZLjava/lang/String;)V
    .registers 27
    .param p1, "updateVolumes"    # Z
    .param p2, "caller"    # Ljava/lang/String;

    .line 1599
    move-object/from16 v1, p0

    move-object/from16 v2, p2

    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    const/4 v3, 0x3

    const/16 v4, 0xa

    if-eqz v0, :cond_d

    .line 1600
    move v0, v4

    goto :goto_e

    :cond_d
    move v0, v3

    :goto_e
    move v5, v0

    .line 1601
    .local v5, "a11yStreamAlias":I
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v6, 0x11100fd

    invoke-virtual {v0, v6}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    const/16 v6, 0xb

    if-eqz v0, :cond_22

    .line 1603
    move v3, v6

    goto :goto_23

    :cond_22
    nop

    .line 1605
    .local v3, "assistantStreamAlias":I
    :goto_23
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v0, :cond_2d

    .line 1606
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_TELEVISION:[I

    sput-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 1607
    const/4 v0, 0x3

    .local v0, "dtmfStreamAlias":I
    goto :goto_44

    .line 1609
    .end local v0    # "dtmfStreamAlias":I
    :cond_2d
    iget v0, v1, Lcom/android/server/audio/AudioService;->mPlatformType:I

    const/4 v7, 0x1

    if-eq v0, v7, :cond_3e

    .line 1615
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    sput-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 1616
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eqz v0, :cond_3c

    .line 1617
    const/4 v0, 0x5

    .restart local v0    # "dtmfStreamAlias":I
    goto :goto_44

    .line 1619
    .end local v0    # "dtmfStreamAlias":I
    :cond_3c
    const/4 v0, 0x3

    .restart local v0    # "dtmfStreamAlias":I
    goto :goto_44

    .line 1611
    .end local v0    # "dtmfStreamAlias":I
    :cond_3e
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    sput-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 1612
    const/4 v0, 0x2

    .line 1613
    .restart local v0    # "dtmfStreamAlias":I
    nop

    .line 1624
    :goto_44
    iget-boolean v7, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    const/4 v8, 0x0

    if-eqz v7, :cond_4c

    .line 1625
    iput v8, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    goto :goto_61

    .line 1627
    :cond_4c
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v7

    if-eqz v7, :cond_5b

    .line 1628
    const/4 v0, 0x0

    .line 1629
    iget v7, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    and-int/lit16 v7, v7, -0x101

    iput v7, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    move v7, v0

    goto :goto_62

    .line 1631
    :cond_5b
    iget v7, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    or-int/lit16 v7, v7, 0x100

    iput v7, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 1635
    :goto_61
    move v7, v0

    .end local v0    # "dtmfStreamAlias":I
    .local v7, "dtmfStreamAlias":I
    :goto_62
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    const/16 v9, 0x8

    aput v7, v0, v9

    .line 1636
    aput v5, v0, v4

    .line 1637
    aput v3, v0, v6

    .line 1639
    if-eqz p1, :cond_dc

    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    if-eqz v0, :cond_dc

    .line 1640
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->updateDefaultVolumes()V

    .line 1642
    iget-object v6, v1, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v6

    .line 1643
    :try_start_78
    const-class v10, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v10
    :try_end_7b
    .catchall {:try_start_78 .. :try_end_7b} :catchall_d9

    .line 1644
    :try_start_7b
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    iget-object v11, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v11, v11, v7

    .line 1645
    invoke-virtual {v0, v11, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 1646
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v4

    sget-object v11, Landroid/provider/Settings$System;->VOLUME_SETTINGS_INT:[Ljava/lang/String;

    aget-object v11, v11, v5

    # setter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mVolumeIndexSettingName:Ljava/lang/String;
    invoke-static {v0, v11}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1502(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)Ljava/lang/String;

    .line 1648
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v4

    iget-object v11, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v11, v11, v5

    invoke-virtual {v0, v11, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 1650
    monitor-exit v10
    :try_end_9d
    .catchall {:try_start_7b .. :try_end_9d} :catchall_d6

    .line 1651
    :try_start_9d
    monitor-exit v6
    :try_end_9e
    .catchall {:try_start_9d .. :try_end_9e} :catchall_d9

    .line 1652
    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    if-eqz v0, :cond_a9

    .line 1654
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v4

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->readSettings()V

    .line 1658
    :cond_a9
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v0

    invoke-direct {v1, v0, v8}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 1659
    iget-object v10, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v11, 0xa

    const/4 v12, 0x2

    const/4 v13, 0x0

    const/4 v14, 0x0

    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v15, v0, v9

    const/16 v16, 0x0

    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1665
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v18, 0xa

    const/16 v19, 0x2

    const/16 v20, 0x0

    const/16 v21, 0x0

    iget-object v6, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v22, v6, v4

    const/16 v23, 0x0

    move-object/from16 v17, v0

    invoke-static/range {v17 .. v23}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    goto :goto_dc

    .line 1650
    :catchall_d6
    move-exception v0

    :try_start_d7
    monitor-exit v10
    :try_end_d8
    .catchall {:try_start_d7 .. :try_end_d8} :catchall_d6

    .end local v3    # "assistantStreamAlias":I
    .end local v5    # "a11yStreamAlias":I
    .end local v7    # "dtmfStreamAlias":I
    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "updateVolumes":Z
    .end local p2    # "caller":Ljava/lang/String;
    :try_start_d8
    throw v0

    .line 1651
    .restart local v3    # "assistantStreamAlias":I
    .restart local v5    # "a11yStreamAlias":I
    .restart local v7    # "dtmfStreamAlias":I
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "updateVolumes":Z
    .restart local p2    # "caller":Ljava/lang/String;
    :catchall_d9
    move-exception v0

    monitor-exit v6
    :try_end_db
    .catchall {:try_start_d8 .. :try_end_db} :catchall_d9

    throw v0

    .line 1672
    :cond_dc
    :goto_dc
    return-void
.end method

.method private updateThemeSound(IZ)V
    .registers 6
    .param p1, "userId"    # I
    .param p2, "force"    # Z

    .line 14523
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "theme_touch_sound"

    invoke-static {v0, v1, p1}, Landroid/provider/Settings$Global;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v0

    .line 14526
    .local v0, "touch_sound":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "system_sound"

    invoke-static {v1, v2, p1}, Landroid/provider/Settings$System;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v1

    .line 14528
    .local v1, "system_sound":Ljava/lang/String;
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    if-eqz v2, :cond_19

    .line 14529
    invoke-virtual {v2, v0, v1, p2}, Lcom/android/server/audio/SoundEffectsHelper;->updateThemeSound(Ljava/lang/String;Ljava/lang/String;Z)V

    .line 14531
    :cond_19
    return-void
.end method

.method private updateVolumePanelFlags(III)I
    .registers 6
    .param p1, "streamTypeAlias"    # I
    .param p2, "direction"    # I
    .param p3, "flags"    # I

    .line 13647
    and-int/lit8 v0, p3, 0x4

    if-eqz v0, :cond_35

    .line 13648
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eqz v0, :cond_e

    .line 13649
    const/4 v0, 0x5

    if-eq p1, v0, :cond_1e

    .line 13650
    and-int/lit8 p3, p3, -0x5

    goto :goto_1e

    .line 13652
    :cond_e
    const/4 v0, 0x2

    if-ne p1, v0, :cond_1c

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_1c

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    if-eqz v0, :cond_1e

    .line 13654
    :cond_1c
    and-int/lit8 p3, p3, -0x5

    .line 13658
    :cond_1e
    :goto_1e
    and-int/lit8 v0, p3, 0x4

    if-eqz v0, :cond_35

    .line 13659
    nop

    .line 13660
    const-string/jumbo v0, "l_record_active_enable"

    invoke-static {v0}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 13659
    const-string/jumbo v1, "true"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_35

    .line 13661
    and-int/lit8 p3, p3, -0x5

    .line 13665
    :cond_35
    and-int/lit16 v0, p3, 0x200

    if-eqz v0, :cond_3d

    if-eqz p2, :cond_3d

    .line 13666
    or-int/lit8 p3, p3, 0x1

    .line 13673
    :cond_3d
    return p3
.end method

.method private updateZenModeAffectedStreams()Z
    .registers 7

    .line 5127
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 5128
    return v1

    .line 5131
    :cond_6
    const/4 v0, 0x0

    .line 5132
    .local v0, "zenModeAffectedStreams":I
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v2}, Landroid/app/NotificationManager;->getZenMode()I

    move-result v2

    .line 5134
    .local v2, "zenMode":I
    const/4 v3, 0x1

    const/4 v4, 0x2

    if-ne v2, v4, :cond_16

    .line 5135
    or-int/lit8 v0, v0, 0x10

    .line 5136
    or-int/lit8 v0, v0, 0x8

    goto :goto_40

    .line 5137
    :cond_16
    if-ne v2, v3, :cond_40

    .line 5138
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v4}, Landroid/app/NotificationManager;->getConsolidatedNotificationPolicy()Landroid/app/NotificationManager$Policy;

    move-result-object v4

    .line 5139
    .local v4, "zenPolicy":Landroid/app/NotificationManager$Policy;
    iget v5, v4, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    and-int/lit8 v5, v5, 0x20

    if-nez v5, :cond_26

    .line 5141
    or-int/lit8 v0, v0, 0x10

    .line 5144
    :cond_26
    iget v5, v4, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    and-int/lit8 v5, v5, 0x40

    if-nez v5, :cond_2e

    .line 5146
    or-int/lit8 v0, v0, 0x8

    .line 5151
    :cond_2e
    iget v5, v4, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    and-int/lit16 v5, v5, 0x80

    if-nez v5, :cond_36

    .line 5153
    or-int/lit8 v0, v0, 0x2

    .line 5156
    :cond_36
    invoke-static {v4}, Landroid/service/notification/ZenModeConfig;->areAllPriorityOnlyRingerSoundsMuted(Landroid/app/NotificationManager$Policy;)Z

    move-result v5

    if-eqz v5, :cond_40

    .line 5157
    or-int/lit8 v0, v0, 0x20

    .line 5158
    or-int/lit8 v0, v0, 0x4

    .line 5162
    .end local v4    # "zenPolicy":Landroid/app/NotificationManager$Policy;
    :cond_40
    :goto_40
    iget v4, p0, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    if-eq v4, v0, :cond_47

    .line 5163
    iput v0, p0, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    .line 5164
    return v3

    .line 5167
    :cond_47
    return v1
.end method

.method private validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V
    .registers 6
    .param p1, "audioAttributes"    # Landroid/media/AudioAttributes;

    .line 7727
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getSystemUsage()I

    move-result v0

    .line 7728
    .local v0, "usage":I
    invoke-static {v0}, Landroid/media/AudioAttributes;->isSystemUsage(I)Z

    move-result v1

    if-eqz v1, :cond_3c

    .line 7729
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_34

    .line 7730
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->isSupportedSystemUsage(I)Z

    move-result v1

    if-eqz v1, :cond_19

    goto :goto_3c

    .line 7731
    :cond_19
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unsupported usage "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7732
    invoke-static {v0}, Landroid/media/AudioAttributes;->usageToString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 7735
    :cond_34
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Missing MODIFY_AUDIO_ROUTING permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 7738
    :cond_3c
    :goto_3c
    return-void
.end method

.method private verifySystemUsages([I)V
    .registers 6
    .param p1, "systemUsages"    # [I

    .line 1409
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    array-length v1, p1

    if-ge v0, v1, :cond_28

    .line 1410
    aget v1, p1, v0

    invoke-static {v1}, Landroid/media/AudioAttributes;->isSystemUsage(I)Z

    move-result v1

    if-eqz v1, :cond_f

    .line 1409
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 1411
    :cond_f
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Non-system usage provided: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget v3, p1, v0

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 1414
    .end local v0    # "i":I
    :cond_28
    return-void
.end method

.method private vibrateCall()V
    .registers 4

    .line 13379
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->hasVibrator()Z

    move-result v0

    if-eqz v0, :cond_1c

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVibrator:Landroid/os/Vibrator;

    if-eqz v0, :cond_1c

    .line 13380
    const/16 v0, 0x8

    invoke-static {v0}, Landroid/view/HapticFeedbackConstants;->semGetVibrationIndex(I)I

    move-result v0

    .line 13381
    .local v0, "type":I
    const/4 v1, -0x1

    sget-object v2, Landroid/os/VibrationEffect$SemMagnitudeType;->TYPE_CALL:Landroid/os/VibrationEffect$SemMagnitudeType;

    invoke-static {v0, v1, v2}, Landroid/os/VibrationEffect;->semCreateHaptic(IILandroid/os/VibrationEffect$SemMagnitudeType;)Landroid/os/VibrationEffect;

    move-result-object v1

    .line 13383
    .local v1, "effect":Landroid/os/VibrationEffect;
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mVibrator:Landroid/os/Vibrator;

    invoke-virtual {v2, v1}, Landroid/os/Vibrator;->vibrate(Landroid/os/VibrationEffect;)V
    :try_end_1c
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_1c} :catch_1d

    .line 13387
    .end local v0    # "type":I
    .end local v1    # "effect":Landroid/os/VibrationEffect;
    :cond_1c
    goto :goto_26

    .line 13385
    :catch_1d
    move-exception v0

    .line 13386
    .local v0, "e":Ljava/lang/Exception;
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "vibrateCall error"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13388
    .end local v0    # "e":Ljava/lang/Exception;
    :goto_26
    return-void
.end method

.method private volumeAdjustmentAllowedByDnd(II)Z
    .registers 6
    .param p1, "streamTypeAlias"    # I
    .param p2, "flags"    # I

    .line 3173
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    invoke-virtual {v0}, Landroid/app/NotificationManager;->getZenMode()I

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_10

    const/4 v2, 0x2

    if-eq v0, v2, :cond_10

    const/4 v2, 0x3

    if-eq v0, v2, :cond_10

    .line 3184
    return v1

    .line 3179
    :cond_10
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v0

    if-eqz v0, :cond_23

    .line 3180
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getUiSoundsStreamType()I

    move-result v0

    if-eq p1, v0, :cond_23

    and-int/lit8 v0, p2, 0x2

    if-eqz v0, :cond_21

    goto :goto_23

    :cond_21
    const/4 v1, 0x0

    goto :goto_24

    :cond_23
    :goto_23
    nop

    .line 3179
    :goto_24
    return v1
.end method

.method private waitForAudioHandlerCreation()V
    .registers 4

    .line 1373
    monitor-enter p0

    .line 1374
    :goto_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;
    :try_end_3
    .catchall {:try_start_1 .. :try_end_3} :catchall_15

    if-nez v0, :cond_13

    .line 1377
    :try_start_5
    invoke-virtual {p0}, Ljava/lang/Object;->wait()V
    :try_end_8
    .catch Ljava/lang/InterruptedException; {:try_start_5 .. :try_end_8} :catch_9
    .catchall {:try_start_5 .. :try_end_8} :catchall_15

    .line 1380
    goto :goto_1

    .line 1378
    :catch_9
    move-exception v0

    .line 1379
    .local v0, "e":Ljava/lang/InterruptedException;
    :try_start_a
    const-string v1, "AS.AudioService"

    const-string v2, "Interrupted while waiting on volume handler."

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1380
    nop

    .end local v0    # "e":Ljava/lang/InterruptedException;
    goto :goto_1

    .line 1382
    :cond_13
    monitor-exit p0

    .line 1383
    return-void

    .line 1382
    :catchall_15
    move-exception v0

    monitor-exit p0
    :try_end_17
    .catchall {:try_start_a .. :try_end_17} :catchall_15

    throw v0
.end method

.method private wasStreamActiveRecently(II)Z
    .registers 4
    .param p1, "stream"    # I
    .param p2, "delay_ms"    # I

    .line 5275
    invoke-static {p1, p2}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v0

    if-nez v0, :cond_f

    .line 5276
    invoke-static {p1, p2}, Landroid/media/AudioSystem;->isStreamActiveRemotely(II)Z

    move-result v0

    if-eqz v0, :cond_d

    goto :goto_f

    :cond_d
    const/4 v0, 0x0

    goto :goto_10

    :cond_f
    :goto_f
    const/4 v0, 0x1

    .line 5275
    :goto_10
    return v0
.end method

.method private wouldToggleZenMode(I)Z
    .registers 4
    .param p1, "newMode"    # I

    .line 2772
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    const/4 v1, 0x1

    if-nez v0, :cond_a

    if-eqz p1, :cond_a

    .line 2774
    return v1

    .line 2775
    :cond_a
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    if-eqz v0, :cond_13

    if-nez p1, :cond_13

    .line 2777
    return v1

    .line 2779
    :cond_13
    const/4 v0, 0x0

    return v0
.end method


# virtual methods
.method public abandonAudioFocus(Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Landroid/media/AudioAttributes;Ljava/lang/String;)I
    .registers 8
    .param p1, "fd"    # Landroid/media/IAudioFocusDispatcher;
    .param p2, "clientId"    # Ljava/lang/String;
    .param p3, "aa"    # Landroid/media/AudioAttributes;
    .param p4, "callingPackageName"    # Ljava/lang/String;

    .line 7819
    new-instance v0, Landroid/media/MediaMetrics$Item;

    const-string v1, "audio.service.focus"

    invoke-direct {v0, v1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    sget-object v1, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 7820
    invoke-virtual {v0, v1, p4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 7821
    invoke-virtual {v0, v1, p2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 7822
    const-string v2, "abandonAudioFocus"

    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    .line 7824
    .local v0, "mmi":Landroid/media/MediaMetrics$Item;
    if-eqz p3, :cond_38

    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->isValidAudioAttributesUsage(Landroid/media/AudioAttributes;)Z

    move-result v1

    if-nez v1, :cond_38

    .line 7825
    const-string v1, "AS.AudioService"

    const-string v2, "Request using unsupported usage."

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7826
    sget-object v1, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string/jumbo v2, "unsupported usage"

    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7828
    const/4 v1, 0x0

    return v1

    .line 7830
    :cond_38
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7831
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v1, p1, p2, p3, p4}, Lcom/android/server/audio/MediaFocusControl;->abandonAudioFocus(Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Landroid/media/AudioAttributes;Ljava/lang/String;)I

    move-result v1

    return v1
.end method

.method public addMixForPolicy(Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;)I
    .registers 7
    .param p1, "policyConfig"    # Landroid/media/audiopolicy/AudioPolicyConfig;
    .param p2, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9198
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "addMixForPolicy for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " with config:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9200
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9201
    :try_start_25
    const-string v1, "Cannot add AudioMix in audio policy"

    .line 9202
    invoke-direct {p0, p2, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9203
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    const/4 v2, -0x1

    if-nez v1, :cond_30

    .line 9204
    monitor-exit v0

    return v2

    .line 9206
    :cond_30
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    move-result-object v3

    invoke-virtual {v1, v3}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->addMixes(Ljava/util/ArrayList;)I

    move-result v3

    if-nez v3, :cond_3c

    .line 9207
    const/4 v2, 0x0

    goto :goto_3d

    :cond_3c
    nop

    :goto_3d
    monitor-exit v0

    .line 9206
    return v2

    .line 9208
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :catchall_3f
    move-exception v1

    monitor-exit v0
    :try_end_41
    .catchall {:try_start_25 .. :try_end_41} :catchall_3f

    throw v1
.end method

.method addMultiSoundIntentFilter(Landroid/content/IntentFilter;)V
    .registers 3
    .param p1, "intentFilter"    # Landroid/content/IntentFilter;

    .line 11171
    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11172
    const-string v0, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11173
    const-string/jumbo v0, "package"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 11174
    return-void
.end method

.method addMultiSoundNotificationIntentFilter(Landroid/content/IntentFilter;)V
    .registers 3
    .param p1, "intentFilter"    # Landroid/content/IntentFilter;

    .line 11177
    const-string v0, "android.intent.action.SAS_NOTIFICATION_CLEAR"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11178
    const-string v0, "android.intent.action.TurnOff_MultiSound"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11179
    const-string v0, "com.samsung.android.audio.headup.close"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11180
    const-string v0, "com.samsung.android.audio.headup.changedevice"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11181
    return-void
.end method

.method public addPackage(ILjava/lang/String;)V
    .registers 5
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;

    .line 11877
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 11878
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1, p1, p2}, Lcom/samsung/android/server/audio/PackageListHelper;->addPackage(Landroid/content/Context;ILjava/lang/String;)V

    .line 11879
    return-void
.end method

.method addSamsungExtraDump(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .line 13482
    sget-object v0, Lcom/android/server/audio/AudioService;->sRingermodeLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 13484
    sget-object v0, Lcom/android/server/audio/AudioService;->sMicrophoneLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 13486
    sget-object v0, Lcom/android/server/audio/AudioService;->sMasterMuteLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 13488
    sget-object v0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 13490
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 13492
    sget-object v0, Lcom/android/server/audio/AudioService;->sRingtoneChangeLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 13494
    const-string v0, "\nAudio Setting:"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13497
    const-string v0, "  mNbQualityMode="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13500
    const-string v0, "  mAllSoundMute="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mAllSoundMute:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13503
    const-string v0, "  mMasterMono="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mMasterMono:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13506
    const-string v0, "  mMasterBalance="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mMasterBalance:F

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(F)V

    .line 13509
    const-string v0, "  mUhqBtSampleRate="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mUhqBtSampleRate:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13514
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DISPLAY_VOLUME_CONTROL:Z

    if-eqz v0, :cond_75

    .line 13515
    const-string v0, "  mIsSupportDisplayVolumeControl="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->isSupportDisplayVolumeControl()Z

    move-result v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13516
    const-string v0, "  mIsDLNAEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->isDLNAEnabled()Z

    move-result v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13519
    :cond_75
    const-string v0, "  isTalkBackEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13522
    const-string v0, "  isFactoryMode="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {}, Lcom/samsung/android/server/audio/AudioHelper;->isFactoryMode()Z

    move-result v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13525
    const-string v0, "  mAdaptSoundEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mAdaptSoundEnabled:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13526
    const-string v0, "  mUpscalerEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13528
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_KARAOKE_LISTENBACK:Z

    if-eqz v0, :cond_ad

    .line 13529
    const-string v0, "  mKaraokeListenbackEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13535
    :cond_ad
    const-string v0, "  mAdjustMediaVolumeOnly="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13536
    const-string v0, "  mSelfiestickIsConnected="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSelfiestickIsConnected:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13537
    const-string v0, "  mMediaVolumeStepIndex="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13538
    const-string v0, "  mMediaVolumeSteps="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    invoke-static {v0}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13539
    const-string v0, "  mIgnoreAudioFocusUid="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mIgnoreAudioFocusUid:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13540
    const-string v0, "  mHeadsetOnlyStream="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13541
    const-string v0, "  mEnableSoundAssistant="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13542
    const-string v0, "  mLRSwitching="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13545
    const-string v0, "  CPUBoostValueForVoIP="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/DvfsHelper;->getCPUBoostValueForVoIP()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13548
    const-string v0, "  SEC_AUDIO_SAFE_MEDIA_VOLUME="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13549
    const-string v0, "  mSafeMediaVolumeStateForBlueTooth="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateForBlueTooth:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13550
    const-string v0, "  SEC_AUDIO_SUPPORT_DUAL_SPEAKER="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13553
    const-string v0, "  mVolumeLimitOn="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13554
    const-string v0, "  mVolumeLimitValue="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13557
    const-string v0, "  mIsPttCallVolumeEnabled="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsPttCallVolumeEnabled:Z

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13560
    const-string v0, "  OneUIVersion="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/server/audio/AudioHelper;->getOneUIVersion(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13561
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->dumpScoClients(Ljava/io/PrintWriter;)V

    .line 13564
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->dump(Ljava/io/PrintWriter;)V

    .line 13567
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->dumpA2dpDevicesVolume(Ljava/io/PrintWriter;)V

    .line 13569
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    if-eqz v0, :cond_175

    .line 13570
    const-string v0, "  mVolumeMonitorValue="

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mVolumeMonitorValue:I

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13572
    :cond_175
    return-void
.end method

.method addSamsungIntentFilter(Landroid/content/IntentFilter;)V
    .registers 5
    .param p1, "intentFilter"    # Landroid/content/IntentFilter;

    .line 11184
    const-string v0, "android.intent.action.USER_STARTED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11185
    const-string v0, "android.intent.action.LOCALE_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11186
    const-string v0, "android.intent.action.ACTION_SHUTDOWN"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11189
    const-string v0, "com.samsung.intent.action.WIFI_DISPLAY_SOURCE_STATE"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11190
    const-string v0, "com.samsung.intent.action.WIFI_DISPLAY_VOLUME_SUPPORT_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11191
    const-string v0, "com.samsung.intent.action.GOOGLE_CAST_MIRRORING_CONNECTION_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11192
    const-string v0, "com.samsung.intent.action.WIFIDISPLAY_NOTI_CONNECTION_MODE"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11195
    const-string v0, "com.samsung.intent.action.SETTINGS_SOFT_RESET"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11198
    const-string v0, "com.sec.tms.audio.server"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11201
    const-string v0, "com.sec.factory.app.factorytest.FTA_ON"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11202
    const-string v0, "com.sec.factory.app.factorytest.FTA_OFF"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11204
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DISPLAY_VOLUME_CONTROL:Z

    if-eqz v0, :cond_40

    .line 11205
    const-string v0, "com.samsung.intent.action.DLNA_STATUS_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11208
    :cond_40
    const-string v0, "android.settings.ALL_SOUND_MUTE"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11211
    const-string v0, "com.samsung.intent.action.WB_AMR"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11214
    const-string v0, "android.intent.action.ACTION_SUBINFO_RECORD_UPDATED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11217
    const-string v0, "com.sec.media.action.AUDIOCORE_LOGGING"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11218
    const-string v0, "com.sec.android.intent.action.DHR_HQM_REFRESH_REQ"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11221
    const-string v0, "com.sec.media.action.mute_interval"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11222
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const/4 v1, 0x0

    const-string/jumbo v2, "mode_ringer_time_on"

    invoke-static {v0, v2, v1}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 11225
    const-string v0, "android.settings.MONO_AUDIO_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11228
    const-string v0, "com.android.phone.action.PERSONALISE_CALL_SOUND_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11231
    const-string/jumbo v0, "sec.app.policy.UPDATE.audio"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11234
    const-string v0, "android.bluetooth.headset.profile.action.CONNECTION_STATE_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11237
    const-string v0, "com.samsung.bluetooth.a2dp.intent.action.DUAL_PLAY_MODE_ENABLED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11238
    const-string v0, "android.bluetooth.a2dp.profile.action.ACTIVE_DEVICE_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11241
    const-string v0, "com.samsung.android.bluetooth.audiocast.action.device.CONNECTION_STATE_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11244
    const-string v0, "com.android.server.sepunion.semgoodcatchservice.GOOD_CATCH_STATE_CHANGED"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11247
    const-string v0, "com.sec.android.intent.action.SPLIT_SOUND"

    invoke-virtual {p1, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 11249
    return-void
.end method

.method public adjustStreamVolume(IIILjava/lang/String;)V
    .registers 15
    .param p1, "streamType"    # I
    .param p2, "direction"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;

    .line 2269
    const/16 v0, 0xa

    if-ne p1, v0, :cond_21

    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->canChangeAccessibilityVolume()Z

    move-result v0

    if-nez v0, :cond_21

    .line 2270
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Trying to call adjustStreamVolume() for a11y withoutCHANGE_ACCESSIBILITY_VOLUME / callingPackage="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2272
    return-void

    .line 2274
    :cond_21
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2275
    const-string v1, "android.permission.MODIFY_AUDIO_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2d

    const/4 v0, 0x1

    goto :goto_2e

    :cond_2d
    const/4 v0, 0x0

    :goto_2e
    move v8, v0

    .line 2277
    .local v8, "hasModifyAudioSettings":Z
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    const/4 v2, 0x1

    move-object v1, v7

    move v3, p1

    move v4, p2

    move v5, p3

    move-object v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    invoke-virtual {v0, v7}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 2279
    nop

    .line 2280
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/4 v9, 0x0

    .line 2279
    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/audio/AudioService;->adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 2281
    return-void
.end method

.method protected adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V
    .registers 36
    .param p1, "streamType"    # I
    .param p2, "direction"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;
    .param p6, "uid"    # I
    .param p7, "hasModifyAudioSettings"    # Z
    .param p8, "keyEventMode"    # I

    .line 2286
    move-object/from16 v9, p0

    move/from16 v0, p1

    move/from16 v1, p3

    move-object/from16 v10, p5

    move/from16 v11, p8

    const/4 v2, 0x6

    if-ne v0, v2, :cond_1f

    .line 2287
    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3}, Lcom/android/server/audio/AudioDeviceBroker;->isRemoteVolumeControlSupported()Z

    move-result v3

    if-nez v3, :cond_1f

    .line 2288
    const/4 v3, 0x0

    .line 2289
    .end local p2    # "direction":I
    .local v3, "direction":I
    const-string v4, "AS.AudioService"

    const-string v5, "adjustStreamVolume() connected BT doesn\'t support Remote Volume Control"

    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    move v12, v3

    goto :goto_21

    .line 2294
    .end local v3    # "direction":I
    .restart local p2    # "direction":I
    :cond_1f
    move/from16 v12, p2

    .end local p2    # "direction":I
    .local v12, "direction":I
    :goto_21
    invoke-direct {v9, v12, v10}, Lcom/android/server/audio/AudioService;->runSoundAssistant(ILjava/lang/String;)V

    .line 2297
    iget-boolean v3, v9, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v3, :cond_29

    .line 2298
    return-void

    .line 2301
    :cond_29
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "adjustStreamVolume() stream="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", dir="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", flags="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", caller="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "AS.AudioService"

    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2304
    invoke-direct {v9, v12}, Lcom/android/server/audio/AudioService;->ensureValidDirection(I)V

    .line 2305
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 2307
    invoke-direct {v9, v12}, Lcom/android/server/audio/AudioService;->isMuteAdjust(I)Z

    move-result v13

    .line 2310
    .local v13, "isMuteAdjust":Z
    if-eqz v13, :cond_6e

    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v0

    invoke-virtual {v9, v3}, Lcom/android/server/audio/AudioService;->isStreamAffectedByMute(I)Z

    move-result v3

    if-nez v3, :cond_6e

    .line 2311
    return-void

    .line 2322
    :cond_6e
    if-eqz v13, :cond_a5

    if-eqz v0, :cond_74

    if-ne v0, v2, :cond_a5

    :cond_74
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2325
    const-string v3, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v2, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_a5

    .line 2328
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "MODIFY_PHONE_STATE Permission Denial: adjustStreamVolume from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2329
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 2328
    const-string v3, "AS.AudioService"

    invoke-static {v3, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2330
    return-void

    .line 2335
    :cond_a5
    const/16 v2, 0xb

    if-ne v0, v2, :cond_da

    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2336
    const-string v4, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v3, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_da

    .line 2339
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "MODIFY_AUDIO_ROUTING Permission Denial: adjustStreamVolume from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2340
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 2339
    const-string v3, "AS.AudioService"

    invoke-static {v3, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2341
    return-void

    .line 2347
    :cond_da
    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v0

    .line 2349
    .local v3, "streamTypeAlias":I
    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v3

    .line 2351
    .local v4, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    invoke-virtual {v9, v3}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v15

    .line 2354
    .local v15, "device":I
    const/16 v14, 0xa

    const/4 v8, 0x3

    if-eq v0, v2, :cond_ed

    if-ne v0, v14, :cond_10e

    :cond_ed
    sget-object v2, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 2357
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v2, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_10e

    iget-boolean v2, v9, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    if-eqz v2, :cond_10e

    .line 2359
    const-string v2, "AS.AudioService"

    const-string v5, "Change to music stream when bluetooth ABS volume is supported"

    invoke-static {v2, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2360
    const/4 v0, 0x3

    .line 2361
    .end local p1    # "streamType":I
    .local v0, "streamType":I
    const/4 v3, 0x3

    .line 2362
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v2, v8

    move v7, v0

    move v6, v3

    move-object v5, v4

    goto :goto_111

    .line 2365
    .end local v0    # "streamType":I
    .restart local p1    # "streamType":I
    :cond_10e
    move v7, v0

    move v6, v3

    move-object v5, v4

    .end local v3    # "streamTypeAlias":I
    .end local v4    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local p1    # "streamType":I
    .local v5, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v6, "streamTypeAlias":I
    .local v7, "streamType":I
    :goto_111
    invoke-virtual {v5, v15}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v16

    .line 2366
    .local v16, "aliasIndex":I
    const/4 v0, 0x1

    .line 2371
    .local v0, "adjustVolume":Z
    sget-object v2, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_127

    and-int/lit8 v2, v1, 0x40

    if-eqz v2, :cond_127

    .line 2373
    return-void

    .line 2378
    :cond_127
    const/16 v2, 0x3e8

    move/from16 v3, p6

    if-ne v3, v2, :cond_13b

    .line 2379
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v2

    invoke-static/range {p6 .. p6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    invoke-static {v2, v4}, Landroid/os/UserHandle;->getUid(II)I

    move-result v2

    move v4, v2

    .end local p6    # "uid":I
    .local v2, "uid":I
    goto :goto_13c

    .line 2378
    .end local v2    # "uid":I
    .restart local p6    # "uid":I
    :cond_13b
    move v4, v3

    .line 2381
    .end local p6    # "uid":I
    .local v4, "uid":I
    :goto_13c
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    sget-object v3, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_OPS:[I

    aget v3, v3, v6

    move-object/from16 v14, p4

    invoke-virtual {v2, v3, v4, v14}, Landroid/app/AppOpsManager;->noteOp(IILjava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_14b

    .line 2383
    return-void

    .line 2388
    :cond_14b
    invoke-direct {v9, v6, v12, v1}, Lcom/android/server/audio/AudioService;->updateVolumePanelFlags(III)I

    move-result v17

    .line 2390
    .end local p3    # "flags":I
    .local v17, "flags":I
    move-object/from16 v1, p0

    move v2, v7

    move v3, v12

    move/from16 v21, v4

    .end local v4    # "uid":I
    .local v21, "uid":I
    move/from16 v4, v17

    move-object/from16 p1, v5

    .end local v5    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local p1, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    move-object/from16 v5, p4

    move v14, v6

    .end local v6    # "streamTypeAlias":I
    .local v14, "streamTypeAlias":I
    move-object/from16 v6, p5

    move v10, v7

    .end local v7    # "streamType":I
    .local v10, "streamType":I
    move/from16 v7, v21

    move/from16 v18, v0

    move v0, v8

    .end local v0    # "adjustVolume":Z
    .local v18, "adjustVolume":Z
    move v8, v15

    invoke-direct/range {v1 .. v8}, Lcom/android/server/audio/AudioService;->skipAdjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;II)Z

    move-result v1

    if-eqz v1, :cond_16c

    .line 2391
    return-void

    .line 2395
    :cond_16c
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mFMRadioRecordingChecker:Lcom/samsung/android/server/audio/FrequentWorker;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/FrequentWorker;->runOrSkip()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Boolean;

    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v8

    .line 2396
    .local v8, "isFMRadioRecording":Z
    if-eqz v8, :cond_1d0

    .line 2397
    and-int/lit8 v1, v17, 0x1

    if-eqz v1, :cond_18d

    .line 2398
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mKeyguardManager:Landroid/app/KeyguardManager;

    if-eqz v1, :cond_18d

    invoke-virtual {v1}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v1

    if-eqz v1, :cond_18d

    .line 2399
    and-int/lit8 v17, v17, -0x2

    move/from16 v1, v17

    goto :goto_18f

    .line 2403
    :cond_18d
    move/from16 v1, v17

    .end local v17    # "flags":I
    .local v1, "flags":I
    :goto_18f
    const/4 v2, 0x0

    .line 2404
    .end local v18    # "adjustVolume":Z
    .local v2, "adjustVolume":Z
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "adjustStreamVolume - FM Recording... change adjustVolume value("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v4, ")"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "AS.AudioService"

    invoke-static {v4, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2405
    const/high16 v3, 0x2000000

    if-eq v1, v3, :cond_1cf

    const/16 v3, 0x1011

    if-eq v1, v3, :cond_1cf

    if-nez v1, :cond_1b8

    if-eq v10, v0, :cond_1b8

    goto :goto_1cf

    .line 2411
    :cond_1b8
    and-int/lit8 v3, v1, 0x1

    if-eqz v3, :cond_1ca

    if-ne v14, v0, :cond_1ca

    .line 2412
    and-int/lit8 v17, v1, -0x2

    .line 2413
    .end local v1    # "flags":I
    .restart local v17    # "flags":I
    const-string v1, "AS.AudioService"

    const-string v3, "adjustStreamVolume - FM Recording... block Media volume bar"

    invoke-static {v1, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v18, v2

    goto :goto_1d0

    .line 2418
    .end local v17    # "flags":I
    .restart local v1    # "flags":I
    :cond_1ca
    move/from16 v17, v1

    move/from16 v18, v2

    goto :goto_1d0

    .line 2408
    :cond_1cf
    :goto_1cf
    return-void

    .line 2418
    .end local v1    # "flags":I
    .end local v2    # "adjustVolume":Z
    .restart local v17    # "flags":I
    .restart local v18    # "adjustVolume":Z
    :cond_1d0
    :goto_1d0
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v1

    .line 2419
    const/4 v2, 0x0

    :try_start_1d4
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    .line 2420
    monitor-exit v1
    :try_end_1d7
    .catchall {:try_start_1d4 .. :try_end_1d7} :catchall_59e

    .line 2422
    and-int/lit8 v1, v17, -0x21

    .line 2423
    .end local v17    # "flags":I
    .restart local v1    # "flags":I
    if-ne v14, v0, :cond_20a

    invoke-direct {v9, v15}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result v2

    if-eqz v2, :cond_20a

    .line 2424
    or-int/lit8 v1, v1, 0x20

    .line 2429
    iget v2, v9, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    if-ne v2, v0, :cond_1f8

    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    .line 2430
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1f8

    .line 2431
    invoke-direct {v9, v15}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v2

    .local v2, "step":I
    goto :goto_1fc

    .line 2433
    .end local v2    # "step":I
    :cond_1f8
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMaxIndex()I

    move-result v2

    .line 2435
    .restart local v2    # "step":I
    :goto_1fc
    if-eqz v16, :cond_205

    .line 2436
    move/from16 v16, v2

    move/from16 v22, v2

    move/from16 v23, v16

    goto :goto_214

    .line 2435
    :cond_205
    move/from16 v22, v2

    move/from16 v23, v16

    goto :goto_214

    .line 2440
    .end local v2    # "step":I
    :cond_20a
    const/16 v2, 0xa

    invoke-direct {v9, v2, v10, v14}, Lcom/android/server/audio/AudioService;->rescaleStep(III)I

    move-result v2

    move/from16 v22, v2

    move/from16 v23, v16

    .line 2445
    .end local v16    # "aliasIndex":I
    .local v22, "step":I
    .local v23, "aliasIndex":I
    :goto_214
    and-int/lit8 v2, v1, 0x2

    const/4 v7, 0x0

    const/4 v6, 0x1

    if-nez v2, :cond_224

    .line 2446
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getUiSoundsStreamType()I

    move-result v2

    if-ne v14, v2, :cond_221

    goto :goto_224

    :cond_221
    move v7, v1

    move v0, v6

    goto :goto_267

    .line 2447
    :cond_224
    :goto_224
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v5

    .line 2449
    .local v5, "ringerMode":I
    if-ne v5, v6, :cond_22e

    .line 2450
    and-int/lit8 v1, v1, -0x11

    move v4, v1

    goto :goto_22f

    .line 2449
    :cond_22e
    move v4, v1

    .line 2454
    .end local v1    # "flags":I
    .local v4, "flags":I
    :goto_22f
    nop

    .line 2455
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static/range {p1 .. p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v16

    .line 2454
    move-object/from16 v1, p0

    move/from16 v2, v23

    move v3, v12

    move/from16 p2, v4

    .end local v4    # "flags":I
    .local p2, "flags":I
    move/from16 v4, v22

    move/from16 v17, v5

    .end local v5    # "ringerMode":I
    .local v17, "ringerMode":I
    move/from16 v5, v16

    move v0, v6

    move-object/from16 v6, p4

    move/from16 v7, p2

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->checkForRingerModeChange(IIIZLjava/lang/String;I)I

    move-result v1

    .line 2456
    .local v1, "result":I
    and-int/lit8 v2, v1, 0x1

    if-eqz v2, :cond_250

    move v7, v0

    goto :goto_251

    :cond_250
    const/4 v7, 0x0

    :goto_251
    move/from16 v18, v7

    .line 2458
    and-int/lit16 v2, v1, 0x80

    if-eqz v2, :cond_25c

    .line 2459
    move/from16 v2, p2

    .end local p2    # "flags":I
    .local v2, "flags":I
    or-int/lit16 v2, v2, 0x80

    goto :goto_25e

    .line 2458
    .end local v2    # "flags":I
    .restart local p2    # "flags":I
    :cond_25c
    move/from16 v2, p2

    .line 2462
    .end local p2    # "flags":I
    .restart local v2    # "flags":I
    :goto_25e
    and-int/lit16 v3, v1, 0x800

    if-eqz v3, :cond_266

    .line 2463
    or-int/lit16 v2, v2, 0x800

    move v7, v2

    goto :goto_267

    .line 2462
    :cond_266
    move v7, v2

    .line 2469
    .end local v1    # "result":I
    .end local v2    # "flags":I
    .end local v17    # "ringerMode":I
    .local v7, "flags":I
    :goto_267
    invoke-direct {v9, v14, v7}, Lcom/android/server/audio/AudioService;->volumeAdjustmentAllowedByDnd(II)Z

    move-result v1

    if-nez v1, :cond_272

    .line 2470
    const/16 v18, 0x0

    move/from16 v25, v18

    goto :goto_274

    .line 2469
    :cond_272
    move/from16 v25, v18

    .line 2472
    .end local v18    # "adjustVolume":Z
    .local v25, "adjustVolume":Z
    :goto_274
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, v10

    invoke-virtual {v1, v15}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v6

    .line 2474
    .local v6, "oldIndex":I
    const/16 v5, 0x65

    const/4 v4, -0x1

    const/4 v3, 0x2

    if-eqz v25, :cond_4d0

    if-eqz v12, :cond_4d0

    if-eq v11, v3, :cond_4d0

    .line 2476
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService$AudioHandler;->removeMessages(I)V

    .line 2478
    if-eqz v13, :cond_2e0

    .line 2480
    if-ne v12, v5, :cond_297

    .line 2481
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static/range {p1 .. p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v1

    xor-int/2addr v1, v0

    .local v1, "state":Z
    goto :goto_29e

    .line 2483
    .end local v1    # "state":Z
    :cond_297
    const/16 v1, -0x64

    if-ne v12, v1, :cond_29d

    move v1, v0

    goto :goto_29e

    :cond_29d
    const/4 v1, 0x0

    .line 2485
    .restart local v1    # "state":Z
    :goto_29e
    const/4 v2, 0x3

    if-ne v14, v2, :cond_2a4

    .line 2486
    invoke-direct {v9, v1}, Lcom/android/server/audio/AudioService;->setSystemAudioMute(Z)V

    .line 2488
    :cond_2a4
    const/16 v16, 0x0

    move/from16 v2, v16

    .local v2, "stream":I
    :goto_2a8
    iget-object v5, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v5, v5

    if-ge v2, v5, :cond_2d1

    .line 2489
    sget-object v5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v5, v5, v2

    if-ne v14, v5, :cond_2cb

    .line 2490
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readCameraSoundForced()Z

    move-result v5

    if-eqz v5, :cond_2c4

    iget-object v5, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v2

    .line 2491
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getStreamType()I

    move-result v5

    const/4 v3, 0x7

    if-eq v5, v3, :cond_2cb

    .line 2493
    :cond_2c4
    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v2

    invoke-virtual {v3, v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 2488
    :cond_2cb
    add-int/lit8 v2, v2, 0x1

    const/4 v3, 0x2

    const/16 v5, 0x65

    goto :goto_2a8

    .line 2497
    .end local v1    # "state":Z
    .end local v2    # "stream":I
    :cond_2d1
    move-object/from16 v24, p1

    move v0, v4

    move/from16 p1, v7

    move/from16 v26, v10

    move v5, v15

    const/4 v2, 0x0

    move-object/from16 v10, p5

    move v7, v6

    move v6, v14

    goto/16 :goto_455

    :cond_2e0
    if-ne v12, v0, :cond_336

    add-int v1, v23, v22

    .line 2498
    invoke-direct {v9, v14, v1, v15}, Lcom/android/server/audio/AudioService;->checkSafeMediaVolume(III)Z

    move-result v1

    if-nez v1, :cond_336

    .line 2499
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "adjustStreamVolume() safe volume index = "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2500
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v1, v7}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 2501
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v1, :cond_327

    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    if-eqz v1, :cond_327

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/CoverHelper;->isCoverOpen()Z

    move-result v1

    if-nez v1, :cond_327

    .line 2502
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    invoke-virtual {v1, v0}, Lcom/samsung/android/server/audio/CoverHelper;->setCoverSafetyVolume(Z)V

    move-object/from16 v24, p1

    move v0, v4

    move/from16 p1, v7

    move/from16 v26, v10

    move v5, v15

    const/4 v2, 0x0

    move-object/from16 v10, p5

    move v7, v6

    move v6, v14

    goto/16 :goto_455

    .line 2501
    :cond_327
    move-object/from16 v24, p1

    move v0, v4

    move/from16 p1, v7

    move/from16 v26, v10

    move v5, v15

    const/4 v2, 0x0

    move-object/from16 v10, p5

    move v7, v6

    move v6, v14

    goto/16 :goto_455

    .line 2504
    :cond_336
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    const/high16 v5, 0x10000000

    if-eqz v1, :cond_35a

    if-ne v12, v4, :cond_35a

    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 2505
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeController;->isSafeVolumeDialogShowing()Z

    move-result v1

    if-eqz v1, :cond_35a

    .line 2506
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v1, v5}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 2507
    and-int/lit8 v1, v7, -0x2

    move-object/from16 v24, p1

    move v0, v4

    move v7, v6

    move/from16 v26, v10

    move v6, v14

    move v5, v15

    const/4 v2, 0x0

    move-object/from16 v10, p5

    .end local v7    # "flags":I
    .local v1, "flags":I
    goto/16 :goto_457

    .line 2508
    .end local v1    # "flags":I
    .restart local v7    # "flags":I
    :cond_35a
    invoke-direct {v9, v15}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v1

    if-nez v1, :cond_448

    mul-int v1, v12, v22

    .line 2509
    move-object/from16 v2, p1

    move/from16 v3, p7

    move/from16 v26, v10

    move-object/from16 v10, p5

    .end local v10    # "streamType":I
    .end local p1    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v2, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v26, "streamType":I
    invoke-virtual {v2, v1, v15, v10, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->adjustIndex(IILjava/lang/String;Z)Z

    move-result v1

    if-nez v1, :cond_382

    .line 2511
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v1

    if-eqz v1, :cond_377

    goto :goto_382

    :cond_377
    move-object/from16 v24, v2

    move v0, v4

    move/from16 p1, v7

    move v5, v15

    const/4 v2, 0x0

    move v7, v6

    move v6, v14

    goto/16 :goto_455

    .line 2514
    :cond_382
    :goto_382
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v1

    if-eqz v1, :cond_3fb

    .line 2516
    if-ne v12, v0, :cond_3ca

    .line 2519
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-nez v1, :cond_3a9

    const/4 v1, 0x5

    if-ne v14, v1, :cond_3a9

    .line 2521
    iget v1, v9, Lcom/android/server/audio/AudioService;->mRingerMode:I

    const/4 v5, 0x2

    if-ne v1, v5, :cond_3a1

    .line 2522
    const/4 v1, 0x0

    invoke-virtual {v2, v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    move-object/from16 v24, v2

    move/from16 p1, v7

    move v7, v6

    goto/16 :goto_400

    .line 2521
    :cond_3a1
    const/4 v1, 0x0

    move-object/from16 v24, v2

    move/from16 p1, v7

    move v7, v6

    goto/16 :goto_400

    .line 2519
    :cond_3a9
    const/4 v1, 0x0

    const/4 v5, 0x2

    .line 2525
    const/16 v16, 0x0

    move/from16 v0, v16

    .local v0, "stream":I
    :goto_3af
    iget-object v5, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v4, v5

    if-ge v0, v4, :cond_3c4

    .line 2526
    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v4, v0

    if-ne v14, v4, :cond_3bf

    .line 2527
    aget-object v4, v5, v0

    invoke-virtual {v4, v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 2525
    :cond_3bf
    add-int/lit8 v0, v0, 0x1

    const/4 v4, -0x1

    const/4 v5, 0x2

    goto :goto_3af

    :cond_3c4
    move-object/from16 v24, v2

    move/from16 p1, v7

    move v7, v6

    .end local v0    # "stream":I
    goto :goto_400

    .line 2535
    :cond_3ca
    const/4 v1, 0x0

    const/4 v4, -0x1

    if-ne v12, v4, :cond_3f5

    .line 2536
    iget-boolean v0, v9, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v0, :cond_3ef

    .line 2537
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v5, 0x12

    const/16 v17, 0x2

    const/16 v18, 0x0

    const/16 v20, 0x15e

    move v1, v5

    move-object/from16 v24, v2

    .end local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v24, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    move/from16 v2, v17

    const/4 v5, 0x2

    move v3, v14

    move v4, v7

    move-object/from16 v5, v18

    move/from16 p1, v7

    move v7, v6

    .end local v6    # "oldIndex":I
    .local v7, "oldIndex":I
    .local p1, "flags":I
    move/from16 v6, v20

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    goto :goto_400

    .line 2536
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local p1    # "flags":I
    .restart local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local v6    # "oldIndex":I
    .local v7, "flags":I
    :cond_3ef
    move-object/from16 v24, v2

    move/from16 p1, v7

    move v7, v6

    .end local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v6    # "oldIndex":I
    .local v7, "oldIndex":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local p1    # "flags":I
    goto :goto_400

    .line 2535
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local p1    # "flags":I
    .restart local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local v6    # "oldIndex":I
    .local v7, "flags":I
    :cond_3f5
    move-object/from16 v24, v2

    move/from16 p1, v7

    move v7, v6

    .end local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v6    # "oldIndex":I
    .local v7, "oldIndex":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local p1    # "flags":I
    goto :goto_400

    .line 2514
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local p1    # "flags":I
    .restart local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local v6    # "oldIndex":I
    .local v7, "flags":I
    :cond_3fb
    move-object/from16 v24, v2

    move/from16 p1, v7

    move v7, v6

    .line 2542
    .end local v2    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v6    # "oldIndex":I
    .local v7, "oldIndex":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local p1    # "flags":I
    :goto_400
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v0, :cond_431

    .line 2543
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    if-eqz v0, :cond_42e

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/CoverHelper;->isCoverSafetyVolume()Z

    move-result v0

    if-eqz v0, :cond_42e

    const/4 v0, -0x1

    if-ne v12, v0, :cond_42f

    .line 2544
    invoke-direct {v9, v15}, Lcom/android/server/audio/AudioService;->safeMediaVolumeIndex(I)I

    move-result v1

    if-ne v7, v1, :cond_42c

    .line 2545
    const-string v1, "AS.AudioService"

    const-string v2, "Remove the SafeVolumeWarning when cover is closed"

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2546
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 2548
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/samsung/android/server/audio/CoverHelper;->setCoverSafetyVolume(Z)V

    goto :goto_433

    .line 2544
    :cond_42c
    const/4 v2, 0x0

    goto :goto_433

    .line 2543
    :cond_42e
    const/4 v0, -0x1

    :cond_42f
    const/4 v2, 0x0

    goto :goto_433

    .line 2542
    :cond_431
    const/4 v0, -0x1

    const/4 v2, 0x0

    .line 2553
    :goto_433
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v3, 0x0

    const/16 v16, 0x2

    const/16 v18, 0x0

    const/16 v20, 0x0

    move v6, v14

    .end local v14    # "streamTypeAlias":I
    .local v6, "streamTypeAlias":I
    move-object v14, v1

    move v5, v15

    .end local v15    # "device":I
    .local v5, "device":I
    move v15, v3

    move/from16 v17, v5

    move-object/from16 v19, v24

    invoke-static/range {v14 .. v20}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    goto :goto_455

    .line 2508
    .end local v5    # "device":I
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v26    # "streamType":I
    .local v6, "oldIndex":I
    .local v7, "flags":I
    .restart local v10    # "streamType":I
    .restart local v14    # "streamTypeAlias":I
    .restart local v15    # "device":I
    .local p1, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :cond_448
    move-object/from16 v24, p1

    move v0, v4

    move/from16 p1, v7

    move/from16 v26, v10

    move v5, v15

    const/4 v2, 0x0

    move-object/from16 v10, p5

    move v7, v6

    move v6, v14

    .line 2562
    .end local v10    # "streamType":I
    .end local v14    # "streamTypeAlias":I
    .end local v15    # "device":I
    .restart local v5    # "device":I
    .local v6, "streamTypeAlias":I
    .local v7, "oldIndex":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local v26    # "streamType":I
    .local p1, "flags":I
    :goto_455
    move/from16 v1, p1

    .end local p1    # "flags":I
    .restart local v1    # "flags":I
    :goto_457
    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    move/from16 v14, v26

    .end local v26    # "streamType":I
    .local v14, "streamType":I
    aget-object v3, v3, v14

    invoke-virtual {v3, v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v3

    .line 2565
    .local v3, "newIndex":I
    const/4 v4, 0x3

    if-ne v6, v4, :cond_498

    sget-object v15, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 2566
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v15, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_498

    and-int/lit8 v2, v1, 0x40

    if-nez v2, :cond_498

    .line 2569
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "adjustStreamVolume: postSetAvrcpAbsoluteVolumeIndex index="

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v15, "stream="

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v15, "AS.AudioService"

    invoke-static {v15, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2573
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioDeviceBroker;->postSetAvrcpAbsoluteVolumeIndex(I)V

    .line 2580
    :cond_498
    const/high16 v2, 0x8000000

    if-ne v5, v2, :cond_4c5

    .line 2583
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getHearingAidStreamType()I

    move-result v2

    if-ne v14, v2, :cond_4c5

    .line 2585
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "adjustStreamVolume postSetHearingAidVolumeIndex index="

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v15, " stream="

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v15, "AS.AudioService"

    invoke-static {v15, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2588
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v2, v3, v14}, Lcom/android/server/audio/AudioDeviceBroker;->postSetHearingAidVolumeIndex(II)V

    .line 2593
    :cond_4c5
    if-ne v6, v4, :cond_4ce

    .line 2594
    invoke-virtual {v9, v14}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    move-result v2

    invoke-direct {v9, v7, v3, v2, v1}, Lcom/android/server/audio/AudioService;->setSystemAudioVolume(IIII)V

    .line 2598
    .end local v3    # "newIndex":I
    :cond_4ce
    move v15, v1

    goto :goto_4de

    .line 2474
    .end local v1    # "flags":I
    .end local v5    # "device":I
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v6, "oldIndex":I
    .local v7, "flags":I
    .restart local v10    # "streamType":I
    .local v14, "streamTypeAlias":I
    .restart local v15    # "device":I
    .local p1, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :cond_4d0
    move-object/from16 v24, p1

    move v0, v4

    move/from16 p1, v7

    move v5, v15

    const/4 v4, 0x3

    move v7, v6

    move v6, v14

    move v14, v10

    move-object/from16 v10, p5

    .line 2598
    .end local v10    # "streamType":I
    .end local v15    # "device":I
    .restart local v5    # "device":I
    .local v6, "streamTypeAlias":I
    .local v7, "oldIndex":I
    .local v14, "streamType":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local p1, "flags":I
    move/from16 v15, p1

    .end local p1    # "flags":I
    .local v15, "flags":I
    :goto_4de
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, v14

    invoke-virtual {v1, v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v3

    .line 2600
    .restart local v3    # "newIndex":I
    if-eqz v25, :cond_589

    .line 2601
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    .line 2602
    :try_start_4eb
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v2, :cond_57e

    .line 2604
    iget-boolean v2, v9, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    if-eqz v2, :cond_571

    iget-boolean v2, v9, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    if-eqz v2, :cond_571

    if-ne v6, v4, :cond_571

    .line 2608
    invoke-direct {v9, v5}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v2

    if-eqz v2, :cond_56e

    .line 2609
    const/4 v2, 0x0

    .line 2610
    .local v2, "keyCode":I
    if-eq v12, v0, :cond_510

    const/4 v0, 0x1

    if-eq v12, v0, :cond_50d

    const/16 v4, 0x65

    if-eq v12, v4, :cond_50a

    goto :goto_514

    .line 2618
    :cond_50a
    const/16 v2, 0xa4

    .line 2619
    goto :goto_514

    .line 2612
    :cond_50d
    const/16 v2, 0x18

    .line 2613
    goto :goto_514

    .line 2615
    :cond_510
    const/4 v0, 0x1

    const/16 v2, 0x19

    .line 2616
    nop

    .line 2623
    :goto_514
    if-eqz v2, :cond_56b

    .line 2624
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16
    :try_end_51a
    .catchall {:try_start_4eb .. :try_end_51a} :catchall_582

    .line 2626
    .local v16, "ident":J
    :try_start_51a
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v18

    .line 2627
    .local v18, "time":J
    if-eqz v11, :cond_54f

    if-eq v11, v0, :cond_547

    const/4 v4, 0x2

    if-eq v11, v4, :cond_53e

    .line 2639
    const-string v0, "AS.AudioService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
    :try_end_52c
    .catchall {:try_start_51a .. :try_end_52c} :catchall_563

    move/from16 p1, v5

    .end local v5    # "device":I
    .local p1, "device":I
    :try_start_52e
    const-string v5, "Invalid keyEventMode "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_55d

    .line 2636
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_53e
    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    const/4 v4, 0x0

    invoke-virtual {v0, v2, v4}, Landroid/hardware/hdmi/HdmiPlaybackClient;->sendVolumeKeyEvent(IZ)V

    .line 2637
    goto :goto_55d

    .line 2633
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_547
    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    invoke-virtual {v4, v2, v0}, Landroid/hardware/hdmi/HdmiPlaybackClient;->sendVolumeKeyEvent(IZ)V

    .line 2634
    goto :goto_55d

    .line 2629
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_54f
    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    invoke-virtual {v4, v2, v0}, Landroid/hardware/hdmi/HdmiPlaybackClient;->sendVolumeKeyEvent(IZ)V

    .line 2630
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    const/4 v4, 0x0

    invoke-virtual {v0, v2, v4}, Landroid/hardware/hdmi/HdmiPlaybackClient;->sendVolumeKeyEvent(IZ)V
    :try_end_55c
    .catchall {:try_start_52e .. :try_end_55c} :catchall_561

    .line 2631
    nop

    .line 2642
    .end local v18    # "time":J
    :goto_55d
    :try_start_55d
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2643
    goto :goto_573

    .line 2642
    :catchall_561
    move-exception v0

    goto :goto_566

    .end local p1    # "device":I
    .restart local v5    # "device":I
    :catchall_563
    move-exception v0

    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    :goto_566
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2643
    nop

    .end local v3    # "newIndex":I
    .end local v6    # "streamTypeAlias":I
    .end local v7    # "oldIndex":I
    .end local v8    # "isFMRadioRecording":Z
    .end local v12    # "direction":I
    .end local v13    # "isMuteAdjust":Z
    .end local v14    # "streamType":I
    .end local v15    # "flags":I
    .end local v21    # "uid":I
    .end local v22    # "step":I
    .end local v23    # "aliasIndex":I
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v25    # "adjustVolume":Z
    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "device":I
    .end local p4    # "callingPackage":Ljava/lang/String;
    .end local p5    # "caller":Ljava/lang/String;
    .end local p7    # "hasModifyAudioSettings":Z
    .end local p8    # "keyEventMode":I
    throw v0

    .line 2623
    .end local v16    # "ident":J
    .restart local v3    # "newIndex":I
    .restart local v5    # "device":I
    .restart local v6    # "streamTypeAlias":I
    .restart local v7    # "oldIndex":I
    .restart local v8    # "isFMRadioRecording":Z
    .restart local v12    # "direction":I
    .restart local v13    # "isMuteAdjust":Z
    .restart local v14    # "streamType":I
    .restart local v15    # "flags":I
    .restart local v21    # "uid":I
    .restart local v22    # "step":I
    .restart local v23    # "aliasIndex":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .restart local v25    # "adjustVolume":Z
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p4    # "callingPackage":Ljava/lang/String;
    .restart local p5    # "caller":Ljava/lang/String;
    .restart local p7    # "hasModifyAudioSettings":Z
    .restart local p8    # "keyEventMode":I
    :cond_56b
    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    goto :goto_573

    .line 2608
    .end local v2    # "keyCode":I
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_56e
    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    goto :goto_573

    .line 2604
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_571
    move/from16 p1, v5

    .line 2647
    .end local v5    # "device":I
    .restart local p1    # "device":I
    :goto_573
    const/4 v0, 0x3

    if-ne v6, v0, :cond_580

    if-ne v7, v3, :cond_57a

    if-eqz v13, :cond_580

    .line 2649
    :cond_57a
    invoke-direct {v9, v13}, Lcom/android/server/audio/AudioService;->maybeSendSystemAudioStatusCommand(Z)V

    goto :goto_580

    .line 2602
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_57e
    move/from16 p1, v5

    .line 2652
    .end local v5    # "device":I
    .restart local p1    # "device":I
    :cond_580
    :goto_580
    monitor-exit v1

    goto :goto_58b

    .end local p1    # "device":I
    .restart local v5    # "device":I
    :catchall_582
    move-exception v0

    move/from16 p1, v5

    .end local v5    # "device":I
    .restart local p1    # "device":I
    :goto_585
    monitor-exit v1
    :try_end_586
    .catchall {:try_start_55d .. :try_end_586} :catchall_587

    throw v0

    :catchall_587
    move-exception v0

    goto :goto_585

    .line 2600
    .end local p1    # "device":I
    .restart local v5    # "device":I
    :cond_589
    move/from16 p1, v5

    .line 2654
    .end local v5    # "device":I
    .restart local p1    # "device":I
    :goto_58b
    move-object/from16 v1, p0

    move v2, v14

    move/from16 v16, v3

    .end local v3    # "newIndex":I
    .local v16, "newIndex":I
    move v3, v7

    move/from16 v4, v16

    move/from16 v19, p1

    .end local p1    # "device":I
    .local v19, "device":I
    move v5, v15

    move/from16 v20, v6

    .end local v6    # "streamTypeAlias":I
    .local v20, "streamTypeAlias":I
    move/from16 v6, v19

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 2655
    return-void

    .line 2420
    .end local v7    # "oldIndex":I
    .end local v19    # "device":I
    .end local v20    # "streamTypeAlias":I
    .end local v22    # "step":I
    .end local v23    # "aliasIndex":I
    .end local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .end local v25    # "adjustVolume":Z
    .restart local v10    # "streamType":I
    .local v14, "streamTypeAlias":I
    .local v15, "device":I
    .local v16, "aliasIndex":I
    .local v17, "flags":I
    .local v18, "adjustVolume":Z
    .local p1, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :catchall_59e
    move-exception v0

    move-object/from16 v24, p1

    move/from16 v20, v14

    move/from16 v19, v15

    move v14, v10

    move-object/from16 v10, p5

    .end local v10    # "streamType":I
    .end local v15    # "device":I
    .end local p1    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    .local v14, "streamType":I
    .restart local v19    # "device":I
    .restart local v20    # "streamTypeAlias":I
    .restart local v24    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    :goto_5a8
    :try_start_5a8
    monitor-exit v1
    :try_end_5a9
    .catchall {:try_start_5a8 .. :try_end_5a9} :catchall_5aa

    throw v0

    :catchall_5aa
    move-exception v0

    goto :goto_5a8
.end method

.method public adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;)V
    .registers 16
    .param p1, "direction"    # I
    .param p2, "suggestedStreamType"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;

    .line 2162
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2163
    const-string v1, "android.permission.MODIFY_AUDIO_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    :goto_d
    move v8, v0

    .line 2165
    .local v8, "hasModifyAudioSettings":Z
    nop

    .line 2166
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/4 v9, 0x0

    .line 2165
    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-direct/range {v1 .. v9}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 2167
    return-void
.end method

.method public avrcpSupportsAbsoluteVolume(Ljava/lang/String;Z)V
    .registers 14
    .param p1, "address"    # Ljava/lang/String;
    .param p2, "support"    # Z

    .line 7368
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "avrcpSupportsAbsoluteVolume addr="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " support="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 7372
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p2, p1}, Lcom/android/server/audio/AudioDeviceBroker;->setAvrcpAbsoluteVolumeSupported(ZLjava/lang/String;)V

    .line 7374
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isAvrcpAbsoluteVolumeSupportedForActiveDevice()Z

    move-result p2

    .line 7377
    iput-boolean p2, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 7378
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/AudioDeviceBroker;->setAvrcpAbsoluteVolumeSupported(Z)V

    .line 7380
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    const/4 v2, 0x3

    aget-object v6, v0, v2

    const/4 v2, 0x0

    const/4 v3, 0x2

    const/16 v4, 0x80

    const/4 v5, 0x0

    const/4 v7, 0x0

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 7385
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_TRANSITION_EFFECT:Z

    if-eqz v0, :cond_4c

    .line 7386
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->postAvrcpSupportsAbsoluteVolumeToAudioServer(Ljava/lang/String;Z)V

    .line 7389
    :cond_4c
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->AVC_AFFECTED_STREAMS:[I

    array-length v1, v0

    const/4 v2, 0x0

    :goto_50
    if-ge v2, v1, :cond_66

    aget v3, v0, v2

    .line 7390
    .local v3, "stream":I
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v5, 0x0

    const/4 v6, 0x2

    const/16 v7, 0x80

    const/4 v8, 0x0

    iget-object v9, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v9, v9, v3

    const/4 v10, 0x0

    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 7389
    .end local v3    # "stream":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_50

    .line 7395
    :cond_66
    return-void
.end method

.method checkAudioSettingsPermission(Ljava/lang/String;)Z
    .registers 4
    .param p1, "method"    # Ljava/lang/String;

    .line 5458
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_AUDIO_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    .line 5460
    const/4 v0, 0x1

    return v0

    .line 5462
    :cond_c
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Audio Settings Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5463
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5464
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 5465
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5466
    const/4 v1, 0x0

    return v1
.end method

.method checkMusicActive(ILjava/lang/String;)V
    .registers 11
    .param p1, "deviceType"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 7420
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 7421
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0xb

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const v7, 0xea60

    move-object v6, p2

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 7429
    :cond_1a
    return-void
.end method

.method public checkRunningBackground(Ljava/lang/String;)Z
    .registers 8
    .param p1, "name"    # Ljava/lang/String;

    .line 14014
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getVisibleTasks()Ljava/util/List;

    move-result-object v0

    .line 14015
    .local v0, "taskInfoList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    .line 14016
    .local v1, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_9
    if-ge v2, v1, :cond_38

    .line 14017
    invoke-interface {v0, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/ActivityManager$RunningTaskInfo;

    iget-object v3, v3, Landroid/app/ActivityManager$RunningTaskInfo;->topActivity:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    .line 14018
    .local v3, "taskTopActivity":Ljava/lang/String;
    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_35

    .line 14019
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "checkRunningBackground : visible Tasks ="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "AS.AudioService"

    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14020
    const/4 v4, 0x0

    return v4

    .line 14016
    .end local v3    # "taskTopActivity":Ljava/lang/String;
    :cond_35
    add-int/lit8 v2, v2, 0x1

    goto :goto_9

    .line 14023
    .end local v2    # "i":I
    :cond_38
    const/4 v2, 0x1

    return v2
.end method

.method public disableRingtoneSync(I)V
    .registers 8
    .param p1, "userId"    # I

    .line 9437
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 9438
    .local v0, "callingUserId":I
    if-eq v0, p1, :cond_f

    .line 9439
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const-string v3, "disable sound settings syncing for another profile"

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9442
    :cond_f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 9445
    .local v1, "token":J
    :try_start_13
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v4, "sync_parent_sounds"

    const/4 v5, 0x0

    invoke-static {v3, v4, v5, p1}, Landroid/provider/Settings$Secure;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z
    :try_end_1c
    .catchall {:try_start_13 .. :try_end_1c} :catchall_21

    .line 9448
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9449
    nop

    .line 9450
    return-void

    .line 9448
    :catchall_21
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9449
    throw v3
.end method

.method public disableSafeMediaVolume(Ljava/lang/String;)V
    .registers 12
    .param p1, "callingPackage"    # Ljava/lang/String;

    .line 8096
    const-string v0, "disable the safe media volume"

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 8097
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    monitor-enter v0

    .line 8098
    const/4 v1, 0x0

    :try_start_9
    invoke-direct {p0, v1, p1}, Lcom/android/server/audio/AudioService;->setSafeMediaVolumeEnabled(ZLjava/lang/String;)V

    .line 8099
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    if-eqz v2, :cond_86

    .line 8101
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v2, v2, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mStreamType:I

    const/4 v3, 0x3

    if-ne v2, v3, :cond_34

    sget-object v2, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v3, v3, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mDevice:I

    .line 8102
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_34

    .line 8103
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    if-eqz v2, :cond_34

    .line 8104
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v3, v3, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mIndex:I

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioDeviceBroker;->postSetAvrcpAbsoluteVolumeIndex(I)V

    .line 8108
    :cond_34
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v4, v2, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mStreamType:I

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v5, v2, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mIndex:I

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v6, v2, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mFlags:I

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v7, v2, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mDevice:I

    const/4 v9, 0x1

    move-object v3, p0

    move-object v8, p1

    invoke-direct/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->onSetStreamVolume(IIIILjava/lang/String;Z)V

    .line 8114
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.media.VOLUME_CHANGED_ACTION"

    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8115
    .local v2, "intent":Landroid/content/Intent;
    const-string v3, "android.media.EXTRA_VOLUME_STREAM_TYPE"

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v4, v4, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mStreamType:I

    invoke-virtual {v2, v3, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 8116
    const-string v3, "android.media.EXTRA_VOLUME_STREAM_VALUE"

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v4, v4, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mIndex:I

    div-int/lit8 v4, v4, 0xa

    invoke-virtual {v2, v3, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 8117
    const-string v3, "android.media.EXTRA_VOLUME_SHOW_UI"

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v4, v4, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mFlags:I

    const/4 v5, 0x1

    and-int/2addr v4, v5

    if-eqz v4, :cond_70

    move v1, v5

    :cond_70
    invoke-virtual {v2, v3, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 8119
    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 8120
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v3, v3, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mStreamType:I

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    iget v4, v4, Lcom/android/server/audio/AudioService$StreamVolumeCommand;->mFlags:I

    invoke-virtual {v1, v3, v4}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 8123
    .end local v2    # "intent":Landroid/content/Intent;
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    .line 8125
    :cond_86
    monitor-exit v0

    .line 8126
    return-void

    .line 8125
    :catchall_88
    move-exception v1

    monitor-exit v0
    :try_end_8a
    .catchall {:try_start_9 .. :try_end_8a} :catchall_88

    throw v1
.end method

.method public dismissVolumePanel()V
    .registers 2

    .line 12085
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeController;->postDismiss()V

    .line 12086
    return-void
.end method

.method public dispatchFocusChange(Landroid/media/AudioFocusInfo;ILandroid/media/audiopolicy/IAudioPolicyCallback;)I
    .registers 7
    .param p1, "afi"    # Landroid/media/AudioFocusInfo;
    .param p2, "focusChange"    # I
    .param p3, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9912
    if-eqz p1, :cond_2e

    .line 9915
    if-eqz p3, :cond_26

    .line 9918
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9919
    :try_start_7
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface {p3}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1b

    .line 9922
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/audio/MediaFocusControl;->dispatchFocusChange(Landroid/media/AudioFocusInfo;I)I

    move-result v1

    monitor-exit v0

    return v1

    .line 9920
    :cond_1b
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Unregistered AudioPolicy for focus dispatch"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "afi":Landroid/media/AudioFocusInfo;
    .end local p2    # "focusChange":I
    .end local p3    # "pcb":Landroid/media/audiopolicy/IAudioPolicyCallback;
    throw v1

    .line 9923
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "afi":Landroid/media/AudioFocusInfo;
    .restart local p2    # "focusChange":I
    .restart local p3    # "pcb":Landroid/media/audiopolicy/IAudioPolicyCallback;
    :catchall_23
    move-exception v1

    monitor-exit v0
    :try_end_25
    .catchall {:try_start_7 .. :try_end_25} :catchall_23

    throw v1

    .line 9916
    :cond_26
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null AudioPolicy callback"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9913
    :cond_2e
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null AudioFocusInfo"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .line 8448
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "AS.AudioService"

    invoke-static {v0, v1, p2}, Lcom/android/internal/util/DumpUtils;->checkDumpPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v0

    if-nez v0, :cond_b

    return-void

    .line 8450
    :cond_b
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_CUSTOM_SHELL_COMMAND:Z

    if-eqz v0, :cond_16

    .line 8451
    invoke-direct {p0, p2, p3}, Lcom/android/server/audio/AudioService;->handleCustomCommand(Ljava/io/PrintWriter;[Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_16

    return-void

    .line 8454
    :cond_16
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const-string v1, "  "

    if-eqz v0, :cond_2c

    .line 8455
    const-string v0, "\nMessage handler (watch for unhandled messages):"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8456
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    new-instance v2, Landroid/util/PrintWriterPrinter;

    invoke-direct {v2, p2}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v0, v2, v1}, Lcom/android/server/audio/AudioService$AudioHandler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    goto :goto_31

    .line 8458
    :cond_2c
    const-string v0, "\nMessage handler is null"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8460
    :goto_31
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/MediaFocusControl;->dump(Ljava/io/PrintWriter;)V

    .line 8461
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->dumpStreamStates(Ljava/io/PrintWriter;)V

    .line 8462
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->dumpVolumeGroups(Ljava/io/PrintWriter;)V

    .line 8463
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->dumpRingerMode(Ljava/io/PrintWriter;)V

    .line 8464
    const-string v0, "\nAudio routes:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8465
    const-string v0, "  mMainType=0x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 8466
    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->getCurAudioRoutes()Landroid/media/AudioRoutesInfo;

    move-result-object v0

    iget v0, v0, Landroid/media/AudioRoutesInfo;->mainType:I

    .line 8465
    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8467
    const-string v0, "  mBluetoothName="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->getCurAudioRoutes()Landroid/media/AudioRoutesInfo;

    move-result-object v0

    iget-object v0, v0, Landroid/media/AudioRoutesInfo;->bluetoothName:Ljava/lang/CharSequence;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8469
    const-string v0, "\nOther state:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8470
    const-string v0, "  mVolumeController="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8471
    const-string v0, "  mSafeMediaVolumeState="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8472
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeState:I

    invoke-static {v0}, Lcom/android/server/audio/AudioService;->safeMediaVolumeStateToString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8473
    const-string v0, "  mSafeMediaVolumeIndex="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeIndex:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 8474
    const-string v0, "  mSafeUsbMediaVolumeIndex="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeIndex:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 8475
    const-string v0, "  mSafeUsbMediaVolumeDbfs="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeUsbMediaVolumeDbfs:F

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(F)V

    .line 8476
    const-string v0, "  sIndependentA11yVolume="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8477
    const-string v0, "  mPendingVolumeCommand="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPendingVolumeCommand:Lcom/android/server/audio/AudioService$StreamVolumeCommand;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8478
    const-string v0, "  mMusicActiveMs="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mMusicActiveMs:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 8479
    const-string v0, "  mMcc="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, Lcom/android/server/audio/AudioService;->mMcc:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 8480
    const-string v0, "  mCameraSoundForced="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8481
    const-string v0, "  mHasVibrator="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8482
    const-string v0, "  mVolumePolicy="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8483
    const-string v0, "  mAvrcpAbsVolSupported="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8484
    const-string v0, "  mIsSingleVolume="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8485
    const-string v0, "  mUseFixedVolume="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8486
    const-string v0, "  mFixedVolumeDevices="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8487
    const-string v0, "  mExtVolumeController="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8488
    const-string v0, "  mHdmiCecSink="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8489
    const-string v0, "  mHdmiAudioSystemClient="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8490
    const-string v0, "  mHdmiPlaybackClient="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8491
    const-string v0, "  mHdmiTvClient="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 8492
    const-string v0, "  mHdmiSystemAudioSupported="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8493
    const-string v0, "  mHdmiCecVolumeControlEnabled="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8494
    const-string v0, "  mIsCallScreeningModeSupported="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 8495
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mic mute FromSwitch="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " FromRestrictions="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " FromApi="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " from system="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8500
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->dumpAudioPolicies(Ljava/io/PrintWriter;)V

    .line 8501
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 8502
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/PlaybackActivityMonitor;->dump(Ljava/io/PrintWriter;)V

    .line 8503
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/RecordingActivityMonitor;->dump(Ljava/io/PrintWriter;)V

    .line 8505
    const-string v0, "\nAudioDeviceBroker:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8506
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p2, v1}, Lcom/android/server/audio/AudioDeviceBroker;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 8507
    const-string v0, "\nSoundEffects:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8508
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    invoke-virtual {v0, p2, v1}, Lcom/android/server/audio/SoundEffectsHelper;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 8510
    const-string v0, "\n"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8511
    const-string v1, "\nEvent logs:"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8512
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 8513
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8514
    sget-object v1, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 8515
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8516
    sget-object v1, Lcom/android/server/audio/AudioService;->sForceUseLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 8517
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8518
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioEventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 8519
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8520
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->dumpSupportedSystemUsage(Ljava/io/PrintWriter;)V

    .line 8523
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8524
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->addSamsungExtraDump(Ljava/io/PrintWriter;)V

    .line 8526
    return-void
.end method

.method public forceRemoteSubmixFullVolume(ZLandroid/os/IBinder;)V
    .registers 8
    .param p1, "startForcing"    # Z
    .param p2, "cb"    # Landroid/os/IBinder;

    .line 3478
    if-nez p2, :cond_3

    .line 3479
    return-void

    .line 3481
    :cond_3
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.CAPTURE_AUDIO_OUTPUT"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_15

    .line 3483
    const-string v0, "AS.AudioService"

    const-string v1, "Trying to call forceRemoteSubmixFullVolume() without CAPTURE_AUDIO_OUTPUT"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3484
    return-void

    .line 3486
    :cond_15
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    monitor-enter v0

    .line 3487
    const/4 v1, 0x0

    .line 3488
    .local v1, "applyRequired":Z
    const v2, 0x8000

    if-eqz p1, :cond_52

    .line 3489
    :try_start_1e
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->hasRmtSbmxFullVolDeathHandlerFor(Landroid/os/IBinder;)Z

    move-result v3

    if-nez v3, :cond_77

    .line 3490
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    new-instance v4, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;

    invoke-direct {v4, p0, p2}, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;)V

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3491
    invoke-static {}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->isWifiDisplayConnected()Z

    move-result v3

    if-nez v3, :cond_4b

    .line 3492
    iget v3, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    if-nez v3, :cond_4b

    .line 3493
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 3494
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v3, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 3495
    const/4 v1, 0x1

    .line 3498
    :cond_4b
    iget v2, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    add-int/lit8 v2, v2, 0x1

    iput v2, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    goto :goto_77

    .line 3501
    :cond_52
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->discardRmtSbmxFullVolDeathHandlerFor(Landroid/os/IBinder;)Z

    move-result v3

    if-eqz v3, :cond_77

    iget v3, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    if-lez v3, :cond_77

    .line 3502
    iget v3, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    add-int/lit8 v3, v3, -0x1

    iput v3, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 3503
    if-nez v3, :cond_77

    .line 3504
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 3505
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v3, v2}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 3506
    const/4 v1, 0x1

    .line 3510
    :cond_77
    :goto_77
    if-eqz v1, :cond_84

    .line 3512
    const/4 v2, 0x3

    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->checkAllFixedVolumeDevices(I)V

    .line 3513
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v3, v2

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyAllVolumes()V

    .line 3515
    .end local v1    # "applyRequired":Z
    :cond_84
    monitor-exit v0

    .line 3516
    return-void

    .line 3515
    :catchall_86
    move-exception v1

    monitor-exit v0
    :try_end_88
    .catchall {:try_start_1e .. :try_end_88} :catchall_86

    throw v1
.end method

.method public forceVolumeControlStream(ILandroid/os/IBinder;)V
    .registers 8
    .param p1, "streamType"    # I
    .param p2, "cb"    # Landroid/os/IBinder;

    .line 3189
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_b

    .line 3191
    return-void

    .line 3193
    :cond_b
    const/4 v0, 0x1

    new-array v1, v0, [Ljava/lang/Object;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    const-string/jumbo v2, "forceVolumeControlStream(%d)"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3194
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    monitor-enter v1

    .line 3195
    :try_start_24
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v2

    if-eqz v2, :cond_31

    .line 3196
    iput p1, p0, Lcom/android/server/audio/AudioService;->mVolumeControllerStream:I

    .line 3197
    const/16 v2, 0x2713

    if-ne p1, v2, :cond_31

    .line 3198
    const/4 p1, 0x3

    .line 3202
    :cond_31
    iget v2, p0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    const/4 v4, -0x1

    if-eq v2, v4, :cond_3a

    if-eq p1, v4, :cond_3a

    .line 3203
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    .line 3205
    :cond_3a
    iput p1, p0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    .line 3206
    if-ne p1, v4, :cond_4d

    .line 3207
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    if-eqz v0, :cond_4a

    .line 3208
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$ForceControlStreamClient;->release()V

    .line 3209
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    .line 3211
    :cond_4a
    iput-boolean v3, p0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    goto :goto_8a

    .line 3213
    :cond_4d
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    if-nez v0, :cond_59

    .line 3214
    new-instance v0, Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    invoke-direct {v0, p0, p2}, Lcom/android/server/audio/AudioService$ForceControlStreamClient;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    goto :goto_8a

    .line 3216
    :cond_59
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$ForceControlStreamClient;->getBinder()Landroid/os/IBinder;

    move-result-object v0

    if-ne v0, p2, :cond_7e

    .line 3217
    const-string v0, "AS.AudioService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "forceVolumeControlStream cb:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " is already linked."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8a

    .line 3219
    :cond_7e
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$ForceControlStreamClient;->release()V

    .line 3220
    new-instance v0, Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    invoke-direct {v0, p0, p2}, Lcom/android/server/audio/AudioService$ForceControlStreamClient;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$ForceControlStreamClient;

    .line 3224
    :goto_8a
    monitor-exit v1

    .line 3225
    return-void

    .line 3224
    :catchall_8c
    move-exception v0

    monitor-exit v1
    :try_end_8e
    .catchall {:try_start_24 .. :try_end_8e} :catchall_8c

    throw v0
.end method

.method public getA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;I)I
    .registers 6
    .param p1, "device"    # Landroid/bluetooth/BluetoothDevice;
    .param p2, "streamType"    # I

    .line 14140
    if-eqz p1, :cond_29

    .line 14144
    const/4 v0, -0x1

    .line 14145
    .local v0, "index":I
    const/4 v1, 0x3

    if-ne p2, v1, :cond_17

    .line 14146
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v1, p1}, Lcom/android/server/audio/AudioDeviceBroker;->getA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;)I

    move-result v0

    .line 14147
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p2

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v1

    if-eqz v1, :cond_17

    .line 14148
    const/4 v0, 0x0

    .line 14152
    :cond_17
    const/4 v1, -0x1

    if-ne v0, v1, :cond_28

    .line 14153
    const-string v1, "AS.AudioService"

    const-string v2, "Cannot find bluetooth device address"

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14154
    const/16 v1, 0x80

    invoke-virtual {p0, p2, v1}, Lcom/android/server/audio/AudioService;->getFineVolume(II)I

    move-result v1

    return v1

    .line 14156
    :cond_28
    return v0

    .line 14141
    .end local v0    # "index":I
    :cond_29
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid device "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getActivePlaybackConfigurations()Ljava/util/List;
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/media/AudioPlaybackConfiguration;",
            ">;"
        }
    .end annotation

    .line 9473
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9474
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    .line 9476
    .local v0, "isPrivileged":Z
    :goto_d
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->getActivePlaybackConfigurations(Z)Ljava/util/List;

    move-result-object v1

    return-object v1
.end method

.method public getActivePlaybackConfigurationsInternal()Ljava/util/List;
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/media/AudioPlaybackConfiguration;",
            ">;"
        }
    .end annotation

    .line 13927
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->getActivePlaybackConfigurations(Z)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getActiveRecordingConfigurations()Ljava/util/List;
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/media/AudioRecordingConfiguration;",
            ">;"
        }
    .end annotation

    .line 9406
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9407
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    .line 9409
    .local v0, "isPrivileged":Z
    :goto_d
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/audio/RecordingActivityMonitor;->getActiveRecordingConfigurations(Z)Ljava/util/List;

    move-result-object v1

    return-object v1
.end method

.method public getActiveRecordingConfigurationsInternal()Ljava/util/List;
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/media/AudioRecordingConfiguration;",
            ">;"
        }
    .end annotation

    .line 13931
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/audio/RecordingActivityMonitor;->getActiveRecordingConfigurations(Z)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getAllowedCapturePolicy()I
    .registers 5

    .line 9535
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 9536
    .local v0, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 9537
    .local v1, "identity":J
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v3, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->getAllowedCapturePolicy(I)I

    move-result v3

    .line 9538
    .local v3, "capturePolicy":I
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9539
    return v3
.end method

.method public getAppDevice(I)I
    .registers 4
    .param p1, "uid"    # I

    .line 11973
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "GetAppDevice, uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11974
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    move-result v0

    return v0
.end method

.method public getAppMode()Ljava/lang/String;
    .registers 2

    .line 10273
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAppMode:Ljava/lang/String;

    return-object v0
.end method

.method public getAppVolume(I)I
    .registers 4
    .param p1, "uid"    # I

    .line 11995
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "getAppVolume, uid:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11996
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppVolume(I)I

    move-result v0

    return v0
.end method

.method getApplicationUidListSetCallMode()Ljava/lang/String;
    .registers 8

    .line 12715
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_33

    .line 12718
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "MODIFY_PHONE_STATE Permission Denial from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12719
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12718
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12720
    const-string v0, ""

    return-object v0

    .line 12722
    :cond_33
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 12723
    .local v0, "builder":Ljava/lang/StringBuilder;
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v1, v1, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 12724
    :try_start_3d
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_43
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_78

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 12725
    .local v3, "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    # getter for: Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I
    invoke-static {v3}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->access$13100(Lcom/android/server/audio/AudioService$SetModeDeathHandler;)I

    move-result v4

    const/4 v5, 0x3

    if-ne v4, v5, :cond_77

    .line 12726
    invoke-virtual {v3}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getUid()I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    .line 12727
    .local v4, "uid":I
    const/16 v5, 0x2710

    if-ge v4, v5, :cond_63

    .line 12729
    goto :goto_43

    .line 12731
    :cond_63
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, ";"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12733
    .end local v3    # "hdlr":Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .end local v4    # "uid":I
    :cond_77
    goto :goto_43

    .line 12734
    :cond_78
    monitor-exit v1
    :try_end_79
    .catchall {:try_start_3d .. :try_end_79} :catchall_7e

    .line 12735
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 12734
    :catchall_7e
    move-exception v2

    :try_start_7f
    monitor-exit v1
    :try_end_80
    .catchall {:try_start_7f .. :try_end_80} :catchall_7e

    throw v2
.end method

.method getApplicationUidListUsingAudio()Ljava/lang/String;
    .registers 10

    .line 12688
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_33

    .line 12691
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "MODIFY_PHONE_STATE Permission Denial from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12692
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12691
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12693
    const-string v0, ""

    return-object v0

    .line 12695
    :cond_33
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 12696
    .local v0, "builder":Ljava/lang/StringBuilder;
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    const/4 v2, 0x1

    invoke-virtual {v1, v2}, Lcom/android/server/audio/PlaybackActivityMonitor;->getActivePlaybackConfigurations(Z)Ljava/util/List;

    move-result-object v1

    .line 12697
    .local v1, "list":Ljava/util/List;, "Ljava/util/List<Landroid/media/AudioPlaybackConfiguration;>;"
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_43
    :goto_43
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_7f

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/media/AudioPlaybackConfiguration;

    .line 12698
    .local v4, "conf":Landroid/media/AudioPlaybackConfiguration;
    invoke-virtual {v4}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    move-result-object v5

    .line 12699
    .local v5, "attr":Landroid/media/AudioAttributes;
    invoke-static {v5}, Landroid/media/AudioAttributes;->toLegacyStreamType(Landroid/media/AudioAttributes;)I

    move-result v6

    const/4 v7, 0x3

    if-ne v6, v7, :cond_43

    .line 12700
    invoke-virtual {v4}, Landroid/media/AudioPlaybackConfiguration;->getPlayerState()I

    move-result v6

    if-ne v6, v2, :cond_61

    .line 12701
    goto :goto_43

    .line 12704
    :cond_61
    invoke-virtual {v4}, Landroid/media/AudioPlaybackConfiguration;->getClientUid()I

    move-result v6

    .line 12705
    .local v6, "uid":I
    const/16 v7, 0x2710

    if-ge v6, v7, :cond_6a

    .line 12707
    goto :goto_43

    .line 12709
    :cond_6a
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, ";"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12710
    .end local v4    # "conf":Landroid/media/AudioPlaybackConfiguration;
    .end local v5    # "attr":Landroid/media/AudioAttributes;
    .end local v6    # "uid":I
    goto :goto_43

    .line 12711
    :cond_7f
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    return-object v2
.end method

.method public getAudioProductStrategies()Ljava/util/List;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/media/audiopolicy/AudioProductStrategy;",
            ">;"
        }
    .end annotation

    .line 1423
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 1424
    invoke-static {}, Landroid/media/audiopolicy/AudioProductStrategy;->getAudioProductStrategies()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getAudioServiceConfig(Ljava/lang/String;)Ljava/lang/String;
    .registers 8
    .param p1, "keys"    # Ljava/lang/String;

    .line 12090
    const/4 v0, 0x0

    .line 12091
    .local v0, "result":Ljava/lang/String;
    if-nez p1, :cond_5

    const/4 v1, 0x0

    return-object v1

    .line 12093
    :cond_5
    const-string/jumbo v1, "l_smart_view_split_sound_enable"

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1d

    .line 12094
    invoke-static {}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->isSplitSoundEnabled()Z

    move-result v1

    if-eqz v1, :cond_19

    .line 12095
    const-string/jumbo v0, "true"

    goto/16 :goto_109

    .line 12097
    :cond_19
    const-string v0, "false"

    goto/16 :goto_109

    .line 12099
    :cond_1d
    const-string/jumbo v1, "g_call_extra_volume_enable"

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_33

    .line 12100
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mExtraVolume:Z

    if-eqz v1, :cond_2f

    .line 12101
    const-string/jumbo v0, "true"

    goto/16 :goto_109

    .line 12103
    :cond_2f
    const-string v0, "false"

    goto/16 :goto_109

    .line 12105
    :cond_33
    const-string/jumbo v1, "l_hmt_state"

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_40

    .line 12109
    const-string v0, "false"

    goto/16 :goto_109

    .line 12111
    :cond_40
    const-string/jumbo v1, "l_safe_media_volume_enable"

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const-string/jumbo v3, "true"

    const-string v4, "false"

    const/4 v5, 0x3

    if-eqz v2, :cond_75

    .line 12112
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v1

    .line 12113
    .local v1, "device":I
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v2, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_63

    .line 12114
    const-string/jumbo v0, "true"

    goto :goto_73

    .line 12115
    :cond_63
    const v2, 0x8000

    and-int/2addr v2, v1

    if-eqz v2, :cond_71

    .line 12116
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIsBluetoothCastState:Z

    if-eqz v2, :cond_6e

    goto :goto_6f

    :cond_6e
    move-object v3, v4

    :goto_6f
    move-object v0, v3

    goto :goto_73

    .line 12118
    :cond_71
    const-string v0, "false"

    .line 12120
    .end local v1    # "device":I
    :goto_73
    goto/16 :goto_109

    :cond_75
    const-string/jumbo v2, "g_sound_path_active_address"

    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_8a

    .line 12121
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioDeviceBroker;->getAddressForDevice(I)Ljava/lang/String;

    move-result-object v0

    goto/16 :goto_109

    .line 12122
    :cond_8a
    const-string/jumbo v2, "g_sound_path_available_devices"

    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_a2

    .line 12123
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v1}, Lcom/android/server/audio/AudioDeviceBroker;->getAvailableDeviceSetForQuickSoundPath()Ljava/util/Set;

    move-result-object v1

    .line 12124
    .local v1, "deviceSet":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-static {v1}, Lcom/samsung/android/media/SemAudioSystem;->makeDeviceBit(Ljava/util/Set;)I

    move-result v2

    .line 12125
    .local v2, "bitMask":I
    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0

    .line 12126
    .end local v1    # "deviceSet":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v2    # "bitMask":I
    goto :goto_109

    :cond_a2
    const-string v2, "enable"

    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_b2

    .line 12127
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v1, :cond_af

    goto :goto_b0

    :cond_af
    move-object v3, v4

    :goto_b0
    move-object v0, v3

    goto :goto_109

    .line 12128
    :cond_b2
    const-string/jumbo v2, "level"

    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_c2

    .line 12129
    iget v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    goto :goto_109

    .line 12130
    :cond_c2
    const-string/jumbo v2, "sound_assistant;"

    invoke-virtual {p1, v2}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_dd

    .line 12131
    const-string/jumbo v1, "sound_assistant"

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v1

    add-int/lit8 v1, v1, 0x1

    invoke-virtual {p1, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getSoundAssistant(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 12132
    :cond_dd
    nop

    .line 12133
    const-string/jumbo v2, "l_multi_sound_key"

    invoke-virtual {p1, v2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_105

    .line 12134
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_105

    .line 12135
    const-string/jumbo v1, "g_multi_sound_pin_app_name"

    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_105

    .line 12136
    const-string/jumbo v1, "g_multi_sound_priority_device"

    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_100

    goto :goto_105

    .line 12139
    :cond_100
    invoke-static {p1}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    goto :goto_109

    .line 12137
    :cond_105
    :goto_105
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getMultiSoundConfig(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 12142
    :goto_109
    return-object v0
.end method

.method public getAudioVolumeGroups()Ljava/util/List;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/media/audiopolicy/AudioVolumeGroup;",
            ">;"
        }
    .end annotation

    .line 1434
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 1435
    invoke-static {}, Landroid/media/audiopolicy/AudioVolumeGroup;->getAudioVolumeGroups()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method getContentResolver()Landroid/content/ContentResolver;
    .registers 2

    .line 4833
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    return-object v0
.end method

.method public getCurMediaKeyEventSession()Landroid/media/session/MediaSession$Token;
    .registers 2

    .line 14767
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->hasMediaControlPermission()Z

    move-result v0

    if-nez v0, :cond_8

    .line 14768
    const/4 v0, 0x0

    return-object v0

    .line 14770
    :cond_8
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;->getCurMediaKeyEventSession()Landroid/media/session/MediaSession$Token;

    move-result-object v0

    return-object v0
.end method

.method public getCurMediaKeyEventSessionPackage()Ljava/lang/String;
    .registers 2

    .line 14760
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->hasMediaControlPermission()Z

    move-result v0

    if-nez v0, :cond_8

    .line 14761
    const/4 v0, 0x0

    return-object v0

    .line 14763
    :cond_8
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;->getCurMediaKeyEventSessionPackage()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method getCurOutDevice()I
    .registers 4

    .line 12794
    const-string/jumbo v0, "l_device_current_output"

    invoke-static {v0}, Lcom/samsung/android/media/SemAudioSystem;->getPolicyParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 12795
    .local v0, "path":Ljava/lang/String;
    if-eqz v0, :cond_1b

    const-string v1, ""

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_12

    goto :goto_1b

    .line 12799
    :cond_12
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    return v1

    .line 12796
    :cond_1b
    :goto_1b
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "getCurOutDevice : Can\'t get outDevice"

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12797
    const/4 v1, -0x1

    return v1
.end method

.method public getCurrentAudioFocus()I
    .registers 2

    .line 7843
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0}, Lcom/android/server/audio/MediaFocusControl;->getCurrentAudioFocus()I

    move-result v0

    return v0
.end method

.method public getCurrentAudioFocusPackageName()Ljava/lang/String;
    .registers 2

    .line 11581
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0}, Lcom/android/server/audio/MediaFocusControl;->getCurrentAudioFocusPackageName()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getDeviceForStream(I)I
    .registers 6
    .param p1, "stream"    # I

    .line 5510
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getDevicesForStream(I)I

    move-result v0

    .line 5511
    .local v0, "device":I
    add-int/lit8 v1, v0, -0x1

    and-int/2addr v1, v0

    if-eqz v1, :cond_43

    .line 5520
    and-int/lit8 v1, v0, 0x2

    if-eqz v1, :cond_f

    .line 5521
    const/4 v0, 0x2

    goto :goto_43

    .line 5522
    :cond_f
    const/high16 v1, 0x40000

    and-int/2addr v1, v0

    if-eqz v1, :cond_17

    .line 5523
    const/high16 v0, 0x40000

    goto :goto_43

    .line 5524
    :cond_17
    const/high16 v1, 0x80000

    and-int/2addr v1, v0

    if-eqz v1, :cond_1f

    .line 5525
    const/high16 v0, 0x80000

    goto :goto_43

    .line 5526
    :cond_1f
    const/high16 v1, 0x200000

    and-int/2addr v1, v0

    if-eqz v1, :cond_27

    .line 5527
    const/high16 v0, 0x200000

    goto :goto_43

    .line 5529
    :cond_27
    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_2d
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_43

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    .line 5530
    .local v2, "deviceType":I
    and-int v3, v2, v0

    if-ne v3, v2, :cond_42

    .line 5531
    return v2

    .line 5533
    .end local v2    # "deviceType":I
    :cond_42
    goto :goto_2d

    .line 5537
    :cond_43
    :goto_43
    const/4 v1, 0x3

    if-ne p1, v1, :cond_58

    iget v1, p0, Lcom/android/server/audio/AudioService;->mMode:I

    if-nez v1, :cond_58

    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_SCO_SET:Ljava/util/Set;

    .line 5538
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_58

    .line 5539
    const/16 v0, 0x80

    .line 5542
    :cond_58
    return v0
.end method

.method public getDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;)I
    .registers 7
    .param p1, "device"    # Landroid/media/AudioDeviceAttributes;

    .line 5645
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 5648
    nop

    .line 5649
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getType()I

    move-result v0

    .line 5648
    invoke-static {v0}, Landroid/media/AudioDeviceInfo;->convertDeviceTypeToInternalDevice(I)I

    move-result v0

    .line 5650
    .local v0, "audioSystemDeviceOut":I
    sget-object v1, Lcom/android/server/audio/AudioService;->sDeviceVolumeBehaviorSupportedDeviceOutSet:Ljava/util/Set;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    const/16 v2, 0x80

    if-nez v1, :cond_38

    if-eq v0, v2, :cond_38

    const/high16 v1, 0x8000000

    if-ne v0, v1, :cond_21

    goto :goto_38

    .line 5653
    :cond_21
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unsupported volume behavior "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 5657
    :cond_38
    :goto_38
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->retrieveStoredDeviceVolumeBehavior(I)I

    move-result v1

    .line 5658
    .local v1, "setDeviceVolumeBehavior":I
    const/4 v3, -0x1

    if-eq v1, v3, :cond_40

    .line 5659
    return v1

    .line 5664
    :cond_40
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4e

    .line 5665
    const/4 v2, 0x1

    return v2

    .line 5667
    :cond_4e
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5c

    .line 5668
    const/4 v2, 0x2

    return v2

    .line 5670
    :cond_5c
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_6a

    .line 5671
    const/4 v2, 0x4

    return v2

    .line 5673
    :cond_6a
    if-ne v0, v2, :cond_72

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    if-eqz v2, :cond_72

    .line 5675
    const/4 v2, 0x3

    return v2

    .line 5677
    :cond_72
    const/4 v2, 0x0

    return v2
.end method

.method public getDevicesForAttributes(Landroid/media/AudioAttributes;)Ljava/util/ArrayList;
    .registers 3
    .param p1, "attributes"    # Landroid/media/AudioAttributes;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/media/AudioAttributes;",
            ")",
            "Ljava/util/ArrayList<",
            "Landroid/media/AudioDeviceAttributes;",
            ">;"
        }
    .end annotation

    .line 2102
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 2103
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2104
    invoke-static {p1}, Landroid/media/AudioSystem;->getDevicesForAttributes(Landroid/media/AudioAttributes;)Ljava/util/ArrayList;

    move-result-object v0

    return-object v0
.end method

.method public bridge synthetic getDevicesForAttributes(Landroid/media/AudioAttributes;)Ljava/util/List;
    .registers 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 258
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDevicesForAttributes(Landroid/media/AudioAttributes;)Ljava/util/ArrayList;

    move-result-object p1

    return-object p1
.end method

.method public getExcludedRingtoneTitles(I)Ljava/util/List;
    .registers 3
    .param p1, "type"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 14785
    const/4 v0, 0x2

    if-ne p1, v0, :cond_a

    .line 14786
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mOmcRingtoneManager:Lcom/samsung/android/server/audio/OmcRingtoneManager;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/OmcRingtoneManager;->getExcludedNotifications()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 14788
    :cond_a
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mOmcRingtoneManager:Lcom/samsung/android/server/audio/OmcRingtoneManager;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/OmcRingtoneManager;->getExcludedRingtones()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getFineVolume(II)I
    .registers 7
    .param p1, "streamType"    # I
    .param p2, "device"    # I

    .line 12868
    if-nez p2, :cond_16

    .line 12869
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v0

    if-eqz v0, :cond_10

    .line 12870
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getAppDevice(I)I

    move-result p2

    .line 12872
    :cond_10
    if-nez p2, :cond_16

    .line 12873
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result p2

    .line 12877
    :cond_16
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 12878
    :try_start_19
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v1

    .line 12881
    .local v1, "index":I
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, p1

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v2

    if-eqz v2, :cond_2c

    .line 12882
    const/4 v1, 0x0

    .line 12885
    :cond_2c
    if-eqz v1, :cond_4a

    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v2, p1

    const/4 v3, 0x3

    if-ne v2, v3, :cond_4a

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 12886
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4a

    .line 12887
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, p1

    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMaxIndex()I

    move-result v2

    move v1, v2

    .line 12889
    :cond_4a
    monitor-exit v0

    return v1

    .line 12890
    .end local v1    # "index":I
    :catchall_4c
    move-exception v1

    monitor-exit v0
    :try_end_4e
    .catchall {:try_start_19 .. :try_end_4e} :catchall_4c

    throw v1
.end method

.method public getFloatVolumeTable()[F
    .registers 2

    .line 14220
    sget-object v0, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->FINE_VOLUME_TABLE:[F

    return-object v0
.end method

.method public getFocusRampTimeMs(ILandroid/media/AudioAttributes;)I
    .registers 4
    .param p1, "focusGain"    # I
    .param p2, "attr"    # Landroid/media/AudioAttributes;

    .line 7847
    invoke-static {p1, p2}, Lcom/android/server/audio/MediaFocusControl;->getFocusRampTimeMs(ILandroid/media/AudioAttributes;)I

    move-result v0

    return v0
.end method

.method getHearingAidStreamType()I
    .registers 2

    .line 2934
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMode:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->getHearingAidStreamType(I)I

    move-result v0

    return v0
.end method

.method public getIndexDividedBy10(II)I
    .registers 4
    .param p1, "index"    # I
    .param p2, "streamType"    # I

    .line 14313
    const/4 v0, 0x3

    if-ne p2, v0, :cond_8

    .line 14316
    add-int/lit8 v0, p1, 0x9

    div-int/lit8 v0, v0, 0xa

    return v0

    .line 14318
    :cond_8
    add-int/lit8 v0, p1, 0x5

    div-int/lit8 v0, v0, 0xa

    return v0
.end method

.method public getLastAudibleStreamVolume(I)I
    .registers 4
    .param p1, "streamType"    # I

    .line 3608
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 3609
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v0

    .line 3611
    .local v0, "device":I
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    invoke-virtual {v1, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v1

    invoke-virtual {p0, v1, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result v1

    return v1
.end method

.method public getMaxVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I
    .registers 3
    .param p1, "attr"    # Landroid/media/AudioAttributes;

    .line 2870
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2871
    const-string v0, "attr must not be null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 2872
    invoke-static {p1}, Landroid/media/AudioSystem;->getMaxVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I

    move-result v0

    return v0
.end method

.method public getMediaVolumeSteps()[I
    .registers 2

    .line 13135
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    return-object v0
.end method

.method public getMinVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I
    .registers 3
    .param p1, "attr"    # Landroid/media/AudioAttributes;

    .line 2877
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2878
    const-string v0, "attr must not be null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 2879
    invoke-static {p1}, Landroid/media/AudioSystem;->getMinVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I

    move-result v0

    return v0
.end method

.method public getMode()I
    .registers 2

    .line 4460
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMode:I

    return v0
.end method

.method getModeOwnerPid()I
    .registers 4

    .line 4100
    const/4 v0, 0x0

    .line 4102
    .local v0, "modeOwnerPid":I
    :try_start_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getPid()I

    move-result v1
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_e} :catch_10

    move v0, v1

    .line 4105
    goto :goto_11

    .line 4103
    :catch_10
    move-exception v1

    .line 4106
    :goto_11
    return v0
.end method

.method getModeOwnerUid()I
    .registers 4

    .line 4114
    const/4 v0, 0x0

    .line 4116
    .local v0, "modeOwnerUid":I
    :try_start_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->getUid()I

    move-result v1
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_e} :catch_10

    move v0, v1

    .line 4119
    goto :goto_11

    .line 4117
    :catch_10
    move-exception v1

    .line 4120
    :goto_11
    return v0
.end method

.method public getMuteInterval()I
    .registers 4

    .line 11550
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v1, "mode_ringer_time"

    const/16 v2, 0x3c

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    return v0
.end method

.method public getObservedDevicesForMedia()I
    .registers 3

    .line 14307
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    const/4 v1, 0x3

    aget-object v0, v0, v1

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mObservedDevices:I
    invoke-static {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$14300(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v0

    return v0
.end method

.method public getPinAppInfo(I)Ljava/lang/String;
    .registers 4
    .param p1, "device"    # I

    .line 12018
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "getPinAppInfo, device="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12019
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinAppInfo(I)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getPinDevice()I
    .registers 2

    .line 12914
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinDevice()I

    move-result v0

    return v0
.end method

.method public getPreferredDeviceForStrategy(I)Landroid/media/AudioDeviceAttributes;
    .registers 10
    .param p1, "strategy"    # I

    .line 2065
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2066
    const/4 v0, 0x1

    new-array v1, v0, [Landroid/media/AudioDeviceAttributes;

    .line 2067
    .local v1, "devices":[Landroid/media/AudioDeviceAttributes;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 2068
    .local v2, "identity":J
    invoke-static {p1, v1}, Landroid/media/AudioSystem;->getPreferredDeviceForStrategy(I[Landroid/media/AudioDeviceAttributes;)I

    move-result v4

    .line 2069
    .local v4, "status":I
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2070
    const/4 v5, 0x0

    if-eqz v4, :cond_30

    .line 2071
    const/4 v6, 0x2

    new-array v6, v6, [Ljava/lang/Object;

    .line 2072
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v5

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v6, v0

    .line 2071
    const-string v0, "Error %d in getPreferredDeviceForStrategy(%d)"

    invoke-static {v0, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    const-string v5, "AS.AudioService"

    invoke-static {v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2073
    const/4 v0, 0x0

    return-object v0

    .line 2075
    :cond_30
    aget-object v0, v1, v5

    return-object v0
.end method

.method public getPrevRingerMode()I
    .registers 2

    .line 11565
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    return v0
.end method

.method public getRadioOutputPath()I
    .registers 4

    .line 11484
    iget v0, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_7

    .line 11485
    const/4 v0, 0x2

    return v0

    .line 11486
    :cond_7
    const/4 v1, 0x4

    const/4 v2, 0x3

    if-ne v0, v1, :cond_1c

    .line 11487
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/16 v1, 0x80

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v0

    if-eqz v0, :cond_18

    .line 11488
    const/16 v0, 0x8

    return v0

    .line 11490
    :cond_18
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    .line 11491
    return v2

    .line 11494
    :cond_1c
    return v2
.end method

.method public getRemainingMuteIntervalMs()I
    .registers 9

    .line 11554
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    const v1, 0xea60

    if-eqz v0, :cond_1d

    .line 11555
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    .line 11556
    .local v2, "currentTime":J
    iget-wide v4, p0, Lcom/android/server/audio/AudioService;->mMuteTime:J

    cmp-long v0, v2, v4

    if-lez v0, :cond_13

    const/4 v0, 0x0

    return v0

    .line 11557
    :cond_13
    sub-long/2addr v4, v2

    const-wide/32 v6, 0xea60

    div-long/2addr v4, v6

    long-to-int v0, v4

    mul-int/2addr v0, v1

    add-int/2addr v0, v1

    iput v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 11559
    .end local v2    # "currentTime":J
    :cond_1d
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "[Mute Interval] remaining time="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    div-int/2addr v2, v1

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " mins"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11561
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    return v0
.end method

.method public getRemoteMic()Z
    .registers 2

    .line 14516
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    return v0
.end method

.method public getRingerModeExternal()I
    .registers 3

    .line 3751
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3752
    :try_start_3
    iget v1, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    monitor-exit v0

    return v1

    .line 3753
    :catchall_7
    move-exception v1

    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v1
.end method

.method public getRingerModeInternal()I
    .registers 3

    .line 3758
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3759
    :try_start_3
    iget v1, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    monitor-exit v0

    return v1

    .line 3760
    :catchall_7
    move-exception v1

    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v1
.end method

.method public getRingtonePlayer()Landroid/media/IRingtonePlayer;
    .registers 2

    .line 7937
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRingtonePlayer:Landroid/media/IRingtonePlayer;

    return-object v0
.end method

.method public getSelectedAppList()[Ljava/lang/String;
    .registers 2

    .line 11873
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/PackageListHelper;->getSelectedAppList()[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method getSoundAssistant(Ljava/lang/String;)Ljava/lang/String;
    .registers 7
    .param p1, "key"    # Ljava/lang/String;

    .line 12631
    const-string v0, "adjust_media_volume_only"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 12632
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12633
    :cond_f
    const-string/jumbo v0, "version"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1b

    .line 12643
    const-string v0, "10"

    .line 12644
    .local v0, "soundAssistantVersion":Ljava/lang/String;
    return-object v0

    .line 12645
    .end local v0    # "soundAssistantVersion":Ljava/lang/String;
    :cond_1b
    const-string/jumbo v0, "get_app_volume_list"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_60

    .line 12646
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 12647
    .local v0, "appVolumeList":Ljava/lang/StringBuilder;
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_2a
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v2}, Landroid/util/SparseIntArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_5b

    .line 12648
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2

    .line 12649
    .local v2, "uid":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    .line 12650
    .local v3, "ratio":I
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, "="

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 12651
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    if-eq v1, v4, :cond_58

    .line 12652
    const-string v4, ";"

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12647
    .end local v2    # "uid":I
    .end local v3    # "ratio":I
    :cond_58
    add-int/lit8 v1, v1, 0x1

    goto :goto_2a

    .line 12655
    .end local v1    # "i":I
    :cond_5b
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 12656
    .end local v0    # "appVolumeList":Ljava/lang/StringBuilder;
    :cond_60
    const-string v0, "enable_floating_button"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6f

    .line 12657
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mEnableSoundAssistant:Z

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12658
    :cond_6f
    const-string/jumbo v0, "ignore_audio_focus"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_7f

    .line 12659
    iget v0, p0, Lcom/android/server/audio/AudioService;->mIgnoreAudioFocusUid:I

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12660
    :cond_7f
    const-string/jumbo v0, "media_volume_step_index"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_8f

    .line 12661
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12662
    :cond_8f
    nop

    .line 12663
    const-string/jumbo v0, "selfiestick_connected"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_a0

    .line 12664
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSelfiestickIsConnected:Z

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12665
    :cond_a0
    const-string/jumbo v0, "ring_through_headset"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_b0

    .line 12666
    iget v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12667
    :cond_b0
    const-string/jumbo v0, "sound_lr_switch"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_c0

    .line 12668
    iget v0, p0, Lcom/android/server/audio/AudioService;->mLRSwitching:I

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12669
    :cond_c0
    const-string/jumbo v0, "using_audio_uids"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_ce

    .line 12670
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getApplicationUidListUsingAudio()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12671
    :cond_ce
    const-string/jumbo v0, "media_button_package"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_ef

    .line 12672
    const-string v0, ""

    .line 12673
    .local v0, "ret":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;->getCurMediaKeyEventSession()Landroid/media/session/MediaSession$Token;

    move-result-object v1

    if-eqz v1, :cond_ee

    .line 12674
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaKeyListener:Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MediaKeyEventSessionListener;->getCurMediaKeyEventSessionPackage()Ljava/lang/String;

    move-result-object v1

    .line 12675
    .local v1, "mediaKeyPackage":Ljava/lang/String;
    if-nez v1, :cond_ec

    const-string v2, ""

    goto :goto_ed

    :cond_ec
    move-object v2, v1

    :goto_ed
    move-object v0, v2

    .line 12677
    .end local v1    # "mediaKeyPackage":Ljava/lang/String;
    :cond_ee
    return-object v0

    .line 12678
    .end local v0    # "ret":Ljava/lang/String;
    :cond_ef
    const-string/jumbo v0, "mute_media_by_vibrate_or_silent_mode"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_ff

    .line 12679
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    invoke-static {v0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12680
    :cond_ff
    nop

    .line 12681
    const-string/jumbo v0, "get_mode_owner_uids"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_10e

    .line 12682
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getApplicationUidListSetCallMode()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 12684
    :cond_10e
    const/4 v0, 0x0

    return-object v0
.end method

.method public getStreamMaxVolume(I)I
    .registers 3
    .param p1, "streamType"    # I

    .line 3589
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 3590
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, p1

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMaxIndex()I

    move-result v0

    add-int/lit8 v0, v0, 0x5

    div-int/lit8 v0, v0, 0xa

    return v0
.end method

.method public getStreamMinVolume(I)I
    .registers 4
    .param p1, "streamType"    # I

    .line 3596
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 3598
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_22

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3599
    const-string v1, "android.permission.MODIFY_AUDIO_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_22

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3601
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_20

    goto :goto_22

    :cond_20
    const/4 v0, 0x0

    goto :goto_23

    :cond_22
    :goto_22
    const/4 v0, 0x1

    .line 3603
    .local v0, "isPrivileged":Z
    :goto_23
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    invoke-virtual {v1, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMinIndex(Z)I

    move-result v1

    add-int/lit8 v1, v1, 0x5

    div-int/lit8 v1, v1, 0xa

    return v1
.end method

.method public getStreamVolume(I)I
    .registers 3
    .param p1, "streamType"    # I

    .line 3584
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->getStreamVolume(II)I

    move-result v0

    return v0
.end method

.method public getStreamVolume(II)I
    .registers 7
    .param p1, "streamType"    # I
    .param p2, "device"    # I

    .line 11841
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 11845
    const/4 v0, 0x3

    if-nez p2, :cond_16

    .line 11846
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v1

    if-eqz v1, :cond_16

    if-ne p1, v0, :cond_16

    .line 11848
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getAppDevice(I)I

    move-result p2

    .line 11850
    :cond_16
    if-nez p2, :cond_1c

    .line 11851
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result p2

    .line 11857
    :cond_1c
    const-class v1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v1

    .line 11858
    :try_start_1f
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, p1

    invoke-virtual {v2, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v2

    .line 11861
    .local v2, "index":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, p1

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v3

    if-eqz v3, :cond_32

    .line 11862
    const/4 v2, 0x0

    .line 11864
    :cond_32
    if-eqz v2, :cond_4f

    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, p1

    if-ne v3, v0, :cond_4f

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 11865
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4f

    .line 11866
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, p1

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getMaxIndex()I

    move-result v0

    move v2, v0

    .line 11868
    :cond_4f
    invoke-virtual {p0, v2, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result v0

    monitor-exit v1

    return v0

    .line 11869
    .end local v2    # "index":I
    :catchall_55
    move-exception v0

    monitor-exit v1
    :try_end_57
    .catchall {:try_start_1f .. :try_end_57} :catchall_55

    throw v0
.end method

.method public getStreamVolumeForDevice(II)I
    .registers 4
    .param p1, "streamType"    # I
    .param p2, "device"    # I

    .line 12864
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->getStreamVolume(II)I

    move-result v0

    return v0
.end method

.method public getSupportedSystemUsages()[I
    .registers 4

    .line 1402
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 1403
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    monitor-enter v0

    .line 1404
    :try_start_6
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    array-length v2, v2

    invoke-static {v1, v2}, Ljava/util/Arrays;->copyOf([II)[I

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 1405
    :catchall_11
    move-exception v1

    monitor-exit v0
    :try_end_13
    .catchall {:try_start_6 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public getUiSoundsStreamType()I
    .registers 3

    .line 3619
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    const/4 v1, 0x2

    aget v0, v0, v1

    return v0
.end method

.method public getUidForDevice(I)I
    .registers 4
    .param p1, "device"    # I

    .line 11947
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "getUidForDevice, "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11948
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/MediaFocusControl;->getUidForDevice(I)I

    move-result v0

    return v0
.end method

.method public getVibrateSetting(I)I
    .registers 4
    .param p1, "vibrateType"    # I

    .line 4078
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-nez v0, :cond_6

    const/4 v0, 0x0

    return v0

    .line 4079
    :cond_6
    iget v0, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    mul-int/lit8 v1, p1, 0x2

    shr-int/2addr v0, v1

    and-int/lit8 v0, v0, 0x3

    return v0
.end method

.method public getVisibleTasks()Ljava/util/List;
    .registers 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .line 13999
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14003
    .local v0, "ident":J
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMultiWindowManager:Lcom/samsung/android/multiwindow/MultiWindowManager;

    if-nez v2, :cond_f

    .line 14004
    new-instance v2, Lcom/samsung/android/multiwindow/MultiWindowManager;

    invoke-direct {v2}, Lcom/samsung/android/multiwindow/MultiWindowManager;-><init>()V

    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mMultiWindowManager:Lcom/samsung/android/multiwindow/MultiWindowManager;

    .line 14006
    :cond_f
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMultiWindowManager:Lcom/samsung/android/multiwindow/MultiWindowManager;

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowManager;->getVisibleTasks()Ljava/util/List;

    move-result-object v2
    :try_end_15
    .catchall {:try_start_4 .. :try_end_15} :catchall_1a

    .line 14008
    .local v2, "taskInfoList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14009
    nop

    .line 14010
    return-object v2

    .line 14008
    .end local v2    # "taskInfoList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    :catchall_1a
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14009
    throw v2
.end method

.method public getVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I
    .registers 6
    .param p1, "attr"    # Landroid/media/AudioAttributes;

    .line 2858
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2859
    const-string v0, "attr must not be null"

    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 2860
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getVolumeGroupIdForAttributes(Landroid/media/AudioAttributes;)I

    move-result v0

    .line 2861
    .local v0, "volumeGroup":I
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v1

    if-ltz v1, :cond_21

    .line 2864
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 2865
    .local v1, "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->getVolumeIndex()I

    move-result v2

    return v2

    .line 2862
    .end local v1    # "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    :cond_21
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No volume group for attributes "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method getVssVolumeForDevice(II)I
    .registers 4
    .param p1, "stream"    # I
    .param p2, "device"    # I

    .line 405
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0

    return v0
.end method

.method public handleBluetoothA2dpDeviceConfigChange(Landroid/bluetooth/BluetoothDevice;)V
    .registers 4
    .param p1, "device"    # Landroid/bluetooth/BluetoothDevice;

    .line 5804
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "handleBluetoothA2dpDeviceConfigChange from BT"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5806
    if-eqz p1, :cond_12

    .line 5809
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->postBluetoothA2dpDeviceConfigChange(Landroid/bluetooth/BluetoothDevice;)V

    .line 5811
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mBtDeviceForOffloadState:Landroid/bluetooth/BluetoothDevice;

    .line 5813
    return-void

    .line 5807
    :cond_12
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null device"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public handleCustomMessage(Landroid/os/Message;)V
    .registers 10
    .param p1, "msg"    # Landroid/os/Message;

    .line 10444
    iget v0, p1, Landroid/os/Message;->what:I

    const-string v1, "AS.AudioService"

    const/4 v2, 0x1

    const/4 v3, 0x0

    packed-switch v0, :pswitch_data_192

    :pswitch_9
    goto/16 :goto_191

    .line 10504
    :pswitch_b
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Ljava/lang/String;

    iget v1, p1, Landroid/os/Message;->arg1:I

    iget v2, p1, Landroid/os/Message;->arg2:I

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/audio/AudioService;->onSetAppDevice(Ljava/lang/String;IIZ)V

    .line 10505
    goto/16 :goto_191

    .line 10601
    :pswitch_18
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_TRANSITION_EFFECT:Z

    if-eqz v0, :cond_191

    .line 10602
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Ljava/lang/String;

    iget v1, p1, Landroid/os/Message;->arg1:I

    if-ne v1, v2, :cond_25

    goto :goto_26

    :cond_25
    move v2, v3

    :goto_26
    invoke-direct {p0, v0, v2}, Lcom/android/server/audio/AudioService;->onAvrcpSupportsAbsoluteVolumeToAudioServer(Ljava/lang/String;Z)V

    goto/16 :goto_191

    .line 10446
    :pswitch_2b
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_RECORDING_POPUP:Z

    if-eqz v0, :cond_191

    .line 10447
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "[RECORDING POPUP] showRecordingPopup uid "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p1, Landroid/os/Message;->arg1:I

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10448
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget v1, p1, Landroid/os/Message;->arg1:I

    invoke-static {v0, v1}, Lcom/samsung/android/server/audio/RecordingPopupHelper;->showRecordingPopup(Landroid/content/Context;I)V

    goto/16 :goto_191

    .line 10596
    :pswitch_4e
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->onInitSoundAssistant()V

    .line 10598
    goto/16 :goto_191

    .line 10583
    :pswitch_53
    const/16 v0, 0x10

    iget v1, p1, Landroid/os/Message;->arg1:I

    const-string v2, ""

    invoke-direct {p0, v0, v1, v2}, Lcom/android/server/audio/AudioService;->sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V

    .line 10586
    goto/16 :goto_191

    .line 10589
    :pswitch_5e
    iget v0, p1, Landroid/os/Message;->arg1:I

    if-ne v0, v2, :cond_191

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSensorThread:Lcom/samsung/android/server/audio/SensorHandleThread;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/SensorHandleThread;->isClosed()Z

    move-result v0

    if-eqz v0, :cond_191

    .line 10590
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSensorThread:Lcom/samsung/android/server/audio/SensorHandleThread;

    invoke-virtual {v0, v2}, Lcom/samsung/android/server/audio/SensorHandleThread;->setProximitySensorClosed(Z)V

    goto/16 :goto_191

    .line 10536
    :pswitch_71
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Landroid/content/Intent;

    .line 10537
    .local v0, "eventIntent":Landroid/content/Intent;
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 10539
    .end local v0    # "eventIntent":Landroid/content/Intent;
    goto/16 :goto_191

    .line 10570
    :pswitch_7a
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    if-eqz v0, :cond_191

    .line 10571
    iget v1, p1, Landroid/os/Message;->arg1:I

    invoke-virtual {v0, v1}, Lcom/android/server/audio/MediaFocusControl;->setDevice(I)V

    .line 10572
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    if-eqz v0, :cond_191

    .line 10573
    iget v1, p1, Landroid/os/Message;->arg1:I

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v2

    invoke-virtual {v0, v1, v2}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->updateMultiSoundInfo(IZ)V

    goto/16 :goto_191

    .line 10460
    :pswitch_92
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkRCVStateForSARTest()V

    .line 10462
    goto/16 :goto_191

    .line 10579
    :pswitch_97
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->onRunSoundAssistant()V

    .line 10580
    goto/16 :goto_191

    .line 10517
    :pswitch_9c
    iget v0, p1, Landroid/os/Message;->arg1:I

    .line 10518
    .local v0, "minute":I
    if-nez v0, :cond_aa

    .line 10519
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "mode_ringer_time_on"

    invoke-static {v1, v2, v3}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto/16 :goto_191

    .line 10521
    :cond_aa
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "mode_ringer_time"

    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 10522
    const v1, 0xea60

    mul-int/2addr v1, v0

    iput v1, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 10523
    if-eqz v1, :cond_191

    .line 10524
    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.sec.media.action.mute_interval"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 10525
    .local v1, "intent":Landroid/content/Intent;
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const/high16 v4, 0x8000000

    invoke-static {v2, v3, v1, v4}, Landroid/app/PendingIntent;->getBroadcast(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;

    move-result-object v2

    .line 10527
    .local v2, "sender":Landroid/app/PendingIntent;
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v4

    iget v6, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    int-to-long v6, v6

    add-long/2addr v4, v6

    iput-wide v4, p0, Lcom/android/server/audio/AudioService;->mMuteTime:J

    .line 10528
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAlarmManager:Landroid/app/AlarmManager;

    invoke-virtual {v6, v3, v4, v5, v2}, Landroid/app/AlarmManager;->setExact(IJLandroid/app/PendingIntent;)V

    .line 10530
    .end local v1    # "intent":Landroid/content/Intent;
    .end local v2    # "sender":Landroid/app/PendingIntent;
    goto/16 :goto_191

    .line 10508
    .end local v0    # "minute":I
    :pswitch_da
    iget v0, p1, Landroid/os/Message;->arg1:I

    .line 10509
    .local v0, "devices":I
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v1

    if-eqz v1, :cond_ef

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getPinDevice()I

    move-result v1

    if-eq v0, v1, :cond_ef

    .line 10510
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->clearHeadUpNotification()V

    goto/16 :goto_191

    .line 10512
    :cond_ef
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->showNotification()V

    .line 10514
    goto/16 :goto_191

    .line 10500
    .end local v0    # "devices":I
    :pswitch_f6
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Ljava/lang/String;

    iget v1, p1, Landroid/os/Message;->arg1:I

    iget v3, p1, Landroid/os/Message;->arg2:I

    invoke-virtual {p0, v0, v1, v3, v2}, Lcom/android/server/audio/AudioService;->onSetAppDevice(Ljava/lang/String;IIZ)V

    .line 10501
    goto/16 :goto_191

    .line 10475
    :pswitch_103
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    .line 10476
    .local v0, "on":Z
    iget v4, p1, Landroid/os/Message;->arg1:I

    if-ne v4, v2, :cond_110

    goto :goto_111

    :cond_110
    move v2, v3

    .line 10477
    .local v2, "shouldShowNotification":Z
    :goto_111
    new-instance v3, Landroid/content/Intent;

    const-string v4, "android.intent.action.MULTISOUND_STATE_CHANGE"

    invoke-direct {v3, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 10479
    .local v3, "onIntent":Landroid/content/Intent;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "MSG_SET_MULTI_DEVICE_SOUND_ON "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10481
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v4, "multisound_state"

    invoke-static {v1, v4, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 10482
    if-eqz v0, :cond_154

    .line 10483
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->enable()V

    .line 10484
    const/4 v1, 0x3

    invoke-static {v1}, Landroid/media/AudioSystem;->getDevicesForStream(I)I

    move-result v1

    .line 10485
    .local v1, "curDevice":I
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getPinDevice()I

    move-result v4

    if-ne v4, v1, :cond_153

    if-eqz v2, :cond_153

    .line 10486
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 10487
    invoke-virtual {v5, v1}, Lcom/android/server/audio/AudioDeviceBroker;->getPriorityDevice(I)I

    move-result v5

    .line 10486
    invoke-virtual {v4, v1, v5}, Lcom/samsung/android/server/audio/MultiSoundManager;->showHeadUpNotification(II)V

    .line 10489
    .end local v1    # "curDevice":I
    :cond_153
    goto :goto_159

    .line 10490
    :cond_154
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->disable()V

    .line 10493
    :goto_159
    invoke-direct {p0, v3}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 10494
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    if-eqz v1, :cond_191

    .line 10495
    const/4 v4, -0x1

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v5

    invoke-virtual {v1, v4, v5}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->updateMultiSoundInfo(IZ)V

    goto :goto_191

    .line 10563
    .end local v0    # "on":Z
    .end local v2    # "shouldShowNotification":Z
    .end local v3    # "onIntent":Landroid/content/Intent;
    :pswitch_169
    iget v0, p1, Landroid/os/Message;->arg1:I

    .line 10564
    .local v0, "state":I
    new-instance v1, Lcom/android/server/audio/-$$Lambda$AudioService$Yjc0g3sw4uweLu31OZ5GE10hBYY;

    invoke-direct {v1, p0, v0}, Lcom/android/server/audio/-$$Lambda$AudioService$Yjc0g3sw4uweLu31OZ5GE10hBYY;-><init>(Lcom/android/server/audio/AudioService;I)V

    invoke-static {v1}, Lcom/samsung/android/server/audio/AudioExecutor;->execute(Ljava/lang/Runnable;)V

    .line 10567
    .end local v0    # "state":I
    goto :goto_191

    .line 10542
    :pswitch_174
    iget-object v0, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    check-cast v0, Ljava/lang/String;

    .line 10543
    .local v0, "key":Ljava/lang/String;
    iget v1, p1, Landroid/os/Message;->arg1:I

    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v1

    .line 10544
    .local v1, "value":Ljava/lang/String;
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 10545
    goto :goto_191

    .line 10558
    .end local v0    # "key":Ljava/lang/String;
    .end local v1    # "value":Ljava/lang/String;
    :pswitch_182
    iput-boolean v3, p0, Lcom/android/server/audio/AudioService;->mIsVibrate:Z

    .line 10559
    goto :goto_191

    .line 10553
    :pswitch_185
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->callVibrateMsg()V

    .line 10555
    goto :goto_191

    .line 10548
    :pswitch_189
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->playSilentModeSound()V

    .line 10549
    goto :goto_191

    .line 10454
    :pswitch_18d
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->performSoftReset()V

    .line 10456
    nop

    .line 10609
    :cond_191
    :goto_191
    return-void

    :pswitch_data_192
    .packed-switch 0x65
        :pswitch_18d
        :pswitch_189
        :pswitch_185
        :pswitch_182
        :pswitch_174
        :pswitch_169
        :pswitch_103
        :pswitch_f6
        :pswitch_da
        :pswitch_9c
        :pswitch_97
        :pswitch_92
        :pswitch_7a
        :pswitch_71
        :pswitch_9
        :pswitch_5e
        :pswitch_53
        :pswitch_4e
        :pswitch_2b
        :pswitch_18
        :pswitch_b
    .end packed-switch
.end method

.method public handleVolumeKey(Landroid/view/KeyEvent;ZLjava/lang/String;Ljava/lang/String;)V
    .registers 18
    .param p1, "event"    # Landroid/view/KeyEvent;
    .param p2, "isOnTv"    # Z
    .param p3, "callingPackage"    # Ljava/lang/String;
    .param p4, "caller"    # Ljava/lang/String;

    .line 2118
    const/4 v0, 0x0

    .line 2119
    .local v0, "keyEventMode":I
    if-eqz p2, :cond_d

    .line 2120
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getAction()I

    move-result v1

    if-nez v1, :cond_b

    .line 2121
    const/4 v0, 0x1

    goto :goto_14

    .line 2126
    :cond_b
    const/4 v0, 0x2

    goto :goto_14

    .line 2128
    :cond_d
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getAction()I

    move-result v1

    if-eqz v1, :cond_14

    .line 2129
    return-void

    .line 2132
    :cond_14
    :goto_14
    const/16 v11, 0x1005

    .line 2135
    .local v11, "flags":I
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v1

    const/16 v2, 0x18

    if-eq v1, v2, :cond_82

    const/16 v2, 0x19

    if-eq v1, v2, :cond_6d

    const/16 v2, 0xa4

    if-eq v1, v2, :cond_4b

    .line 2154
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid key code "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " sent by "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v12, p3

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2155
    return-void

    .line 2147
    :cond_4b
    move-object/from16 v12, p3

    invoke-virtual {p1}, Landroid/view/KeyEvent;->getAction()I

    move-result v1

    if-nez v1, :cond_97

    invoke-virtual {p1}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v1

    if-nez v1, :cond_97

    .line 2148
    const/16 v2, 0x65

    const/high16 v3, -0x80000000

    .line 2150
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/4 v8, 0x1

    const/4 v9, 0x0

    .line 2148
    move-object v1, p0

    move v4, v11

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    invoke-direct/range {v1 .. v9}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    goto :goto_97

    .line 2142
    :cond_6d
    move-object/from16 v12, p3

    const/4 v3, -0x1

    const/high16 v4, -0x80000000

    .line 2144
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    const/4 v9, 0x1

    .line 2142
    move-object v2, p0

    move v5, v11

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move v10, v0

    invoke-direct/range {v2 .. v10}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 2145
    goto :goto_97

    .line 2137
    :cond_82
    move-object/from16 v12, p3

    const/4 v3, 0x1

    const/high16 v4, -0x80000000

    .line 2139
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    const/4 v9, 0x1

    .line 2137
    move-object v2, p0

    move v5, v11

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move v10, v0

    invoke-direct/range {v2 .. v10}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 2140
    nop

    .line 2157
    :cond_97
    :goto_97
    return-void
.end method

.method public hasAudioFocusUsers()Z
    .registers 2

    .line 7853
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0}, Lcom/android/server/audio/MediaFocusControl;->hasAudioFocusUsers()Z

    move-result v0

    return v0
.end method

.method public hasHapticChannels(Landroid/net/Uri;)Z
    .registers 7
    .param p1, "uri"    # Landroid/net/Uri;

    .line 5857
    const-string/jumbo v0, "haptic-channel-count"

    new-instance v1, Landroid/media/MediaExtractor;

    invoke-direct {v1}, Landroid/media/MediaExtractor;-><init>()V

    .line 5859
    .local v1, "extractor":Landroid/media/MediaExtractor;
    :try_start_8
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Landroid/media/MediaExtractor;->setDataSource(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V

    .line 5860
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_f
    invoke-virtual {v1}, Landroid/media/MediaExtractor;->getTrackCount()I

    move-result v3

    if-ge v2, v3, :cond_2a

    .line 5861
    invoke-virtual {v1, v2}, Landroid/media/MediaExtractor;->getTrackFormat(I)Landroid/media/MediaFormat;

    move-result-object v3

    .line 5862
    .local v3, "format":Landroid/media/MediaFormat;
    invoke-virtual {v3, v0}, Landroid/media/MediaFormat;->containsKey(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_27

    .line 5863
    invoke-virtual {v3, v0}, Landroid/media/MediaFormat;->getInteger(Ljava/lang/String;)I

    move-result v4
    :try_end_23
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_23} :catch_2b
    .catch Ljava/lang/RuntimeException; {:try_start_8 .. :try_end_23} :catch_2b

    if-lez v4, :cond_27

    .line 5864
    const/4 v0, 0x1

    return v0

    .line 5860
    .end local v3    # "format":Landroid/media/MediaFormat;
    :cond_27
    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 5869
    .end local v2    # "i":I
    :cond_2a
    goto :goto_43

    .line 5867
    :catch_2b
    move-exception v0

    .line 5868
    .local v0, "e":Ljava/lang/Exception;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "hasHapticChannels failure:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "AS.AudioService"

    invoke-static {v3, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5870
    .end local v0    # "e":Ljava/lang/Exception;
    :goto_43
    const/4 v0, 0x0

    return v0
.end method

.method public hasMediaDynamicPolicy()Z
    .registers 8

    .line 7404
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 7405
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->isEmpty()Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_e

    .line 7406
    monitor-exit v0

    return v2

    .line 7408
    :cond_e
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    .line 7409
    .local v1, "appColl":Ljava/util/Collection;, "Ljava/util/Collection<Lcom/android/server/audio/AudioService$AudioPolicyProxy;>;"
    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_18
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_2f

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 7410
    .local v4, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    const/4 v5, 0x3

    const/4 v6, 0x1

    invoke-virtual {v4, v6, v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->hasMixAffectingUsage(II)Z

    move-result v5

    if-eqz v5, :cond_2e

    .line 7412
    monitor-exit v0

    return v6

    .line 7414
    .end local v4    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :cond_2e
    goto :goto_18

    .line 7415
    :cond_2f
    monitor-exit v0

    return v2

    .line 7416
    .end local v1    # "appColl":Ljava/util/Collection;, "Ljava/util/Collection<Lcom/android/server/audio/AudioService$AudioPolicyProxy;>;"
    :catchall_31
    move-exception v1

    monitor-exit v0
    :try_end_33
    .catchall {:try_start_3 .. :try_end_33} :catchall_31

    throw v1
.end method

.method public hasRegisteredDynamicPolicy()Z
    .registers 3

    .line 9326
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9327
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_d

    const/4 v1, 0x1

    goto :goto_e

    :cond_d
    const/4 v1, 0x0

    :goto_e
    monitor-exit v0

    return v1

    .line 9328
    :catchall_10
    move-exception v1

    monitor-exit v0
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_10

    throw v1
.end method

.method protected initMinStreamVolumeWithoutModifyAudioSettings()V
    .registers 10

    .line 5484
    const/high16 v0, 0x400000

    .line 5485
    .local v0, "deviceForAlarm":I
    sget-object v1, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    const/4 v2, 0x4

    aget v1, v1, v2

    invoke-static {v2, v1, v0}, Landroid/media/AudioSystem;->getStreamVolumeDB(III)F

    move-result v1

    invoke-static {v1}, Ljava/lang/Float;->isNaN(F)Z

    move-result v1

    if-eqz v1, :cond_12

    .line 5487
    const/4 v0, 0x2

    .line 5489
    :cond_12
    sget-object v1, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    aget v1, v1, v2

    .line 5490
    .local v1, "idx":I
    :goto_16
    sget-object v3, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    aget v3, v3, v2

    if-lt v1, v3, :cond_2a

    .line 5491
    invoke-static {v2, v1, v0}, Landroid/media/AudioSystem;->getStreamVolumeDB(III)F

    move-result v3

    const/high16 v4, -0x3df00000    # -36.0f

    cmpg-float v3, v3, v4

    if-gez v3, :cond_27

    .line 5493
    goto :goto_2a

    .line 5490
    :cond_27
    add-int/lit8 v1, v1, -0x1

    goto :goto_16

    .line 5496
    :cond_2a
    :goto_2a
    sget-object v3, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    aget v4, v3, v2

    if-gt v1, v4, :cond_33

    .line 5497
    aget v3, v3, v2

    goto :goto_3d

    .line 5498
    :cond_33
    add-int/lit8 v3, v1, 0x1

    sget-object v4, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    aget v4, v4, v2

    invoke-static {v3, v4}, Ljava/lang/Math;->min(II)I

    move-result v3

    :goto_3d
    nop

    .line 5500
    .local v3, "safeIndex":I
    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    array-length v5, v4

    const/4 v6, 0x0

    :goto_42
    if-ge v6, v5, :cond_56

    aget v7, v4, v6

    .line 5501
    .local v7, "stream":I
    sget-object v8, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v8, v8, v7

    if-ne v8, v2, :cond_53

    .line 5502
    iget-object v8, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v8, v8, v7

    invoke-virtual {v8, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->updateNoPermMinIndex(I)V

    .line 5500
    .end local v7    # "stream":I
    :cond_53
    add-int/lit8 v6, v6, 0x1

    goto :goto_42

    .line 5505
    :cond_56
    return-void
.end method

.method public isAlreadyInDB(Ljava/lang/String;)Z
    .registers 3
    .param p1, "packageName"    # Ljava/lang/String;

    .line 11887
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/PackageListHelper;->isAlreadyInDB(Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public isAppMute(I)Z
    .registers 4
    .param p1, "uid"    # I

    .line 12013
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "isAppMute, uid:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12014
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->isAppMute(I)Z

    move-result v0

    return v0
.end method

.method public isAudioServerRunning()Z
    .registers 2

    .line 10010
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkMonitorAudioServerStatePermission()V

    .line 10011
    invoke-static {}, Landroid/media/AudioSystem;->checkAudioFlinger()I

    move-result v0

    if-nez v0, :cond_b

    const/4 v0, 0x1

    goto :goto_c

    :cond_b
    const/4 v0, 0x0

    :goto_c
    return v0
.end method

.method public isBluetoothA2dpOn()Z
    .registers 2

    .line 4744
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isBluetoothA2dpOn()Z

    move-result v0

    return v0
.end method

.method public isBluetoothScoOn()Z
    .registers 2

    .line 4718
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isBluetoothScoOnForApp()Z

    move-result v0

    return v0
.end method

.method public isCallScreeningModeSupported()Z
    .registers 2

    .line 4468
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    return v0
.end method

.method public isCameraSoundForced()Z
    .registers 3

    .line 8329
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 8330
    :try_start_3
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    monitor-exit v0

    return v1

    .line 8331
    :catchall_7
    move-exception v1

    monitor-exit v0
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v1
.end method

.method public isFMPlayerActive()Z
    .registers 5

    .line 11503
    const/4 v0, 0x0

    :try_start_1
    const-string/jumbo v1, "persist.audio.isfmactive"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 11504
    .local v1, "fmPlayer":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_c} :catch_11

    const/4 v3, 0x1

    if-ne v2, v3, :cond_10

    .line 11505
    return v3

    .line 11507
    :cond_10
    return v0

    .line 11509
    .end local v1    # "fmPlayer":Ljava/lang/String;
    :catch_11
    move-exception v1

    .line 11510
    .local v1, "e":Ljava/lang/Exception;
    return v0
.end method

.method public isForceSpeakerOn()Z
    .registers 3

    .line 11435
    iget v0, p0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_6

    goto :goto_7

    :cond_6
    const/4 v1, 0x0

    :goto_7
    return v1
.end method

.method public isHdmiSystemAudioSupported()Z
    .registers 2

    .line 8239
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    return v0
.end method

.method public isInAllowedList(Ljava/lang/String;)Z
    .registers 3
    .param p1, "packageName"    # Ljava/lang/String;

    .line 11891
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/PackageListHelper;->isInAllowedList(Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public isInCommunication()Z
    .registers 8

    .line 5251
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsPttCallVolumeEnabled:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_6

    .line 5252
    return v1

    .line 5255
    :cond_6
    const/4 v0, 0x0

    .line 5257
    .local v0, "IsInCall":Z
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 5258
    const-string/jumbo v3, "telecom"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/telecom/TelecomManager;

    .line 5260
    .local v2, "telecomManager":Landroid/telecom/TelecomManager;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 5261
    .local v3, "ident":J
    invoke-virtual {v2}, Landroid/telecom/TelecomManager;->isInCall()Z

    move-result v0

    .line 5262
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5264
    if-nez v0, :cond_30

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v5

    const/4 v6, 0x3

    if-eq v5, v6, :cond_30

    .line 5265
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v5

    const/4 v6, 0x2

    if-ne v5, v6, :cond_2e

    goto :goto_30

    :cond_2e
    const/4 v1, 0x0

    goto :goto_31

    :cond_30
    :goto_30
    nop

    .line 5264
    :goto_31
    return v1
.end method

.method public isMasterMute()Z
    .registers 2

    .line 3569
    invoke-static {}, Landroid/media/AudioSystem;->getMasterMute()Z

    move-result v0

    return v0
.end method

.method public isMicrophoneMuted()Z
    .registers 2

    .line 3698
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    return v0
.end method

.method public isMultiAudioFocusEnabled()Z
    .registers 2

    .line 14027
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMultiAudioFocusEnabled:Z

    return v0
.end method

.method public isMultiSoundOn()Z
    .registers 2

    .line 12030
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    if-nez v0, :cond_6

    const/4 v0, 0x0

    return v0

    .line 12031
    :cond_6
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->isEnabled()Z

    move-result v0

    return v0
.end method

.method isPlatformAutomotive()Z
    .registers 3

    .line 317
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "android.hardware.type.automotive"

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method isPlatformTelevision()Z
    .registers 3

    .line 313
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_7

    const/4 v0, 0x1

    goto :goto_8

    :cond_7
    const/4 v0, 0x0

    :goto_8
    return v0
.end method

.method public isPlaybackActiveForUid(I)Z
    .registers 3
    .param p1, "uid"    # I

    .line 12080
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->isPlaybackActiveForUid(I)Z

    move-result v0

    return v0
.end method

.method public isSafeMediaVolumeStateActive()Z
    .registers 3

    .line 13331
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v0, :cond_b

    .line 13332
    iget v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeStateForBlueTooth:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_b

    .line 13333
    const/4 v0, 0x1

    return v0

    .line 13336
    :cond_b
    const/4 v0, 0x0

    return v0
.end method

.method isSelfiestickIsConnected()Z
    .registers 2

    .line 14094
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSelfiestickIsConnected:Z

    return v0
.end method

.method public isSpeakerphoneOn()Z
    .registers 2

    .line 4674
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isSpeakerphoneOn()Z

    move-result v0

    return v0
.end method

.method public isStreamAffectedByMute(I)Z
    .registers 5
    .param p1, "streamType"    # I

    .line 5220
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    const/4 v1, 0x1

    shl-int v2, v1, p1

    and-int/2addr v0, v2

    if-eqz v0, :cond_9

    goto :goto_a

    :cond_9
    const/4 v1, 0x0

    :goto_a
    return v1
.end method

.method public isStreamAffectedByRingerMode(I)Z
    .registers 5
    .param p1, "streamType"    # I

    .line 5075
    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    const/4 v1, 0x1

    shl-int v2, v1, p1

    and-int/2addr v0, v2

    if-eqz v0, :cond_9

    goto :goto_a

    :cond_9
    const/4 v1, 0x0

    :goto_a
    return v1
.end method

.method public isStreamMute(I)Z
    .registers 4
    .param p1, "streamType"    # I

    .line 3407
    const/high16 v0, -0x80000000

    if-ne p1, v0, :cond_8

    .line 3408
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    move-result p1

    .line 3410
    :cond_8
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 3411
    :try_start_b
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 3412
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z
    invoke-static {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1000(Lcom/android/server/audio/AudioService$VolumeStreamState;)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 3413
    :catchall_18
    move-exception v1

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_b .. :try_end_1a} :catchall_18

    throw v1
.end method

.method public isUsingAudio(I)Z
    .registers 9
    .param p1, "uid"    # I

    .line 13904
    const-string v0, "AS.AudioService"

    const/4 v1, 0x0

    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isAudioServerRunning()Z

    move-result v2

    if-nez v2, :cond_1b

    .line 13905
    sget-object v2, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v3, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    const-string/jumbo v4, "isUsingAudio audioserver is died"

    invoke-direct {v3, v4}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 13906
    invoke-virtual {v3, v0}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v3

    .line 13905
    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V
    :try_end_1a
    .catch Ljava/lang/SecurityException; {:try_start_3 .. :try_end_1a} :catch_66

    .line 13907
    return v1

    .line 13913
    :cond_1b
    nop

    .line 13915
    new-instance v2, Lcom/samsung/android/media/AudioParameter$Builder;

    invoke-direct {v2}, Lcom/samsung/android/media/AudioParameter$Builder;-><init>()V

    .line 13916
    const-string/jumbo v3, "l_is_using_audio"

    invoke-virtual {v2, v3, p1}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;I)Lcom/samsung/android/media/AudioParameter$Builder;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/media/AudioParameter$Builder;->build()Lcom/samsung/android/media/AudioParameter;

    move-result-object v2

    .line 13917
    .local v2, "param":Lcom/samsung/android/media/AudioParameter;
    invoke-virtual {v2}, Lcom/samsung/android/media/AudioParameter;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 13918
    .local v3, "ret":Ljava/lang/String;
    const-string/jumbo v4, "true"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_65

    .line 13919
    sget-object v1, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v4, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "uid:"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v6, "is using audio"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 13920
    invoke-virtual {v4, v0}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v0

    .line 13919
    invoke-virtual {v1, v0}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 13921
    const/4 v0, 0x1

    return v0

    .line 13923
    :cond_65
    return v1

    .line 13909
    .end local v2    # "param":Lcom/samsung/android/media/AudioParameter;
    .end local v3    # "ret":Ljava/lang/String;
    :catch_66
    move-exception v2

    .line 13910
    .local v2, "e":Ljava/lang/SecurityException;
    sget-object v3, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v4, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "isUsingAudio permission error"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 13911
    invoke-virtual {v4, v0}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v0

    .line 13910
    invoke-virtual {v3, v0}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 13912
    return v1
.end method

.method public isValidRingerMode(I)Z
    .registers 3
    .param p1, "ringerMode"    # I

    .line 3771
    if-ltz p1, :cond_7

    const/4 v0, 0x2

    if-gt p1, v0, :cond_7

    const/4 v0, 0x1

    goto :goto_8

    :cond_7
    const/4 v0, 0x0

    :goto_8
    return v0
.end method

.method public isWiredHeadsetOrHeadphonePlugged()Z
    .registers 2

    .line 14624
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getObservedDevicesForMedia()I

    move-result v0

    and-int/lit8 v0, v0, 0xc

    if-eqz v0, :cond_a

    const/4 v0, 0x1

    goto :goto_b

    :cond_a
    const/4 v0, 0x0

    :goto_b
    return v0
.end method

.method public synthetic lambda$handleCustomMessage$1$AudioService(I)V
    .registers 4
    .param p1, "state"    # I

    .line 10564
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 10565
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/DvfsHelper;->getIsScreenOn()Z

    move-result v1

    .line 10564
    invoke-static {v0, p1, v1}, Lcom/samsung/android/server/audio/SoundAliveHelper;->notifyDVFSToSoundAlive(Landroid/content/Context;IZ)V

    return-void
.end method

.method public synthetic lambda$onCustomSystemReady$2$AudioService()V
    .registers 4

    .line 11087
    const-class v0, Landroid/media/AudioManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/media/AudioManagerInternal;

    .line 11088
    .local v0, "manager":Landroid/media/AudioManagerInternal;
    if-eqz v0, :cond_14

    .line 11089
    new-instance v1, Lcom/samsung/android/server/audio/SamsungRingerModeDelegate;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v1, v2}, Lcom/samsung/android/server/audio/SamsungRingerModeDelegate;-><init>(Landroid/content/Context;)V

    invoke-virtual {v0, v1}, Landroid/media/AudioManagerInternal;->setRingerModeDelegate(Landroid/media/AudioManagerInternal$RingerModeDelegate;)V

    .line 11091
    :cond_14
    return-void
.end method

.method public synthetic lambda$onRunSoundAssistant$3$AudioService()V
    .registers 6

    .line 12474
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mActivityManager:Landroid/app/ActivityManager;

    .line 12475
    const v1, 0x7fffffff

    invoke-virtual {v0, v1}, Landroid/app/ActivityManager;->getRunningServices(I)Ljava/util/List;

    move-result-object v0

    .line 12474
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_d
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_3a

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/ActivityManager$RunningServiceInfo;

    .line 12477
    .local v1, "service":Landroid/app/ActivityManager$RunningServiceInfo;
    iget-object v3, v1, Landroid/app/ActivityManager$RunningServiceInfo;->service:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v3

    const-string v4, "com.sec.android.soundassistant.services.SoundAssistService"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_39

    .line 12478
    const-string v0, "AS.AudioService"

    const-string v3, "SoundAssistant already started"

    invoke-static {v0, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12480
    const-wide/16 v3, 0x3e8

    :try_start_31
    invoke-static {v3, v4}, Ljava/lang/Thread;->sleep(J)V
    :try_end_34
    .catch Ljava/lang/Exception; {:try_start_31 .. :try_end_34} :catch_35

    .line 12482
    goto :goto_36

    .line 12481
    :catch_35
    move-exception v0

    .line 12483
    :goto_36
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mStartingSoundAssistant:Z

    .line 12484
    return-void

    .line 12486
    .end local v1    # "service":Landroid/app/ActivityManager$RunningServiceInfo;
    :cond_39
    goto :goto_d

    .line 12489
    :cond_3a
    :try_start_3a
    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->startSoundAssistantService(I)V

    .line 12490
    const-wide/16 v0, 0xbb8

    invoke-static {v0, v1}, Ljava/lang/Thread;->sleep(J)V
    :try_end_42
    .catch Ljava/lang/Exception; {:try_start_3a .. :try_end_42} :catch_43

    .line 12492
    goto :goto_44

    .line 12491
    :catch_43
    move-exception v0

    .line 12493
    :goto_44
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mStartingSoundAssistant:Z

    .line 12494
    return-void
.end method

.method public synthetic lambda$sendBroadcastNoisyIntent$4$AudioService(IIII)V
    .registers 9
    .param p1, "streamType"    # I
    .param p2, "idx"    # I
    .param p3, "oldIdx"    # I
    .param p4, "flags"    # I

    .line 14557
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.media.VOLUME_CHANGED_ACTION"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 14558
    .local v0, "intent":Landroid/content/Intent;
    const-string v1, "android.media.EXTRA_VOLUME_STREAM_TYPE"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 14559
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    move-result v1

    const/4 v2, 0x0

    const-string v3, "android.media.EXTRA_VOLUME_STREAM_VALUE"

    if-eqz v1, :cond_19

    .line 14560
    invoke-virtual {v0, v3, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    goto :goto_1c

    .line 14562
    :cond_19
    invoke-virtual {v0, v3, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 14564
    :goto_1c
    const-string v1, "android.media.EXTRA_PREV_VOLUME_STREAM_VALUE"

    invoke-virtual {v0, v1, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 14565
    and-int/lit8 v1, p4, 0x1

    const/4 v3, 0x1

    if-eqz v1, :cond_27

    move v2, v3

    :cond_27
    const-string v1, "android.media.EXTRA_VOLUME_SHOW_UI"

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 14567
    const/high16 v1, 0x400000

    and-int/2addr v1, p4

    if-eqz v1, :cond_3e

    .line 14568
    const-string v1, "AS.AudioService"

    const-string v2, "Do not play volume index information through Voice Assistant"

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14569
    const-string/jumbo v1, "voice_assistant_bypass"

    invoke-virtual {v0, v1, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 14571
    :cond_3e
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 14572
    return-void
.end method

.method public loadSoundEffects()Z
    .registers 10

    .line 4548
    new-instance v0, Lcom/android/server/audio/AudioService$LoadSoundEffectReply;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lcom/android/server/audio/AudioService$LoadSoundEffectReply;-><init>(Lcom/android/server/audio/AudioService$1;)V

    .line 4549
    .local v0, "reply":Lcom/android/server/audio/AudioService$LoadSoundEffectReply;
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v3, 0x7

    const/4 v4, 0x2

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    move-object v7, v0

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4550
    const/4 v1, 0x3

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService$LoadSoundEffectReply;->waitForLoaded(I)Z

    move-result v1

    return v1
.end method

.method muteRingtoneDuringVibration()V
    .registers 3

    .line 13710
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_17

    .line 13711
    iget v0, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    if-ne v0, v1, :cond_17

    .line 13712
    const-string v0, "AS.AudioService"

    const-string v1, "SPK ringtone volume set to 0 !!!"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13713
    const/4 v0, 0x0

    const/4 v1, 0x2

    invoke-static {v1, v0, v1}, Landroid/media/AudioSystem;->setStreamVolumeIndexAS(III)I

    .line 13717
    :cond_17
    return-void
.end method

.method public notifyVolumeControllerVisible(Landroid/media/IVolumeController;Z)V
    .registers 5
    .param p1, "controller"    # Landroid/media/IVolumeController;
    .param p2, "visible"    # Z

    .line 8616
    const-string/jumbo v0, "notify about volume controller visibility"

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 8619
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioService$VolumeController;->isSameBinder(Landroid/media/IVolumeController;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 8620
    return-void

    .line 8623
    :cond_f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/AudioService$VolumeController;->setVisible(Z)V

    .line 8624
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Volume controller visible: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8625
    return-void
.end method

.method public onAccessibilityServicesStateChanged(Landroid/view/accessibility/AccessibilityManager;)V
    .registers 4
    .param p1, "accessibilityManager"    # Landroid/view/accessibility/AccessibilityManager;

    .line 8293
    const/16 v0, 0x20

    invoke-virtual {p1, v0}, Landroid/view/accessibility/AccessibilityManager;->semIsAccessibilityServiceEnabled(I)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 8296
    const/16 v1, 0x10

    invoke-virtual {p1, v1}, Landroid/view/accessibility/AccessibilityManager;->semIsAccessibilityServiceEnabled(I)Z

    move-result v1

    or-int/2addr v0, v1

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 8299
    invoke-virtual {p1}, Landroid/view/accessibility/AccessibilityManager;->isAccessibilityVolumeStreamActive()Z

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->updateA11yVolumeAlias(Z)V

    .line 8300
    return-void
.end method

.method public onAudioServerDied()V
    .registers 13

    .line 1186
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    if-eqz v0, :cond_26f

    .line 1187
    invoke-static {}, Landroid/media/AudioSystem;->checkAudioFlinger()I

    move-result v0

    if-eqz v0, :cond_c

    goto/16 :goto_26f

    .line 1193
    :cond_c
    const-string v0, "AS.AudioService"

    const-string v1, "Audioserver started."

    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1195
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->updateAudioHalPids()V

    .line 1202
    const-string/jumbo v0, "restarting=true"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 1204
    invoke-static {}, Lcom/android/server/audio/AudioService;->readAndSetLowRamDevice()V

    .line 1206
    invoke-static {}, Landroid/media/AudioSystem;->isCallScreeningModeSupported()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 1209
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->onRestoreAudioServerDied()V

    .line 1213
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->onAudioServerDied()V

    .line 1215
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mBtDeviceForOffloadState:Landroid/bluetooth/BluetoothDevice;

    if-eqz v0, :cond_34

    .line 1216
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->handleBluetoothA2dpDeviceConfigChange(Landroid/bluetooth/BluetoothDevice;)V

    .line 1219
    :cond_34
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    monitor-enter v0

    .line 1220
    :try_start_39
    iget v1, p0, Lcom/android/server/audio/AudioService;->mMode:I

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getModeOwnerUid()I

    move-result v2

    invoke-static {v1, v2}, Landroid/media/AudioSystem;->setPhoneState(II)I

    move-result v1

    if-nez v1, :cond_78

    .line 1222
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v2, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "onAudioServerDied causes setPhoneState("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, p0, Lcom/android/server/audio/AudioService;->mMode:I

    .line 1223
    invoke-static {v4}, Landroid/media/AudioSystem;->modeToString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ", uid="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1224
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getModeOwnerUid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ")"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 1222
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 1226
    :cond_78
    monitor-exit v0
    :try_end_79
    .catchall {:try_start_39 .. :try_end_79} :catchall_26c

    .line 1228
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1229
    :try_start_7c
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    const/4 v2, 0x0

    if-eqz v0, :cond_84

    .line 1230
    const/16 v0, 0xb

    goto :goto_85

    :cond_84
    move v0, v2

    .line 1231
    .local v0, "forSys":I
    :goto_85
    monitor-exit v1
    :try_end_86
    .catchall {:try_start_7c .. :try_end_86} :catchall_269

    .line 1233
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v3, 0x4

    const-string/jumbo v4, "onAudioServerDied"

    invoke-virtual {v1, v3, v0, v4}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 1236
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v3

    .line 1237
    .local v3, "numStreamTypes":I
    add-int/lit8 v1, v3, -0x1

    .local v1, "streamType":I
    :goto_95
    if-ltz v1, :cond_b1

    .line 1238
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v1

    .line 1239
    .local v4, "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    nop

    .line 1240
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I
    invoke-static {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$800(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v5

    div-int/lit8 v5, v5, 0xa

    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I
    invoke-static {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$900(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v6

    div-int/lit8 v6, v6, 0xa

    .line 1239
    invoke-static {v1, v5, v6}, Landroid/media/AudioSystem;->initStreamVolume(III)I

    .line 1242
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyAllVolumes()V

    .line 1237
    .end local v4    # "streamState":Lcom/android/server/audio/AudioService$VolumeStreamState;
    add-int/lit8 v1, v1, -0x1

    goto :goto_95

    .line 1246
    .end local v1    # "streamType":I
    :cond_b1
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->restoreVolumeGroups()V

    .line 1249
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->updateMasterMono(Landroid/content/ContentResolver;)V

    .line 1252
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->updateMasterBalance(Landroid/content/ContentResolver;)V

    .line 1255
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v1

    invoke-direct {p0, v1, v2}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 1258
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    if-eqz v1, :cond_cc

    .line 1259
    invoke-static {}, Lcom/android/server/audio/RotationHelper;->updateOrientation()V

    .line 1262
    :cond_cc
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v4

    .line 1263
    :try_start_cf
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mDockAudioMediaEnabled:Z

    if-eqz v1, :cond_d6

    .line 1264
    const/16 v1, 0x8

    goto :goto_d7

    :cond_d6
    move v1, v2

    .line 1265
    .local v1, "forDock":I
    :goto_d7
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v6, 0x3

    const-string/jumbo v7, "onAudioServerDied"

    invoke-virtual {v5, v6, v1, v7}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 1266
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v6, "onAudioServerDied"

    invoke-direct {p0, v5, v6}, Lcom/android/server/audio/AudioService;->sendEncodedSurroundMode(Landroid/content/ContentResolver;Ljava/lang/String;)V

    .line 1267
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const/4 v6, 0x1

    invoke-direct {p0, v5, v6}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    .line 1268
    invoke-direct {p0, v6}, Lcom/android/server/audio/AudioService;->updateAssistantUId(Z)V

    .line 1269
    iget-boolean v5, p0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    invoke-static {v5}, Landroid/media/AudioSystem;->setRttEnabled(Z)I

    .line 1270
    nop

    .end local v1    # "forDock":I
    monitor-exit v4
    :try_end_f8
    .catchall {:try_start_cf .. :try_end_f8} :catchall_266

    .line 1271
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1272
    :try_start_fb
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    invoke-static {v4}, Landroid/media/AudioSystem;->setA11yServicesUids([I)I

    .line 1273
    monitor-exit v1
    :try_end_101
    .catchall {:try_start_fb .. :try_end_101} :catchall_263

    .line 1274
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUidLock:Ljava/lang/Object;

    monitor-enter v4

    .line 1275
    :try_start_104
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    iget v5, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUid:I

    invoke-virtual {v1, v5}, Lcom/android/server/audio/AudioSystemAdapter;->setCurrentImeUid(I)I

    .line 1276
    monitor-exit v4
    :try_end_10c
    .catchall {:try_start_104 .. :try_end_10c} :catchall_260

    .line 1277
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1278
    :try_start_10f
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v4, :cond_11c

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-eqz v4, :cond_11c

    .line 1279
    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    invoke-virtual {p0, v4}, Lcom/android/server/audio/AudioService;->setHdmiSystemAudioSupported(Z)I

    .line 1281
    :cond_11c
    monitor-exit v1
    :try_end_11d
    .catchall {:try_start_10f .. :try_end_11d} :catchall_25d

    .line 1283
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    monitor-enter v4

    .line 1284
    :try_start_120
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    invoke-static {v1}, Landroid/media/AudioSystem;->setSupportedSystemUsages([I)I

    .line 1285
    monitor-exit v4
    :try_end_126
    .catchall {:try_start_120 .. :try_end_126} :catchall_25a

    .line 1287
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v1

    .line 1288
    :try_start_129
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_133
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_1a1

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 1289
    .local v5, "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->connectMixes()I

    move-result v7

    .line 1290
    .local v7, "status":I
    if-eqz v7, :cond_170

    .line 1292
    const-string v8, "AS.AudioService"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "onAudioServerDied: error "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1293
    invoke-static {v7}, Landroid/media/AudioSystem;->audioSystemErrorToString(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " when connecting mixes for policy "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1294
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->toLogFriendlyString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 1292
    invoke-static {v8, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1295
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->release()V

    goto :goto_1a0

    .line 1297
    :cond_170
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->setupDeviceAffinities()I

    move-result v8

    .line 1298
    .local v8, "deviceAffinitiesStatus":I
    if-eqz v8, :cond_1a0

    .line 1299
    const-string v9, "AS.AudioService"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "onAudioServerDied: error "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1300
    invoke-static {v8}, Landroid/media/AudioSystem;->audioSystemErrorToString(I)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v11, " when connecting device affinities for policy "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1302
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->toLogFriendlyString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 1299
    invoke-static {v9, v10}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1303
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->release()V

    .line 1306
    .end local v5    # "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    .end local v7    # "status":I
    .end local v8    # "deviceAffinitiesStatus":I
    :cond_1a0
    :goto_1a0
    goto :goto_133

    .line 1307
    :cond_1a1
    monitor-exit v1
    :try_end_1a2
    .catchall {:try_start_129 .. :try_end_1a2} :catchall_257

    .line 1310
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    monitor-enter v4

    .line 1311
    :try_start_1a5
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 1312
    invoke-virtual {v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->getAllAllowedCapturePolicies()Ljava/util/HashMap;

    move-result-object v1

    .line 1313
    .local v1, "allowedCapturePolicies":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/Integer;>;"
    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_1b3
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_21c

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/util/Map$Entry;

    .line 1314
    .local v7, "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/Integer;Ljava/lang/Integer;>;"
    nop

    .line 1315
    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/lang/Integer;

    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I

    move-result v8

    .line 1316
    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/Integer;

    invoke-virtual {v9}, Ljava/lang/Integer;->intValue()I

    move-result v9

    invoke-static {v9, v2}, Landroid/media/AudioAttributes;->capturePolicyToFlags(II)I

    move-result v9

    .line 1314
    invoke-static {v8, v9}, Landroid/media/AudioSystem;->setAllowedCapturePolicy(II)I

    move-result v8

    .line 1317
    .local v8, "result":I
    if-eqz v8, :cond_21b

    .line 1318
    const-string v9, "AS.AudioService"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Failed to restore capture policy, uid: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1319
    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v11, ", capture policy: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v11, ", result: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    .line 1318
    invoke-static {v9, v10}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1324
    iget-object v9, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 1325
    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/Integer;

    invoke-virtual {v10}, Ljava/lang/Integer;->intValue()I

    move-result v10

    .line 1324
    invoke-virtual {v9, v10, v6}, Lcom/android/server/audio/PlaybackActivityMonitor;->setAllowedCapturePolicy(II)V

    .line 1327
    .end local v7    # "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/Integer;Ljava/lang/Integer;>;"
    .end local v8    # "result":I
    :cond_21b
    goto :goto_1b3

    .line 1328
    .end local v1    # "allowedCapturePolicies":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/Integer;>;"
    :cond_21c
    monitor-exit v4
    :try_end_21d
    .catchall {:try_start_1a5 .. :try_end_21d} :catchall_254

    .line 1330
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->onIndicateSystemReady()V

    .line 1333
    const-string/jumbo v1, "restarting=false"

    invoke-static {v1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 1336
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const/16 v2, 0x20

    const-string/jumbo v4, "ring_through_headset"

    invoke-virtual {v1, v4, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 1339
    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->setHeadsetOnlyStream(I)V

    .line 1342
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v5, 0x17

    const/4 v6, 0x2

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1345
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v1

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 1346
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setMicMuteFromSwitchInput()V

    .line 1348
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioGameManager:Lcom/samsung/android/server/audio/AudioGameManager;

    if-eqz v1, :cond_253

    .line 1349
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/AudioGameManager;->setParamGameUidList()V

    .line 1351
    :cond_253
    return-void

    .line 1328
    :catchall_254
    move-exception v1

    :try_start_255
    monitor-exit v4
    :try_end_256
    .catchall {:try_start_255 .. :try_end_256} :catchall_254

    throw v1

    .line 1307
    :catchall_257
    move-exception v2

    :try_start_258
    monitor-exit v1
    :try_end_259
    .catchall {:try_start_258 .. :try_end_259} :catchall_257

    throw v2

    .line 1285
    :catchall_25a
    move-exception v1

    :try_start_25b
    monitor-exit v4
    :try_end_25c
    .catchall {:try_start_25b .. :try_end_25c} :catchall_25a

    throw v1

    .line 1281
    :catchall_25d
    move-exception v2

    :try_start_25e
    monitor-exit v1
    :try_end_25f
    .catchall {:try_start_25e .. :try_end_25f} :catchall_25d

    throw v2

    .line 1276
    :catchall_260
    move-exception v1

    :try_start_261
    monitor-exit v4
    :try_end_262
    .catchall {:try_start_261 .. :try_end_262} :catchall_260

    throw v1

    .line 1273
    :catchall_263
    move-exception v2

    :try_start_264
    monitor-exit v1
    :try_end_265
    .catchall {:try_start_264 .. :try_end_265} :catchall_263

    throw v2

    .line 1270
    :catchall_266
    move-exception v1

    :try_start_267
    monitor-exit v4
    :try_end_268
    .catchall {:try_start_267 .. :try_end_268} :catchall_266

    throw v1

    .line 1231
    .end local v0    # "forSys":I
    .end local v3    # "numStreamTypes":I
    :catchall_269
    move-exception v0

    :try_start_26a
    monitor-exit v1
    :try_end_26b
    .catchall {:try_start_26a .. :try_end_26b} :catchall_269

    throw v0

    .line 1226
    :catchall_26c
    move-exception v1

    :try_start_26d
    monitor-exit v0
    :try_end_26e
    .catchall {:try_start_26d .. :try_end_26e} :catchall_26c

    throw v1

    .line 1188
    :cond_26f
    :goto_26f
    const-string v0, "AS.AudioService"

    const-string v1, "Audioserver died."

    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1189
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v3, 0x4

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/16 v8, 0x1f4

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1191
    return-void
.end method

.method onBootCompleted()V
    .registers 8

    .line 10421
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x76

    const/4 v2, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/16 v6, 0x7530

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 10423
    new-instance v0, Lcom/samsung/android/server/audio/AudioGameManager;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1}, Lcom/samsung/android/server/audio/AudioGameManager;-><init>(Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioGameManager:Lcom/samsung/android/server/audio/AudioGameManager;

    .line 10426
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/server/audio/CoverHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/CoverHelper;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    .line 10439
    const-string/jumbo v0, "g_fmradio_enable=false"

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 10441
    return-void
.end method

.method onIndicateSystemReady()V
    .registers 9

    .line 1170
    invoke-static {}, Landroid/media/AudioSystem;->systemReady()I

    move-result v0

    if-nez v0, :cond_d

    .line 1172
    const-string/jumbo v0, "l_system_ready"

    invoke-static {v0}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 1174
    return-void

    .line 1176
    :cond_d
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x14

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/16 v7, 0x3e8

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1183
    return-void
.end method

.method onRestoreAudioServerDied()V
    .registers 6

    .line 11097
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    const-string v1, "AS.AudioService"

    if-eqz v0, :cond_33

    .line 11098
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "g_effect_dv_adapt_sound="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 11099
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "audioserverdied - setAdaptSound: gain dv dha Parameter : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11102
    :cond_33
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v0

    if-eqz v0, :cond_c7

    .line 11103
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 11104
    .local v0, "parameters":Ljava/lang/StringBuilder;
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMode:I

    const/4 v3, 0x2

    const-string v4, ";"

    if-ne v2, v3, :cond_8e

    .line 11105
    const-string/jumbo v2, "g_call_state=2;"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11106
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    if-eqz v2, :cond_5d

    .line 11107
    const-string/jumbo v2, "g_call_sim_slot="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11109
    :cond_5d
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    const-string v3, "false"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_75

    .line 11110
    const-string/jumbo v2, "g_call_memo_state="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11112
    :cond_75
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    const-string/jumbo v3, "true"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_8e

    .line 11113
    const-string/jumbo v2, "g_call_forwarding_enable="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11123
    :cond_8e
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    move-result v2

    if-eqz v2, :cond_ab

    .line 11124
    const-string v2, "bt_headset_nrec="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mBtNrec:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ";g_sco_samplerate="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mBtSampleRate:Ljava/lang/String;

    .line 11125
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11127
    :cond_ab
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "onAudioServerDied(): "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11128
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 11138
    .end local v0    # "parameters":Ljava/lang/StringBuilder;
    :cond_c7
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "l_uhq_bt="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, p0, Lcom/android/server/audio/AudioService;->mUhqBtSampleRate:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 11141
    iget v0, p0, Lcom/android/server/audio/AudioService;->mNbQualityMode:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setNbQualityMode(I)V

    .line 11144
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setAllSoundMute()V

    .line 11147
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->resetByAudioServerDied()V

    .line 11150
    iget v0, p0, Lcom/android/server/audio/AudioService;->mUpscalerEnabled:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setUpscalerMode(I)V

    .line 11151
    new-instance v0, Landroid/content/Intent;

    const-string v1, "com.samsung.intent.action.MEDIA_SERVER_REBOOTED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11152
    .local v0, "intent":Landroid/content/Intent;
    sget-object v1, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-direct {p0, v0, v1}, Lcom/android/server/audio/AudioService;->sendBroadcastToUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 11154
    .end local v0    # "intent":Landroid/content/Intent;
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isFMPlayerActive()Z

    move-result v0

    if-eqz v0, :cond_114

    .line 11155
    const/16 v0, 0x8

    iget v1, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    invoke-static {v0, v1}, Landroid/media/AudioSystem;->setForceUse(II)I

    .line 11158
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const v1, -0x7fffe000

    const/4 v2, 0x1

    const-string v3, "dummy"

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/audio/AudioDeviceBroker;->handleFmRadioDeviceConnection(IILjava/lang/String;)V

    .line 11161
    :cond_114
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_KARAOKE_LISTENBACK:Z

    if-eqz v0, :cond_11d

    .line 11162
    iget v0, p0, Lcom/android/server/audio/AudioService;->mKaraokeListenbackEnabled:I

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setKaraokeListenback(I)V

    .line 11167
    :cond_11d
    return-void
.end method

.method onSetAppDevice(Ljava/lang/String;IIZ)V
    .registers 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "device"    # I
    .param p4, "shouldShowNotification"    # Z

    .line 12042
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p2, p3, p4}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppDevice(IIZ)V

    .line 12043
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0, p2}, Lcom/android/server/audio/MediaFocusControl;->updateFocusRequester(I)V

    .line 12045
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.MULTISOUND_STATE_CHANGE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12046
    .local v0, "setDeviceIntent":Landroid/content/Intent;
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;)V

    .line 12048
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    const/4 v2, -0x1

    if-eqz v1, :cond_20

    .line 12049
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v3

    invoke-virtual {v1, v2, v3}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->updateMultiSoundInfo(IZ)V

    .line 12051
    :cond_20
    if-eqz p4, :cond_27

    .line 12052
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->showNotification()V

    .line 12055
    :cond_27
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 12057
    .local v3, "ident":J
    const/4 v1, -0x1

    .line 12058
    .local v1, "multiSoundDevice":I
    const/16 v5, 0x80

    if-ne p3, v5, :cond_32

    .line 12059
    const/4 v1, 0x1

    goto :goto_36

    .line 12060
    :cond_32
    const/4 v5, 0x2

    if-ne p3, v5, :cond_36

    .line 12061
    const/4 v1, 0x0

    .line 12064
    :cond_36
    :goto_36
    const-string/jumbo v5, "multisound_app"

    if-eq v1, v2, :cond_49

    .line 12065
    :try_start_3b
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-static {v2, v5, p1}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 12066
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v5, "multisound_devicetype"

    invoke-static {v2, v5, v1}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto :goto_5b

    .line 12069
    :cond_49
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-static {v2, v5}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 12070
    .local v2, "curMultiSoundApp":Ljava/lang/String;
    invoke-static {v2, p1}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v6

    if-eqz v6, :cond_5b

    .line 12071
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const/4 v7, 0x0

    invoke-static {v6, v5, v7}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_5b
    .catchall {:try_start_3b .. :try_end_5b} :catchall_60

    .line 12075
    .end local v1    # "multiSoundDevice":I
    .end local v2    # "curMultiSoundApp":Ljava/lang/String;
    :cond_5b
    :goto_5b
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12076
    nop

    .line 12077
    return-void

    .line 12075
    :catchall_60
    move-exception v1

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12076
    throw v1
.end method

.method public onSystemReady()V
    .registers 11

    .line 1078
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 1079
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->scheduleLoadSoundEffects()V

    .line 1081
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v1}, Lcom/android/server/audio/AudioDeviceBroker;->onSystemReady()V

    .line 1083
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.hardware.hdmi.cec"

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_65

    .line 1084
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1085
    :try_start_1d
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHdmiCecSink:Z

    .line 1086
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-class v4, Landroid/hardware/hdmi/HdmiControlManager;

    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/hardware/hdmi/HdmiControlManager;

    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 1087
    if-eqz v3, :cond_3f

    .line 1088
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mHdmiControlStatusChangeListenerCallback:Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

    invoke-virtual {v3, v4}, Landroid/hardware/hdmi/HdmiControlManager;->addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/HdmiControlManager$HdmiControlStatusChangeListener;)V

    .line 1090
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getMainExecutor()Ljava/util/concurrent/Executor;

    move-result-object v4

    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mMyHdmiCecVolumeControlFeatureListener:Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

    invoke-virtual {v3, v4, v5}, Landroid/hardware/hdmi/HdmiControlManager;->addHdmiCecVolumeControlFeatureListener(Ljava/util/concurrent/Executor;Landroid/hardware/hdmi/HdmiControlManager$HdmiCecVolumeControlFeatureListener;)V

    .line 1093
    :cond_3f
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    invoke-virtual {v3}, Landroid/hardware/hdmi/HdmiControlManager;->getTvClient()Landroid/hardware/hdmi/HdmiTvClient;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    .line 1094
    if-eqz v3, :cond_50

    .line 1095
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    sget-object v4, Landroid/media/AudioSystem;->DEVICE_ALL_HDMI_SYSTEM_AUDIO_AND_SPEAKER_SET:Ljava/util/Set;

    invoke-interface {v3, v4}, Ljava/util/Set;->removeAll(Ljava/util/Collection;)Z

    .line 1098
    :cond_50
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    invoke-virtual {v3}, Landroid/hardware/hdmi/HdmiControlManager;->getPlaybackClient()Landroid/hardware/hdmi/HdmiPlaybackClient;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    .line 1099
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    invoke-virtual {v3}, Landroid/hardware/hdmi/HdmiControlManager;->getAudioSystemClient()Landroid/hardware/hdmi/HdmiAudioSystemClient;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 1100
    monitor-exit v1

    goto :goto_65

    :catchall_62
    move-exception v0

    monitor-exit v1
    :try_end_64
    .catchall {:try_start_1d .. :try_end_64} :catchall_62

    throw v0

    .line 1103
    :cond_65
    :goto_65
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "notification"

    invoke-virtual {v1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/NotificationManager;

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 1105
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v4, 0xd

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 1111
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    xor-int/2addr v0, v1

    const-string v1, "audio.safemedia.bypass"

    invoke-static {v1, v0}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_85

    .line 1113
    goto :goto_87

    :cond_85
    const/16 v2, 0x7530

    :goto_87
    move v9, v2

    .line 1105
    const-string v8, "AS.AudioService"

    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1115
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->initA11yMonitoring()V

    .line 1117
    new-instance v0, Lcom/android/server/audio/AudioService$RoleObserver;

    invoke-direct {v0, p0}, Lcom/android/server/audio/AudioService$RoleObserver;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mRoleObserver:Lcom/android/server/audio/AudioService$RoleObserver;

    .line 1118
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$RoleObserver;->register()V

    .line 1120
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->onIndicateSystemReady()V

    .line 1122
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioSystemAdapter;->isMicrophoneMuted()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 1123
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setMicMuteFromSwitchInput()V

    .line 1124
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->initMinStreamVolumeWithoutModifyAudioSettings()V

    .line 1130
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->onCustomSystemReady()V

    .line 1132
    return-void
.end method

.method public onTouchExplorationStateChanged(Z)V
    .registers 2
    .param p1, "enabled"    # Z

    .line 8270
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->updateDefaultStreamOverrideDelay(Z)V

    .line 8271
    return-void
.end method

.method public playSoundEffect(I)V
    .registers 3
    .param p1, "effectType"    # I

    .line 4524
    const/high16 v0, -0x40800000    # -1.0f

    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->playSoundEffectVolume(IF)V

    .line 4525
    return-void
.end method

.method public playSoundEffectVolume(IF)V
    .registers 11
    .param p1, "effectType"    # I
    .param p2, "volume"    # F

    .line 4530
    const/4 v0, 0x1

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 4531
    return-void

    .line 4534
    :cond_8
    const/16 v0, 0xe

    if-ge p1, v0, :cond_1e

    if-gez p1, :cond_f

    goto :goto_1e

    .line 4539
    :cond_f
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v2, 0x5

    const/4 v3, 0x2

    const/high16 v0, 0x447a0000    # 1000.0f

    mul-float/2addr v0, p2

    float-to-int v5, v0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move v4, p1

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4541
    return-void

    .line 4535
    :cond_1e
    :goto_1e
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "AudioService effectType value "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " out of range"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4536
    return-void
.end method

.method public playerAttributes(ILandroid/media/AudioAttributes;)V
    .registers 5
    .param p1, "piid"    # I
    .param p2, "attr"    # Landroid/media/AudioAttributes;

    .line 9487
    if-eqz p2, :cond_5

    .line 9488
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V

    .line 9490
    :cond_5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, p1, p2, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->playerAttributes(ILandroid/media/AudioAttributes;I)V

    .line 9491
    return-void
.end method

.method public playerEvent(II)V
    .registers 5
    .param p1, "piid"    # I
    .param p2, "event"    # I

    .line 9494
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, p1, p2, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->playerEvent(III)V

    .line 9495
    return-void
.end method

.method public playerHasOpPlayAudio(IZ)V
    .registers 5
    .param p1, "piid"    # I
    .param p2, "hasOpPlayAudio"    # Z

    .line 9498
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, p1, p2, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->playerHasOpPlayAudio(IZI)V

    .line 9499
    return-void
.end method

.method public postAccessoryPlugMediaUnmute(I)V
    .registers 9
    .param p1, "newDevice"    # I

    .line 5829
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x15

    const/4 v2, 0x2

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    move v3, p1

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 5831
    return-void
.end method

.method postApplyVolumeOnDevice(IILjava/lang/String;)V
    .registers 11
    .param p1, "streamType"    # I
    .param p2, "device"    # I
    .param p3, "caller"    # Ljava/lang/String;

    .line 6932
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    new-instance v5, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    invoke-direct {v5, p1, p2, p3}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;-><init>(IILjava/lang/String;)V

    const/16 v1, 0x1a

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 6937
    return-void
.end method

.method postAvrcpSupportsAbsoluteVolumeToAudioServer(Ljava/lang/String;Z)V
    .registers 10
    .param p1, "address"    # Ljava/lang/String;
    .param p2, "support"    # Z

    .line 14536
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 14537
    const/4 v4, 0x0

    const/4 v6, 0x0

    .line 14536
    const/16 v1, 0x78

    const/4 v2, 0x2

    move v3, p2

    move-object v5, p1

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 14538
    return-void
.end method

.method postCheckVolumeCecOnHdmiConnection(ILjava/lang/String;)V
    .registers 10
    .param p1, "state"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 1473
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x1c

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    move v3, p1

    move-object v5, p2

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1475
    return-void
.end method

.method public postObserveDevicesForAllStreams()V
    .registers 8

    .line 5569
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x1b

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 5573
    return-void
.end method

.method postSarControl()V
    .registers 8

    .line 12790
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x70

    const/4 v2, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 12791
    return-void
.end method

.method public postSetVolumeIndexOnDevice(IIILjava/lang/String;)V
    .registers 12
    .param p1, "streamType"    # I
    .param p2, "vssVolIndex"    # I
    .param p3, "device"    # I
    .param p4, "caller"    # Ljava/lang/String;

    .line 6924
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    new-instance v5, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    invoke-direct {v5, p1, p2, p3, p4}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;-><init>(IIILjava/lang/String;)V

    const/16 v1, 0x1a

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 6929
    return-void
.end method

.method postUpdateRingerModeServiceInt()V
    .registers 8

    .line 4048
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x19

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4049
    return-void
.end method

.method public recordRingtoneChanger(Ljava/lang/String;)V
    .registers 6
    .param p1, "log"    # Ljava/lang/String;

    .line 14579
    if-nez p1, :cond_3

    .line 14580
    return-void

    .line 14582
    :cond_3
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    const/16 v1, 0x258

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v0

    .line 14583
    .local v0, "maxLength":I
    const/4 v1, 0x0

    invoke-virtual {p1, v1, v0}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v1

    .line 14584
    .local v1, "strippedLog":Ljava/lang/String;
    sget-object v2, Lcom/android/server/audio/AudioService;->sRingtoneChangeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v3, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    invoke-direct {v3, v1}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 14585
    return-void
.end method

.method public recorderEvent(II)V
    .registers 4
    .param p1, "riid"    # I
    .param p2, "event"    # I

    .line 9426
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/audio/RecordingActivityMonitor;->recorderEvent(II)V

    .line 9427
    return-void
.end method

.method public registerAudioPolicy(Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;ZZZZLandroid/media/projection/IMediaProjection;)Ljava/lang/String;
    .registers 27
    .param p1, "policyConfig"    # Landroid/media/audiopolicy/AudioPolicyConfig;
    .param p2, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p3, "hasFocusListener"    # Z
    .param p4, "isFocusPolicy"    # Z
    .param p5, "isTestFocusPolicy"    # Z
    .param p6, "isVolumeController"    # Z
    .param p7, "projection"    # Landroid/media/projection/IMediaProjection;

    .line 8949
    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    iget-object v0, v10, Lcom/android/server/audio/AudioService;->mDynPolicyCallback:Landroid/media/AudioSystem$DynamicPolicyCallback;

    invoke-static {v0}, Landroid/media/AudioSystem;->setDynamicPolicyCallback(Landroid/media/AudioSystem$DynamicPolicyCallback;)V

    .line 8951
    const/4 v0, 0x0

    if-nez p4, :cond_15

    if-nez p5, :cond_15

    if-eqz p3, :cond_13

    goto :goto_15

    :cond_13
    move v1, v0

    goto :goto_16

    :cond_15
    :goto_15
    const/4 v1, 0x1

    :goto_16
    move/from16 v13, p6

    move-object/from16 v14, p7

    invoke-direct {v10, v11, v1, v13, v14}, Lcom/android/server/audio/AudioService;->isPolicyRegisterAllowed(Landroid/media/audiopolicy/AudioPolicyConfig;ZZLandroid/media/projection/IMediaProjection;)Z

    move-result v1

    const/4 v15, 0x0

    if-nez v1, :cond_4d

    .line 8955
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission denied to register audio policy for pid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8956
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " / uid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", need MODIFY_AUDIO_ROUTING or MediaProjection that can project audio"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 8955
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8958
    return-object v15

    .line 8961
    :cond_4d
    iget-object v1, v10, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v2, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "registerAudioPolicy for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8962
    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " with config:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    const-string v3, "AS.AudioService"

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v2

    .line 8961
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 8964
    const/16 v16, 0x0

    .line 8965
    .local v16, "regId":Ljava/lang/String;
    iget-object v9, v10, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v9

    .line 8966
    :try_start_80
    iget-object v1, v10, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_95

    .line 8967
    const-string v0, "AS.AudioService"

    const-string v1, "Cannot re-register policy"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8968
    monitor-exit v9
    :try_end_94
    .catchall {:try_start_80 .. :try_end_94} :catchall_108

    return-object v15

    .line 8971
    :cond_95
    :try_start_95
    new-instance v17, Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :try_end_97
    .catch Landroid/os/RemoteException; {:try_start_95 .. :try_end_97} :catch_e8
    .catch Ljava/lang/IllegalStateException; {:try_start_95 .. :try_end_97} :catch_cd
    .catchall {:try_start_95 .. :try_end_97} :catchall_108

    move-object/from16 v1, v17

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v18, v9

    move-object/from16 v9, p7

    :try_start_ab
    invoke-direct/range {v1 .. v9}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;ZZZZLandroid/media/projection/IMediaProjection;)V

    move-object/from16 v1, v17

    .line 8973
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-interface {v2, v1, v0}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 8974
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->getRegistrationId()Ljava/lang/String;

    move-result-object v0

    move-object/from16 v16, v0

    .line 8975
    iget-object v0, v10, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_c6
    .catch Landroid/os/RemoteException; {:try_start_ab .. :try_end_c6} :catch_cb
    .catch Ljava/lang/IllegalStateException; {:try_start_ab .. :try_end_c6} :catch_c9
    .catchall {:try_start_ab .. :try_end_c6} :catchall_10d

    .line 8984
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    nop

    .line 8985
    :try_start_c7
    monitor-exit v18

    .line 8986
    return-object v16

    .line 8981
    :catch_c9
    move-exception v0

    goto :goto_d0

    .line 8976
    :catch_cb
    move-exception v0

    goto :goto_eb

    .line 8981
    :catch_cd
    move-exception v0

    move-object/from16 v18, v9

    .line 8982
    .local v0, "e":Ljava/lang/IllegalStateException;
    :goto_d0
    const-string v1, "AS.AudioService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Audio policy registration failed for binder "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8983
    monitor-exit v18

    return-object v15

    .line 8976
    .end local v0    # "e":Ljava/lang/IllegalStateException;
    :catch_e8
    move-exception v0

    move-object/from16 v18, v9

    .line 8978
    .local v0, "e":Landroid/os/RemoteException;
    :goto_eb
    const-string v1, "AS.AudioService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Audio policy registration failed, could not link to "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " binder death"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8980
    monitor-exit v18

    return-object v15

    .line 8985
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_108
    move-exception v0

    move-object/from16 v18, v9

    :goto_10b
    monitor-exit v18
    :try_end_10c
    .catchall {:try_start_c7 .. :try_end_10c} :catchall_10d

    throw v0

    :catchall_10d
    move-exception v0

    goto :goto_10b
.end method

.method public registerAudioServerStateDispatcher(Landroid/media/IAudioServerStateDispatcher;)V
    .registers 6
    .param p1, "asd"    # Landroid/media/IAudioServerStateDispatcher;

    .line 9979
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkMonitorAudioServerStatePermission()V

    .line 9980
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    monitor-enter v0

    .line 9981
    :try_start_6
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1b

    .line 9982
    const-string v1, "AS.AudioService"

    const-string v2, "Cannot re-register audio server state dispatcher"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9983
    monitor-exit v0

    return-void

    .line 9985
    :cond_1b
    new-instance v1, Lcom/android/server/audio/AudioService$AsdProxy;

    invoke-direct {v1, p0, p1}, Lcom/android/server/audio/AudioService$AsdProxy;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/IAudioServerStateDispatcher;)V
    :try_end_20
    .catchall {:try_start_6 .. :try_end_20} :catchall_36

    .line 9987
    .local v1, "asdp":Lcom/android/server/audio/AudioService$AsdProxy;
    :try_start_20
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v3, 0x0

    invoke-interface {v2, v1, v3}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_28
    .catch Landroid/os/RemoteException; {:try_start_20 .. :try_end_28} :catch_29
    .catchall {:try_start_20 .. :try_end_28} :catchall_36

    .line 9990
    goto :goto_2a

    .line 9988
    :catch_29
    move-exception v2

    .line 9991
    :goto_2a
    :try_start_2a
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-virtual {v2, v3, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9992
    nop

    .end local v1    # "asdp":Lcom/android/server/audio/AudioService$AsdProxy;
    monitor-exit v0

    .line 9993
    return-void

    .line 9992
    :catchall_36
    move-exception v1

    monitor-exit v0
    :try_end_38
    .catchall {:try_start_2a .. :try_end_38} :catchall_36

    throw v1
.end method

.method public registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V
    .registers 4
    .param p1, "pcdb"    # Landroid/media/IPlaybackConfigDispatcher;

    .line 9458
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9459
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    .line 9461
    .local v0, "isPrivileged":Z
    :goto_d
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v1, p1, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;Z)V

    .line 9462
    return-void
.end method

.method public registerPlaybackCallbackWithPackage(Landroid/media/IPlaybackConfigDispatcher;Ljava/lang/String;)V
    .registers 7
    .param p1, "pcdb"    # Landroid/media/IPlaybackConfigDispatcher;
    .param p2, "packageName"    # Ljava/lang/String;

    .line 14776
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V

    .line 14777
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/audio/PlaybackActivityMonitor;->setCallbackPackageName(Landroid/media/IPlaybackConfigDispatcher;Ljava/lang/String;)V

    .line 14778
    sget-object v0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "register : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, ", "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 14780
    return-void
.end method

.method public registerRecordingCallback(Landroid/media/IRecordingConfigDispatcher;)V
    .registers 4
    .param p1, "rcdb"    # Landroid/media/IRecordingConfigDispatcher;

    .line 9395
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9396
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    .line 9398
    .local v0, "isPrivileged":Z
    :goto_d
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v1, p1, v0}, Lcom/android/server/audio/RecordingActivityMonitor;->registerRecordingCallback(Landroid/media/IRecordingConfigDispatcher;Z)V

    .line 9399
    return-void
.end method

.method public registerStrategyPreferredDeviceDispatcher(Landroid/media/IStrategyPreferredDeviceDispatcher;)V
    .registers 3
    .param p1, "dispatcher"    # Landroid/media/IStrategyPreferredDeviceDispatcher;

    .line 2082
    if-nez p1, :cond_3

    .line 2083
    return-void

    .line 2085
    :cond_3
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2086
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->registerStrategyPreferredDeviceDispatcher(Landroid/media/IStrategyPreferredDeviceDispatcher;)V

    .line 2087
    return-void
.end method

.method public releasePlayer(I)V
    .registers 4
    .param p1, "piid"    # I

    .line 9502
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->releasePlayer(II)V

    .line 9503
    return-void
.end method

.method public releaseRecorder(I)V
    .registers 3
    .param p1, "riid"    # I

    .line 9433
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/RecordingActivityMonitor;->releaseRecorder(I)V

    .line 9434
    return-void
.end method

.method public reloadAudioSettings()V
    .registers 2

    .line 4572
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->readAudioSettings(Z)V

    .line 4573
    return-void
.end method

.method public removeMixForPolicy(Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;)I
    .registers 7
    .param p1, "policyConfig"    # Landroid/media/audiopolicy/AudioPolicyConfig;
    .param p2, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9212
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "removeMixForPolicy for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " with config:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9214
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9215
    :try_start_26
    const-string v1, "Cannot add AudioMix in audio policy"

    .line 9216
    invoke-direct {p0, p2, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9217
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    const/4 v2, -0x1

    if-nez v1, :cond_31

    .line 9218
    monitor-exit v0

    return v2

    .line 9220
    :cond_31
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    move-result-object v3

    invoke-virtual {v1, v3}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->removeMixes(Ljava/util/ArrayList;)I

    move-result v3

    if-nez v3, :cond_3d

    .line 9221
    const/4 v2, 0x0

    goto :goto_3e

    :cond_3d
    nop

    :goto_3e
    monitor-exit v0

    .line 9220
    return v2

    .line 9222
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :catchall_40
    move-exception v1

    monitor-exit v0
    :try_end_42
    .catchall {:try_start_26 .. :try_end_42} :catchall_40

    throw v1
.end method

.method public removePackageForName(Ljava/lang/String;)V
    .registers 4
    .param p1, "packageName"    # Ljava/lang/String;

    .line 11882
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 11883
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1, p1}, Lcom/samsung/android/server/audio/PackageListHelper;->removePackageForName(Landroid/content/Context;Ljava/lang/String;)V

    .line 11884
    return-void
.end method

.method public removePreferredDeviceForStrategy(I)I
    .registers 9
    .param p1, "strategy"    # I

    .line 2051
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2052
    const/4 v0, 0x1

    new-array v1, v0, [Ljava/lang/Object;

    .line 2053
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    const-string/jumbo v2, "removePreferredDeviceForStrategy strat:%d"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .line 2054
    .local v1, "logString":Ljava/lang/String;
    sget-object v2, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v4, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    invoke-direct {v4, v1}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    const-string v5, "AS.AudioService"

    invoke-virtual {v4, v5}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v4

    invoke-virtual {v2, v4}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 2056
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v2, p1}, Lcom/android/server/audio/AudioDeviceBroker;->removePreferredDeviceForStrategySync(I)I

    move-result v2

    .line 2057
    .local v2, "status":I
    if-eqz v2, :cond_40

    .line 2058
    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v3

    aput-object v1, v4, v0

    const-string v0, "Error %d in %s)"

    invoke-static {v0, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2060
    :cond_40
    return v2
.end method

.method public removeUidDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I)I
    .registers 6
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p2, "uid"    # I

    .line 9267
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "removeUidDeviceAffinity for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " uid:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9269
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9270
    :try_start_26
    const-string v1, "Cannot remove device affinity in audio policy"

    .line 9271
    invoke-direct {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9272
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    if-nez v1, :cond_31

    .line 9273
    const/4 v2, -0x1

    monitor-exit v0

    return v2

    .line 9275
    :cond_31
    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->removeUidDeviceAffinities(I)I

    move-result v2

    monitor-exit v0

    return v2

    .line 9276
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_26 .. :try_end_39} :catchall_37

    throw v1
.end method

.method public removeUserIdDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I)I
    .registers 6
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p2, "userId"    # I

    .line 9282
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "removeUserIdDeviceAffinity for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " userId:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9285
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9286
    :try_start_26
    const-string v1, "Cannot remove device affinity in audio policy"

    .line 9287
    invoke-direct {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9288
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    if-nez v1, :cond_31

    .line 9289
    const/4 v2, -0x1

    monitor-exit v0

    return v2

    .line 9291
    :cond_31
    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->removeUserIdDeviceAffinities(I)I

    move-result v2

    monitor-exit v0

    return v2

    .line 9292
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_26 .. :try_end_39} :catchall_37

    throw v1
.end method

.method public requestAudioFocus(Landroid/media/AudioAttributes;ILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;ILandroid/media/audiopolicy/IAudioPolicyCallback;I)I
    .registers 26
    .param p1, "aa"    # Landroid/media/AudioAttributes;
    .param p2, "durationHint"    # I
    .param p3, "cb"    # Landroid/os/IBinder;
    .param p4, "fd"    # Landroid/media/IAudioFocusDispatcher;
    .param p5, "clientId"    # Ljava/lang/String;
    .param p6, "callingPackageName"    # Ljava/lang/String;
    .param p7, "flags"    # I
    .param p8, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p9, "sdk"    # I

    .line 7752
    move-object/from16 v1, p0

    move-object/from16 v12, p1

    move-object/from16 v13, p5

    move-object/from16 v14, p6

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v15

    .line 7753
    .local v15, "uid":I
    new-instance v0, Landroid/media/MediaMetrics$Item;

    const-string v2, "audio.service.focus"

    invoke-direct {v0, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 7754
    invoke-virtual {v0, v15}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v2, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 7756
    invoke-virtual {v0, v2, v14}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v2, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 7757
    invoke-virtual {v0, v2, v13}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 7758
    const-string/jumbo v3, "requestAudioFocus"

    invoke-virtual {v0, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v2, Landroid/media/MediaMetrics$Property;->FLAGS:Landroid/media/MediaMetrics$Key;

    .line 7759
    invoke-static/range {p7 .. p7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v0, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v11

    .line 7762
    .local v11, "mmi":Landroid/media/MediaMetrics$Item;
    const/4 v0, 0x0

    if-eqz v12, :cond_54

    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->isValidAudioAttributesUsage(Landroid/media/AudioAttributes;)Z

    move-result v2

    if-nez v2, :cond_54

    .line 7763
    const-string v2, "Request using unsupported usage"

    .line 7764
    .local v2, "reason":Ljava/lang/String;
    const-string v3, "AS.AudioService"

    const-string v4, "Request using unsupported usage"

    invoke-static {v3, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7765
    sget-object v3, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string v4, "Request using unsupported usage"

    invoke-virtual {v11, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 7766
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7767
    return v0

    .line 7769
    .end local v2    # "reason":Ljava/lang/String;
    :cond_54
    and-int/lit8 v2, p7, 0x4

    const/4 v3, 0x4

    if-ne v2, v3, :cond_af

    .line 7770
    const-string v2, "AudioFocus_For_Phone_Ring_And_Calls"

    invoke-virtual {v2, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_85

    .line 7771
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v3, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v2, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_af

    .line 7773
    const-string v2, "Invalid permission to (un)lock audio focus"

    .line 7774
    .restart local v2    # "reason":Ljava/lang/String;
    new-instance v3, Ljava/lang/Exception;

    invoke-direct {v3}, Ljava/lang/Exception;-><init>()V

    const-string v4, "AS.AudioService"

    const-string v5, "Invalid permission to (un)lock audio focus"

    invoke-static {v4, v5, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7775
    sget-object v3, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string v4, "Invalid permission to (un)lock audio focus"

    invoke-virtual {v11, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 7776
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7777
    return v0

    .line 7781
    .end local v2    # "reason":Ljava/lang/String;
    :cond_85
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v2

    .line 7782
    :try_start_88
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface/range {p8 .. p8}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_aa

    .line 7783
    const-string v3, "Invalid unregistered AudioPolicy to (un)lock audio focus"

    .line 7785
    .local v3, "reason":Ljava/lang/String;
    const-string v4, "AS.AudioService"

    const-string v5, "Invalid unregistered AudioPolicy to (un)lock audio focus"

    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 7786
    sget-object v4, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string v5, "Invalid unregistered AudioPolicy to (un)lock audio focus"

    invoke-virtual {v11, v4, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v4

    .line 7787
    invoke-virtual {v4}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7788
    monitor-exit v2

    return v0

    .line 7790
    .end local v3    # "reason":Ljava/lang/String;
    :cond_aa
    monitor-exit v2

    goto :goto_af

    :catchall_ac
    move-exception v0

    monitor-exit v2
    :try_end_ae
    .catchall {:try_start_88 .. :try_end_ae} :catchall_ac

    throw v0

    .line 7794
    :cond_af
    :goto_af
    if-eqz v14, :cond_e7

    if-eqz v13, :cond_e7

    if-nez v12, :cond_b7

    move-object v1, v11

    goto :goto_e8

    .line 7801
    :cond_b7
    invoke-virtual {v11}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7803
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const v2, 0x400007c

    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    move-result v0

    .line 7810
    .local v0, "isExceptionalDevice":Z
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    invoke-virtual {v2, v0, v12, v14}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->checkAndSetSplitSound(ZLandroid/media/AudioAttributes;Ljava/lang/String;)V

    .line 7812
    .end local v0    # "isExceptionalDevice":Z
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 7814
    move/from16 v10, p2

    invoke-direct {v1, v12, v10, v15}, Lcom/android/server/audio/AudioService;->forceFocusDuckingForAccessibility(Landroid/media/AudioAttributes;II)Z

    move-result v0

    .line 7812
    move-object/from16 v3, p1

    move/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    move/from16 v9, p7

    move/from16 v10, p9

    move-object v1, v11

    .end local v11    # "mmi":Landroid/media/MediaMetrics$Item;
    .local v1, "mmi":Landroid/media/MediaMetrics$Item;
    move v11, v0

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/audio/MediaFocusControl;->requestAudioFocus(Landroid/media/AudioAttributes;ILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;IIZ)I

    move-result v0

    return v0

    .line 7794
    .end local v1    # "mmi":Landroid/media/MediaMetrics$Item;
    .restart local v11    # "mmi":Landroid/media/MediaMetrics$Item;
    :cond_e7
    move-object v1, v11

    .line 7795
    .end local v11    # "mmi":Landroid/media/MediaMetrics$Item;
    .restart local v1    # "mmi":Landroid/media/MediaMetrics$Item;
    :goto_e8
    const-string v2, "Invalid null parameter to request audio focus"

    .line 7796
    .restart local v2    # "reason":Ljava/lang/String;
    const-string v3, "AS.AudioService"

    const-string v4, "Invalid null parameter to request audio focus"

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 7797
    sget-object v3, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string v4, "Invalid null parameter to request audio focus"

    invoke-virtual {v1, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 7798
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7799
    return v0
.end method

.method protected scheduleLoadSoundEffects()V
    .registers 8

    .line 4558
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v1, 0x7

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4559
    return-void
.end method

.method public secGetActiveStreamType(I)I
    .registers 3
    .param p1, "suggestedStreamType"    # I

    .line 13398
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    move-result v0

    return v0
.end method

.method sendBecomingNoisyIntentToUnpinApps(I)V
    .registers 3
    .param p1, "device"    # I

    .line 11921
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->sendBecomingNoisyIntentToUnpinApps(I)V

    .line 11922
    return-void
.end method

.method sendBecomingNoisyToPinnedApp(I)V
    .registers 3
    .param p1, "device"    # I

    .line 12035
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->sendBecomingNoisyToPinnedApp(I)V

    .line 12036
    return-void
.end method

.method public sendMsgForForceSpeaker()V
    .registers 8

    .line 14060
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x8

    const/4 v2, 0x2

    const/4 v3, 0x1

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 14062
    return-void
.end method

.method protected sendVolumeUpdate(IIIII)V
    .registers 8
    .param p1, "streamType"    # I
    .param p2, "oldIndex"    # I
    .param p3, "index"    # I
    .param p4, "flags"    # I
    .param p5, "device"    # I

    .line 3308
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget p1, v0, p1

    .line 3311
    invoke-direct {p0, p1, p4, p3, p5}, Lcom/android/server/audio/AudioService;->updateFlagsForSamsungVolume(IIII)I

    move-result p4

    .line 3314
    const/4 v0, 0x3

    if-ne p1, v0, :cond_17

    .line 3315
    invoke-direct {p0, p4}, Lcom/android/server/audio/AudioService;->updateFlagsForTvPlatform(I)I

    move-result p4

    .line 3316
    invoke-direct {p0, p5}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v0

    if-eqz v0, :cond_17

    .line 3317
    and-int/lit8 p4, p4, -0x2

    .line 3320
    :cond_17
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMultiAudioFocusEnabled:Z

    if-eqz v0, :cond_2a

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAppVolumeEnabled:Z

    if-eqz v0, :cond_2a

    .line 3321
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "sendVolumeUpdate( set FLAG_MULTI_AUDIO_FOCUS )"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3322
    const/high16 v0, 0x20000000

    or-int/2addr p4, v0

    .line 3324
    :cond_2a
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, p1, p4}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 3327
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/audio/AudioService;->sendBroadcastNoisyIntent(IIII)V

    .line 3329
    return-void
.end method

.method public setA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;IIILjava/lang/String;)V
    .registers 16
    .param p1, "device"    # Landroid/bluetooth/BluetoothDevice;
    .param p2, "streamType"    # I
    .param p3, "index"    # I
    .param p4, "flags"    # I
    .param p5, "caller"    # Ljava/lang/String;

    .line 14112
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    const-string v1, "AS.AudioService"

    if-eqz v0, :cond_31

    .line 14115
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "MODIFY_PHONE_STATE Permission Denial from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14116
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 14115
    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14117
    return-void

    .line 14120
    :cond_31
    if-eqz p1, :cond_87

    .line 14124
    const/4 v0, 0x3

    if-ne p2, v0, :cond_66

    .line 14125
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v0, :cond_54

    iget v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    mul-int/lit8 v0, v0, 0xa

    if-le p3, v0, :cond_54

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSafeMediaVolumeDevices:Ljava/util/Set;

    const/16 v2, 0x80

    .line 14126
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_54

    .line 14127
    const-string v0, "Over the volume limit value"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_66

    .line 14129
    :cond_54
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1, p3}, Lcom/android/server/audio/AudioDeviceBroker;->setA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;I)V

    .line 14130
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->getMasterA2dpVolume()I

    move-result v0

    .line 14131
    .local v0, "masterA2dpVolume":I
    const/4 v1, -0x1

    if-ne v0, v1, :cond_64

    move v1, p3

    goto :goto_65

    :cond_64
    move v1, v0

    :goto_65
    move p3, v1

    .line 14135
    .end local v0    # "masterA2dpVolume":I
    :cond_66
    :goto_66
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ".setA2dpDeviceVolume"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 14136
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/4 v8, 0x1

    const/16 v9, 0x80

    .line 14135
    move-object v1, p0

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v5, p5

    invoke-direct/range {v1 .. v9}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 14137
    return-void

    .line 14121
    :cond_87
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid device "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAllowedCapturePolicy(I)I
    .registers 9
    .param p1, "capturePolicy"    # I

    .line 9517
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 9518
    .local v0, "callingUid":I
    const/4 v1, 0x0

    invoke-static {p1, v1}, Landroid/media/AudioAttributes;->capturePolicyToFlags(II)I

    move-result v1

    .line 9519
    .local v1, "flags":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9520
    .local v2, "identity":J
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    monitor-enter v4

    .line 9521
    :try_start_10
    invoke-static {v0, v1}, Landroid/media/AudioSystem;->setAllowedCapturePolicy(II)I

    move-result v5

    .line 9522
    .local v5, "result":I
    if-nez v5, :cond_1b

    .line 9523
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v6, v0, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->setAllowedCapturePolicy(II)V

    .line 9525
    :cond_1b
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9526
    monitor-exit v4

    return v5

    .line 9527
    .end local v5    # "result":I
    :catchall_20
    move-exception v5

    monitor-exit v4
    :try_end_22
    .catchall {:try_start_10 .. :try_end_22} :catchall_20

    throw v5
.end method

.method public setAppDevice(IIZ)V
    .registers 14
    .param p1, "uid"    # I
    .param p2, "device"    # I
    .param p3, "shouldShowNotification"    # Z

    .line 11952
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 11954
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v0

    .line 11955
    .local v0, "packageNames":[Ljava/lang/String;
    const/4 v1, 0x0

    aget-object v2, v0, v1

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_4e

    .line 11959
    invoke-static {p2}, Landroid/media/AudioDeviceInfo;->convertDeviceTypeToInternalDevice(I)I

    move-result p2

    .line 11960
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setAppDevice, uid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", device:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "AS.AudioService"

    invoke-static {v3, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11962
    const/4 v2, 0x0

    .line 11963
    .local v2, "delay":I
    if-nez p2, :cond_3a

    .line 11964
    invoke-direct {p0, v0, p1}, Lcom/android/server/audio/AudioService;->sendBecomingNoisyIntent([Ljava/lang/String;I)I

    move-result v2

    .line 11967
    :cond_3a
    if-eqz p3, :cond_3f

    const/16 v3, 0x6c

    goto :goto_41

    :cond_3f
    const/16 v3, 0x79

    :goto_41
    move v4, v3

    .line 11968
    .local v4, "msg":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v5, 0x2

    aget-object v8, v0, v1

    move v6, p1

    move v7, p2

    move v9, v2

    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 11970
    return-void

    .line 11956
    .end local v2    # "delay":I
    .end local v4    # "msg":I
    :cond_4e
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public setAppMute(IZLjava/lang/String;)V
    .registers 8
    .param p1, "uid"    # I
    .param p2, "shouldMute"    # Z
    .param p3, "callingPackage"    # Ljava/lang/String;

    .line 12000
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    aget-object v0, v0, v1

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_48

    .line 12004
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12006
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "uid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",shouldMute:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v3, ",package:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 12007
    const-string v2, "AS.AudioService"

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v1

    .line 12006
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 12009
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1, p2}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppMute(IZ)V

    .line 12010
    return-void

    .line 12001
    :cond_48
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAppVolume(IILjava/lang/String;)V
    .registers 8
    .param p1, "uid"    # I
    .param p2, "ratio"    # I
    .param p3, "callingPackage"    # Ljava/lang/String;

    .line 11978
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    aget-object v0, v0, v1

    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_55

    .line 11982
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 11984
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "uid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",volume:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",package:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 11985
    const-string v2, "AS.AudioService"

    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v1

    .line 11984
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 11987
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v0, p1, p2}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolume(II)V

    .line 11989
    const-string v0, "com.samsung.android.soundassistant"

    invoke-virtual {v0, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_54

    .line 11990
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    .line 11992
    :cond_54
    return-void

    .line 11979
    :cond_55
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAudioServiceConfig(Ljava/lang/String;)V
    .registers 12
    .param p1, "keyValuePairs"    # Ljava/lang/String;

    .line 12234
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 12235
    return-void

    .line 12238
    :cond_7
    new-instance v0, Lcom/samsung/android/media/AudioParameter;

    invoke-direct {v0, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 12240
    .local v0, "audioParam":Lcom/samsung/android/media/AudioParameter;
    invoke-virtual {v0}, Lcom/samsung/android/media/AudioParameter;->hasLocalParameter()Z

    move-result v1

    if-eqz v1, :cond_15

    .line 12241
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12243
    :cond_15
    const-string/jumbo v1, "l_forced_device"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    .local v2, "value":Ljava/lang/String;
    if-eqz v1, :cond_28

    .line 12244
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    .line 12245
    .local v1, "forced_config":I
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->setForceUseForMedia(I)V

    .line 12246
    .end local v1    # "forced_config":I
    goto/16 :goto_1a1

    :cond_28
    const-string/jumbo v1, "l_uhq_bt"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    const/4 v3, 0x0

    const/4 v4, 0x3

    if-eqz v1, :cond_42

    .line 12247
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    .line 12248
    .local v1, "uhqBtSampleRate":I
    if-nez v1, :cond_3e

    .line 12249
    invoke-direct {p0, v4, v3}, Lcom/android/server/audio/AudioService;->getDevicesForStream(IZ)I

    goto :goto_40

    .line 12251
    :cond_3e
    iput v1, p0, Lcom/android/server/audio/AudioService;->mUhqBtSampleRate:I

    .line 12253
    .end local v1    # "uhqBtSampleRate":I
    :goto_40
    goto/16 :goto_1a1

    :cond_42
    const-string/jumbo v1, "l_volume_limit_key"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_50

    .line 12254
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setVolumeLimiter(Lcom/samsung/android/media/AudioParameter;)V

    goto/16 :goto_1a1

    .line 12255
    :cond_50
    const-string/jumbo v1, "g_call_extra_volume_enable"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    const-string/jumbo v5, "true"

    if-eqz v1, :cond_65

    .line 12256
    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mExtraVolume:Z

    goto/16 :goto_1a1

    .line 12257
    :cond_65
    const-string/jumbo v1, "sound_assistant"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_72

    .line 12258
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setSoundAssistant(Lcom/samsung/android/media/AudioParameter;)V

    .line 12259
    return-void

    .line 12260
    :cond_72
    const-string/jumbo v1, "g_call_sar_backoff_enable"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    const-string v6, "AS.AudioService"

    if-eqz v1, :cond_a9

    .line 12261
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12262
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "g_call_sar_backoff_enable="

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v6, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12263
    invoke-virtual {v5, v2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mSarBackoffParam:Z

    .line 12264
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v4, 0x70

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 12265
    return-void

    .line 12266
    :cond_a9
    const-string/jumbo v1, "g_fmradio_enable"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_eb

    .line 12267
    invoke-static {p1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 12268
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    if-eqz v1, :cond_ea

    .line 12270
    invoke-direct {p0, v4, v3}, Lcom/android/server/audio/AudioService;->getDevicesForStream(IZ)I

    .line 12271
    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_ea

    .line 12272
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-direct {p0, v1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v1

    aget-object v1, v1, v3

    .line 12273
    .local v1, "packageName":Ljava/lang/String;
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "init fm radio volume when turning on fm radio, "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12275
    nop

    .line 12276
    invoke-virtual {p0, v4}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    move-result v5

    .line 12275
    invoke-virtual {p0, v4, v5, v3, v1}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;)V

    .line 12279
    .end local v1    # "packageName":Ljava/lang/String;
    :cond_ea
    return-void

    .line 12280
    :cond_eb
    const-string/jumbo v1, "g_call_sim_slot"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_fc

    .line 12281
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12282
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    goto/16 :goto_1a1

    .line 12283
    :cond_fc
    const-string/jumbo v1, "g_sco_samplerate"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_10d

    .line 12284
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12285
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mBtSampleRate:Ljava/lang/String;

    goto/16 :goto_1a1

    .line 12286
    :cond_10d
    const-string v1, "bt_headset_nrec"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_11d

    .line 12287
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12288
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mBtNrec:Ljava/lang/String;

    goto/16 :goto_1a1

    .line 12289
    :cond_11d
    const-string/jumbo v1, "g_call_memo_state"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_12e

    .line 12290
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12291
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    goto/16 :goto_1a1

    .line 12292
    :cond_12e
    const-string/jumbo v1, "g_call_forwarding_enable"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_13e

    .line 12293
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12294
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    goto :goto_1a1

    .line 12295
    :cond_13e
    const-string/jumbo v1, "g_effect_dv_adapt_sound"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_14e

    .line 12296
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12297
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    goto :goto_1a1

    .line 12298
    :cond_14e
    const-string/jumbo v1, "l_volume_prevent_overheat_key"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_15b

    .line 12299
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setPreventOverheatForGame(Lcom/samsung/android/media/AudioParameter;)V

    .line 12300
    return-void

    .line 12301
    :cond_15b
    const-string/jumbo v1, "sound_effect_volume"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_16b

    .line 12302
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 12303
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setSoundEffectVolume()V

    goto :goto_1a1

    .line 12304
    :cond_16b
    const-string/jumbo v1, "g_ptt_mode"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_178

    .line 12305
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    goto :goto_1a1

    .line 12306
    :cond_178
    nop

    .line 12307
    const-string/jumbo v1, "g_ptt_call_volume_enable"

    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    move-object v2, v1

    if-eqz v1, :cond_1a1

    .line 12308
    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mIsPttCallVolumeEnabled:Z

    .line 12309
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "mIsPttCallVolumeEnabled : "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mIsPttCallVolumeEnabled:Z

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v6, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12310
    return-void

    .line 12312
    :cond_1a1
    :goto_1a1
    invoke-static {p1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 12313
    return-void
.end method

.method setAvrcpAbsoluteVolumeSupported(Z)V
    .registers 6
    .param p1, "support"    # Z

    .line 14104
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    if-eq v0, p1, :cond_1f

    .line 14105
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "a2dp AVC : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 14107
    :cond_1f
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 14108
    return-void
.end method

.method public setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(Landroid/bluetooth/BluetoothDevice;IIZI)V
    .registers 14
    .param p1, "device"    # Landroid/bluetooth/BluetoothDevice;
    .param p2, "state"    # I
    .param p3, "profile"    # I
    .param p4, "suppressNoisyIntent"    # Z
    .param p5, "a2dpVolume"    # I

    .line 5770
    if-eqz p1, :cond_2a

    .line 5773
    const/4 v0, 0x2

    if-eq p2, v0, :cond_1f

    if-nez p2, :cond_8

    goto :goto_1f

    .line 5775
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Illegal BluetoothProfile state for device  (dis)connection, got "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5786
    :cond_1f
    :goto_1f
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    move-object v3, p1

    move v4, p2

    move v5, p3

    move v6, p4

    move v7, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/audio/AudioDeviceBroker;->postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(Landroid/bluetooth/BluetoothDevice;IIZI)V

    .line 5788
    return-void

    .line 5771
    :cond_2a
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null device"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setBluetoothA2dpOn(Z)V
    .registers 8
    .param p1, "on"    # Z

    .line 4725
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4726
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 4727
    .local v1, "pid":I
    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "setBluetoothA2dpOn("

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 4728
    const-string v3, ") from u/pid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "/"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4729
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4731
    .local v2, "eventSource":Ljava/lang/String;
    new-instance v3, Landroid/media/MediaMetrics$Item;

    const-string v4, "audio.device.setBluetoothA2dpOn"

    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 4733
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4734
    invoke-virtual {v3, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    sget-object v4, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 4735
    if-eqz p1, :cond_3e

    .line 4736
    const-string/jumbo v5, "on"

    goto :goto_41

    :cond_3e
    const-string/jumbo v5, "off"

    .line 4735
    :goto_41
    invoke-virtual {v3, v4, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4737
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4739
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3, p1, v2}, Lcom/android/server/audio/AudioDeviceBroker;->setBluetoothA2dpOn_Async(ZLjava/lang/String;)V

    .line 4740
    return-void
.end method

.method public setBluetoothHearingAidDeviceConnectionState(Landroid/bluetooth/BluetoothDevice;IZI)V
    .registers 13
    .param p1, "device"    # Landroid/bluetooth/BluetoothDevice;
    .param p2, "state"    # I
    .param p3, "suppressNoisyIntent"    # Z
    .param p4, "musicDevice"    # I

    .line 5747
    if-eqz p1, :cond_3d

    .line 5750
    const/4 v0, 0x2

    if-eq p2, v0, :cond_1f

    if-nez p2, :cond_8

    goto :goto_1f

    .line 5752
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Illegal BluetoothProfile state for device  (dis)connection, got "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5755
    :cond_1f
    :goto_1f
    if-ne p2, v0, :cond_2a

    .line 5756
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVoiceActivityMonitor:Landroid/media/IPlaybackConfigDispatcher;

    const/4 v2, 0x1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/audio/PlaybackActivityMonitor;->registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;Z)V

    goto :goto_31

    .line 5758
    :cond_2a
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVoiceActivityMonitor:Landroid/media/IPlaybackConfigDispatcher;

    invoke-virtual {v0, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->unregisterPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V

    .line 5760
    :goto_31
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const-string v7, "AudioService"

    move-object v3, p1

    move v4, p2

    move v5, p3

    move v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/audio/AudioDeviceBroker;->postBluetoothHearingAidDeviceConnectionState(Landroid/bluetooth/BluetoothDevice;IZILjava/lang/String;)V

    .line 5762
    return-void

    .line 5748
    :cond_3d
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null device"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setBluetoothScoOn(Z)V
    .registers 8
    .param p1, "on"    # Z

    .line 4679
    const-string/jumbo v0, "setBluetoothScoOn()"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 4680
    return-void

    .line 4684
    :cond_a
    if-eqz p1, :cond_15

    .line 4685
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->isBluetoothScoSupported()Z

    move-result v0

    if-nez v0, :cond_15

    .line 4686
    return-void

    .line 4691
    :cond_15
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x2710

    if-lt v0, v1, :cond_23

    .line 4692
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->setBluetoothScoOnByApp(Z)V

    .line 4693
    return-void

    .line 4697
    :cond_23
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4698
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 4699
    .local v1, "pid":I
    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "setBluetoothScoOn("

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 4700
    const-string v3, ") from u/pid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "/"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4703
    .local v2, "eventSource":Ljava/lang/String;
    new-instance v3, Landroid/media/MediaMetrics$Item;

    const-string v4, "audio.device.setBluetoothScoOn"

    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 4705
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4706
    invoke-virtual {v3, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    sget-object v4, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 4707
    if-eqz p1, :cond_61

    .line 4708
    const-string/jumbo v5, "on"

    goto :goto_64

    :cond_61
    const-string/jumbo v5, "off"

    .line 4707
    :goto_64
    invoke-virtual {v3, v4, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4709
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4711
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3, p1, v2}, Lcom/android/server/audio/AudioDeviceBroker;->setBluetoothScoOn(ZLjava/lang/String;)V

    .line 4712
    return-void
.end method

.method public setBtGameLatencyList()V
    .registers 8

    .line 11394
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 11395
    .local v0, "appList":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;"
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getAppList()Ljava/util/Hashtable;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->putAll(Ljava/util/Map;)V

    .line 11397
    invoke-virtual {v0}, Ljava/util/HashMap;->keySet()Ljava/util/Set;

    move-result-object v1

    .line 11398
    .local v1, "keys":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .line 11400
    .local v2, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 11401
    .local v3, "btGameLatencyParamKeyValue":Ljava/lang/StringBuilder;
    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 11402
    const-string/jumbo v4, "l_bt_game_latency"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11403
    const-string v4, "="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11405
    :goto_2a
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4e

    .line 11406
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 11407
    .local v4, "appname":Ljava/lang/String;
    invoke-virtual {v0, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 11408
    .local v5, "appcategory":Ljava/lang/String;
    const-string v6, "bt_game_latency_deny"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4d

    .line 11409
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11410
    const-string/jumbo v6, "|"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11412
    .end local v4    # "appname":Ljava/lang/String;
    .end local v5    # "appcategory":Ljava/lang/String;
    :cond_4d
    goto :goto_2a

    .line 11414
    :cond_4e
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "AS.AudioService"

    invoke-static {v5, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11415
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 11416
    return-void
.end method

.method public setBtOffloadEnable(I)V
    .registers 3
    .param p1, "state"    # I

    .line 14631
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->setBtOffloadEnable(I)V

    .line 14632
    return-void
.end method

.method public setDeviceToForceByUser(ILjava/lang/String;Z)I
    .registers 5
    .param p1, "device"    # I
    .param p2, "address"    # Ljava/lang/String;
    .param p3, "force"    # Z

    .line 14067
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 14068
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/audio/AudioDeviceBroker;->setDeviceToForceByUser(ILjava/lang/String;Z)I

    move-result v0

    return v0
.end method

.method setDeviceVolume(Lcom/android/server/audio/AudioService$VolumeStreamState;I)V
    .registers 12
    .param p1, "streamState"    # Lcom/android/server/audio/AudioService$VolumeStreamState;
    .param p2, "device"    # I

    .line 6957
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 6959
    :try_start_3
    invoke-virtual {p1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 6962
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v1

    .line 6963
    .local v1, "numStreamTypes":I
    add-int/lit8 v2, v1, -0x1

    .local v2, "streamType":I
    :goto_c
    if-ltz v2, :cond_56

    .line 6964
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v3

    if-eq v2, v3, :cond_53

    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v2

    .line 6965
    # getter for: Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I
    invoke-static {p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->access$1100(Lcom/android/server/audio/AudioService$VolumeStreamState;)I

    move-result v4

    if-ne v3, v4, :cond_53

    .line 6968
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v3

    .line 6969
    .local v3, "streamDevice":I
    if-eq p2, v3, :cond_3b

    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    if-eqz v4, :cond_3b

    sget-object v4, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 6970
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3b

    .line 6971
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v2

    invoke-virtual {v4, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 6973
    :cond_3b
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v2

    invoke-virtual {v4, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 6974
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v4}, Lcom/samsung/android/server/audio/MultiSoundManager;->isEnabled()Z

    move-result v4

    if-eqz v4, :cond_53

    .line 6975
    if-eq p2, v3, :cond_53

    .line 6976
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v2

    invoke-virtual {v4, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 6963
    .end local v3    # "streamDevice":I
    :cond_53
    add-int/lit8 v2, v2, -0x1

    goto :goto_c

    .line 6981
    .end local v1    # "numStreamTypes":I
    .end local v2    # "streamType":I
    :cond_56
    monitor-exit v0
    :try_end_57
    .catchall {:try_start_3 .. :try_end_57} :catchall_64

    .line 6983
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v3, 0x1

    const/4 v4, 0x2

    const/4 v6, 0x0

    const/16 v8, 0x1f4

    move v5, p2

    move-object v7, p1

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 6991
    return-void

    .line 6981
    :catchall_64
    move-exception v1

    :try_start_65
    monitor-exit v0
    :try_end_66
    .catchall {:try_start_65 .. :try_end_66} :catchall_64

    throw v1
.end method

.method public setDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V
    .registers 5
    .param p1, "device"    # Landroid/media/AudioDeviceAttributes;
    .param p2, "deviceVolumeBehavior"    # I
    .param p3, "pkgName"    # Ljava/lang/String;

    .line 5587
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 5589
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 5590
    invoke-static {p2}, Landroid/media/AudioManager;->enforceValidVolumeBehavior(I)V

    .line 5591
    if-nez p3, :cond_d

    .line 5592
    const-string p3, ""

    .line 5595
    :cond_d
    nop

    .line 5596
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getType()I

    move-result v0

    .line 5595
    invoke-static {v0}, Landroid/media/AudioDeviceInfo;->convertDeviceTypeToInternalDevice(I)I

    move-result v0

    .line 5597
    .local v0, "audioSystemDeviceOut":I
    invoke-direct {p0, v0, p2, p3}, Lcom/android/server/audio/AudioService;->setDeviceVolumeBehaviorInternal(IILjava/lang/String;)V

    .line 5599
    invoke-direct {p0, v0, p2}, Lcom/android/server/audio/AudioService;->persistDeviceVolumeBehavior(II)V

    .line 5600
    return-void
.end method

.method public setFineVolume(IIIILjava/lang/String;)V
    .registers 15
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "device"    # I
    .param p5, "callingPackage"    # Ljava/lang/String;

    .line 12859
    nop

    .line 12860
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 12859
    const/4 v7, 0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p5

    move-object v5, p5

    move v8, p4

    invoke-direct/range {v0 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 12861
    return-void
.end method

.method public setFocusPropertiesForPolicy(ILandroid/media/audiopolicy/IAudioPolicyCallback;)I
    .registers 10
    .param p1, "duckingBehavior"    # I
    .param p2, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9296
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setFocusPropertiesForPolicy() duck behavior="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " policy "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9297
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 9296
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9298
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9299
    :try_start_26
    const-string v1, "Cannot change audio policy focus properties"

    .line 9300
    invoke-direct {p0, p2, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9301
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    const/4 v2, -0x1

    if-nez v1, :cond_31

    .line 9302
    monitor-exit v0

    return v2

    .line 9304
    :cond_31
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_46

    .line 9305
    const-string v3, "AS.AudioService"

    const-string v4, "Cannot change audio policy focus properties, unregistered policy"

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9306
    monitor-exit v0

    return v2

    .line 9308
    :cond_46
    const/4 v3, 0x1

    if-ne p1, v3, :cond_6d

    .line 9310
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_53
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_6d

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 9311
    .local v5, "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    iget v6, v5, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mFocusDuckBehavior:I

    if-ne v6, v3, :cond_6c

    .line 9312
    const-string v3, "AS.AudioService"

    const-string v4, "Cannot change audio policy ducking behavior, already handled"

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9313
    monitor-exit v0

    return v2

    .line 9315
    .end local v5    # "policy":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :cond_6c
    goto :goto_53

    .line 9317
    :cond_6d
    iput p1, v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mFocusDuckBehavior:I

    .line 9318
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    const/4 v4, 0x0

    if-ne p1, v3, :cond_75

    goto :goto_76

    :cond_75
    move v3, v4

    :goto_76
    invoke-virtual {v2, v3}, Lcom/android/server/audio/MediaFocusControl;->setDuckingInExtPolicyAvailable(Z)V

    .line 9320
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    monitor-exit v0

    .line 9321
    return v4

    .line 9320
    :catchall_7b
    move-exception v1

    monitor-exit v0
    :try_end_7d
    .catchall {:try_start_26 .. :try_end_7d} :catchall_7b

    throw v1
.end method

.method public setFocusRequestResultFromExtPolicy(Landroid/media/AudioFocusInfo;ILandroid/media/audiopolicy/IAudioPolicyCallback;)V
    .registers 7
    .param p1, "afi"    # Landroid/media/AudioFocusInfo;
    .param p2, "requestResult"    # I
    .param p3, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9928
    if-eqz p1, :cond_2d

    .line 9931
    if-eqz p3, :cond_25

    .line 9934
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9935
    :try_start_7
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    invoke-interface {p3}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 9938
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/audio/MediaFocusControl;->setFocusRequestResultFromExtPolicy(Landroid/media/AudioFocusInfo;I)V

    .line 9939
    monitor-exit v0

    .line 9940
    return-void

    .line 9936
    :cond_1a
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Unregistered AudioPolicy for external focus"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "afi":Landroid/media/AudioFocusInfo;
    .end local p2    # "requestResult":I
    .end local p3    # "pcb":Landroid/media/audiopolicy/IAudioPolicyCallback;
    throw v1

    .line 9939
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "afi":Landroid/media/AudioFocusInfo;
    .restart local p2    # "requestResult":I
    .restart local p3    # "pcb":Landroid/media/audiopolicy/IAudioPolicyCallback;
    :catchall_22
    move-exception v1

    monitor-exit v0
    :try_end_24
    .catchall {:try_start_7 .. :try_end_24} :catchall_22

    throw v1

    .line 9932
    :cond_25
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null AudioPolicy callback"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9929
    :cond_2d
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Illegal null AudioFocusInfo"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setForceSpeakerOn(Z)V
    .registers 11
    .param p1, "on"    # Z

    .line 11422
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11423
    .local v0, "uid":I
    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_9

    .line 11424
    return-void

    .line 11426
    :cond_9
    iput p1, p0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    .line 11427
    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    const/4 v2, 0x3

    .line 11428
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    .line 11427
    invoke-interface {v1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_29

    .line 11429
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v3, 0x8

    const/4 v4, 0x2

    const/4 v5, 0x1

    iget v6, p0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 11432
    :cond_29
    return-void
.end method

.method public setForceUseForMedia(I)V
    .registers 11
    .param p1, "forced_config"    # I

    .line 11445
    const-string/jumbo v0, "setForceUseForMedia()"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 11446
    return-void

    .line 11448
    :cond_a
    const/4 v0, 0x1

    const/16 v1, 0x2711

    if-ne p1, v1, :cond_15

    .line 11449
    invoke-static {v0, v1}, Landroid/media/AudioSystem;->setForceUse(II)I

    .line 11450
    iput v1, p0, Lcom/android/server/audio/AudioService;->mForcedUseForMedia:I

    goto :goto_1b

    .line 11452
    :cond_15
    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/media/AudioSystem;->setForceUse(II)I

    .line 11453
    iput v1, p0, Lcom/android/server/audio/AudioService;->mForcedUseForMedia:I

    .line 11455
    :goto_1b
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v3, 0x8

    const/4 v4, 0x2

    const/4 v5, 0x1

    iget v6, p0, Lcom/android/server/audio/AudioService;->mForcedUseForMedia:I

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 11457
    return-void
.end method

.method public setHdmiSystemAudioSupported(Z)I
    .registers 8
    .param p1, "on"    # Z

    .line 8216
    const/4 v0, 0x0

    .line 8217
    .local v0, "device":I
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    .line 8218
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v2, :cond_35

    .line 8219
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-nez v2, :cond_19

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    if-nez v2, :cond_19

    .line 8220
    const-string v2, "AS.AudioService"

    const-string v3, "Only Hdmi-Cec enabled TV or audio system device supportssystem audio mode."

    invoke-static {v2, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8222
    monitor-exit v1

    return v0

    .line 8224
    :cond_19
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    if-eq v2, p1, :cond_2f

    .line 8225
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 8226
    if-eqz p1, :cond_24

    const/16 v2, 0xc

    goto :goto_25

    .line 8227
    :cond_24
    const/4 v2, 0x0

    :goto_25
    nop

    .line 8228
    .local v2, "config":I
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v4, 0x5

    const-string/jumbo v5, "setHdmiSystemAudioSupported"

    invoke-virtual {v3, v4, v2, v5}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 8231
    .end local v2    # "config":I
    :cond_2f
    const/4 v2, 0x3

    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->getDevicesForStream(I)I

    move-result v2

    move v0, v2

    .line 8233
    :cond_35
    monitor-exit v1

    .line 8234
    return v0

    .line 8233
    :catchall_37
    move-exception v2

    monitor-exit v1
    :try_end_39
    .catchall {:try_start_4 .. :try_end_39} :catchall_37

    throw v2
.end method

.method public setMasterMute(ZILjava/lang/String;I)V
    .registers 11
    .param p1, "mute"    # Z
    .param p2, "flags"    # I
    .param p3, "callingPackage"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .line 3573
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 3574
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    move-object v0, p0

    move v1, p1

    move v2, p2

    move-object v3, p3

    move v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->setMasterMuteInternal(ZILjava/lang/String;II)V

    .line 3576
    return-void
.end method

.method public setMediaVolumeSteps([I)Z
    .registers 12
    .param p1, "volumeSteps"    # [I

    .line 13066
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    const-string v1, "AS.AudioService"

    const/4 v2, 0x0

    if-eqz v0, :cond_32

    .line 13069
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "MODIFY_PHONE_STATE Permission Denial from pid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13070
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 13069
    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13071
    return v2

    .line 13074
    :cond_32
    const-string/jumbo v0, "sec_volume_steps"

    const/4 v3, 0x1

    if-nez p1, :cond_50

    .line 13075
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 13076
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 13077
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 13079
    .local v4, "ident":J
    :try_start_41
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    invoke-static {v2, v0, v1}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_46
    .catchall {:try_start_41 .. :try_end_46} :catchall_4b

    .line 13082
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13083
    nop

    .line 13084
    return v3

    .line 13082
    :catchall_4b
    move-exception v0

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13083
    throw v0

    .line 13087
    .end local v4    # "ident":J
    :cond_50
    array-length v4, p1

    const/4 v5, 0x3

    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    move-result v6

    mul-int/lit8 v6, v6, 0xa

    if-gt v4, v6, :cond_bc

    array-length v4, p1

    if-ge v4, v3, :cond_5e

    goto :goto_bc

    .line 13094
    :cond_5e
    const/4 v4, -0x1

    .line 13095
    .local v4, "before":I
    array-length v6, p1

    move v7, v2

    :goto_61
    if-ge v7, v6, :cond_71

    aget v8, p1, v7

    .line 13096
    .local v8, "cur":I
    if-gt v8, v4, :cond_6d

    .line 13097
    const-string v0, "Steps have to be ordered as increasing"

    invoke-static {v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13098
    return v2

    .line 13100
    :cond_6d
    move v4, v8

    .line 13095
    .end local v8    # "cur":I
    add-int/lit8 v7, v7, 0x1

    goto :goto_61

    .line 13104
    :cond_71
    array-length v6, p1

    move v7, v2

    :goto_73
    if-ge v7, v6, :cond_8b

    aget v8, p1, v7

    .line 13105
    .restart local v8    # "cur":I
    if-ltz v8, :cond_85

    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    move-result v9

    mul-int/lit8 v9, v9, 0xa

    if-le v8, v9, :cond_82

    goto :goto_85

    .line 13104
    .end local v8    # "cur":I
    :cond_82
    add-int/lit8 v7, v7, 0x1

    goto :goto_73

    .line 13106
    .restart local v8    # "cur":I
    :cond_85
    :goto_85
    const-string v0, "Invalid index"

    invoke-static {v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13107
    return v2

    .line 13111
    .end local v8    # "cur":I
    :cond_8b
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 13113
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 13114
    .local v1, "sb":Ljava/lang/StringBuilder;
    array-length v5, p1

    :goto_93
    if-ge v2, v5, :cond_a2

    aget v6, p1, v2

    .line 13115
    .local v6, "step":I
    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 13116
    const-string v7, ","

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13114
    .end local v6    # "step":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_93

    .line 13119
    :cond_a2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5

    .line 13121
    .local v5, "ident":J
    :try_start_a6
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 13122
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 13121
    invoke-static {v2, v0, v7}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_af
    .catchall {:try_start_a6 .. :try_end_af} :catchall_b7

    .line 13124
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13125
    nop

    .line 13128
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->createVariableMediaVolumeMap([I)V

    .line 13131
    return v3

    .line 13124
    :catchall_b7
    move-exception v0

    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13125
    throw v0

    .line 13089
    .end local v1    # "sb":Ljava/lang/StringBuilder;
    .end local v4    # "before":I
    .end local v5    # "ident":J
    :cond_bc
    :goto_bc
    const-string v0, "Invalid parameter"

    invoke-static {v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13090
    return v2
.end method

.method public setMicrophoneMute(ZLjava/lang/String;I)V
    .registers 9
    .param p1, "on"    # Z
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .line 3631
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3632
    .local v0, "uid":I
    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_10

    .line 3633
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    invoke-static {p3, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 3635
    :cond_10
    new-instance v1, Landroid/media/MediaMetrics$Item;

    const-string v2, "audio.mic"

    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 3636
    invoke-virtual {v1, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 3637
    invoke-virtual {v1, v2, p2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 3638
    const-string/jumbo v3, "setMicrophoneMute"

    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->REQUEST:Landroid/media/MediaMetrics$Key;

    .line 3639
    if-eqz p1, :cond_32

    .line 3640
    const-string/jumbo v3, "mute"

    goto :goto_35

    :cond_32
    const-string/jumbo v3, "unmute"

    .line 3639
    :goto_35
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    .line 3643
    .local v1, "mmi":Landroid/media/MediaMetrics$Item;
    if-nez p1, :cond_51

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v3, 0x2c

    invoke-virtual {v2, v3, v0, p2}, Landroid/app/AppOpsManager;->noteOp(IILjava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_51

    .line 3645
    sget-object v2, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string v3, "disallow unmuting"

    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    invoke-virtual {v2}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 3646
    return-void

    .line 3648
    :cond_51
    const-string/jumbo v2, "setMicrophoneMute()"

    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_66

    .line 3649
    sget-object v2, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string v3, "!checkAudioSettingsPermission"

    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    invoke-virtual {v2}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 3650
    return-void

    .line 3652
    :cond_66
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    if-eq p3, v2, :cond_83

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3653
    const-string v3, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v2, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_83

    .line 3656
    sget-object v2, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string/jumbo v3, "permission"

    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    invoke-virtual {v2}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 3657
    return-void

    .line 3659
    :cond_83
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    .line 3660
    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 3661
    invoke-direct {p0, p3}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 3663
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 3664
    .local v2, "pid":I
    sget-object v3, Lcom/android/server/audio/AudioService;->sMicrophoneLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v4, Lcom/android/server/audio/AudioServiceEvents$MicrophoneEvent;

    invoke-direct {v4, p2, v2, p1}, Lcom/android/server/audio/AudioServiceEvents$MicrophoneEvent;-><init>(Ljava/lang/String;IZ)V

    invoke-virtual {v3, v4}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 3666
    .end local v2    # "pid":I
    return-void
.end method

.method public setMicrophoneMuteFromSwitch(Z)V
    .registers 6
    .param p1, "on"    # Z

    .line 3670
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3671
    .local v0, "userId":I
    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_11

    .line 3672
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "setMicrophoneMuteFromSwitch() called from non system user!"

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3673
    return-void

    .line 3675
    :cond_11
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    .line 3676
    new-instance v1, Landroid/media/MediaMetrics$Item;

    const-string v2, "audio.mic"

    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 3677
    invoke-virtual {v1, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 3678
    const-string/jumbo v3, "setMicrophoneMuteFromSwitch"

    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->REQUEST:Landroid/media/MediaMetrics$Key;

    .line 3679
    if-eqz p1, :cond_2f

    .line 3680
    const-string/jumbo v3, "mute"

    goto :goto_32

    :cond_2f
    const-string/jumbo v3, "unmute"

    .line 3679
    :goto_32
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    .line 3681
    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 3682
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 3683
    return-void
.end method

.method public setMode(ILandroid/os/IBinder;Ljava/lang/String;)V
    .registers 15
    .param p1, "mode"    # I
    .param p2, "cb"    # Landroid/os/IBinder;
    .param p3, "callingPackage"    # Ljava/lang/String;

    .line 4207
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setMode(mode="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", callingPackage="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4209
    const-string/jumbo v0, "setMode()"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_2e

    .line 4210
    return-void

    .line 4212
    :cond_2e
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3a

    const/4 v0, 0x1

    goto :goto_3b

    :cond_3a
    const/4 v0, 0x0

    .line 4215
    .local v0, "hasModifyPhoneStatePermission":Z
    :goto_3b
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v8

    .line 4216
    .local v8, "callingPid":I
    const/4 v1, 0x2

    if-ne p1, v1, :cond_67

    if-nez v0, :cond_67

    .line 4217
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "MODIFY_PHONE_STATE Permission Denial: setMode(MODE_IN_CALL) from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4218
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 4217
    const-string v2, "AS.AudioService"

    invoke-static {v2, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4219
    return-void

    .line 4222
    :cond_67
    const/4 v2, 0x4

    if-ne p1, v2, :cond_77

    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    if-nez v2, :cond_77

    .line 4223
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "setMode(MODE_CALL_SCREENING) not permitted when call screening is not supported"

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4225
    return-void

    .line 4228
    :cond_77
    const/4 v2, -0x1

    if-lt p1, v2, :cond_f9

    const/4 v3, 0x5

    if-lt p1, v3, :cond_7f

    goto/16 :goto_f9

    .line 4233
    :cond_7f
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v9, v3, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    monitor-enter v9

    .line 4234
    if-ne p1, v2, :cond_89

    .line 4235
    :try_start_86
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMode:I

    move p1, v2

    .line 4237
    :cond_89
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getModeOwnerPid()I

    move-result v2

    move v10, v2

    .line 4243
    .local v10, "oldModeOwnerPid":I
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMode:I

    if-eq p1, v2, :cond_dd

    if-eqz p1, :cond_dd

    iget v2, p0, Lcom/android/server/audio/AudioService;->mMode:I

    if-eq v2, v1, :cond_9d

    iget v1, p0, Lcom/android/server/audio/AudioService;->mMode:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_dd

    :cond_9d
    if-nez v0, :cond_dd

    if-eq v10, v8, :cond_dd

    .line 4247
    const-string v1, "AS.AudioService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setMode("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ") from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4248
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", cannot change mode from "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, p0, Lcom/android/server/audio/AudioService;->mMode:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " without permission or being mode owner"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4247
    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4251
    monitor-exit v9

    return-void

    .line 4253
    :cond_dd
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    move-object v1, p0

    move v2, p1

    move-object v3, p2

    move v4, v8

    move v6, v0

    move-object v7, p3

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->setModeInt(ILandroid/os/IBinder;IIZLjava/lang/String;)I

    move-result v1

    .line 4255
    .end local v10    # "oldModeOwnerPid":I
    .local v1, "newModeOwnerPid":I
    monitor-exit v9
    :try_end_ec
    .catchall {:try_start_86 .. :try_end_ec} :catchall_f6

    .line 4258
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getMode()I

    move-result v3

    invoke-virtual {v2, v1, v3}, Lcom/android/server/audio/AudioDeviceBroker;->postSetModeOwnerPid(II)V

    .line 4259
    return-void

    .line 4255
    .end local v1    # "newModeOwnerPid":I
    :catchall_f6
    move-exception v1

    :try_start_f7
    monitor-exit v9
    :try_end_f8
    .catchall {:try_start_f7 .. :try_end_f8} :catchall_f6

    throw v1

    .line 4229
    :cond_f9
    :goto_f9
    return-void
.end method

.method public setMultiAudioFocusEnabled(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .line 10053
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 10054
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    if-eqz v0, :cond_19

    .line 10055
    invoke-virtual {v0}, Lcom/android/server/audio/MediaFocusControl;->getMultiAudioFocusEnabled()Z

    move-result v0

    .line 10056
    .local v0, "mafEnabled":Z
    if-eq v0, p1, :cond_19

    .line 10057
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v1, p1}, Lcom/android/server/audio/MediaFocusControl;->updateMultiAudioFocus(Z)V

    .line 10058
    if-nez p1, :cond_19

    .line 10059
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v1}, Lcom/android/server/audio/AudioDeviceBroker;->postBroadcastBecomingNoisy()V

    .line 10063
    .end local v0    # "mafEnabled":Z
    :cond_19
    return-void
.end method

.method public setMultiSoundOn(ZZ)V
    .registers 11
    .param p1, "on"    # Z
    .param p2, "shouldShowNotification"    # Z

    .line 12023
    const-string/jumbo v0, "setMultiSoundOn"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 12024
    return-void

    .line 12026
    :cond_a
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x6b

    const/4 v3, 0x2

    const/4 v5, 0x0

    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v6

    const/4 v7, 0x0

    move v4, p2

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 12027
    return-void
.end method

.method setMusicMute(Z)V
    .registers 4
    .param p1, "mute"    # Z

    .line 5791
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    const/4 v1, 0x3

    aget-object v0, v0, v1

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->muteInternally(Z)Z

    .line 5793
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setMusicMute mute = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5795
    return-void
.end method

.method public setMuteInterval(ILjava/lang/String;)V
    .registers 12
    .param p1, "interval"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 11538
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setMuteInterval unmute timer="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " from="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11539
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_4e

    .line 11541
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "WRITE_SECURE_SETTINGS Permission Denial from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11542
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 11541
    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11543
    return-void

    .line 11546
    :cond_4e
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v3, 0x6e

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v0, 0x0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    const/4 v8, 0x0

    move v5, p1

    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 11547
    return-void
.end method

.method public setPreferredDeviceForStrategy(ILandroid/media/AudioDeviceAttributes;)I
    .registers 11
    .param p1, "strategy"    # I
    .param p2, "device"    # Landroid/media/AudioDeviceAttributes;

    .line 2028
    const/4 v0, -0x1

    if-nez p2, :cond_4

    .line 2029
    return v0

    .line 2031
    :cond_4
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2032
    const/4 v1, 0x4

    new-array v1, v1, [Ljava/lang/Object;

    .line 2034
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v4, 0x1

    aput-object v2, v1, v4

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v5, 0x2

    aput-object v2, v1, v5

    const/4 v2, 0x3

    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->toString()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v1, v2

    .line 2032
    const-string/jumbo v2, "setPreferredDeviceForStrategy u/pid:%d/%d strat:%d dev:%s"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .line 2035
    .local v1, "logString":Ljava/lang/String;
    sget-object v2, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v6, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    invoke-direct {v6, v1}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    const-string v7, "AS.AudioService"

    invoke-virtual {v6, v7}, Lcom/android/server/audio/AudioEventLogger$StringEvent;->printLog(Ljava/lang/String;)Lcom/android/server/audio/AudioEventLogger$Event;

    move-result-object v6

    invoke-virtual {v2, v6}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 2036
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->getRole()I

    move-result v2

    if-ne v2, v4, :cond_60

    .line 2037
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unsupported input routing in "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v7, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2038
    return v0

    .line 2041
    :cond_60
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/audio/AudioDeviceBroker;->setPreferredDeviceForStrategySync(ILandroid/media/AudioDeviceAttributes;)I

    move-result v0

    .line 2042
    .local v0, "status":I
    if-eqz v0, :cond_7b

    .line 2043
    new-array v2, v5, [Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v2, v3

    aput-object v1, v2, v4

    const-string v3, "Error %d in %s)"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v7, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2046
    :cond_7b
    return v0
.end method

.method public setRadioOutputPath(I)V
    .registers 6
    .param p1, "path"    # I

    .line 11462
    const-string/jumbo v0, "setRadioOutputPath()"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 11463
    return-void

    .line 11465
    :cond_a
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    const/4 v1, 0x3

    aget-object v0, v0, v1

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Z)Z

    .line 11466
    const/4 v0, 0x2

    const/16 v3, 0x8

    if-ne p1, v0, :cond_1f

    .line 11467
    const/4 v0, 0x1

    invoke-static {v3, v0}, Landroid/media/AudioSystem;->setForceUse(II)I

    .line 11468
    iput v0, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    goto :goto_2f

    .line 11469
    :cond_1f
    if-ne p1, v3, :cond_28

    .line 11470
    const/4 v0, 0x4

    invoke-static {v3, v0}, Landroid/media/AudioSystem;->setForceUse(II)I

    .line 11471
    iput v0, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    goto :goto_2f

    .line 11472
    :cond_28
    if-ne p1, v1, :cond_37

    .line 11473
    invoke-static {v3, v2}, Landroid/media/AudioSystem;->setForceUse(II)I

    .line 11474
    iput v2, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    .line 11479
    :goto_2f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget v1, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioDeviceBroker;->updateFmRadioPath(I)V

    .line 11480
    return-void

    .line 11476
    :cond_37
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "FM radio app set wrong radio output path : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11477
    return-void
.end method

.method public setRemoteMic(Z)V
    .registers 2
    .param p1, "on"    # Z

    .line 14512
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 14513
    return-void
.end method

.method public setRingerModeExternal(ILjava/lang/String;)V
    .registers 5
    .param p1, "ringerMode"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 3775
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->isAndroidNPlus(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1d

    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->wouldToggleZenMode(I)Z

    move-result v0

    if-eqz v0, :cond_1d

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 3776
    invoke-virtual {v0, p2}, Landroid/app/NotificationManager;->isNotificationPolicyAccessGrantedForPackage(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_15

    goto :goto_1d

    .line 3777
    :cond_15
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Not allowed to change Do Not Disturb state"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3780
    :cond_1d
    :goto_1d
    const/4 v0, 0x1

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 3781
    return-void
.end method

.method public setRingerModeInternal(ILjava/lang/String;)V
    .registers 4
    .param p1, "ringerMode"    # I
    .param p2, "caller"    # Ljava/lang/String;

    .line 3784
    const-string/jumbo v0, "setRingerModeInternal"

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 3785
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 3786
    return-void
.end method

.method public setRingtonePlayer(Landroid/media/IRingtonePlayer;)V
    .registers 5
    .param p1, "player"    # Landroid/media/IRingtonePlayer;

    .line 7931
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.REMOTE_AUDIO_PLAYBACK"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 7932
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mRingtonePlayer:Landroid/media/IRingtonePlayer;

    .line 7933
    return-void
.end method

.method public setRttEnabled(Z)V
    .registers 6
    .param p1, "rttEnabled"    # Z

    .line 4474
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_31

    .line 4477
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "MODIFY_PHONE_STATE Permission Denial: setRttEnabled from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4478
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 4477
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4479
    return-void

    .line 4481
    :cond_31
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v0

    .line 4482
    :try_start_34
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    .line 4483
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_3a
    .catchall {:try_start_34 .. :try_end_3a} :catchall_49

    .line 4485
    .local v1, "identity":J
    :try_start_3a
    invoke-static {p1}, Landroid/media/AudioSystem;->setRttEnabled(Z)I
    :try_end_3d
    .catchall {:try_start_3a .. :try_end_3d} :catchall_43

    .line 4487
    :try_start_3d
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4488
    nop

    .line 4489
    .end local v1    # "identity":J
    monitor-exit v0

    .line 4490
    return-void

    .line 4487
    .restart local v1    # "identity":J
    :catchall_43
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4488
    nop

    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "rttEnabled":Z
    throw v3

    .line 4489
    .end local v1    # "identity":J
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "rttEnabled":Z
    :catchall_49
    move-exception v1

    monitor-exit v0
    :try_end_4b
    .catchall {:try_start_3d .. :try_end_4b} :catchall_49

    throw v1
.end method

.method setSelfiestickIsConnected(Z)V
    .registers 2
    .param p1, "connected"    # Z

    .line 14098
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mSelfiestickIsConnected:Z

    .line 14099
    return-void
.end method

.method public setSoundSettingEventBroadcastIntent(ILandroid/app/PendingIntent;)V
    .registers 13
    .param p1, "eventType"    # I
    .param p2, "broadcastIntent"    # Landroid/app/PendingIntent;

    .line 12956
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_31

    .line 12959
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "MODIFY_PHONE_STATE Permission Denial from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12960
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12959
    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12961
    return-void

    .line 12964
    :cond_31
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 12966
    .local v0, "ident":J
    :try_start_35
    invoke-virtual {p2}, Landroid/app/PendingIntent;->getIntent()Landroid/content/Intent;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    .line 12967
    .local v2, "newComponent":Landroid/content/ComponentName;
    if-nez v2, :cond_4a

    .line 12968
    const-string v3, "AS.AudioService"

    const-string v4, "Invalid argument"

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_46
    .catchall {:try_start_35 .. :try_end_46} :catchall_106

    .line 13012
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12969
    return-void

    .line 12972
    :cond_4a
    :try_start_4a
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    monitor-enter v3
    :try_end_4d
    .catchall {:try_start_4a .. :try_end_4d} :catchall_106

    .line 12973
    :try_start_4d
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 12974
    .local v4, "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    new-instance v5, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    invoke-direct {v5, p1, v2}, Lcom/android/server/audio/AudioService$SoundEventReceiver;-><init>(ILandroid/content/ComponentName;)V

    .line 12976
    .local v5, "newReceiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v6

    .line 12977
    .local v6, "index":I
    if-nez p1, :cond_a9

    .line 12978
    if-gez v6, :cond_61

    monitor-exit v3
    :try_end_5d
    .catchall {:try_start_4d .. :try_end_5d} :catchall_103

    .line 13012
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12978
    return-void

    .line 12980
    :cond_61
    :try_start_61
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v7}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->getVolumeLongPressReceiver()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v2, v7}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v7

    const/4 v8, 0x0

    if-eqz v7, :cond_73

    .line 12981
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v7, v8}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 12983
    :cond_73
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v7}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->getMediaKeyEventReceiver()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v2, v7}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_84

    .line 12984
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v7, v8}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 12986
    :cond_84
    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 12987
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setPlayerChangedCallbackLocked()V

    .line 12988
    const-string v7, "AS.AudioService"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Receiver removed, size : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12989
    monitor-exit v3
    :try_end_a5
    .catchall {:try_start_61 .. :try_end_a5} :catchall_103

    .line 13012
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12989
    return-void

    .line 12992
    :cond_a9
    if-gez v6, :cond_af

    .line 12993
    :try_start_ab
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_b7

    .line 12995
    :cond_af
    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    iput p1, v7, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventType:I

    .line 12998
    :goto_b7
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->setPlayerChangedCallbackLocked()V

    .line 13001
    and-int/lit8 v7, p1, 0x20

    if-eqz v7, :cond_ca

    .line 13002
    const-string v7, "AS.AudioService"

    const-string v8, "Set long press receiver"

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13003
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v7, v2}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 13005
    :cond_ca
    and-int/lit8 v7, p1, 0x40

    if-eqz v7, :cond_da

    .line 13006
    const-string v7, "AS.AudioService"

    const-string v8, "Set media button receiver"

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13007
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v7, v2}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 13009
    :cond_da
    const-string v7, "AS.AudioService"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Success set receiver as type : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, ", size : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13010
    nop

    .end local v4    # "receiverList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/audio/AudioService$SoundEventReceiver;>;"
    .end local v5    # "newReceiver":Lcom/android/server/audio/AudioService$SoundEventReceiver;
    .end local v6    # "index":I
    monitor-exit v3
    :try_end_fe
    .catchall {:try_start_ab .. :try_end_fe} :catchall_103

    .line 13012
    .end local v2    # "newComponent":Landroid/content/ComponentName;
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13013
    nop

    .line 13014
    return-void

    .line 13010
    .restart local v2    # "newComponent":Landroid/content/ComponentName;
    :catchall_103
    move-exception v4

    :try_start_104
    monitor-exit v3
    :try_end_105
    .catchall {:try_start_104 .. :try_end_105} :catchall_103

    .end local v0    # "ident":J
    .end local p0    # "this":Lcom/android/server/audio/AudioService;
    .end local p1    # "eventType":I
    .end local p2    # "broadcastIntent":Landroid/app/PendingIntent;
    :try_start_105
    throw v4
    :try_end_106
    .catchall {:try_start_105 .. :try_end_106} :catchall_106

    .line 13012
    .end local v2    # "newComponent":Landroid/content/ComponentName;
    .restart local v0    # "ident":J
    .restart local p0    # "this":Lcom/android/server/audio/AudioService;
    .restart local p1    # "eventType":I
    .restart local p2    # "broadcastIntent":Landroid/app/PendingIntent;
    :catchall_106
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13013
    throw v2
.end method

.method public setSpeakerphoneOn(Landroid/os/IBinder;Z)V
    .registers 13
    .param p1, "cb"    # Landroid/os/IBinder;
    .param p2, "on"    # Z

    .line 4626
    const-string/jumbo v0, "setSpeakerphoneOn()"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_a

    .line 4627
    return-void

    .line 4631
    :cond_a
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4632
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 4635
    .local v1, "pid":I
    const/16 v2, 0x3e8

    if-ne v0, v2, :cond_1a

    .line 4636
    const-string/jumbo v2, "system"

    .local v2, "packageName":Ljava/lang/String;
    goto :goto_22

    .line 4638
    .end local v2    # "packageName":Ljava/lang/String;
    :cond_1a
    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v2

    .line 4639
    .local v2, "packageNames":[Ljava/lang/String;
    const/4 v3, 0x0

    aget-object v3, v2, v3

    move-object v2, v3

    .line 4642
    .local v2, "packageName":Ljava/lang/String;
    :goto_22
    new-instance v3, Ljava/lang/StringBuilder;

    const-string/jumbo v4, "setSpeakerphoneOn("

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 4643
    const-string v4, ") from u/pid:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, "/"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4644
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " Package Name:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 4645
    .local v3, "eventSource":Ljava/lang/String;
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v4, p1, v1, p2, v3}, Lcom/android/server/audio/AudioDeviceBroker;->setSpeakerphoneOn(Landroid/os/IBinder;IZLjava/lang/String;)Z

    move-result v4

    .line 4646
    .local v4, "stateChanged":Z
    new-instance v5, Landroid/media/MediaMetrics$Item;

    const-string v6, "audio.device.setSpeakerphoneOn"

    invoke-direct {v5, v6}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 4648
    invoke-virtual {v5, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v5

    .line 4649
    invoke-virtual {v5, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v5

    sget-object v6, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 4650
    if-eqz p2, :cond_66

    .line 4651
    const-string/jumbo v7, "on"

    goto :goto_69

    :cond_66
    const-string/jumbo v7, "off"

    .line 4650
    :goto_69
    invoke-virtual {v5, v6, v7}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v5

    .line 4652
    invoke-virtual {v5}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4654
    if-eqz v4, :cond_93

    .line 4655
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5

    .line 4657
    .local v5, "ident":J
    :try_start_76
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    new-instance v8, Landroid/content/Intent;

    const-string v9, "android.media.action.SPEAKERPHONE_STATE_CHANGED"

    invoke-direct {v8, v9}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const/high16 v9, 0x40000000    # 2.0f

    .line 4659
    invoke-virtual {v8, v9}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    move-result-object v8

    sget-object v9, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 4657
    invoke-virtual {v7, v8, v9}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_8a
    .catchall {:try_start_76 .. :try_end_8a} :catchall_8e

    .line 4661
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4662
    goto :goto_93

    .line 4661
    :catchall_8e
    move-exception v7

    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4662
    throw v7

    .line 4670
    .end local v5    # "ident":J
    :cond_93
    :goto_93
    return-void
.end method

.method public setStreamVolume(IIILjava/lang/String;)V
    .registers 14
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;

    .line 2885
    const-string v0, "AS.AudioService"

    const/16 v1, 0xa

    if-ne p1, v1, :cond_21

    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->canChangeAccessibilityVolume()Z

    move-result v1

    if-nez v1, :cond_21

    .line 2886
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Trying to call setStreamVolume() for a11y without CHANGE_ACCESSIBILITY_VOLUME  callingPackage="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2888
    return-void

    .line 2890
    :cond_21
    if-nez p1, :cond_44

    if-nez p2, :cond_44

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2891
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_44

    .line 2894
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Trying to call setStreamVolume() for STREAM_VOICE_CALL and index 0 without MODIFY_PHONE_STATE  callingPackage="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2896
    return-void

    .line 2898
    :cond_44
    const/16 v1, 0xb

    if-ne p1, v1, :cond_67

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2899
    const-string v2, "android.permission.MODIFY_AUDIO_ROUTING"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_67

    .line 2902
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Trying to call setStreamVolume() for STREAM_ASSISTANT without MODIFY_AUDIO_ROUTING  callingPackage="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2904
    return-void

    .line 2906
    :cond_67
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 2907
    const-string v1, "android.permission.MODIFY_AUDIO_SETTINGS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_73

    const/4 v0, 0x1

    goto :goto_74

    :cond_73
    const/4 v0, 0x0

    :goto_74
    move v8, v0

    .line 2909
    .local v8, "hasModifyAudioSettings":Z
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    const/4 v2, 0x2

    move-object v1, v7

    move v3, p1

    move v4, p2

    move v5, p3

    move-object v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    invoke-virtual {v0, v7}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 2911
    nop

    .line 2912
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 2911
    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move-object v5, p4

    invoke-direct/range {v1 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZ)V

    .line 2913
    return-void
.end method

.method public setStreamVolumeForDevice(IIILjava/lang/String;I)V
    .registers 18
    .param p1, "streamType"    # I
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "device"    # I

    .line 12838
    move v9, p1

    move-object/from16 v10, p4

    const-string v0, "AS.AudioService"

    const/16 v1, 0xa

    if-ne v9, v1, :cond_24

    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->canChangeAccessibilityVolume()Z

    move-result v1

    if-nez v1, :cond_24

    .line 12839
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Trying to call setStreamVolume() for a11y without CHANGE_ACCESSIBILITY_VOLUME  callingPackage="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12841
    return-void

    .line 12843
    :cond_24
    if-nez v9, :cond_48

    if-nez p2, :cond_48

    move-object v11, p0

    iget-object v1, v11, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 12844
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_49

    .line 12847
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Trying to call setStreamVolume() for STREAM_VOICE_CALL and index 0 without MODIFY_PHONE_STATE  callingPackage="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12849
    return-void

    .line 12843
    :cond_48
    move-object v11, p0

    .line 12851
    :cond_49
    sget-object v6, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    const/4 v1, 0x2

    move-object v0, v7

    move v2, p1

    move v3, p2

    move v4, p3

    move-object/from16 v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    invoke-virtual {v6, v7}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 12853
    nop

    .line 12854
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/4 v7, 0x1

    .line 12853
    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move-object/from16 v4, p4

    move/from16 v8, p5

    invoke-direct/range {v0 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZI)V

    .line 12855
    return-void
.end method

.method public setSupportedSystemUsages([I)V
    .registers 4
    .param p1, "systemUsages"    # [I

    .line 1389
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 1390
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->verifySystemUsages([I)V

    .line 1392
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    monitor-enter v0

    .line 1393
    :try_start_9
    invoke-static {p1}, Landroid/media/AudioSystem;->setSupportedSystemUsages([I)I

    .line 1394
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 1395
    monitor-exit v0

    .line 1396
    return-void

    .line 1395
    :catchall_10
    move-exception v1

    monitor-exit v0
    :try_end_12
    .catchall {:try_start_9 .. :try_end_12} :catchall_10

    throw v1
.end method

.method public setUidDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I[I[Ljava/lang/String;)I
    .registers 9
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p2, "uid"    # I
    .param p3, "deviceTypes"    # [I
    .param p4, "deviceAddresses"    # [Ljava/lang/String;

    .line 9229
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setUidDeviceAffinity for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " uid:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9231
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9232
    :try_start_26
    const-string v1, "Cannot change device affinity in audio policy"

    .line 9233
    invoke-direct {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9234
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    const/4 v2, -0x1

    if-nez v1, :cond_31

    .line 9235
    monitor-exit v0

    return v2

    .line 9237
    :cond_31
    invoke-virtual {v1, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->hasMixRoutedToDevices([I[Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_39

    .line 9238
    monitor-exit v0

    return v2

    .line 9240
    :cond_39
    invoke-virtual {v1, p2, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->setUidDeviceAffinities(I[I[Ljava/lang/String;)I

    move-result v2

    monitor-exit v0

    return v2

    .line 9241
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :catchall_3f
    move-exception v1

    monitor-exit v0
    :try_end_41
    .catchall {:try_start_26 .. :try_end_41} :catchall_3f

    throw v1
.end method

.method public setUserIdDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I[I[Ljava/lang/String;)I
    .registers 9
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;
    .param p2, "userId"    # I
    .param p3, "deviceTypes"    # [I
    .param p4, "deviceAddresses"    # [Ljava/lang/String;

    .line 9248
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setUserIdDeviceAffinity for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " user:"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9251
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    monitor-enter v0

    .line 9252
    :try_start_26
    const-string v1, "Cannot change device affinity in audio policy"

    .line 9253
    invoke-direct {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    move-result-object v1

    .line 9254
    .local v1, "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    const/4 v2, -0x1

    if-nez v1, :cond_31

    .line 9255
    monitor-exit v0

    return v2

    .line 9257
    :cond_31
    invoke-virtual {v1, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->hasMixRoutedToDevices([I[Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_39

    .line 9258
    monitor-exit v0

    return v2

    .line 9260
    :cond_39
    invoke-virtual {v1, p2, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->setUserIdDeviceAffinities(I[I[Ljava/lang/String;)I

    move-result v2

    monitor-exit v0

    return v2

    .line 9261
    .end local v1    # "app":Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    :catchall_3f
    move-exception v1

    monitor-exit v0
    :try_end_41
    .catchall {:try_start_26 .. :try_end_41} :catchall_3f

    throw v1
.end method

.method public setVibrateSetting(II)V
    .registers 4
    .param p1, "vibrateType"    # I
    .param p2, "vibrateSetting"    # I

    .line 4085
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    if-nez v0, :cond_5

    return-void

    .line 4087
    :cond_5
    iget v0, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    invoke-static {v0, p1, p2}, Landroid/media/AudioSystem;->getValueForVibrateSetting(III)I

    move-result v0

    iput v0, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 4091
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->broadcastVibrateSetting(I)V

    .line 4093
    return-void
.end method

.method public setVolumeController(Landroid/media/IVolumeController;)V
    .registers 5
    .param p1, "controller"    # Landroid/media/IVolumeController;

    .line 8581
    const-string/jumbo v0, "set the volume controller"

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 8584
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioService$VolumeController;->isSameBinder(Landroid/media/IVolumeController;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 8585
    return-void

    .line 8589
    :cond_f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeController;->postDismiss()V

    .line 8590
    if-eqz p1, :cond_25

    .line 8593
    :try_start_16
    invoke-interface {p1}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    new-instance v1, Lcom/android/server/audio/AudioService$4;

    invoke-direct {v1, p0, p1}, Lcom/android/server/audio/AudioService$4;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/IVolumeController;)V

    const/4 v2, 0x0

    invoke-interface {v0, v1, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_23
    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_23} :catch_24

    .line 8608
    goto :goto_25

    .line 8606
    :catch_24
    move-exception v0

    .line 8610
    :cond_25
    :goto_25
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioService$VolumeController;->setController(Landroid/media/IVolumeController;)V

    .line 8611
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Volume controller: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8612
    return-void
.end method

.method public setVolumeIndexForAttributes(Landroid/media/AudioAttributes;IILjava/lang/String;)V
    .registers 26
    .param p1, "attr"    # Landroid/media/AudioAttributes;
    .param p2, "index"    # I
    .param p3, "flags"    # I
    .param p4, "callingPackage"    # Ljava/lang/String;

    .line 2816
    invoke-direct/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2817
    const-string v0, "attr must not be null"

    move-object/from16 v8, p1

    invoke-static {v8, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 2818
    invoke-direct/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->getVolumeGroupIdForAttributes(Landroid/media/AudioAttributes;)I

    move-result v9

    .line 2819
    .local v9, "volumeGroup":I
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v0, v9}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v0

    const-string v10, "AS.AudioService"

    if-gez v0, :cond_31

    .line 2820
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, ": no volume group found for attributes "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p1 .. p1}, Landroid/media/AudioAttributes;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 2821
    return-void

    .line 2823
    :cond_31
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    invoke-virtual {v0, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v11, v0

    check-cast v11, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 2825
    .local v11, "vgs":Lcom/android/server/audio/AudioService$VolumeGroupState;
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v12, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    const/16 v2, 0x8

    invoke-virtual {v11}, Lcom/android/server/audio/AudioService$VolumeGroupState;->name()Ljava/lang/String;

    move-result-object v4

    move-object v1, v12

    move-object/from16 v3, p1

    move/from16 v5, p2

    move/from16 v6, p3

    move-object/from16 v7, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(ILandroid/media/AudioAttributes;Ljava/lang/String;IILjava/lang/String;)V

    invoke-virtual {v0, v12}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 2828
    move/from16 v1, p2

    move/from16 v2, p3

    invoke-virtual {v11, v1, v2}, Lcom/android/server/audio/AudioService$VolumeGroupState;->setVolumeIndex(II)V

    .line 2831
    invoke-virtual {v11}, Lcom/android/server/audio/AudioService$VolumeGroupState;->getLegacyStreamTypes()[I

    move-result-object v3

    array-length v4, v3

    const/4 v0, 0x0

    move v5, v0

    :goto_61
    if-ge v5, v4, :cond_aa

    aget v6, v3, v5

    .line 2833
    .local v6, "groupedStream":I
    move-object/from16 v7, p0

    :try_start_67
    invoke-direct {v7, v6}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V
    :try_end_6a
    .catch Ljava/lang/IllegalArgumentException; {:try_start_67 .. :try_end_6a} :catch_81

    .line 2838
    nop

    .line 2839
    nop

    .line 2840
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v19

    const/16 v20, 0x1

    .line 2839
    move-object/from16 v13, p0

    move v14, v6

    move/from16 v15, p2

    move/from16 v16, p3

    move-object/from16 v17, p4

    move-object/from16 v18, p4

    invoke-direct/range {v13 .. v20}, Lcom/android/server/audio/AudioService;->setStreamVolume(IIILjava/lang/String;Ljava/lang/String;IZ)V

    goto :goto_a7

    .line 2834
    :catch_81
    move-exception v0

    move-object v12, v0

    move-object v0, v12

    .line 2835
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v13, "volume group "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v13, " has internal streams ("

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v13, "), do not change associated stream volume"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v10, v12}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2837
    nop

    .line 2831
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    .end local v6    # "groupedStream":I
    :goto_a7
    add-int/lit8 v5, v5, 0x1

    goto :goto_61

    .line 2842
    :cond_aa
    move-object/from16 v7, p0

    return-void
.end method

.method public setVolumePolicy(Landroid/media/VolumePolicy;)V
    .registers 4
    .param p1, "policy"    # Landroid/media/VolumePolicy;

    .line 8629
    const-string/jumbo v0, "set volume policy"

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 8630
    if-eqz p1, :cond_2a

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    invoke-virtual {p1, v0}, Landroid/media/VolumePolicy;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2a

    .line 8631
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 8632
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Volume policy changed: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8634
    :cond_2a
    return-void
.end method

.method public setWiredDeviceConnectionState(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .registers 13
    .param p1, "type"    # I
    .param p2, "state"    # I
    .param p3, "address"    # Ljava/lang/String;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "caller"    # Ljava/lang/String;

    .line 5700
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 5701
    const/4 v0, 0x1

    if-eq p2, v0, :cond_20

    if-nez p2, :cond_9

    goto :goto_20

    .line 5703
    :cond_9
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid state "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5705
    :cond_20
    :goto_20
    new-instance v1, Landroid/media/MediaMetrics$Item;

    const-string v2, "audio.service.setWiredDeviceConnectionState"

    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    sget-object v2, Landroid/media/MediaMetrics$Property;->ADDRESS:Landroid/media/MediaMetrics$Key;

    .line 5706
    invoke-virtual {v1, v2, p3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 5707
    invoke-virtual {v1, v2, p5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->DEVICE:Landroid/media/MediaMetrics$Key;

    .line 5708
    invoke-static {p1}, Landroid/media/AudioSystem;->getDeviceName(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->NAME:Landroid/media/MediaMetrics$Key;

    .line 5709
    invoke-virtual {v1, v2, p4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    sget-object v2, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 5711
    if-ne p2, v0, :cond_4a

    const-string v0, "connected"

    goto :goto_4c

    :cond_4a
    const-string v0, "disconnected"

    .line 5710
    :goto_4c
    invoke-virtual {v1, v2, v0}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    .line 5712
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 5722
    if-eqz p3, :cond_63

    if-nez p4, :cond_58

    goto :goto_63

    .line 5725
    :cond_58
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    move v2, p1

    move v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioDeviceBroker;->setWiredDeviceConnectionState(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 5726
    return-void

    .line 5723
    :cond_63
    :goto_63
    return-void
.end method

.method public shouldShowRingtoneVolume()Z
    .registers 2

    .line 14738
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    xor-int/lit8 v0, v0, 0x1

    return v0
.end method

.method public shouldVibrate(I)Z
    .registers 6
    .param p1, "vibrateType"    # I

    .line 4057
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    return v1

    .line 4059
    :cond_6
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getVibrateSetting(I)I

    move-result v0

    const/4 v2, 0x1

    if-eq v0, v2, :cond_19

    const/4 v3, 0x2

    if-eq v0, v3, :cond_11

    .line 4072
    return v1

    .line 4065
    :cond_11
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    if-ne v0, v2, :cond_18

    move v1, v2

    :cond_18
    return v1

    .line 4062
    :cond_19
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    if-eqz v0, :cond_20

    move v1, v2

    :cond_20
    return v1
.end method

.method public silenceRingerModeInternal(Ljava/lang/String;)V
    .registers 10
    .param p1, "reason"    # Ljava/lang/String;

    .line 3789
    const/4 v0, 0x0

    .line 3790
    .local v0, "effect":Landroid/os/VibrationEffect;
    const/4 v1, 0x0

    .line 3791
    .local v1, "ringerMode":I
    const/4 v2, 0x0

    .line 3793
    .local v2, "toastText":I
    const/4 v3, 0x0

    .line 3794
    .local v3, "silenceRingerSetting":I
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    .line 3795
    const v5, 0x1110110

    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v4

    const/4 v5, 0x0

    if-eqz v4, :cond_1e

    .line 3796
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const/4 v6, -0x2

    const-string/jumbo v7, "volume_hush_gesture"

    invoke-static {v4, v7, v5, v6}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v3

    .line 3801
    :cond_1e
    const/4 v4, 0x1

    if-eq v3, v4, :cond_2e

    const/4 v6, 0x2

    if-eq v3, v6, :cond_25

    goto :goto_37

    .line 3803
    :cond_25
    invoke-static {v4}, Landroid/os/VibrationEffect;->get(I)Landroid/os/VibrationEffect;

    move-result-object v0

    .line 3804
    const/4 v1, 0x0

    .line 3805
    const v2, 0x1040cfa

    .line 3806
    goto :goto_37

    .line 3808
    :cond_2e
    const/4 v4, 0x5

    invoke-static {v4}, Landroid/os/VibrationEffect;->get(I)Landroid/os/VibrationEffect;

    move-result-object v0

    .line 3809
    const/4 v1, 0x1

    .line 3810
    const v2, 0x1040cfb

    .line 3813
    :goto_37
    invoke-direct {p0, v0, p1}, Lcom/android/server/audio/AudioService;->maybeVibrate(Landroid/os/VibrationEffect;Ljava/lang/String;)Z

    .line 3814
    invoke-virtual {p0, v1, p1}, Lcom/android/server/audio/AudioService;->setRingerModeInternal(ILjava/lang/String;)V

    .line 3815
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v4, v2, v5}, Landroid/widget/Toast;->makeText(Landroid/content/Context;II)Landroid/widget/Toast;

    move-result-object v4

    invoke-virtual {v4}, Landroid/widget/Toast;->show()V

    .line 3816
    return-void
.end method

.method public startBluetoothSco(Landroid/os/IBinder;I)V
    .registers 10
    .param p1, "cb"    # Landroid/os/IBinder;
    .param p2, "targetSdkVersion"    # I

    .line 4749
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4750
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 4752
    .local v1, "pid":I
    const/16 v2, 0x12

    if-ge p2, v2, :cond_e

    .line 4753
    const/4 v2, 0x0

    goto :goto_f

    :cond_e
    const/4 v2, -0x1

    .line 4754
    .local v2, "scoAudioMode":I
    :goto_f
    new-instance v3, Ljava/lang/StringBuilder;

    const-string/jumbo v4, "startBluetoothSco()"

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 4755
    const-string v4, ") from u/pid:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, "/"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4756
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 4758
    .local v3, "eventSource":Ljava/lang/String;
    new-instance v4, Landroid/media/MediaMetrics$Item;

    const-string v5, "audio.bluetooth"

    invoke-direct {v4, v5}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 4759
    invoke-virtual {v4, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v4

    .line 4760
    invoke-virtual {v4, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v4

    sget-object v5, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 4761
    const-string/jumbo v6, "startBluetoothSco"

    invoke-virtual {v4, v5, v6}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v4

    sget-object v5, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 4763
    invoke-static {v2}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    move-result-object v6

    .line 4762
    invoke-virtual {v4, v5, v6}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v4

    .line 4764
    invoke-virtual {v4}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4765
    invoke-virtual {p0, p1, v2, v3}, Lcom/android/server/audio/AudioService;->startBluetoothScoInt(Landroid/os/IBinder;ILjava/lang/String;)V

    .line 4767
    return-void
.end method

.method startBluetoothScoInt(Landroid/os/IBinder;ILjava/lang/String;)V
    .registers 8
    .param p1, "cb"    # Landroid/os/IBinder;
    .param p2, "scoAudioMode"    # I
    .param p3, "eventSource"    # Ljava/lang/String;

    .line 4788
    new-instance v0, Landroid/media/MediaMetrics$Item;

    const-string v1, "audio.bluetooth"

    invoke-direct {v0, v1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    sget-object v1, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 4789
    const-string/jumbo v2, "startBluetoothScoInt"

    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 4791
    invoke-static {p2}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    move-result-object v2

    .line 4790
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    .line 4793
    .local v0, "mmi":Landroid/media/MediaMetrics$Item;
    const-string/jumbo v1, "startBluetoothSco()"

    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_5a

    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    if-nez v1, :cond_28

    goto :goto_5a

    .line 4798
    :cond_28
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v1, v1, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 4799
    :try_start_2d
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x0

    aget-object v2, v2, v3

    .line 4800
    .local v2, "packageName":Ljava/lang/String;
    const-string v3, "com.tencent.mm"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_48

    const-string v3, "com.tencent.mobileqq"

    .line 4801
    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4d

    .line 4802
    :cond_48
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3, p1}, Lcom/android/server/audio/AudioDeviceBroker;->setSpeakerphoneOffForScoOn(Landroid/os/IBinder;)V

    .line 4804
    :cond_4d
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3, p1, p2, p3}, Lcom/android/server/audio/AudioDeviceBroker;->startBluetoothScoForClient_Sync(Landroid/os/IBinder;ILjava/lang/String;)V

    .line 4805
    .end local v2    # "packageName":Ljava/lang/String;
    monitor-exit v1
    :try_end_53
    .catchall {:try_start_2d .. :try_end_53} :catchall_57

    .line 4806
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4807
    return-void

    .line 4805
    :catchall_57
    move-exception v2

    :try_start_58
    monitor-exit v1
    :try_end_59
    .catchall {:try_start_58 .. :try_end_59} :catchall_57

    throw v2

    .line 4795
    :cond_5a
    :goto_5a
    sget-object v1, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    const-string/jumbo v2, "permission or systemReady"

    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v1

    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4796
    return-void
.end method

.method public startBluetoothScoVirtualCall(Landroid/os/IBinder;)V
    .registers 9
    .param p1, "cb"    # Landroid/os/IBinder;

    .line 4771
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4772
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 4773
    .local v1, "pid":I
    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "startBluetoothScoVirtualCall()"

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 4774
    const-string v3, ") from u/pid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "/"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4775
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4777
    .local v2, "eventSource":Ljava/lang/String;
    new-instance v3, Landroid/media/MediaMetrics$Item;

    const-string v4, "audio.bluetooth"

    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 4778
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4779
    invoke-virtual {v3, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    sget-object v4, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 4780
    const-string/jumbo v5, "startBluetoothScoVirtualCall"

    invoke-virtual {v3, v4, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    sget-object v4, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 4782
    const/4 v5, 0x0

    invoke-static {v5}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    move-result-object v6

    .line 4781
    invoke-virtual {v3, v4, v6}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4783
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4784
    invoke-virtual {p0, p1, v5, v2}, Lcom/android/server/audio/AudioService;->startBluetoothScoInt(Landroid/os/IBinder;ILjava/lang/String;)V

    .line 4785
    return-void
.end method

.method public startWatchingRoutes(Landroid/media/IAudioRoutesObserver;)Landroid/media/AudioRoutesInfo;
    .registers 3
    .param p1, "observer"    # Landroid/media/IAudioRoutesObserver;

    .line 7942
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->startWatchingRoutes(Landroid/media/IAudioRoutesObserver;)Landroid/media/AudioRoutesInfo;

    move-result-object v0

    return-object v0
.end method

.method public stopBluetoothSco(Landroid/os/IBinder;)V
    .registers 8
    .param p1, "cb"    # Landroid/os/IBinder;

    .line 4811
    const-string/jumbo v0, "stopBluetoothSco()"

    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_67

    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    if-nez v0, :cond_e

    goto :goto_67

    .line 4815
    :cond_e
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4816
    .local v0, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 4817
    .local v1, "pid":I
    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "stopBluetoothSco()"

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 4818
    const-string v3, ") from u/pid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "/"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4819
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4820
    .local v2, "eventSource":Ljava/lang/String;
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v3, v3, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    monitor-enter v3

    .line 4821
    :try_start_37
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v4, p1, v2}, Lcom/android/server/audio/AudioDeviceBroker;->stopBluetoothScoForClient_Sync(Landroid/os/IBinder;Ljava/lang/String;)V

    .line 4822
    monitor-exit v3
    :try_end_3d
    .catchall {:try_start_37 .. :try_end_3d} :catchall_64

    .line 4823
    new-instance v3, Landroid/media/MediaMetrics$Item;

    const-string v4, "audio.bluetooth"

    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 4824
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4825
    invoke-virtual {v3, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    sget-object v4, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 4826
    const-string/jumbo v5, "stopBluetoothSco"

    invoke-virtual {v3, v4, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    sget-object v4, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    const/4 v5, -0x1

    .line 4828
    invoke-static {v5}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    move-result-object v5

    .line 4827
    invoke-virtual {v3, v4, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v3

    .line 4829
    invoke-virtual {v3}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 4830
    return-void

    .line 4822
    :catchall_64
    move-exception v4

    :try_start_65
    monitor-exit v3
    :try_end_66
    .catchall {:try_start_65 .. :try_end_66} :catchall_64

    throw v4

    .line 4813
    .end local v0    # "uid":I
    .end local v1    # "pid":I
    .end local v2    # "eventSource":Ljava/lang/String;
    :cond_67
    :goto_67
    return-void
.end method

.method public systemReady()V
    .registers 8

    .line 1055
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0x10

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 1075
    return-void
.end method

.method public trackPlayer(Landroid/media/PlayerBase$PlayerIdCard;)I
    .registers 3
    .param p1, "pic"    # Landroid/media/PlayerBase$PlayerIdCard;

    .line 9480
    if-eqz p1, :cond_b

    iget-object v0, p1, Landroid/media/PlayerBase$PlayerIdCard;->mAttributes:Landroid/media/AudioAttributes;

    if-eqz v0, :cond_b

    .line 9481
    iget-object v0, p1, Landroid/media/PlayerBase$PlayerIdCard;->mAttributes:Landroid/media/AudioAttributes;

    invoke-direct {p0, v0}, Lcom/android/server/audio/AudioService;->validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V

    .line 9483
    :cond_b
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->trackPlayer(Landroid/media/PlayerBase$PlayerIdCard;)I

    move-result v0

    return v0
.end method

.method public trackRecorder(Landroid/os/IBinder;)I
    .registers 3
    .param p1, "recorder"    # Landroid/os/IBinder;

    .line 9419
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/RecordingActivityMonitor;->trackRecorder(Landroid/os/IBinder;)I

    move-result v0

    return v0
.end method

.method public unloadSoundEffects()V
    .registers 8

    .line 4567
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v1, 0xf

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 4568
    return-void
.end method

.method public unregisterAudioFocusClient(Ljava/lang/String;)V
    .registers 5
    .param p1, "clientId"    # Ljava/lang/String;

    .line 7835
    new-instance v0, Landroid/media/MediaMetrics$Item;

    const-string v1, "audio.service.focus"

    invoke-direct {v0, v1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    sget-object v1, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 7836
    invoke-virtual {v0, v1, p1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    sget-object v1, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 7837
    const-string/jumbo v2, "unregisterAudioFocusClient"

    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v0

    .line 7838
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 7839
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/MediaFocusControl;->unregisterAudioFocusClient(Ljava/lang/String;)V

    .line 7840
    return-void
.end method

.method public unregisterAudioPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .registers 2
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9145
    if-nez p1, :cond_3

    .line 9146
    return-void

    .line 9148
    :cond_3
    invoke-direct {p0, p1}, Lcom/android/server/audio/AudioService;->unregisterAudioPolicyInt(Landroid/media/audiopolicy/IAudioPolicyCallback;)V

    .line 9149
    return-void
.end method

.method public unregisterAudioPolicyAsync(Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .registers 2
    .param p1, "pcb"    # Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 9137
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->unregisterAudioPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;)V

    .line 9138
    return-void
.end method

.method public unregisterAudioServerStateDispatcher(Landroid/media/IAudioServerStateDispatcher;)V
    .registers 7
    .param p1, "asd"    # Landroid/media/IAudioServerStateDispatcher;

    .line 9996
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->checkMonitorAudioServerStatePermission()V

    .line 9997
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    monitor-enter v0

    .line 9998
    :try_start_6
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$AsdProxy;

    .line 9999
    .local v1, "asdp":Lcom/android/server/audio/AudioService$AsdProxy;
    if-nez v1, :cond_3c

    .line 10000
    const-string v2, "AS.AudioService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Trying to unregister unknown audioserver state dispatcher for pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10001
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " / uid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 10000
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10002
    monitor-exit v0

    return-void

    .line 10004
    :cond_3c
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v3, 0x0

    invoke-interface {v2, v1, v3}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 10006
    nop

    .end local v1    # "asdp":Lcom/android/server/audio/AudioService$AsdProxy;
    monitor-exit v0

    .line 10007
    return-void

    .line 10006
    :catchall_47
    move-exception v1

    monitor-exit v0
    :try_end_49
    .catchall {:try_start_6 .. :try_end_49} :catchall_47

    throw v1
.end method

.method public unregisterPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V
    .registers 6
    .param p1, "pcdb"    # Landroid/media/IPlaybackConfigDispatcher;

    .line 9465
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->unregisterPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V

    .line 9468
    sget-object v0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v1, Lcom/android/server/audio/AudioEventLogger$StringEvent;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "unregister : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioEventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 9470
    return-void
.end method

.method public unregisterRecordingCallback(Landroid/media/IRecordingConfigDispatcher;)V
    .registers 3
    .param p1, "rcdb"    # Landroid/media/IRecordingConfigDispatcher;

    .line 9402
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/RecordingActivityMonitor;->unregisterRecordingCallback(Landroid/media/IRecordingConfigDispatcher;)V

    .line 9403
    return-void
.end method

.method public unregisterStrategyPreferredDeviceDispatcher(Landroid/media/IStrategyPreferredDeviceDispatcher;)V
    .registers 3
    .param p1, "dispatcher"    # Landroid/media/IStrategyPreferredDeviceDispatcher;

    .line 2092
    if-nez p1, :cond_3

    .line 2093
    return-void

    .line 2095
    :cond_3
    invoke-direct {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 2096
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->unregisterStrategyPreferredDeviceDispatcher(Landroid/media/IStrategyPreferredDeviceDispatcher;)V

    .line 2097
    return-void
.end method

.method updateAbsVolumeMultiModeDevices(II)V
    .registers 10
    .param p1, "oldMode"    # I
    .param p2, "newMode"    # I

    .line 2997
    if-ne p1, p2, :cond_3

    .line 2998
    return-void

    .line 3000
    :cond_3
    if-eqz p2, :cond_c

    const/4 v0, 0x2

    if-eq p2, v0, :cond_c

    const/4 v0, 0x3

    if-eq p2, v0, :cond_c

    .line 3012
    return-void

    .line 3004
    :cond_c
    nop

    .line 3015
    invoke-direct {p0, p2}, Lcom/android/server/audio/AudioService;->getHearingAidStreamType(I)I

    move-result v0

    .line 3017
    .local v0, "streamType":I
    nop

    .line 3018
    invoke-static {v0}, Landroid/media/AudioSystem;->getDevicesForStream(I)I

    move-result v1

    .line 3017
    invoke-static {v1}, Landroid/media/AudioSystem;->generateAudioDeviceTypesSet(I)Ljava/util/Set;

    move-result-object v1

    .line 3019
    .local v1, "deviceTypes":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;

    invoke-static {v2, v1}, Landroid/media/AudioSystem;->intersectionAudioDeviceTypes(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;

    move-result-object v2

    .line 3021
    .local v2, "absVolumeMultiModeCaseDevices":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Set;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_27

    .line 3022
    return-void

    .line 3026
    :cond_27
    const/high16 v3, 0x8000000

    invoke-static {v2, v3}, Landroid/media/AudioSystem;->isSingleAudioDeviceType(Ljava/util/Set;I)Z

    move-result v3

    if-eqz v3, :cond_45

    .line 3028
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    move-result v3

    .line 3029
    .local v3, "index":I
    sget-object v4, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/audio/AudioEventLogger;

    new-instance v5, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    const/4 v6, 0x7

    invoke-direct {v5, v6, p2, v0, v3}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIII)V

    invoke-virtual {v4, v5}, Lcom/android/server/audio/AudioEventLogger;->log(Lcom/android/server/audio/AudioEventLogger$Event;)V

    .line 3031
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    mul-int/lit8 v5, v3, 0xa

    invoke-virtual {v4, v5, v0}, Lcom/android/server/audio/AudioDeviceBroker;->postSetHearingAidVolumeIndex(II)V

    .line 3033
    .end local v3    # "index":I
    :cond_45
    return-void
.end method

.method public updateDexState()V
    .registers 2

    .line 14088
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDesktopModeHelper:Lcom/samsung/android/server/audio/DesktopModeHelper;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/DesktopModeHelper;->updateDexState()V

    .line 14089
    return-void
.end method

.method wakeUpDeviceByWiredHeadset(I)V
    .registers 7
    .param p1, "deviceType"    # I

    .line 11253
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SCREEN_OFF_MUSIC:Z

    if-eqz v0, :cond_14

    .line 11254
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/server/audio/SamsungMusicHelper;->isScreenOffMusicEnabled(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_14

    .line 11255
    const-string v0, "AS.AudioService"

    const-string v1, "Screen on is handled by samsung music"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11256
    return-void

    .line 11259
    :cond_14
    invoke-static {p1}, Lcom/samsung/android/server/audio/AudioHelper;->isWiredDevicePluggedIn(I)Z

    move-result v0

    if-eqz v0, :cond_27

    .line 11260
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPowerManager:Landroid/os/PowerManager;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    const/16 v3, 0x6a

    const-string v4, "WAKE_REASON_EAR_JACK"

    invoke-virtual {v0, v1, v2, v3, v4}, Landroid/os/PowerManager;->semWakeUp(JILjava/lang/String;)V

    .line 11263
    :cond_27
    return-void
.end method
